{"\nFor the project `sabh-openai-bahasa`:\n\nCodebase Context:\n--- File: 560 # views/persero/peleburan/index.php ---\n\n\n--- File: 900 # views/reuploadModalDasar/index2.php ---\n<?php\nvar_dump($model->id_perseroan);\n\n--- File: 1186 # services/api/IFileService.php ---\n<?php\n\ninterface IFileService\n{\n    public function createFile($fileType, $file);\n}\n\n--- File: 1200 # services/api/IBlokirAuthUserService.php ---\n<?php\n\n\n\ninterface IBlokirAuthUserService\n{\n    public function getBlokirAuthUser($user_id);\n}\n\n--- File: 1195 # services/api/IBlokirAuthService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.RegisterUserDto');\n\n\ninterface IBlokirAuthService \n{\n    public function register(RegisterUserDto $dto);\n}\n\n--- File: 1196 # services/api/IDCUserService.php ---\n<?php\n\ninterface IDCUserService \n{\n    public function findByName($name);\n\n    public function findByEmail($email);\n\n    public function findByNameAndEmail($name, $email);\n}\n\n--- File: 1201 # services/api/IBlokirUserProfileService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.RegisterUserDto');\n\n\ninterface IBlokirUserProfileService\n{\n    public function createBlokirUserProfile($user_id, RegisterUserDto $dto);\n}\n\n--- File: 1193 # services/api/IEmailService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.EmailDto');\n\ninterface IEmailService {\n \n    public function sendEmail(EmailDto $emailDto);\n\n    public function sendEmailWithAttachments(EmailDto $emailDto, $attachments);\n}\n\n--- File: 1187 # services/api/IPerkumpulanService.php ---\n<?php\n\n\ninterface IPerkumpulanService \n{\n    public function findByNamaAndNomorSkAndNamaNotarisTerakhir($nama, $nomorSk, $namaNotarisTerakhir);\n\n    public function findById($id);\n}\n\n--- File: 1182 # services/api/IPermohonanPemblokiranPTService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanPemblokiranPTDto');\n\ninterface IPermohonanPemblokiranPTService\n{\n    public function createPermohonanPemblokiranPT(CreatePermohonanPemblokiranPTDto $dto);\n}\n\n--- File: 327 # exception/BaseApiException.php ---\n<?php\n\nclass BaseApiException extends Exception {\n    protected $statusCode;\n\n    public function __construct($message, $statusCode) {\n        parent::__construct($message);\n        $this->statusCode = $statusCode;\n    }\n\n    public function getStatusCode() {\n        return $this->statusCode;\n    }\n}\n\n\n--- File: 1184 # services/api/EmailService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.EmailDto');\nYii::import('application.modules.sabh.services.api.IEmailService');\n\nclass EmailService implements IEmailService {\n \n    public function sendEmail(EmailDto $emailDto) {\n\n    }\n\n    public function sendEmailWithAttachments(EmailDto $emailDto, $attachments) {\n\n    }\n}\n\n--- File: 1197 # services/api/IPermohonanBerakhirnyaStatusBadanHukumService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanBerakhirnyaStatusBadanHukumDto');\n\ninterface IPermohonanBerakhirnyaStatusBadanHukumService\n{\n    public function createPermohonanBerakhirnyaStatusBadanHukum(CreatePermohonanBerakhirnyaStatusBadanHukumDto $dto);\n} \n\n--- File: 1183 # services/api/IPemblokiranTokenService.php ---\n<?php\n\ninterface IPemblokiranTokenService\n{\n    /**\n     * Generate an encrypted auth token for pemblokiran backend\n     * @param array $claims User claims (user_id, source, roles, etc.)\n     * @return string Base64 encoded encrypted token\n     * @throws Exception if encryption fails\n     */\n    public function generateAuthToken($claims);\n} \n\n--- File: 1171 # mappers/DPerseroanRangeDateKabupatenMapper.php ---\n<?php\n\nclass DPerseroanRangeDateKabupatenMapper extends DPerseroanRangeDateMapper\n{\n    public function findAll($kategori, $tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAll($kategori, $tahun, array(), true);\n        $kategori = strtoupper(str_replace('_', ' ', $kategori));\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id_perseroan = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 1168 # mappers/DPerseroanRangeDateProvinsiMapper.php ---\n<?php\n\nclass DPerseroanRangeDateProvinsiMapper extends DPerseroanRangeDateMapper\n{\n    public function findAll($kategori, $tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAll($kategori, $tahun, array(), true);\n        $kategori = strtoupper(str_replace('_', ' ', $kategori));\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id_perseroan = :provinsi_id\n            AND kabupaten_id IS NOT NULL \n            AND kabupaten_id != 0\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 1155 # mappers/DashboardMapper.php ---\n<?php\n\nclass DashboardMapper extends MapperBase\n{\n    /**\n     * count total row data\n     * @param string $strSql\n     */\n    public function countDetailTransaction($sqlData, $paramBind)\n    {\n        $sql = 'SELECT COUNT(*) FROM (' . $sqlData . ') as count_alias';\n        return $this->execSqlQueryScalar('dbBadanHukum', $sql, $paramBind);\n    }\n\n    public function buildQueryStringSearch($sqlData, $strWhere = null)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select(array('*'));\n        $cmd->from('('.$sqlData.') AS select_search');\n        if ($strWhere !== null) {\n            $cmd->where($strWhere, array());\n        }\n        return $cmd->getText();\n    }\n}\n\n\n--- File: 767 # views/default/index.php ---\n\n<center class=\"panel-body header_yayasan\">\n    <button class=\"btn btn-primary btn-putih\" type=\"button\" onclick=\"javascript:location.href='<?php  echo $this->createUrl('/sabh/perseroan/');?>'\"><i class=\"icon-group\"></i> PERSEROAN TERBATAS</button>\n    <button class=\"btn btn-primary btn-putih\" type=\"button\" onclick=\"javascript:location.href='<?php  echo $this->createUrl('/sabh/yayasan/');?>'\"><i class=\"icon-group\"></i> YAYASAN\t</button>\n    <button class=\"btn btn-primary btn-putih\" type=\"button\" onclick=\"javascript:location.href='<?php  echo $this->createUrl('/sabh/perkumpulan/');?>'\"><i class=\"icon-group\"></i> PERKUMPULAN</button>\n</center>\n\n\n--- File: 873 # views/verifikator/pesanNama/index.php ---\n<?php\n/* @var $this VerifikatorController */\n/* @var $models array VerifikatorFlag */\n/* @var $verifikators array */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>LIST VERIFIKATOR PESAN NAMA</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?php echo CHtml::link('Monitoring', array('monitoring'), array('class'=>'btn btn-info')); ?>\n                    <br><br>\n                    <?php $this->renderPartial('pesanNama/_listVerifikator', array(\n                        'models'=>$models,\n                        'verifikators'=>$verifikators\n                    )); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 1157 # mappers/DPerseroanKabupatenMapper.php ---\n<?php\n\nclass DPerseroanKabupatenMapper extends DPerseroanProvinsiMapper\n{\n    public function findAll($kategori, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAll($kategori, array(), true);\n        $kategori = strtoupper(str_replace('_', ' ', $kategori));\n\n        $cmd->where('\n            p.provinsi_id_perseroan = :provinsi_id\n            AND p.kabupaten_id_perseroan = :kabupaten_id\n            AND p.kabupaten_id_perseroan IS NOT NULL \n            AND p.kabupaten_id_perseroan != 0\n            AND p.jenis_perseroan = \"'.$kategori.'\"\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 316 # controllers/api/UserController.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.DCUserService');\n\nclass UserController extends Controller\n{\n    private $dcUserService;\n\n    public function init()\n    {\n        parent::init();\n        $this->dcUserService = new DCUserService();\n    }\n    \n    public function actionUsernameAvailable($username)\n    {\n        if (RequestContext::isMethod(\"GET\")) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $user = $this->dcUserService->findByName($username);\n\n        if ($user) {\n            APIResponse::ok(['available' => false]);\n        }\n\n        APIResponse::ok(['available' => true]);\n    }\n\n    public function actionEmailAvailable($email)\n    {\n        if (RequestContext::isMethod(\"GET\")) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $user = $this->dcUserService->findByEmail($email);\n\n        if ($user) {\n            APIResponse::ok(['available' => false]);\n        }\n\n        APIResponse::ok(['available' => true]);\n    }\n}\n\n--- File: 841 # views/bakumMaps/index.php ---\n <style type=\"text/css\">\n   .labels {\n     color: red;\n     background-color: white;\n     font-family: \"Lucida Grande\", \"Arial\", sans-serif;\n     font-size: 12px;\n     font-weight: bold;\n     text-align: center;\n     width: 45px;\n     border: 2px solid black;\n     white-space: nowrap;\n   }\n </style>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>Badan Hukum Maps</legend>\n                    <div class=\"row\">\n                        <?php $this->renderPartial('_search_form',get_defined_vars()); ?>\n                    </div>\n                    <div class=\"row\">\n                         <div class=\"panel-body\">\n                            <?php $this->renderPartial('_maps',get_defined_vars()); ?>\n                        </div>\n                    </div>\n                    <div>\n                         <div id=\"div-grid\"></div>\n                    </div>\n            </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n\n\n--- File: 1191 # services/api/BlokirAuthService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IBlokirAuthUserService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.services.api.PemblokiranProxyService');\n\nclass BlokirAuthService implements IBlokirAuthUserService\n{\n    private $exceptionThrower;\n    private $pemblokiranProxyService; \n    private $authEndpoint;\n\n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->pemblokiranProxyService = new PemblokiranProxyService();\n        $this->authEndpoint = isset(Yii::app()->params['pemblokiran']['auth_endpoint']) \n            ? Yii::app()->params['pemblokiran']['auth_endpoint'] \n            : 'http://localhost:8080/auth';\n    }\n\n    public function getBlokirAuthUser($user_id)\n    {\n        $response = $this->pemblokiranProxyService->get($this->authEndpoint, $user_id);\n\n        if (!!$response && $response['data']) {\n            return $response['data'];\n        }\n        \n        dd($response);\n        $this->exceptionThrower->throwUnauthorized('Unauthorized');\n    }\n}\n\n--- File: 1164 # mappers/IbakumDashboard.php ---\n<?php\n\ninterface IbakumDashboard {\n\n    public function findAllDataRangeDateKabupaten($kategori, $tanggalAwal, $tanggalAkhir, $provinsiId, $kabupatenId);\n    public function findAllDataRangeDateProvinsi($kategori, $tanggalAwal, $tanggalAkhir, $provinsiId);\n    public function findAllDataRangeDate($kategori, $tanggalAwal, $tanggalAkhir);\n    public function findAllDataKabupaten($kategori, $provinsiId, $kabupatenId);\n    public function findAllDataProvinsi($kategori, $provinsiId);\n    public function findAllCountDataRangeDateKabupaten($tanggalAwal, $tanggalAkhir, $provinsiId, $kabupatenId, $kategori = null);\n    public function findAllCountDataRangeDateProvinsi($tanggalAwal, $tanggalAkhir, $provinsiId, $kategori = null);\n    public function findAllCountDataRangeDate($tanggalAwal, $tanggalAkhir, $kategori = null);\n    public function findAllCountDataKabupaten($provinsiId, $kabupatenId, $kategori = null);\n    public function findAllCountDataProvinsi($provinsiId, $kategori = null);\n\n}\n\n--- File: 1190 # services/api/BlokirUserProfileService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IBlokirUserProfileService');\nYii::import('application.modules.sabh.dto.RegisterUserDto');\nYii::import('application.modules.sabh.models.BlokirUserProfile');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass BlokirUserProfileService implements IBlokirUserProfileService\n{\n\n    private $exceptionThrower;\n\n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function createBlokirUserProfile($user_id, RegisterUserDto $dto)\n    {\n        $model = BlokirUserProfile::createFromDto($dto);\n\n        $model->user_id = $user_id;\n\n        if (!$model->save()) {\n            $errors = $model->getErrors();\n            $errorMessages = [];\n            \n            foreach ($errors as $attribute => $attributeErrors) {\n                $errorMessages[] = $attribute . ': ' . implode(', ', $attributeErrors);\n            }\n\n            $this->exceptionThrower->throwInternalServerError('Failed to save to database: ' . implode('; ', $errorMessages));\n        }\n\n        return $model;\n    }\n\n    public function getBlokirUserProfile($user_id)\n    {\n        return BlokirUserProfile::model()->findByAttributes(['user_id' => $user_id]);\n    }\n}\n\n--- File: 658 # views/verifikatorPerbaikan/perbaikan/index.php ---\n<?php\n/* @var $this VerifikatorController */\n/* @var $models array VerifikatorPerbaikan */\n/* @var $verifikators array */\n\n$this->breadcrumbs = ['List'];\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>LIST VERIFIKATOR PERBAIKAN</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?php if(Yii::app()->user->hasFlash('success')): ?>\n                    <div class=\"alert alert-success\">\n                        <?php echo Yii::app()->user->getFlash('success'); ?>\n                    </div>\n                    <?php endif;?>\n                    <?php if(Yii::app()->user->hasFlash('danger')): ?>\n                        <div class=\"alert alert-danger\">\n                            <?php echo Yii::app()->user->getFlash('danger'); ?>\n                        </div>\n                    <?php endif;?>\n\n                    <?php echo CHtml::link('Monitoring', ['monitoring'], ['class'=>'btn btn-info']); ?>\n                    <br><br>\n                    <?php $this->renderPartial('perbaikan/_listVerifikator', [\n                        'models' => $models,\n                        'verifikators' => $verifikators\n                    ]); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 323 # controllers/api/VoucherController.php ---\n<?php\n\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nClass VoucherController extends Controller {\n    \n    private $exceptionThrower;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function actionCheckValidity() {\n        header('Content-Type: application/json');\n        echo CJSON::encode([\n            \"status\" => \"valid\",\n        ]);\n        return;\n        if (!(Yii::app()->request->getRequestType() == 'GET')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // Id produk PT: 001001\n        // Tipe transaksi voucher pemblokiran (hardcoded): 001011019\n\n        $tipe_transaksi = Yii::app()->request->getParam('tipe_transaksi');\n        $id_produk = Yii::app()->request->getParam('id_produk');\n        $voucher = Yii::app()->request->getParam('voucher');\n        $id_mapping = Yii::app()->request->getParam('id_mapping');\n        \n        $result = BillingSimponi::model()->cekKodeVoucher($voucher, $id_produk, $tipe_transaksi, $id_mapping);\n\n        $response = [\n            \"status\" => $result == null ? \"valid\" : $result,\n        ];\n\n        header('Content-Type: application/json');\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n}\n\n\n--- File: 465 # views/restore/pesanNama/index.php ---\n<?php /** @var $this RestoreController **/ ?>\n<?php /** @var $model VerifikasiPesanNama **/ ?>\n<?php /** @var $base string **/ ?>\n<?php /** @var $type string **/ ?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>\n                        RESTORE VERIFIKASI PESAN NAMA <?php echo strtoupper($type); ?>\n                    </h3>\n                </center>\n                <br>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <?php $this->renderPartial('pesanNama/_search', array(\n                            'type' => $type,\n                            'base' => $base\n                        )); ?>\n                    </div>\n                </div>\n                <div class=\"row\">\n                    <div class=\"col-md-12\">\n                        <?php if($type === 'setuju'): ?>\n                            <?php $this->renderPartial('pesanNama/_listSetuju', array(\n                                'model' => $model,\n                                'base' => $base,\n                                'type' => $type,\n                            )); ?>\n                        <?php else: ?>\n                            <?php $this->renderPartial('pesanNama/_listHapus', array(\n                                'model' => $model,\n                                'base' => $base,\n                                'type' => $type,\n                            )); ?>\n                        <?php endif; ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 1169 # mappers/DBakumKabupatenMapper.php ---\n<?php\n\nclass DBakumKabupatenMapper extends DBakumProvinsiMapper\n{\n    public function findAllPerseroan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllPerseroan(array(), true);\n        $cmd->where('\n            p.provinsi_id_perseroan = :provinsi_id\n            AND p.kabupaten_id_perseroan = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllYayasan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllYayasan(array(), true);\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id = :kabupaten_id\n            AND b.base = \"yayasan\"\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllPerkumpulan(array(), true);\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id = :kabupaten_id\n            AND b.base = \"perkumpulan\"\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 1167 # mappers/DBakumRangeDateProvinsiMapper.php ---\n<?php\n\nclass DBakumRangeDateProvinsiMapper extends DBakumRangeDateMapper\n{\n    public function findAllPerseroan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllPerseroan($tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllYayasan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllYayasan($tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllPerkumpulan($tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 1166 # mappers/DBakumRangeDateKabupatenMapper.php ---\n<?php\n\nclass DBakumRangeDateKabupatenMapper extends DBakumRangeDateMapper\n{\n    public function findAllPerseroan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllPerseroan($tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllYayasan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllYayasan($tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllPerkumpulan($tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 320 # controllers/api/PerseroanTerbatasController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nClass PerseroanTerbatasController extends Controller {\n\n    private $exceptionThrower;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function actionIndex() {\n        if (!(Yii::app()->request->getRequestType() == 'GET')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $response = [\n            \"data\" => []\n        ];\n\n        // 1. Fetch data from Perseroan model\n        $nama = Yii::app()->request->getParam('nama');\n        $limit = (int) Yii::app()->request->getParam('limit', 10);\n\n        $criteria = new CDbCriteria;\n        $criteria->condition = 'nama_perseroan LIKE :nama';\n        $criteria->params = array(':nama' => '%' . $nama . '%');\n        $criteria->limit = $limit;\n        $criteria->order = 'nama_perseroan ASC';\n\n        $perseroanList = Perseroan::model()->findAll($criteria);\n\n        // 2. Fetch data from OssServices \n        // TODO: Return NIB\n        if ($perseroanList) {\n            // Convert to array format for OssServices\n            $listData = array();\n            foreach ($perseroanList as $perseroan) {\n                $listData[] = $perseroan->attributes;\n            }\n            \n            // Use OssServices to generate standardized data\n            $oss = new OssServices('OSS013', '35a2b952273953a652529b7281a8d55f');\n            $response[\"data\"] = $oss->generateListDataPT($listData);\n        }\n\n        header('Content-Type: application/json');\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n}\n\n\n--- File: 902 # views/reuploadModalDasar/index.php ---\n<?php Yii::app()->clientScript->registerScript('index', file_get_contents(Yii::app()->basePath.'/modules/sabh/views/reuploadModalDasar/check.js'), CClientScript::POS_END); ?>\n<?php Yii::app()->clientScript->registerScript('_scriptUploadAkta', file_get_contents(Yii::app()->basePath.'/modules/sabh/views/reuploadModalDasar/upload.js'), CClientScript::POS_END); ?>\n\n<style>\n#nomor-check-ok {\n\tcolor: green;\n}\n\n#nomor-check-fail {\n\tcolor: red;\n}\n</style>\n<div class=\"row\">\n\t<div class=\"col-lg-12\">\n\t\t<section class=\"panel\">\n\t\t\t<header class='panel-heading'>\n\t\t\t\t<h3>Reupload Modal Dasar</h3>\n\t\t\t</header>\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<?php if(Yii::app()->user->hasFlash('global-flash-success')): ?>\n\t\t\t\t\t<div class=\"alert alert-success\">\n\t\t\t\t\t\t<?php echo Yii::app()->user->getFlash('global-flash-success'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif;?>\n\t\t\t\t<?php if(Yii::app()->user->hasFlash('global-flash-danger')): ?>\n\t\t\t\t\t<div class=\"alert alert-danger\">\n\t\t\t\t\t\t<?php echo Yii::app()->user->getFlash('global-flash-danger'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif;?>\n\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t<?= CHtml::label('Nomor Transakasi', 'nomor_input', ['class' => 'control-label']); ?>\n\t\t\t\t\t<?= CHtml::textField('nomor_input', '', ['class' => 'form-control', 'id' => 'nomor-check-box']); ?>\n\t\t\t\t\t<span class=\"help-block\" id=\"nomor-check\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"hasil-cari\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</div>\n\n\n\n--- File: 1159 # mappers/DYayasanRangeDateProvinsiMapper.php ---\n<?php\n\nclass DYayasanRangeDateProvinsiMapper extends DYayasanRangeDateMapper\n{\n    public function findAll(\n        $kategori,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAll($kategori, $tahun, array(), true);\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllFull(\n        $kategori,\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAllFull($kategori, $jenis_transaksi, $tahun, array(), true);\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllJenisTransaksi(\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAllJenisTransaksi($jenis_transaksi, $tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 321 # controllers/api/PermohonanPemblokiranPTController.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanPemblokiranPTDto');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.ArrayHelper');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.PermohonanPemblokiranPTService');\n\nclass PermohonanPemblokiranPTController extends Controller\n{\n    private $exceptionThrower;\n    private $permohonanPemblokiranPTService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->permohonanPemblokiranPTService = new PermohonanPemblokiranPTService();\n    }\n\n    public function actionCreate()\n    {\n        // 1. Throw if method is not POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Get the JSON body\n        try {\n            $body = RequestContext::getJsonBody();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 3. Convert the data into DTO\n        $createPermohonanPemblokiranPT = CreatePermohonanPemblokiranPTDto::fromArray($body);\n\n        // 4. Validate the DTO\n        try {\n            $createPermohonanPemblokiranPT->isValid();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 5. Create the Permohonan Pemblokiran PT\n        try {\n            $this->permohonanPemblokiranPTService->createPermohonanPemblokiranPT($createPermohonanPemblokiranPT);\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwInternalServerError($e->getMessage());\n        }\n\n        APIResponse::ok();\n    }\n}\n\n\n--- File: 1192 # services/api/DCUserService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IDCUserService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass DCUserService implements IDCUserService\n{\n    private $exceptionThrower;\n\n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function findByName($name)\n    {\n        return DclUser::model()->findByAttributes(['name' => $name]);\n    }\n\n    public function findByEmail($email)\n    {\n        return DclUser::model()->findByAttributes(['email' => $email]);\n    }\n\n    public function findByNameAndEmail($name, $email)\n    {\n        return DclUser::model()->findByAttributes(['name' => $name, 'email' => $email]);\n    }\n\n\n    public function createUser(RegisterUserDto $dto)\n    {\n        $model = new DclUser('create');\n        $model->name = $dto->username;\n        $model->email = $dto->email;\n        $model->status = 1;\n        $model->pass = $this->generatePassword($dto->username);\n        $model->passconf = $model->pass;\n\n        if (!$model->save()) {\n            $this->exceptionThrower->throwInternalServerError('Failed to save to database');\n        }\n\n        return $model;\n    }\n\n\n    private function generatePassword($username)\n    {\n        // Ensure at least 12 characters, mix username, random chars, and numbers\n        $random = bin2hex(random_bytes(4)); // 8 random hex chars\n        $shuffled = str_shuffle($username);\n        $base = substr($shuffled, 0, 4);\n        $specials = '!@#$%^&*';\n        $special = $specials[random_int(0, strlen($specials) - 1)];\n        $password = $base . $random . $special;\n        // Ensure minimum length 12\n        if (strlen($password) < 12) {\n            $password .= bin2hex(random_bytes(2));\n        }\n        return $password;\n    }\n}\n\n\n--- File: 401 # response/APIResponse.php ---\n<?php\n\nYii::import('application.modules.sabh.response.IResponse');\n\n/**\n * API Response Implementation\n * \n * Concrete implementation of IResponse interface for API controllers.\n * Provides consistent JSON response handling with proper headers.\n */\nclass APIResponse implements IResponse\n{\n    \n    /**\n     * Send a success response\n     * \n     * @param string $message The success message\n     * @return void\n     */\n    private static function send($success, $message, $data = null, $status = 200) \n    {\n        $response = array(\n            'success' => $success,\n            'message' => $message,\n            'data' => $data,\n            'status' => $status\n        );\n\n        // Map status code to text\n        $statusText = array(\n            200 => 'Success',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            500 => 'Internal Server Error'\n        );\n        \n        $text = isset($statusText[$status]) ? $statusText[$status] : 'Error';\n        \n        // Set headers\n        header($_SERVER['SERVER_PROTOCOL'] . \" $status $text\");\n        header('Content-Type: application/json; charset=utf-8');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With');\n        \n        // Send JSON response\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n\n    public static function ok($data = null, $message = 'Success')\n    {\n        self::send(true, $message, $data, 200);\n    }\n\n    /**\n     * Send an error response\n     * \n     * @param string $message The error message\n     * @param int $status HTTP status code\n     * @param mixed $data Optional error data\n     * @return void\n     */\n    public static function error($message, $status = 500, $data = null)\n    {\n        self::send(false, $message, $data, $status);\n    }\n}\n\n\n--- File: 1170 # mappers/DYayasanKabupatenMapper.php ---\n<?php\n\nclass DYayasanKabupatenMapper extends DYayasanProvinsiMapper\n{\n    public function findAll($kategori, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAll($kategori, array(), true);\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id = :kabupaten_id\n            AND b.base = \"yayasan\"\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllFull(\n        $kategori,\n        $jenis_transaksi,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAllFull($kategori, $jenis_transaksi, array(), true);\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id = :kabupaten_id\n            AND b.base = \"yayasan\"\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllJenisTransaksi($jenis_transaksi, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = parent::findAllJenisTransaksi($jenis_transaksi, array(), true);\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id = :kabupaten_id\n            AND b.base = \"yayasan\"\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 1163 # mappers/DYayasanRangeDateKabupatenMapper.php ---\n<?php\n\nclass DYayasanRangeDateKabupatenMapper extends DYayasanRangeDateMapper\n{\n    public function findAll(\n        $kategori,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAll($kategori, $tahun, array(), true);\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllFull(\n        $kategori,\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAllFull($kategori, $jenis_transaksi, $tahun, array(), true);\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllJenisTransaksi(\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = parent::findAllJenisTransaksi($jenis_transaksi, $tahun, array(), true);\n        $cmd->where('\n            tanggal_sk_final IS NOT NULL\n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir\n            AND provinsi_id = :provinsi_id\n            AND kabupaten_id = :kabupaten_id\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n}\n\n\n--- File: 1105 # views/blokirPemegangSahamSemiPermanent/index.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-heading\">\n                <h3 class=\"text-center\">\n                    DAFTAR PERSEROAN\n                </h3>\n            </div>\n            <div class=\"panel-body\">\n                <div class=\"col-md-12\">\n                    <?php echo CHtml::link(\n                        'Riwayat Blokir Pemegang Saham',\n                        array('listBlokirPemegangSaham'),\n                        array(\n                            'class' => 'btn btn-danger'\n                        )\n                    );  ?>\n                </div>\n                <div class=\"form-group clearfix\"></div>\n                <div class=\"table-responsive\">\n                    <?php\n                        $this->widget('zii.widgets.grid.CGridView', array(\n                        'id'=>'badan-hukum-grid',\n                        'dataProvider'=>$model->search(),\n                        'filter'=>$model,\n                        'itemsCssClass'=>'table table-striped table-hover table-bordered dataTable',\n                        'columns'=>array(\n                            array(\n                                'name'=>'nomor_transaksi',\n                                'header'=>'Nomor Transaksi',\n                                'value'=>'$data->nomor_transaksi',\n                            ),\n                            array(\n                                'name'=>'nama_perseroan',\n                                'header'=>'Nama Badan Hukum',\n                                'type'=>'HTML',\n                                'value'=>'$data->nama_perseroan',\n                            ),\n                            array(\n                                'name'=>'alamat_perseroan',\n                                'header'=>'Alamat',\n                                'type'=>'HTML',\n                                'value'=>'$data->alamat_perseroan',\n                            ),\n                            array(\n                                'name'=>'kabupaten_nama_perseroan',\n                                'header'=>'Kota',\n                                'value'=>'$data->kabupaten_nama_perseroan',\n                            ),\n                            array(\n                                'name'=>'nomor_sk',\n                                'header'=>'Nomor SK',\n                            ),\n                            array(\n                                'header'=>'Pilihan',\n                                'type'=>'html',\n                                'value' => 'CHtml::link(\"Detail\", array(\"/sabh/BlokirPemegangSahamSemiPermanent/detail\", \"id\" => $data->id_perseroan))',\n                            ),\n                        ),\n                        ));\n                    ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 315 # controllers/api/PermohonanBerakhirnyaStatusBadanHukumController.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanBerakhirnyaStatusBadanHukumDto');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.impl.PermohonanBerakhirnyaStatusBadanHukumService');\n\nclass PermohonanBerakhirnyaStatusBadanHukumController extends Controller\n{\n    private $exceptionThrower;\n    private $permohonanBerakhirnyaStatusBadanHukumService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->permohonanBerakhirnyaStatusBadanHukumService = new PermohonanBerakhirnyaStatusBadanHukumService();\n    }\n\n    public function actionCreate()\n    {\n        // 1. Validate that request method is POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Get the JSON body\n        try {\n            $body = RequestContext::getJsonBody();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 3. Convert the data into DTO\n        $createPermohonanBerakhirnyaStatusBadanHukum = CreatePermohonanBerakhirnyaStatusBadanHukumDto::fromArray($body);\n\n        // 4. Validate the DTO\n        try {\n            $createPermohonanBerakhirnyaStatusBadanHukum->isValid();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 5. Process the request using service\n        try {\n            $result = $this->permohonanBerakhirnyaStatusBadanHukumService->createPermohonanBerakhirnyaStatusBadanHukum($createPermohonanBerakhirnyaStatusBadanHukum);\n            APIResponse::ok();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n    }\n}\n\n\n--- File: 1189 # services/api/PemblokiranTokenService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IPemblokiranTokenService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass PemblokiranTokenService\n{\n    private $exceptionThrower;\n    private $secretKey;\n    \n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->secretKey = isset(Yii::app()->params['pemblokiran']['secret_key']) \n            ? Yii::app()->params['pemblokiran']['secret_key'] \n            : 'your-32-character-secret-key-here!!';\n        $this->ensureKeyLength();\n    }\n\n    /**\n     * Generate an encrypted auth token for pemblokiran backend\n     * @param int $userId User ID\n     * @return string Base64 encoded encrypted token\n     * @throws Exception if encryption fails\n     */\n    public function generateAuthToken($userId)\n    {\n\n        $claims = [\n            'user_id' => (int)$userId,\n            'source' => 'PHP',\n        ];\n        \n        $jsonData = json_encode($claims, JSON_UNESCAPED_SLASHES);\n        \n        $iv = openssl_random_pseudo_bytes(16);\n        \n        $ciphertext = openssl_encrypt(\n            $jsonData,\n            'aes-256-cbc',\n            $this->secretKey,\n            OPENSSL_RAW_DATA,\n            $iv\n        );\n        \n        if ($ciphertext === false) {\n            $this->exceptionThrower->throwInternalServerError('Token encryption failed: ' . openssl_error_string());\n        }\n        \n        $hmac = hash_hmac('sha256', $iv . $ciphertext, $this->secretKey, true);\n        \n        $encrypted = $iv . $ciphertext . $hmac;\n        \n        return base64_encode($encrypted);\n    }\n\n    /**\n     * Ensure the secret key is exactly 32 bytes\n     */\n    private function ensureKeyLength()\n    {\n        if (strlen($this->secretKey) < 32) {\n            $this->secretKey = str_pad($this->secretKey, 32, \"\\0\");\n        } elseif (strlen($this->secretKey) > 32) {\n            $this->secretKey = substr($this->secretKey, 0, 32);\n        }\n    }\n} \n\n--- File: 652 # views/userLikuidator/index.php ---\n<div class=\"row-fluid\">\n    <div class=\"span12\">        \n        <div class=\"well no-padding\">\n            <div class=\"top-bar\">\n                <ul>\n                    <li>\n                        <?php echo CHtml::link('<i class=\"icon-plus\"></i>Tambah User Likuidator', $this->createUrl($this->getId() . '/create/'), array('class'=>'btn btn-info')); ?>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"dataTables_filter\" id=\"DataTables_Table_0_filter\">\n                <label>Cari: <input type=\"text\" class=\"filterClass\" aria-controls=\"DataTables_Table_0\" name=\"DclUser[name]\"></label>\n            </div>\n            <?php\n            $this->widget('zii.widgets.grid.CGridView', array(\n                'id' => 'user-grid',\n                'dataProvider' => $dataProvider,\n                'itemsCssClass' => 'table',\n                'filterSelector' => '{filter}, .filterClass',\n                'template' => \"{items}\\n{pager}\",\n                'columns' => array(\n                    'name',\n                    'email',\n                    array(\n                        'name' => 'tgl_expired',\n                        'value' => '$data->tgl_expired ? Helpers::getDateFormatId($data->tgl_expired) : \"\"',\n                    ),\n                    array(\n                        'name' => 'listGroup',\n                        'value' => '$data->getTextGroup()'\n                    ),\n                    array(\n                        'name'=>'status',\n                        'value'=>'$data->status?\"Aktif\":\"Tidak Aktif\"'\n                    ),\n                    array(\n                        'class' => 'CButtonColumn',\n                        'template' => '{update} {delete}',\n                        'buttons'=>array(\n                            'update' => array(\n                                'url'=>'Yii::app()->controller->createUrl(\"edit\",array(\"id\"=>$data->primaryKey))',\n                            ),\n                            'delete' => array(\n                                'visible'=>'$data->getCreatedBy($data->user_id) ? false : true ',\n                                //'visible'=>'PerseroanPembubaran::model->getCreatedBy($data->user_id) ? false : true ',\n                            ),\n                        ),\n                    ),\n                ),\n            ));\n            ?>\n            <br class=\"clear\">\n        </div>\n    </div><!-- /col-left -->\n</div>\n\n--- File: 839 # views/banded/index.php ---\n<?php\n// $this->breadcrumbs=array(\n//  'Banded'=>array('index'),\n//  'Mengatur',\n// );\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>\n                        Data Pelarangan Pesan Nama\n                    </h3>\n                </center>\n                <header class=\"panel-heading\">\n                    <?php echo Chtml::link('Tambah Kata', $this->createUrl($this->getId() . '/tambah/'), array('class' => 'btn btn-info')); ?>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"table-responsive\">\n                        <?php\n                        $this->widget('zii.widgets.grid.CGridView', array(\n                            'id' => 'banded-grid',\n                            'dataProvider' => $dataProvider->search(),\n                            'filter' => $dataProvider,\n                            'itemsCssClass' => 'table table-striped table-hover table-bordered datatable',\n                            'columns' => array(\n                                array(\n                                    'header' => 'No.',\n                                    'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                                    'htmlOptions' => array('width' => '30px'),\n                                ),\n                                array(\n                                    'name' => 'blokir',\n                                    'header' => 'Blokir',\n                                    'value' => 'strtoupper($data->blokir)',\n                                ),\n                                array(\n                                    'name' => 'type',\n                                    'value' => '$data->jenis',\n                                    'filter' => array(\n                                        0 => 'Identik',\n                                        1 => 'Mengandung Kata'\n                                    )\n                                ),\n                                array(\n                                    'header' => 'Log',\n                                    'htmlOptions'=>array('style'=>'width:300px'),\n                                    'type' => 'raw',\n                                    'value' => '$data->getLog($data)',\n                                ),\n                                array(\n                                    'header' => 'Aksi',\n                                    'class' => 'CButtonColumn',\n                                    'htmlOptions'=>array('style'=>'width:70px'),\n                                    'template' => '{update}&nbsp;&nbsp;{delete}',\n                                )\n                            )\n                        ));\n                        ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n\n\n--- File: 1198 # services/api/PermohonanPemblokiranPTService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IPermohonanPemblokiranPTService');\nYii::import('application.modules.sabh.dto.CreatePermohonanPemblokiranPTDto');\nYii::import('application.modules.sabh.models.PermohonanPemblokiranPT');\n\nclass PermohonanPemblokiranPTService implements IPermohonanPemblokiranPTService\n{\n    public function createPermohonanPemblokiranPT(CreatePermohonanPemblokiranPTDto $dto)\n    {\n        try {\n            // 1. Create model from DTO\n            $model = PermohonanPemblokiranPT::createFromDto($dto);\n            \n            // 2. Validate the model\n            if (!$model->validate()) {\n                $errors = $model->getErrors();\n                $errorMessages = [];\n                foreach ($errors as $attribute => $attributeErrors) {\n                    $errorMessages[] = $attribute . ': ' . implode(', ', $attributeErrors);\n                }\n                throw new Exception('Validation failed: ' . implode('; ', $errorMessages));\n            }\n            \n            // 3. Save the model to database\n            if (!$model->save()) {\n                $errors = $model->getErrors();\n                $errorMessages = [];\n                foreach ($errors as $attribute => $attributeErrors) {\n                    $errorMessages[] = $attribute . ': ' . implode(', ', $attributeErrors);\n                }\n                throw new Exception('Failed to save to database: ' . implode('; ', $errorMessages));\n            }\n            \n            // 4. Log successful creation\n            Yii::log(\n                'Permohonan Pemblokiran PT created successfully. ID: ' . $model->id . \n                ', PT: ' . $dto->nama_perseroan_terbatas . \n                ', Pemohon: ' . $dto->nama_pemohon,\n                'info',\n                'application.modules.sabh.services.api.PermohonanPemblokiranPTService'\n            );\n            \n            return true;\n        } catch (Exception $e) {\n            // Log the error\n            Yii::log(\n                'Failed to create Permohonan Pemblokiran PT. Error: ' . $e->getMessage() . \n                ', PT: ' . $dto->nama_perseroan_terbatas . \n                ', Pemohon: ' . $dto->nama_pemohon,\n                'error',\n                'application.modules.sabh.services.api.PermohonanPemblokiranPTService'\n            );\n            \n            // Re-throw the exception for the controller to handle\n            throw $e;\n        }\n    }\n}\n\n--- File: 666 # views/flagging/index.php ---\n<section class=\"panel\">\n  <header class=\"panel-heading\">\n    Masukan Nomor Transaksi dan Tanggal Pembayaran yang akan di flagging\n  </header>\n  <div class=\"panel-body\">\n    <form class=\"form-inline\" role=\"form\" action=\"/sabh/flagging\" method=\"post\">\n      <?php if ($message != ''):?>\n      <div class=\"alert alert-success alert-block fade in\">\n        <button data-dismiss=\"alert\" class=\"close close-sm\" type=\"button\">\n          <i class=\"fa fa-times\"></i>\n        </button>\n        <p><?php echo $message?></p>\n      </div>\n    <?php endif?>\n    <div class=\"form-group\">\n      <label class=\"sr-only\" for=\"exampleInputEmail2\">No Transaksi</label>\n      <input value=\"<?= $nomor; ?>\" type=\"text\" class=\"form-control\" name=\"nomor\" id=\"exampleInputEmail2\" placeholder=\"No Transaksi\">\n      <label class=\"sr-only\" for=\"exampleInputEmail2\">Tanggal Pembayaran</label>\n      <input value=\"<?= $tgl_bayar; ?>\" type=\"text\" class=\"form-control\" readonly=\"readonly\" name=\"tanggal_pembayaran\" id=\"tgl_pembayaran\" placeholder=\"Tanggal Pembayaran\">\n    </div>\n      <input name=\"cari\" id=\"cari_flagging\" type=\"submit\" class=\"btn btn-danger\" value=\"Cari\" />\n  </form>\n  <?php \n    if($model == NULL):\n      \n    else:\n      $command = $this->getCommand($model['nomor_transaksi']);\n      switch ($command->product) {\n        case '40':\n          echo $this->renderPartial('persero', array('model' => $model, 'nomor' => $nomor, 'tanggal' => $tgl_bayar));\n        break;\n        case '50':\n          echo $this->renderPartial('badanhukum', array('model' => $model, 'nomor' => $nomor, 'tanggal' => $tgl_bayar));\n        break;\n        case '60':\n          echo $this->renderPartial('badanhukum', array('model' => $model, 'nomor' => $nomor, 'tanggal' => $tgl_bayar));\n        break;\n      }\n    endif;\n  ?>\n</div>\n</section>\n<?php\n    Yii::app()->clientScript->registerScript('flagging_sabh', \"\n        $('#tgl_pembayaran').datepicker({dateFormat: 'dd-mm-yy',maxDate: new Date});\n    \");\n?>\n\n--- File: 1202 # services/api/impl/PermohonanBerakhirnyaStatusBadanHukumService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanBerakhirnyaStatusBadanHukumDto');\nYii::import('application.modules.sabh.services.api.IPermohonanBerakhirnyaStatusBadanHukumService');\nYii::import('application.modules.sabh.models.PermohonanBerakhirnyaStatusBadanHukum');\nYii::import('application.modules.billing.models.BillingSimponi');\n\nclass PermohonanBerakhirnyaStatusBadanHukumService implements IPermohonanBerakhirnyaStatusBadanHukumService\n{\n    public function createPermohonanBerakhirnyaStatusBadanHukum(CreatePermohonanBerakhirnyaStatusBadanHukumDto $dto)\n    {\n        // Save the data to the database\n        $model = new PermohonanBerakhirnyaStatusBadanHukum();\n        $model->nomor_voucher = $dto->nomorVoucher;\n        $model->nomor_akta_pembubaran = $dto->nomorAktaPembubaran;\n        $model->tanggal_akta_pembubaran = $dto->tanggalAktaPembubaran;\n        $model->url_akta_pembubaran = $dto->urlAktaPembubaran;\n        $model->tanggal_rapat = $dto->tanggalRapat;\n        $model->tanggal_cetak_pengumuman_surat_kabar = $dto->tanggalCetakPengumumanSuratKabar;\n        $model->nomor_pengumuman_surat_kabar = $dto->nomorPengumumanSuratKabar;\n        $model->notaris_pengganti = $dto->notarisPengganti ? 1 : 0;\n        $model->jumlah_kehadiran_rapat_anggota = $dto->jumlahKehadiranRapatAnggota;\n        $model->tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi = $dto->tanggalCetakPengumumanSuratKabarHasilLikuidasi;\n        $model->nomor_pengumuman_surat_kabar_hasil_likuidasi = $dto->nomorPengumumanSuratKabarHasilLikuidasi;\n        $model->sisa_kekayaan_saat_ini = $dto->sisaKekayaanSaatIni;\n        $model->created = date('Y-m-d H:i:s');\n        $model->updated = date('Y-m-d H:i:s');\n        \n        if (!$model->save()) {\n            throw new Exception(\"Gagal menyimpan permohonan berakhirnya status badan hukum\");\n        }\n    }\n} \n\n--- File: 570 # views/resetStatusUser/index.php ---\n<div class=\"row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Reset Verifikator</legend>\n                    <div class=\"col-lg-2\">\n                        <label class=\"control-label required\" for=\"verifikator\">Nama Verifikator<span class=\"required\"> *</span></label>\n                    </div>\n                    <div class=\"col-lg-10\">\n                    <?php echo CHtml::dropDownList('verifikator', '', \n                        $nama_verifikator,\n                        [\n                        'empty' => '==Silakan Pilih Verifikator==',\n                        'class' => 'form-control',\n                        ]\n                        \n                    );\n                    ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                    <br/>       \n                    <div class=\"col-lg-12\">\n                        <?php echo CHtml::button('Reset Verifikator', array('id' => 'reset', 'class' => 'pull-right btn btn-danger')); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<div id=\"wait\" style=\"display:none;width:69px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;\"><b>Loading...</b>\n</div>\n<?php\n$base_url = Yii::app()->baseUrl;\n$js = <<<JS\n$(document).on('click', '#reset', function () {\n\nvar konfirm = confirm('Anda yakin ingin reset status verifikator tersebut?')\nif (konfirm) {\n    var id_verifikator = $(\"#verifikator option:selected\").val();\n    if (!id_verifikator) {\n        alert('Anda belum memilih verifikator');\n    } else {\n        $.ajax({\n            data: {\"id_verifikator\" : id_verifikator},\n            url:  \"{$base_url}/sabh/resetStatusUser/ajaxResetVerifikator\",\n            type: \"POST\",\n            dataType: 'JSON',\n            success: function (result) {\n                $('#wait').hide();\n                alert(result.message);\n                if (result.status) {\n                    location.reload();\n                }\n            },\n            beforeSend: function () {\n                $('#wait').show();\n            },\n            error: function (xhr, status, error) {\n                $('#wait').hide();\n            },\n            complete: function (xhr, status) {\n                $('#wait').hide();\n            }\n\n        })\n    }\n}\n   \n})\nJS;\n$cs = Yii::app()->clientScript;\n$cs->registerScript('skrip',$js);\n\n?>\n\n--- File: 544 # views/persero/perbaikanSK/index.php ---\n<style>\n    .kertas{\n        box-shadow: 2px 2px 15px rgba(0, 0, 0, .5);\n    }\n</style>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">            \n            <div class=\"panel-body\">\n                <center>\n                    <h3>\n                        DAFTAR SURAT KEPUTUSAN / SURAT PEMBERITAHUAN TERDUPLIKASI\n                    </h3>\n                </center>\n                <br/>                \n                <div class=\"panel-body\">\n                    <?php\n                    $this->widget('zii.widgets.grid.CGridView', array(\n                        'id' => 'bh-grid',\n                        'dataProvider' => $data->search(),\n                        'filter' => $data,\n                        'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                        'columns' => array(\n                            'nomor_transaksi',\n                            'nama_perseroan',\n                            //'jenis_surat',\n                            'nomor_lama',\n                            'nomor_baru',\n                            array(\n                                'header' => '&nbsp;',\n                                'type' => 'html',\n                                'value' => \"'<a href=\\\\'/sabh/persero/perbaikanSK/detail/id/' . \\$data['id'] . '\\\\' class=\\\\'onclick_overlay\\\\'>Surat Pernyataan</a><br/>'.\n                                             \\$data->getSKTransaksi(\\getTransaksi(\\$data['nomor_transaksi']), \\$data['nomor_lama'], \\$data['nomor_baru'])\",\n                            ),\n                        ),\n                    ));\n\n                    function getTransaksi($nomor_transaksi) {\n                        $transaksi = new TransaksiPerseroan;\n                        return $transaksi->find('nomor_transaksi=:nomor_transaksi', array(':nomor_transaksi' => $nomor_transaksi));\n                    }\n                    ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n<div class='overlay_candra' style='display:none'><div><div><div></div></div></div></div>\n<script>\n    $('.onclick_overlayz').click(function(e) {\n        var t = $(this),\n                id = t.attr('data-id'),\n                href = this.href;\n\n        $.ajax({\n            dataType: 'html',\n            url: href,\n            type: 'get',\n            data: 'ajax',\n            success: function(dta) {\n                $('.overlay_candra>*>*>*').html(dta);\n                $('.overlay_candra').fadeIn();\n            },\n        });\n        e.preventDefault();\n        return false;\n    });\n    $('.overlay_candra').click(function() {\n        $(this).fadeOut();\n    });\n</script>\n\n--- File: 1141 # views/match/index.php ---\n<?php\n/* @var $this MatchController */\n/* @var $dataProvider CActiveDataProvider */\n\n// $this->breadcrumbs=array(\n// \t'Match'=>array('index'),\n// \t'Mengatur',\n// );\n// $this->menu = array(\n// \tarray('label'=>'List Match', 'url'=>array('index')),\n// \tarray('label'=>'Create Match', 'url'=>array('tambah')),\n// );\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>\n                        Data Yang Di Perbolehkan Pesan Nama\n                    </h3>\n                </center>\n                <header class=\"panel-heading\">\n                    <?php echo CHtml::link('<i class=\"icon-plus\"></i>Tambah Kata Perbolehkan Pesan Nama', $this->createUrl($this->getId() . '/tambah/'), array('class' => 'btn btn-info')); ?>                    \n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"table-responsive\">\n                        <?php\n                        $this->widget('zii.widgets.grid.CGridView', array(\n                            'id' => 'match-grid',\n                            'dataProvider' => $dataProvider->search(),\n                            'filter' => $dataProvider,\n                            'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                            'columns' => array(\n                                array(\n                                    'header' => 'No.',\n                                    'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                                    'htmlOptions' => array('width' => '30px'),\n                                ),\n                                array(\n                                    'name' => 'name',\n                                    'header' => 'Nama Match',\n                                    'value' => 'strtoupper($data->name)',\n                                ),    \n                                array(\n                                    'header' => 'Log',\n                                    'type' => 'raw',\n                                    'htmlOptions'=>array('style'=>'width:300px'),\n                                    'value' => '$data->getLog($data)',\n                                ),\n                                array(\n                                    'header' => 'Aksi',\n                                    'class' => 'CButtonColumn',\n                                    'htmlOptions'=>array('style'=>'width:70px'),\n                                    'template' => '{update} &nbsp;&nbsp; {delete}',\n                                    'updateButtonUrl' => 'Yii::app()->createUrl(\"/sabh/match/update/\", array(\"name\" => $data->name))',\n                                    'deleteButtonUrl' => 'Yii::app()->createUrl(\"/sabh/match/delete/\", array(\"name\" => $data->name))',\n                                ),\n                            ),\n                        ));\n                        ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n\n\n--- File: 549 # views/persero/pembubaran/index.php ---\n<?php\n$form = $this->beginWidget('CActiveForm', array(\n    'id' => 'bubar-form',\n//    'enableClientValidation' => true,\n//    'clientOptions' => array(\n//        'validateOnSubmit' => true,\n//    )\n    ));\n?>\n<style>.btn{vertical-align:top !important;line-height:1.3 !important;}</style>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>PERMOHONAN PEMBUBARAN <?php echo isset($_GET['pending'])?\"PENDING\":\"\";?> PERSEROAN</legend>                                        \n                    <div class=\"form-group clearfix\">\n                        <div class=\"col-lg-12\">\n                            <?php\n                            echo $form->checkBox($model, 'jenis_pembubaran', array(\n                                'value' => 'dasar_pembubaran',\n                                'compareValue' => 1,\n                                'message' => 'Dasar Pembubaran Harus Di Checklist'\n                            ));\n                            ?>\n                            <label>Dasar Pembubaran</label>\n                            <div class=\"col-lg-12\">\n                                <?php\n                                if ($is_notaris) {\n                                    echo $form->radioButtonList($model, 'type_pembubaran', FormDataPerseroanPembubaran::$notaris_type_pembubaran);\n                                }\n                                ?>\n                                <div class=\"clearfix\"></div>\n                                <?php\n                                if (!$is_notaris) {\n                                    echo $form->checkBox($model, 'type_pembubaran', array(\n                                        'value' => 'penetapan_pengadilan',\n                                    ));\n                                    echo ' <label>Penetapan Pengadilan</label>';\n                                }                                \n                                ?>                                \n                            </div>\n                            <?php echo $form->error($model, 'jenis_pembubaran'); ?>\n                        </div>\n                        <!--div class=\"col-lg-12\">\n                            <?php /*\n                            if (!$is_notaris) {\n                                echo $form->radioButton($model, 'jenis_pembubaran', array(\n                                    'value' => 'berakhir',\n                                    'uncheckValue' => null\n                                ));\n                                echo ' <label>Berakhirnya Status Badan Hukum Perseroan</label>';\n                            }       */                     \n                            ?>                            \n                            <?php //echo $form->error($model, 'jenis_pembubaran'); ?>\n                        </div-->                        \n                    </div>                                 \n                    <br/>\n                    <div class=\"form-group clearfix\">\n                        <div class=\"col-lg-12\">                            \n                            <?php echo CHtml::submitButton('Lanjutkan', array('class' => 'btn btn-info')); ?>\n                        </div>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<?php $this->endWidget(); ?>\n\n--- File: 325 # controllers/api/BlokirAuthController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.services.api.PemblokiranTokenService');\n\nclass BlokirAuthController extends Controller\n{\n    private $pemblokiranTokenService;\n    private $exceptionThrower;\n\n    public function init()\n    {\n        parent::init();\n        $this->pemblokiranTokenService = new PemblokiranTokenService();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function actionMe()\n    {\n        // if (Yii::app()->user->isGuest) {\n        //     $this->exceptionThrower->throwUnauthorized();\n        // }\n\n        // if (!RequestContext::isMethod('GET')) {\n        //     $this->exceptionThrower->throwMethodNotAllowed();\n        // }\n\n        // $userId = Yii::app()->user->id;\n        // $user = DclUser::model()->findByPk($userId);\n\n        // $profile = $this->blokirUserProfileService->getBlokirUserProfile($userId);\n\n        // if (!$profile) {\n        //     $this->exceptionThrower->throwNotFound();\n        // }\n\n        // if (!$user) {\n        //     $this->exceptionThrower->throwNotFound();\n        // }\n\n        // $data = [\n        //     'user_id' => $user->user_id,\n        //     'username' => $user->name,\n        //     'email' => $user->email,\n        //     'nama' => $profile->nama,\n        //     'jenis_kewarganegaraan' => $profile->jenis_kewarganegaraan,\n        //     'nomor_identitas' => $profile->nomor_identitas,\n        //     'no_telepon' => $profile->no_telepon,\n        //     'alamat' => $profile->alamat,\n        // ];\n\n        // $response = [\n        //     'success' => true,\n        //     'message' => 'Current user info',\n        //     'data' => $data,\n        // ];\n\n        // header('Content-Type: application/json');\n        // echo CJSON::encode($response);\n        // Yii::app()->end();\n    }\n\n    public function actionTest()\n    {\n        // // Generate token using the dedicated service\n        // $token = $this->pemblokiranTokenService->generateAuthToken($user['user_id']);\n\n        // $response = [\n        //     'success' => true,\n        //     'message' => 'Pemblokiran backend auth token generated',\n        //     'data' => [\n        //         'token' => $token,\n        //         'user' => $user,\n        //     ],\n        // ];\n\n        // header('Content-Type: application/json');\n        // echo json_encode($response, JSON_UNESCAPED_SLASHES);\n        // Yii::app()->end();\n    }\n\n\n}\n\n\n--- File: 896 # views/badan_hukum/index.php ---\n<center class=\"header_yayasan\">\n<img src=\"<?php echo Yii::app()->baseUrl;?>/images/header_<?php echo $id;?>.png\" width=\"649\" title=\"<?php echo ucfirst($id);?>\" alt=\"<?php echo ucfirst($id);?>\"  />\n</center>\n<center class=\"panel-body\">\n    <?php if ($id == 'perseroan' && Yii::app()->user->isGuest):?>\n        <div class=\"container\" style=\"margin-top: 2.5rem;\">\n            <div id=\"pemohon\" class=\"col-md-6\">\n                <a href=\"<?php echo $this->createUrl('/sabh/perseroan/pesannama');?>\">\n                    <img src=\"<?php echo Yii::app()->baseUrl;?>/images/search.png\" width=\"110\">\n                    <br>\n                    <h4 align=\"center\"><b>Cek Nama Perseroan Terbatas</b></h4>\n                </a>\n            </div>\n            <div id=\"internal\" class=\"col-md-6\">\n                <a href=\"<?php echo $this->createUrl('/backend/login');?>\">\n                    <img src=\"<?php echo Yii::app()->baseUrl;?>/images/internalahu.png\" width=\"110\">\n                    <br>\n                    <h4 align=\"center\"><b>Pendaftaran Perseroan Terbatas</b></h4>\n                </a>\n            </div>\n        </div>\n    <?php elseif ($id == 'perseroan' && !Yii::app()->user->isGuest): ?>\n        <div class=\"container\" style=\"margin-top: 2.5rem;\">\n            <div id=\"pemohon\" class=\"col-md-6\">\n                <a href=\"<?php echo $this->createUrl('/sabh/perseroan/pesannama?group=26&voucher_001001003=&option=checkpesannama');?>\">\n                    <img src=\"<?php echo Yii::app()->baseUrl;?>/images/search.png\" width=\"110\">\n                    <br>\n                    <h4 align=\"center\"><b>Cek Nama Perseroan Terbatas</b></h4>\n                </a>\n            </div>\n            <div id=\"internal\" class=\"col-md-6\">\n                <a href=\"<?php echo $this->createUrl('/billing/voucher/tambah/id/001001/sub/001001003/group/26');?>\">\n                    <img src=\"<?php echo Yii::app()->baseUrl;?>/images/internalahu.png\" width=\"110\">\n                    <br>\n                    <h4 align=\"center\"><b>Pendaftaran Perseroan Terbatas</b></h4>\n                </a>\n            </div>\n        </div>\n    <?php else:?>\n    <a href=\"<?php echo $this->createUrl('pesannama');?>\" class=\"btn btn-primary btn-putih\"><i class=\"icon-group\"></i> Pesan Nama oleh Umum</a>\n    <a href=\"<?php echo $this->createUrl('/backend/login');?>\" class=\"btn btn-primary btn-putih\"><i class=\"icon-group\"></i> Pesan Nama oleh Notaris</a>\n    <?php endif ?>\n</center>\n\n--- File: 670 # views/monitoringBuktiSetor/index.php ---\n<?php /* @var $this MonitorigBuktiSetorController */ ?>\n<?php /* @var $model CSqlDataProvider */ ?>\n<?php /* @var $formFilter FormFilterBuktiSetor */ ?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>Monitoring Bukti Setor Perseroan</legend>\n                <div style=\"float: right;\">\n                <?php echo CHtml::link('Download to Excel', array('downloadExcel'), array('class'=>'btn btn-primary')) ?>\n                </div>\n                <div class=\"clearfix\"></div>\n            <?php\n\n            $this->widget('zii.widgets.grid.CGridView', array(\n                'id' => 'grid-detail',\n                'dataProvider' => $model,\n                'ajaxUpdate' => true, //false if you want to reload entire page (useful if sorting has an effect to other widgets)\n                'filter' => $formFilter, \n                'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                'columns' => array(\n                    array(\n                        'header' => 'No.',\n                        'value' => '$this->grid->dataProvider->pagination->currentPage * \n                        $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                    ),\n                    array(\n                        'header' => 'Perseroan',\n                        'name' => 'nama_perseroan',\n                    ),\n                    array(\n                        'header' => 'Notaris Pendirian',\n                        'name' => 'nama_notaris_pendirian',\n                        'value' => 'FormFilterBuktiSetor::getNamaNotaris($data[\"notaris_pendirian\"])'\n                    ),\n                    array(\n                        'header' => 'Notaris Upload',\n                        'name' => 'nama_notaris',\n                        'value' => 'FormFilterBuktiSetor::getUploadedName($data[\"notaris_upload\"])',\n                        'filter' => false\n                    ),\n                    array(\n                        'header' => 'Tanggal Upload',\n                        'name' => 'tanggal_upload',\n                        'filter' => CHtml::activeTextField($formFilter, 'tanggal_upload', array('class'=>'datepicker'))\n                    ),\n                    array(\n                        'header' => 'File',\n                        'type' => 'raw',\n                        'value' => 'CHtml::link(\"Downlod Bukti Setor\", $data[\"upload\"], array(\"target\"=>\"_blank\"))',\n                    )\n                ),\n            ));\n        ?>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php \n$Tanggal = EnumAhu::DATE_EFFECTIVE_PP29;\n    Yii::app()->clientScript->registerScript('grid-js',\n        '\n        $(document).on(\"focus\", \".datepicker\", function(){\n            $(this).datepicker({\n                dateFormat : \"dd-mm-yy\",\n                changeMonth : true,\n                changeYear : true,\n                maxDate: new Date(),\n                minDate: new Date(\"'.$Tanggal.'\")\n            });\n        });\n        ',\n        CClientScript::POS_END);\n?>\n\n--- File: 1099 # views/dashboard/index.php ---\n<?php /* @var $this DashboardController */ ?>\n<?php /* @var $model DashboardFilterForm */ ?>\n<?php /* @var $listProvinsi Array */ ?>\n<?php /* @var $listKabupaten Array */ ?>\n<?php /* @var $listReport Array */ ?>\n<?php /* @var $listKategori Array */ ?>\n<?php /* @var $tipe */ ?>\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css\" rel=\"stylesheet\" />\n<?php\nYii::app()->clientScript->registerCss('css-dashbord-baum','\n');\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend><?php echo CHtml::encode($report['title']); ?></legend>\n                    <?php $this->renderPartial('_searchForm', array(\n                        'tipe' => $tipe,\n                        'report' => $report,\n                        'model'=>$model,\n                        'listProvinsi'=>$listProvinsi,\n                        'listKabupaten'=>$listKabupaten\n                    )); ?>\n                    <div id=\"div-graph\"></div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<div class=\"row\" id=\"div-detail\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend><?php echo 'Detail' ?></legend>\n                    <div id=\"div-category\">\n                        <?php $this->renderPartial('_dropDownlistCategoryForm', get_defined_vars()); ?>\n                    </div>\n                    <div class=\"row form-group\" id=\"div-column\">\n                        <?php if (isset($tampil_kolom)):\n                            echo $tampil_kolom;    \n                        endif ?>\n                    </div>\n                    <h3 id=\"data-info\"></h3>\n                    <div id=\"div-grid\"></div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts-data.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts-drilldown.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts-exporting.js', CClientScript::POS_END);\nYii::app()->clientScript->registerScript('js-dashbord-bakum',\n    file_get_contents( __DIR__ . '/index.js'),\n    CClientScript::POS_END);\n?>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js\"></script>\n\n\n--- File: 1161 # mappers/DPerseroanProvinsiMapper.php ---\n<?php\n\nclass DPerseroanProvinsiMapper extends MapperBase\n{\n    public function findAll($kategori, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $kategori = strtoupper(str_replace('_', ' ', $kategori));\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.tanggal_sk,\n            p.status_transaksi,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.nomor_transaksi,\n            p.pemegang_saham,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            p.jenis_perseroan,\n            p.tahun,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            (\"\") AS lat,\n            (\"\") AS lon\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'. date('Y') .' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            p.provinsi_id_perseroan = :provinsi_id\n            AND p.kabupaten_id_perseroan IS NOT NULL \n            AND p.kabupaten_id_perseroan != 0\n            AND p.jenis_perseroan = \"'.$kategori.'\"\n        ', $param);\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllGroup($kategori, $param)\n    {\n        $kategori = strtolower($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$kategori.'\n        ');\n        $cmd->from('('.$this->findAll($kategori, array(), false, 'getText').') AS '.$kategori);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 694 # views/pendirianPp29/index.php ---\n<?php\n$form = $this->beginWidget('CActiveForm', array(\n    'id' => 'form_pp29',\n    'enableClientValidation' => true,\n    'clientOptions' => array(\n        'validateOnSubmit' => true,\n        'afterValidate' => 'js:function(form,data,hasError){\n            $(\".disabled_sementara\").removeAttr(\"disabled\");\n            return true;\n        }'\n    )\n        ));\n?>\n</style>\n<div class=\"row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Input PP29</legend>\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nomor_transaksi', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nomor_transaksi', array('class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'nomor_transaksi'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nama_perseroan', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nama_perseroan', array('class' => 'form-control', 'style'=>\"text-transform: uppercase\")); ?>\n                        <?php echo $form->error($model, 'nama_perseroan'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                    <br/>       \n                    <div class=\"col-lg-12\">\n                        <?php echo CHtml::button('Masukan Data', array('id' => 'submit', 'class' => 'pull-right btn btn-primary btn-info')); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<?php $this->endWidget(); ?>\n<div id=\"wait\" style=\"display:none;width:69px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;\"><b>Loading...</b>\n</div>\n\n<script>\njQuery(document).on('click', '#submit', function() {\n    var form_pp = $('#form_pp29').serialize();\n    var konfirmasi = confirm('Anda yakin ingin melanjutkan?');\n    if (konfirmasi) {\n        $.ajax({\n            type: 'POST',\n            url: '<?= Yii::app()->baseUrl; ?>' + 'insertData',\n            data: form_pp,\n            dataType: 'JSON',\n            success: function (result) {\n                $('#wait').hide();\n                alert(result.message);\n            },\n            beforeSend: function () {\n                $('#wait').show();\n            },\n            error: function (xhr, status, error) {\n                $('#wait').hide();\n            },\n            complete: function (xhr, status) {\n                $('#wait').hide();\n            }\n        })\n    }\n\n})\n</script>\n\n--- File: 881 # views/badan_hukum/pesan_domain.php ---\n<?php if($model['Status'] != \"NOT OK\" && $cek): ?>\n\t<div class=\"alert alert-success\" role=\"alert\">\n\t\t<p>Proses Pesanan Nama Domain Website <font class=\"nama_pemesan\"></font></p>\n\t\t<p>*Nama Domain <font class=\"nama_pemesan\"></font> yang kita pesan</p>\n\t\t<p>*Harap anda periksa kembail penulisan sebelum melanjutkan</p>\n\t\t<p>*Dibawan ini adalah tabel domain <font class=\"nama_pemesan\"></font> yang tersedia, pemohon dapat memilih lebih dari satu dengan check pada domain yang diinginkan </p>\n\t</div>\n\t<br>\n\t<div class=\"alert alert-danger\" role=\"alert\">\n\t\t<p>Tarif Pesan nama Domain Website</p>\n\t\t<p class=\"harga\"></p></span>\n\t</div>\n\t<br>\n\t<div class=\"table-responsive\">\n\t  <table class=\"table table-striped table-hover table-bordered dataTable\" id=\"editable-sample\" aria-describedby=\"editable-sample_info\">\n\t\t<thead>\n\t\t    <th></th>\n\t\t    <th>Nama Domain</th>\n\t\t    <th>Status</th>\n\t\t    <th>Harga</th>\n\t\t </thead>  \n\t    <?php\n\t  \n\t\t\tforeach ($model['CheckedDomains'] as $domain => $value):\n\t\t?>\n\t\t<tbody role=\"alert\" aria-live=\"polite\" aria-relevant=\"all\">\n\t\t\t    <tr>\n\t\t\t    \t<td><?php if($value['Status']!='NOT AVAILABLE'): ?><input type=\"checkbox\" class=\"check-domain\" name=\"<?php echo $domain;  ?>\" value=\"<?php echo $value['Price'] ?>\"><?php endif; ?></td>\n\t\t\t    \t<td><?php echo $domain; ?></td>\n\t\t\t    \t<td><?php echo $value['Status']; ?></td>\n\t\t\t    \t<td><?php echo $value['Price']; ?></td>\n\t\t\t    </tr>\n\t\t </tbody>\n\t\t<?php  endforeach ?>\n\t  </table>\n\t  <input type=\"hidden\" name=\"OrderDomain[nama_domain]\">\n\t  <input type=\"hidden\" name=\"OrderDomain[nama_base]\" value=\"<?php echo $id; ?>\">\n\t  <input type=\"hidden\" name=\"OrderDomain[harga]\" value=\"\">\n\t  <input type=\"hidden\" name=\"OrderDomain[status]\" value=\"\">\n\t</div>\n<?php else : ?>\n\t<?php echo Yii::app()->user->getFlash('message') ?>\n\t<div class=\"alert alert-danger\" role=\"alert\">Domain tidak tersedia</div>\n<?php endif; ?>\n<script type=\"text/javascript\">\n\t$('input:checkbox.check-domain').change(function ()\n\t{\n\t      var total = 0;\n\t      var checked = [];\n\t  \t  var status = 0;\n\t      $('input:checkbox:checked.check-domain').each(function(){\n\t\t       total += isNaN(parseInt($(this).val())) ? 0 : parseInt($(this).val());\n\t\t       checked.push($(this).attr('name'));\n\n\t      });\n\n\t      $(\"input[name='OrderDomain[nama_domain]']\").val(checked);\n\t      $(\"input[name='OrderDomain[harga]']\").val(total);\n\t      // console.log($('.nama_pemesan').val());\n\t  \t   console.log(checked);\n\t  \t  $( \".harga\" ).html(total);\n\n\t});\n</script>\n\n--- File: 905 # views/cleansingOrgan/index.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>Log Cleansing Organ</h3>\n                </center>\n                <div class=\"clearfix\"></div><br/>\n                <?php if(Yii::app()->user->hasFlash('error')):?>\n                    <div class=\"alert alert-block alert-danger fade in hidden-print\" style=\"padding:20px 50px; margin-top: 10 !important;\">\n                        <h4 style=\"color: red; font-weight: 700;\">\n                            <?php echo Yii::app()->user->getFlash('error'); ?>\n                        </h4>\n                    </div>\n                <?php endif; ?>\n                <?php echo CHtml::link('Cleansing',\n                    ['cleansing'],\n                    ['class' => 'btn btn-primary']); ?>\n                <?php // echo CHtml::link('Migrate To Database',\n                    // ['migrateOrgan'],\n                    // ['class' => 'btn btn-primary']); ?>\n                <div class=\"clearfix\"></div><br />\n                <div class=\"panel-body\">\n                    <?php $this->widget('zii.widgets.grid.CGridView', array(\n                        'id'=>'cleansing-organ-grid',\n                        'dataProvider'=>$model->search(),\n                        'filter'=>$model,\n                        'afterAjaxUpdate'=>\"function(){jQuery('.date').datepicker({\n                                'dateFormat':'yy-mm-dd',\n                                'changeYear': true,\n                                'changeMonth':true,\n                                'showAnim':'slideDown',\n                                'yearRange':'2000:+nn'\n                        })}\",\n                        'itemsCssClass'=>'table table-striped table-hover table-bordered dataTable',\n                        'columns'=>array(\n                            'nomor_transaksi',\n                            'base',\n                            'organ',\n                            array(\n                                'name' => 'created_date',\n                                'value' => 'Helpers::getDateTimeFormatId($data->created_date)',\n                                'filter' => $this->widget('zii.widgets.jui.CJuiDatePicker', array(\n                                    'model' => $model,\n                                    'attribute' => 'created_date',\n                                    'options' => array(\n                                      'dateFormat' => 'yy-mm-dd',\n                                      'changeYear' => true,\n                                      'changeMonth' => true,\n                                      'showAnim' => 'slideDown',\n                                      'yearRange' => '2000:+nn',\n                                      'width' => '17em',\n                                    ),\n                                    'htmlOptions' => array(\n                                        'class' => 'date',\n                                    ),\n                                ), true),\n                            ),\n                            array(\n                                'header'=>'Created by',\n                                'name'=>'created_by',\n                                'type'=>'HTML',\n                                'filter'=>'',\n                                'value'=>'User::model()->getUsernameByid($data->created_by)' //'$data->created_by'\n                            ),\n                            array(\n                                'filter' => false,\n                                'header'=>'',\n                                'value'=>'$data->getDetailButton($data)',\n                                'type'=>'RAW',\n                            ),\n                        ),\n                    ));\n                    ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n<?php\n$this->renderPartial('/cleansing/popDiff', get_defined_vars());\nYii::app()->clientScript->registerScript('cleansing-modal', '\nshowDiff(\".show-diff\", \"Difference\");\n' );\n\n\n--- File: 196 # models/yayasanbaru/FilterBaseForm.php ---\n<?php\n\nclass FilterBaseForm extends CFormModel\n{\n    public $tgl_awal;\n    public $tgl_akhir;\n    public $bakum;\n    public $tahun;\n\n    public function init()\n    {\n        $this->tgl_awal = date('01-01-Y');\n        $this->tgl_akhir = date('d-m-Y');\n    }\n\n    public function rules()\n    {\n        return array(\n            array('tgl_awal, tgl_akhir', 'required'),\n            array('tgl_awal, tgl_akhir', 'date', 'format' => 'dd-mm-yyyy'),\n            array('tgl_awal', 'validateTanggal')\n        );\n    }\n\n    public function attributeLabels()\n    {\n        return array(\n            'tgl_awal' => 'Tanggal Awal',\n            'tgl_akhir' => 'Tanggal Akhir'\n        );\n    }\n\n    public function setSafeAttribute($attribute, $value)\n    {\n        if (!empty($value)) {\n            $this->$attribute = $value;\n        }\n    }\n\n    public function initOtherAttribute()\n    {\n        $this->tahun = date(\"Y\", strtotime($this->tgl_awal));\n    }\n\n    public function getTableNameTransaksi()\n    {\n        return \"tbl_transaksi_{$this->bakum}_{$this->tahun}\";\n    }\n\n    public function checkTable($tableName)\n    {\n        return Yii::app()->dbBadanHukum\n            ->createCommand(\"Show tables like '$tableName'\")\n            ->queryColumn();\n    }\n\n    public function compare(&$query, $column, $attribute)\n    {\n        if (!empty($attribute)) {\n            $query->andWhere(\"$column = :$column\");\n            $query->params[\":$column\"] = $attribute;\n        }\n    }\n\n    public function compareLike(&$query, $column, $attribute)\n    {\n        if (!empty($attribute)) {\n            $query->andWhere(array('like', $column, '%'.$attribute.'%'));\n        }\n    }\n\n    public function completeDateTime()\n    {\n        $this->tgl_awal = date('Y-m-d', strtotime($this->tgl_awal)) . ' 00:00:00';\n        $this->tgl_akhir = date('Y-m-d', strtotime($this->tgl_akhir)) . ' 23:59:59';\n    }\n\n    public function uncompleteDateTime()\n    {\n        $this->tgl_awal = date('d-m-Y', strtotime($this->tgl_awal));\n        $this->tgl_akhir = date('d-m-Y', strtotime($this->tgl_akhir));\n    }\n\n    public function validateTanggal($attribute, $params)\n    {\n        if (!$this->hasErrors()) {\n            $yearStart = date('Y', strtotime($this->tgl_awal));\n            $yearEnd = date('Y', strtotime($this->tgl_akhir));\n            if ($yearStart != $yearEnd) {\n                $this->addError($attribute, 'Pencarian di tahun yang berbeda.');\n            } else {\n                $start = strtotime(date('Y-m-d', strtotime($this->tgl_awal)));\n                $end = strtotime(date('Y-m-d', strtotime($this->tgl_akhir)));\n                if ($start > $end) {\n                    $this->addError($attribute, 'Tanggal awal lebih besar dari Tanggal akhir.');\n                }\n            }\n        }\n    }\n}\n\n\n--- File: 672 # views/pNRI/index.php ---\n<style>\nsection#paging{\n\ttext-align: center;\n\tpadding: 5em 0 2em;\n}\nsection#paging a{\n\tdisplay: inline-block;\n\tmargin: 4px;\n\tpadding: 4px;\n\tmin-width: 24px;\n\tmin-height: 24px;\n\tcolor: white;\n\tbackground-color: #faca06;\n\ttransition: background-color .3s;\n\t-moz-transition: background-color .3s;\n\t-webkit-transition: background-color .3s;\n}\nsection#paging a:hover{\n\ttext-decoration: none;\n\tbackground-color: #FA4106;\n}\nsection#paging a.active{\n\tbackground-color: #444;\n}\n</style>\n<div class=\"row\">\n\t<div class=\"col-lg-12\">\n\t\t<section class=\"panel\">\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<form>\n\t\t\t\t\t<div class='col-lg-3'>\n\t\t\t\t\t\t<?= CHtml::dropDownList('tipe', $tipe_slc, $tipe_list, array('class' => 'form-control')); ?>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-lg-3'>\n\t\t\t\t\t\t<input class='form-control' type='text' name='nama' placeholder='nama' value='<?=$cari ?>'>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class='col-lg-3'>\n\t\t\t\t\t\t<input class='btn btn-danger' type='submit' value=\"Cari\">\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</div>\n<?php if(!empty($data)): ?>\n\t<div class=\"row\">\n\t\t<div class=\"col-lg-12\">\n\t\t\t<section class=\"panel\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<table class='table table-striped table-hover table-bordered dataTable'>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>No.</th>\n\t\t\t\t\t\t\t\t<th>Nomor SK</th>\n\t\t\t\t\t\t\t\t<th>Nama</th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<?php foreach($data as $x => $dta): ?>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<td><?= $x + $start ?></td>\n\t\t\t\t\t\t\t\t\t<td><?= $dta['nomor_sk'] ?></td>\n\t\t\t\t\t\t\t\t\t<td><?= $dta['nama'] ?></td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t<?php endforeach; ?>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t\t<section id='paging'>\n\t\t\t\t<?php foreach($page_list as $x => $page): ?>\n\t\t\t\t\t<?= gen_page($cari, $tipe_slc, $page, $page_curr, isset($page_list[$x - 1]) ? $page_list[$x - 1] : $page); ?>\n\t\t\t\t<?php endforeach; ?>\n\t\t\t</section>\n\t\t</div>\n\t</div>\n<?php endif;\n\nfunction gen_page($cari, $tipe_slc, $page, $page_curr, $last){\n\treturn (($page - 1 > $last) ? ' ... ' : '') .\n\t\tCHtml::link(no($page), \"?nama={$cari}&tipe={$tipe_slc}&page={$page}\", array(\n\t\t\t'class' => $page_curr == $page ? 'active' : '',\n\t\t));\n}\nfunction no($x){\n\treturn number_format((float)$x, 0, ',', '.');\n}\n ?>\n\n--- File: 177 # models/SummaryAktaBase.php ---\n<?php\n\n/**\n * This is the model class for table \"{{summary_akta_base}}\".\n *\n */\nclass SummaryAktaBase extends CActiveRecord\n{\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return AksiTransaksi the static model class\n     */\n    public static function model($className=__CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{summary_akta_base}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        return array(\n            array('tanggal, hari, bulan, tahun, id_wilayah, id_kota, id_notaris, nama_notaris', 'required'),\n            array('hari, bulan, tahun', 'numerical', 'integerOnly' => true, 'min' => 1),\n            array('perseroan, yayasan, perkumpulan', 'safe'),\n        );\n    }\n\n    /**\n     * Set some value of attribute, before validate \n     */\n    public function beforeValidate()\n    {\n        if (!empty($this->tanggal)) {\n            $tanggal = date('Y-m-d', strtotime($this->tanggal));\n            $arrTanggal = explode('-', $tanggal);\n            $this->hari = (int) $arrTanggal[2];\n            $this->bulan = (int) $arrTanggal[1];\n            $this->tahun = (int) $arrTanggal[0];\n            $this->tanggal = $tanggal;\n        }\n        return parent::beforeValidate();\n    }\n\n    /**\n     * Find model by some condition\n     *\n     * @return SummaryPermohonan\n     */\n    public function findModel()\n    {\n        $criteria = new CDbCriteria();\n        $criteria->condition = \"tanggal =:tanggal AND id_wilayah =:id_wilayah \n            AND id_kota =:id_kota AND id_notaris =:id_notaris\";\n        $criteria->params = array(\n            ':tanggal' => $this->tanggal,\n            ':id_wilayah' => $this->id_wilayah,\n            ':id_kota' => $this->id_kota,\n            ':id_notaris' => $this->id_notaris\n        );\n        return self::model()->find($criteria);\n    }\n\n    /**\n     * Update counter attributes based param array $increment\n     *\n     * @param array incrementAttributes\n     * @return boolean\n     */\n    public function updateIncrementAttributes($base)\n    {\n        $incrementAttributes = array();\n        if ($base === 'perseroan') {\n            $incrementAttributes['perseroan'] = 1;\n        } elseif ($base === 'yayasan') {\n            $incrementAttributes['yayasan'] = 1;\n        } else {\n            $incrementAttributes['perkumpulan'] = 1;\n        }\n        $model = $this->findModel();\n        if ($model === null) {\n            $this->save(false); // no validate here\n            $model = $this;\n        }\n        return $model->saveCounters($incrementAttributes);\n    }\n}\n\n\n--- File: 427 # views/bo/monitoring/index.php ---\n<?php\n\n/** @var $this MonitoringBoController **/\n/** @var $model BoMonitoringPerseroan , yayasan, perkumpulan **/\n/** @var $data CArrayDataProvider **/\n/** @var $countTipe array **/\n/** @var $chart array **/\n?>\n\n<style type=\"text/css\">\n    .kh_ca::before{\n        content: \"- \";\n    }\n    .kh_ca{\n        white-space: nowrap;\n        display: block;\n    }\n    .kh_ca:not(:last-child){\n        padding-bottom: .3em;\n    }\n    .pop_up_info{\n        border-radius:4px;\n        font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        padding:10px;\n        font-size:16px;\n        position:absolute;\n        background-color:#58C9F3;\n        color:#fff;\n    }\n    .table>tbody>tr.warning>td,\n    .table>tbody>tr.warning>th,\n    .table>tbody>tr>td.warning,\n    .table>tbody>tr>th.warning,\n    .table>tfoot>tr.warning>td,\n    .table>tfoot>tr.warning>th,\n    .table>tfoot>tr>td.warning,\n    .table>tfoot>tr>th.warning,\n    .table>thead>tr.warning>td,\n    .table>thead>tr.warning>th,\n    .table>thead>tr>td.warning,\n    .table>thead>tr>th.warning {\n        background-color: #f8d347 ;\n    }\n\n    .table-hover>tbody>tr.warning:hover>td,\n    .table-hover>tbody>tr.warning:hover>th,\n    .table-hover>tbody>tr>td.warning:hover,\n    .table-hover>tbody>tr>th.warning:hover {\n        background-color: #f8d347 ;\n    }\n\n    .yell {\n        background-color: #f8d347;\n    }\n\n    .green {\n        background-color: #00c853;\n    }\n\n    .symbol {\n        cursor: pointer;\n    }\n\n    .grey {\n        -webkit-filter: grayscale(50%); /* Safari 6.0 - 9.0 */\n        filter: grayscale(50%);\n    }\n</style>\n<?php if($model instanceof BoMonitoringPerseroan): ?>\n    <?php $this->renderPartial('/bo/monitoring/_perseroan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php elseif($model instanceof BoMonitoringYayasan): ?>\n    <?php $this->renderPartial('/bo/monitoring/_yayasan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php else: ?>\n    <?php $this->renderPartial('/bo/monitoring/_perkumpulan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php endif; ?>\n\n<div id=\"overlay\" \n     class=\"ui-widget-overlay overlay\" \n     style=\"display:none; position:fixed; top: 0; left: 0; bottom:0; right:0; z-index: 1001;\">\n</div>\n<?php $this->renderPartial('/template/loader'); ?>\n\n--- File: 366 # components/cleansing/DatabaseHelpers.php ---\n<?php\n\n/**\n * @author Josep\n * 15 Ahustus 2016\n * Database Helpers (Query Builder)\n*/\nclass DatabaseHelpers\n{\n    /**\n     * Get Data Using Query Buider\n     * @param   string  $tableName\n     * @param   array   $condition [\n     *  [\n     *      'key' =>\n     *      'operator' =>\n     *      'value' =>\n     *\n     *  ],\n     * ]\n     * @param   string  $select\n     * @param   int     $limit\n     * @param   int     $offset\n     */\n    public static function getData($tableName, $condition=array(), $select='*', $limit=0, $offset=0)\n    {\n        $db = Yii::app()->dbBadanHukum->createCommand();\n        $data = $db->from($tableName);\n        $data->select($select);\n        if (!empty($condition) && is_array($condition)) {\n            $count = 0;\n            foreach ($condition as $kCondition => $vCondition) {\n                extract($vCondition);\n                if (!empty($key) && !empty($value)) {\n                    $operator = !empty($operator) ? $operator : '=';\n                    $param = $key.$count;\n                    $data->andWhere(\n                        \"$key $operator :$param\",\n                        [\":$param\"=>$value]\n                    );\n                    $count++;\n                }\n            }\n        }\n\n        if (!empty($limit)) {\n            $data->limit($limit);\n        }\n\n        if (!empty($offset)) {\n            $data->offset($offset);\n        }\n\n        return $data->queryAll();\n    }\n\n    /**\n     * Check Table Exist\n     * @param   string  $tableName  table name will check\n     * @param   string    $create   if !empty, will create new table using this value as template\n     */\n    public static function checkTableExist($tableName, $create='')\n    {\n        $sqlCheckTable = \"SHOW TABLES LIKE '$tableName'\";\n        $checkTable = Yii::app()->dbBadanHukum->createCommand($sqlCheckTable)->queryScalar();\n        if (!empty($create) && is_string($create)) {\n            if (empty($checkTable)) {\n                return self::cloneTable($tableName, $create);\n            }\n        }\n        return $checkTable;\n    }\n\n    public static function cloneTable($newName, $oldName)\n    {\n        if (!empty($newName)\n            && !empty($oldName)\n            && is_string($newName)\n            && is_string($oldName)\n        ) {\n            $q = \"create table $newName like $oldName\";\n            if (Yii::app()->dbBadanHukum->createCommand($q)->query()) {\n                return $newName;\n            }\n        }\n    }\n\n    public static function batchInsert($db, $tableName, $attr)\n    {\n        $key = $value = [];\n        foreach ($attr[0] as $kKey => $vKey) {\n            $key[] = $kKey;\n        }\n        foreach ($attr as $kValue => $vValue) {\n            $value[] = \"'\".implode(\"','\", $vValue).\"'\";\n        }\n        $key = \"(\".implode(',', $key).\")\";\n        $value = \"(\".implode(\"),(\", $value).\")\";\n        $query = \"INSERT INTO $tableName $key VALUES $value;\";\n        return $db->createCommand($query)->execute();\n    }\n}\n\n\n--- File: 958 # views/layouts/main.php ---\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <!--\n            MODULE SABH LAYOUTS > MAIN.PHP\n        -->\n        <meta charset=\"utf-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <meta name=\"description\" content=\"\">\n        <meta name=\"author\" content=\"Mosaddek\">\n        <meta name=\"keyword\" content=\"\">\n        <link rel=\"shortcut icon\" href=\"\">\n        <title>AHU KENOTARIATAN - Pesan Nama</title>\n        <!-- Bootstrap core CSS -->\n        <?php\n        /*\n        <link href=\"<?php echo Yii::app()->request->baseUrl; ?>/css/bootstrap.min.css\" rel=\"stylesheet\">\n        <link href=\"<?php echo Yii::app()->request->baseUrl; ?>/css/bootstrap-reset.css\" rel=\"stylesheet\">\n        <!--external css-->\n        <link href=\"<?php echo Yii::app()->request->baseUrl; ?>/library/font-awesome/css/font-awesome.css\" rel=\"stylesheet\" />\n        <!-- Custom styles for this template -->\n        <link href=\"<?php echo Yii::app()->request->baseUrl; ?>/css/style.css\" rel=\"stylesheet\">\n        <link href=\"<?php echo Yii::app()->request->baseUrl; ?>/css/style-responsive.css\" rel=\"stylesheet\" />\n\n        <link href=\"<?php echo Yii::app()->request->baseUrl; ?>/css/cssModal.css\" rel=\"stylesheet\" /> */\n        $fl = Yii::app()->getClientScript();\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/css/bootstrap.min.css');\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/css/theme.css');\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/css/bootstrap-reset.css');\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/library/font-awesome/css/font-awesome.css');\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/css/style.css');\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/css/style-responsive.css');\n        $fl->registerCssFile(Yii::app()->getBaseUrl(TRUE) . '/css/cssModal.css');\n        ?>\n\n        <!-- HTML5 shim and Respond.js IE8 support of HTML5 tooltipss and media queries -->\n        <!--[if lt IE 9]>\n        <script src=\"<?php echo Yii::app()->request->baseUrl; ?>/js/backend/html5shiv.js\"></script>\n        <script src=\"<?php echo Yii::app()->request->baseUrl; ?>/js/backend/respond.min.js\"></script>\n        <![endif]-->\n        <?php\n        $cs = Yii::app()->clientScript;\n\t\t$position = CClientScript::POS_END;\n        $cs->coreScriptPosition = CClientScript::POS_BEGIN;\n        $cs->registerCoreScript('jquery');\n        $cs->registerCoreScript('jquery.ui');\n        $cs->registerScriptFile(Yii::app()->request->getBaseUrl(true) . '/js/bootstrap.min.js', $position);\n\t\t$cs->registerScriptFile(Yii::app()->request->getBaseUrl(true) . '/js/bootbox.min.js', $position);\n        ?>\n\n    </head>\n    <body class=\"login-body\">\n        <div class=\"blackheader\">\n            <div class=\"banner-ahu\"></div>\n        </div>\n        <div class=\"container\">\n            <section class=\"wrapper\">\n                <?php echo $content; ?>\n            </section>\n        </div>\n\n    </body>\n</html>\n\n\n--- File: 319 # controllers/api/PemblokiranController.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.PemblokiranProxyService');\nYii::import('application.modules.sabh.services.api.BlokirAuthService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.utils.RequestContext');\n\nclass PemblokiranController extends Controller\n{\n    private $proxyService;\n    private $exceptionThrower;\n\n    public function init()\n    {\n        parent::init();\n        $this->proxyService = new PemblokiranProxyService();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n\n\n    /**\n     * Generic proxy method for custom endpoints\n     * Handles URLs like: /sabh/pemblokiran/api/blocked, /sabh/pemblokiran/api/users, etc.\n     */\n    public function actionIndex()\n    {\n        $pathInfo = Yii::app()->request->pathInfo;\n        \n        $parts = explode('/', $pathInfo);\n        $pemblokiranIndex = array_search('pemblokiran', $parts);\n        \n        if ($pemblokiranIndex !== false && isset($parts[$pemblokiranIndex + 1])) {\n            $endpointParts = array_slice($parts, $pemblokiranIndex + 1);\n            $endpoint = '/' . implode('/', $endpointParts);\n        } else {\n            $endpoint = '/';\n        }\n        \n        $queryString = $_SERVER['QUERY_STRING'];\n        if (!empty($queryString)) {\n            parse_str($queryString, $queryParams);\n            unset($queryParams['r']);\n            \n            if (!empty($queryParams)) {\n                $cleanQueryString = http_build_query($queryParams);\n                $endpoint .= '?' . $cleanQueryString;\n            }\n        }\n\n        $method = $_SERVER['REQUEST_METHOD'];\n        $body = null;\n\n        if (in_array($method, ['POST', 'PUT'])) {\n            try {\n                $body = RequestContext::getJsonBody();\n            } catch (Exception $e) {\n                $this->exceptionThrower->throwBadRequest($e->getMessage());\n            }\n        }\n\n        $user_id = Yii::app()->user->id;\n\n        try {\n            switch ($method) {\n                case 'GET':\n                    $response = $this->proxyService->get($endpoint, $user_id);\n                    break;\n                case 'POST':\n                    $response = $this->proxyService->post($endpoint, $body, $user_id);\n                    break;\n                case 'PUT':\n                    $response = $this->proxyService->put($endpoint, $body, $user_id);\n                    break;\n                case 'DELETE':\n                    $response = $this->proxyService->delete($endpoint, $user_id);\n                    break;\n                default:\n                    $this->exceptionThrower->throwMethodNotAllowed();\n            }\n\n            $this->sendJsonResponse($response);\n        } catch (Exception $e) {\n            $this->handleProxyError($e);\n        }\n    }\n\n    /**\n     * Handle proxy service errors and forward them to client\n     */\n    private function handleProxyError($exception)\n    {\n        $statusCode = method_exists($exception, 'getCode') && $exception->getCode() > 0 ? $exception->getCode() : 500;\n        http_response_code($statusCode);\n\n        header('Content-Type: application/json');\n        echo $exception->getMessage();\n        Yii::app()->end();\n    }\n\n    /**\n     * Send JSON response to client\n     */\n    private function sendJsonResponse($data)\n    {\n        header('Content-Type: application/json');\n        echo json_encode($data, JSON_UNESCAPED_SLASHES);\n        Yii::app()->end();\n    }\n} \n\n--- File: 642 # views/verifikatorAktifPerkumpulan/index.php ---\n<?php\n/* @var $model array VerifikatorPerkumpulan */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>LIST VERIFIKATOR PENDIRIAN</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?= CHtml::link('Monitoring', ['monitoring'], ['class' => 'btn btn-info']); ?>\n                    <div class=\"table-responsive\">\n                        <?php\n                        $this->widget('zii.widgets.grid.CGridView', array(\n                            'id' => 'verifikator-perkumpulan-grid',\n                            'afterAjaxUpdate' => \"function(){ $('.keys').attr('title', window.location.href ); } \",\n                            'dataProvider' => $model->search(),\n                            'filter' => $model,\n                            'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                            'columns' => [\n                                [\n                                    'header' => 'No.',\n                                    'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                                ],\n                                [\n                                    'header' => 'User Verifikator',\n                                    'name' => 'verifikator_staf',\n                                    'value' => function($data) {\n                                        return $data->getNamaVerifikator($data->id_verifikator);   \n                                    },\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Tipe',\n                                    'value' => function() {\n                                        return 'Perkumpulan';\n                                    },\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'name' => 'status',\n                                    'filter' => CHtml::dropDownList(\n                                        get_class($model).'[status]',\n                                        $model->status,\n                                        [1 => 'Aktif', 0 => 'Tidak Aktif'],\n                                        ['empty' => '']\n                                    ),\n                                    'value' => function($data) {\n                                        if ($data->status == 1) {\n                                            return CHtml::tag('span', ['class' => 'label label-success'], 'Aktif');\n                                        } else {\n                                            return CHtml::tag('span', ['class' => 'label label-danger'], 'Tidak Aktif');\n                                        }\n                                    },\n                                    'type' => 'raw',\n                                ],\n                                [\n                                    'header' => 'Aksi',\n                                    'value' => function($data) {\n                                        if ($data->status == 1) {\n                                            return CHtml::link(\n                                                'Nonaktifkan',\n                                                ['nonactive', 'id' => $data->id_verifikator],\n                                                ['class' => 'link_nonaktifkan']\n                                            );\n                                        } else {\n                                            return CHtml::link(\n                                                'Aktifkan',\n                                                ['active', 'id' => $data->id_verifikator],\n                                                ['class' => 'link_aktifkan']\n                                            );\n                                        }\n                                    },\n                                    'type' => 'raw',\n                                ],\n                            ],\n                        ));\n                        ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\n    $script = <<< JS\n    $(document).ready(function(){\n        $(document).on('click', '.link_aktifkan', function(){\n            if (!confirm('Apakah Anda Yakin Ingin Mengaktifkan User Verifikator ?')) {\n                return false;\n            }\n        });\n    });\nJS;\n    Yii::app()->clientScript->registerScript('js-verifikator-perkumpulan-index', $script, CClientScript::POS_END);\n?>\n\n\n--- File: 191 # models/yayasanbaru/KitapImptaForm.php ---\n<?php\n\n/**\n *\n */\nclass KitapImptaForm extends CFormModel\n{\n    /**\n     * @var string nomor kitap\n     */\n    public $nomor_kitap;\n\n    /**\n     * @var string tanggal terbit kitap\n     */\n    public $tanggal_terbit_kitap;\n\n    /**\n     * @var string tanggal kadaluarsa kitap\n     */\n    public $tanggal_hangus_kitap;\n\n    /**\n     * @var string nomor impta\n     */\n    public $nomor_impta;\n\n    /**\n     * @var string tanggal terbit impta\n     */\n    public $tanggal_terbit_impta;\n\n    /**\n     * @var string tanggal kadaluarsa impta\n     */\n    public $tanggal_hangus_impta;\n\n    /**\n     * @return array rules\n     */\n    public function rules()\n    {\n        return array(\n            array('tanggal_terbit_kitap, tanggal_terbit_impta, tanggal_hangus_kitap,\n                tanggal_hangus_impta', 'date', 'format' => 'dd-mm-yyyy'),\n            array('nomor_kitap, nomor_impta', 'filter', 'filter' => 'trim'),\n            array('nomor_kitap, nomor_impta', 'filter', 'filter' => 'strip_tags'),\n        );\n    }\n\n    /**\n     * @return array attribute label\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'nomor_kitap' => 'Nomor Kitap',\n            'nomor_impta' => 'Nomor Impta',\n            'tanggal_terbit_kitap' => 'Tanggal Terbit Kitap',\n            'tanggal_terbit_impta' => 'Tanggal Terbit Impta',\n            'tanggal_hangus_kitap' => 'Tanggal Kadaluarsa Kitap',\n            'tanggal_hangus_impta' => 'Tanggal Kadaluarsa Impta',\n        );\n    }\n\n    /**\n     *\n     */\n    public function attributeMapping()\n    {\n        // value array sebagai key json yang disimpan di tabel\n        // sedangkan key name sebagai attribute model OrganYayasanForm\n        $attributeMapping = array(\n            'nomor_kitap' => 'kitas_pengurus',\n            'nomor_impta' => 'imta_pengurus',\n            'tanggal_terbit_kitap' => 'tgl_terbit',\n            'tanggal_terbit_impta' => 'tgl_terbit_impta',\n            'tanggal_hangus_kitap' => 'tgl_kadaluarsa',\n            'tanggal_hangus_impta' => 'tgl_kadaluarsa_impta',\n        );\n        return $attributeMapping;\n    }\n\n    public function initValue()\n    {\n        $attributeMapping = $this->attributeMapping();\n        $result = array();\n        foreach ($attributeMapping as $attribute => $keyArray) {\n            $result[$keyArray] = '';\n        }\n        return $result;\n    }\n\n    /**\n     *\n     */\n    public function assignAttributeValues($arrOrgan)\n    {\n        $attributeMapping = $this->attributeMapping();\n        foreach ($attributeMapping as $attrModel => $attrData) {\n            $this->$attrModel = isset($arrOrgan[$attrData]) ? $arrOrgan[$attrData] : '';\n        }\n    }\n\n    /**\n     * Generate hidden field model KitapImptaForm\n     */\n    public function generateHiddenField($nomor = null)\n    {\n        $attributeMapping = $this->attributeMapping();\n        foreach ($attributeMapping as $attrModel => $attrData) {\n            $attrModel = $nomor !== null ? \"[$nomor]$attrModel\" : $attrModel;\n            echo CHtml::activeHiddenField($this, $attrModel);\n        }\n    }\n}\n\n\n--- File: 537 # views/persero/profil/index.php ---\n<div class='mimik_tabel' style='height: 100%;'>\n\t<div>\n\t\t<div style='padding-bottom: 5%;'>\n\t\t\t<?php\n\t\t\t$form = $this->beginWidget('CActiveForm', array(\n\t\t\t\t'id' => 'admin-ubah-form',\n\t\t\t\t'method' => 'get',\n\t\t\t\t'action' => '/sabh/persero/profil/cari',\n\t\t\t\t'enableClientValidation' => true,\n\t\t\t\t'clientOptions' => array(\n\t\t\t\t\t'validateOnSubmit' => true,\n\t\t\t\t)\n\t\t\t));\n\t\t\t?>\n\t\t\t<div id='kotak_kuning'>\n\t\t\t\t<div class='input'>\n\t\t\t\t\t<?= CHtml::textField('nama_perseroan', '', array('placeholder' => 'Cari Profil Perusahaan di Indonesia', 'class' => 'form-control')); ?>\n\t\t\t\t\t<i class='button'></i>\n\t\t\t\t</div>\n\t\t\t<?php $this->endWidget(); ?>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n<?php if(isset($data)): ?>\n\t<section class=\"panel\">\n\t\t<div class=\"panel-body\">\n\t\t\t<fieldset class=\"fieldset\">\n\t\t\t\t<legend>Hasil Pencarian</legend>\n\t\t\t\t<?php if(is_object($data)): ?>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tNama Perseroan\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->nama_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tAlamat Perseroan\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->alamat_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tKabupaten\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->kabupaten_nama_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tProvinsi\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->provinsi_nama_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3 labelatas\"></div>\n\t\t\t\t\t<div class=\"col-lg-9 labelatas\">\n\t\t\t\t\t\t<?= CHtml::button('Beli Profil Perusahaan', array('class' => 'btn btn-primary', 'id' => 'beli_profile_lengkap')); ?>\n\t\t\t\t\t</div>\n\t\t\t\t<?php else: ?>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\tData tidak ditemukan.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif; ?>\n\t\t\t</fieldset>\n\t\t</div>\n\t</section>\n<?php endif;\n\nfunction ambilData(&$obj, $key){\n\tif(!isset($obj->$key))\n\t\treturn '';\n\treturn $obj->$key;\n}\nfunction tampilkan_rapih($jmlh, $curr){\n\treturn (strtolower($curr) === 'rupiah' ? 'Rp.' : strtoupper($curr)) . ' ' . (empty($jmlh) ? '0' : number_format(floatval($jmlh), 0, ',', '.'));\n}\nYii::app()->clientScript->registerScript('_formUmumCompanyProfile', str_replace('$baseurl', Yii::app()->getBaseUrl(true), file_get_contents( __DIR__ . '/company_profile.js')));\n\n\n--- File: 322 # controllers/api/FileController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.FileService');\nYii::import('application.modules.sabh.enums.FileType');\n\nclass FileController extends Controller\n{\n    private $exceptionThrower;\n    private $fileService;\n    \n    public function init()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->fileService = new FileService();\n    }\n    \n    public function actionIndex()\n    {\n        // 1. Throw if method is not POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Set upload limits for large files\n        set_time_limit(0);\n        @ini_set('memory_limit', '-1');\n        @ini_set('upload_max_size', '10M');\n        @ini_set('post_max_size', '10M');\n\n        // 3. Check if file was uploaded\n        if (!isset($_FILES['file'])) {\n            $this->exceptionThrower->throwBadRequest('Tidak ada file yang diupload');\n        }\n\n        if ($_FILES['file']['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$_FILES['file']['error']]) ? $errorMessages[$_FILES['file']['error']] : 'Error upload tidak diketahui';\n            $this->exceptionThrower->throwBadRequest('Error upload: ' . $errorMessage);\n        }\n\n        // 4. Get and validate file type from query parameters\n        $fileType = Yii::app()->request->getQuery('file_type');\n        \n        if (empty($fileType)) {\n            $this->exceptionThrower->throwBadRequest('Parameter file_type wajib diisi');\n        }\n        \n        if (!FileType::isValid($fileType)) {\n            $this->exceptionThrower->throwBadRequest('Tipe file tidak valid. Tipe yang diizinkan: ' . implode(', ', FileType::getAllTypes()));\n        }\n        \n        // 5. Process file upload\n        try {\n            $uploadedFile = $_FILES['file'];\n            \n            $fileInfo = $this->fileService->createFile($fileType, $uploadedFile);\n            \n            // Log successful upload\n            Yii::log(\n                'File berhasil diupload: ' . $fileInfo['original_name'] . \n                ' -> ' . $fileInfo['file_path'] . \n                ' (Ukuran: ' . $fileInfo['file_size'] . ' bytes)',\n                'info',\n                'application.modules.sabh.controllers.api.FileController'\n            );\n            \n            APIResponse::ok($fileInfo, 'File berhasil diupload');\n        } catch (Exception $e) {\n            // Log upload error\n            Yii::log(\n                'Upload file gagal: ' . $e->getMessage() . \n                ' (File: ' . (isset($uploadedFile['name']) ? $uploadedFile['name'] : 'tidak diketahui') . ')',\n                'error',\n                'application.modules.sabh.controllers.api.FileController'\n            );\n            \n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n    }\n}\n\n\n--- File: 444 # views/bo/monitoring-notaris/index.php ---\n<?php\n\n/** @var $this MonitoringBoNotarisController **/\n/** @var $model BoMonitoringNotarisBadanHukum, perseroan , yayasan, perkumpulan **/\n/** @var $data CArrayDataProvider **/\n/** @var $countTipe array **/\n/** @var $chart array **/\n?>\n\n<style type=\"text/css\">\n    .kh_ca::before{\n        content: \"- \";\n    }\n    .kh_ca{\n        white-space: nowrap;\n        display: block;\n    }\n    .kh_ca:not(:last-child){\n        padding-bottom: .3em;\n    }\n    .pop_up_info{\n        border-radius:4px;\n        font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        padding:10px;\n        font-size:16px;\n        position:absolute;\n        background-color:#58C9F3;\n        color:#fff;\n    }\n    .table>tbody>tr.warning>td,\n    .table>tbody>tr.warning>th,\n    .table>tbody>tr>td.warning,\n    .table>tbody>tr>th.warning,\n    .table>tfoot>tr.warning>td,\n    .table>tfoot>tr.warning>th,\n    .table>tfoot>tr>td.warning,\n    .table>tfoot>tr>th.warning,\n    .table>thead>tr.warning>td,\n    .table>thead>tr.warning>th,\n    .table>thead>tr>td.warning,\n    .table>thead>tr>th.warning {\n        background-color: #f8d347 ;\n    }\n\n    .table-hover>tbody>tr.warning:hover>td,\n    .table-hover>tbody>tr.warning:hover>th,\n    .table-hover>tbody>tr>td.warning:hover,\n    .table-hover>tbody>tr>th.warning:hover {\n        background-color: #f8d347 ;\n    }\n\n    .yell {\n        background-color: #f8d347;\n    }\n\n    .green {\n        background-color: #00c853;\n    }\n\n    .symbol {\n        cursor: pointer;\n    }\n\n    .grey {\n        -webkit-filter: grayscale(50%); /* Safari 6.0 - 9.0 */\n        filter: grayscale(50%);\n    }\n</style>\n<?php if($model instanceof BoMonitoringNotarisPerseroan): ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_perseroan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php elseif($model instanceof BoMonitoringNotarisYayasan): ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_yayasan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php elseif($model instanceof BoMonitoringNotarisPerkumpulan): ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_perkumpulan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php else: ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_badanHukum', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php endif; ?>\n\n<div id=\"overlay\" \n     class=\"ui-widget-overlay overlay\" \n     style=\"display:none; position:fixed; top: 0; left: 0; bottom:0; right:0; z-index: 1001;\">\n</div>\n<?php $this->renderPartial('/template/loader'); ?>\n\n--- File: 361 # components/BoAPI.php ---\n<?php \n\nClass BoAPI {\n\n    const PERSEROAN = 1;\n    const YAYASAN = 2;\n    const PERKUMPULAN = 3;\n    const PERSEORANGAN = 7;\n\n    private static $jenis_korporasi = [\n        \"perseroan\" => self::PERSEROAN,\n        \"yayasan\" => self::YAYASAN,\n        \"perkumpulan\" => self::PERKUMPULAN,\n        \"ptp\" => self::PERSEORANGAN,\n    ];\n\n    private static $salt = 'D0c0Sp@rtan2019';\n\n    public static function generate_sign()\n    {\n        $now = time();\n        $setengah_jam = (int)floor($now / 30 / 60);\n        $t = 'candrabeqx' . $setengah_jam . 'docotel';\n        $x = crypt($t, \"$2y$10$\" . substr(md5($t),0,22));\n\n        return $x;\n    }\n\n    public static function getData($id_bakum, $nama, $base, $save_log = 1)\n    {\n        $url = BakumSetting::model()->findByAttributes([\n            'name' => 'api_bo',\n        ]);\n\n        // $url = $url ? $url->value . \"/data-bo/get-data?sign=\" . self::generate_sign() : null;\n        $url = $url ? $url->value . \"/data-bo/get-data\" : null;\n\n        if ($url) {\n            $post = [\n                'id_master_sumber' => $id_bakum,\n                'nama_korporasi' => $nama,\n                'jenis_korporasi' => static::$jenis_korporasi[$base],\n                'save_log' => $save_log,\n            ];\n\n            $hash = hash('sha512', static::$salt . $post['id_master_sumber'] . $post['nama_korporasi'] . $post['jenis_korporasi']);\n            $result = self::_curl($url, $post, $hash);\n\n            if ($data = json_decode($result, true)) {\n                if (!empty($data['status'])) {\n                    return $data['data'];\n                }\n            }\n        }\n\n        return false;\n    }\n\n    public static function _curl($url, $data, $hash)\n    {\n        $header = [\n            'Token: ' . $hash,\n        ];\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $result = curl_exec($ch);\n        curl_close($ch);\n\n        return $result;\n    }\n\n    public static function assignKriteria($base, $kriteria)\n    {\n        $result = [];\n        foreach ($kriteria as $kri) {\n            $kriteria_bo = KriteriaBo::model()->findByAttributes(['kode_BO' => $kri['kode'], 'base' => $base]);\n            if ($kriteria_bo) {\n                $result[] = $kriteria_bo->kode;\n            }\n        }\n\n        return $result;\n    }\n\n    public static function getKelurahan($id_wil)\n    {\n        if ($id_wil) {\n            if ($wilayah_sabh = WilayahSabh::model()->findByAttributes(['ID_WIL' => $id_wil])) {\n                return $wilayah_sabh->WSID;\n            }\n        }\n\n        return null;\n    }\n\n    public static function cekData($id_bakum, $nama, $base)\n    {\n        $data = self::getData($id_bakum, $nama, $base, 0);\n\n        if (!empty($data['data_bo'])) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n--- File: 1199 # services/api/EmailQueueService.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.components.LogSABH');\n\n/**\n * Service for queueing emails to be sent by external email service\n * This service sends emails to a Go backend that handles actual email sending\n * to avoid PHP timeouts and ensure reliable delivery\n */\nclass EmailQueueService {\n    private $emailServiceUrl;\n    private static $DEFAULT_FROM_EMAIL = 'noreply@ahu.go.id';\n    \n    public function __construct() {\n        $this->emailServiceUrl = isset(Yii::app()->params['email_service_url']) \n            ? Yii::app()->params['email_service_url']\n            : 'http://192.168.46.116:8080';\n    }\n\n    /**\n     * Queue an email to be sent\n     * @param string $to Recipient email address\n     * @param string $subject Email subject\n     * @param string $body Email body\n     * @param array $attachments Array of attachments [['path' => string, 'name' => string, 'type' => string]]\n     * @param string|null $from Sender email address (optional)\n     * @return bool True if email was queued successfully\n     */\n    public function queueEmail($to, $subject, $body, $attachments = [], $from = null)\n    {\n        $url = $this->emailServiceUrl . '/api/v1/emails/send';\n        $ch = curl_init($url);\n        \n        $boundary = uniqid();\n        $data = '';\n        \n        // Add required fields\n        $fields = [\n            'from' => $from ? $from : self::$DEFAULT_FROM_EMAIL,\n            'to' => $to,\n            'subject' => $subject,\n            'body' => $body\n        ];\n        \n        foreach ($fields as $name => $content) {\n            $data .= \"--{$boundary}\\r\\n\"\n                . \"Content-Disposition: form-data; name=\\\"{$name}\\\"\\r\\n\\r\\n\"\n                . \"{$content}\\r\\n\";\n        }\n        \n        // Add attachments\n        foreach ($attachments as $attachment) {\n            if (isset($attachment['path']) && file_exists($attachment['path'])) {\n                $filename = isset($attachment['name']) ? $attachment['name'] : basename($attachment['path']);\n                $content = file_get_contents($attachment['path']);\n                $data .= \"--{$boundary}\\r\\n\"\n                    . \"Content-Disposition: form-data; name=\\\"attachments\\\"; filename=\\\"{$filename}\\\"\\r\\n\"\n                    . \"Content-Type: \" . (isset($attachment['type']) ? $attachment['type'] : 'application/octet-stream') . \"\\r\\n\\r\\n\"\n                    . $content . \"\\r\\n\";\n            }\n        }\n        \n        $data .= \"--{$boundary}--\\r\\n\";\n        \n        $headers = [\n            \"Content-Type: multipart/form-data; boundary={$boundary}\",\n            'Content-Length: ' . strlen($data)\n        ];\n        \n        curl_setopt_array($ch, [\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_POST => true,\n            CURLOPT_POSTFIELDS => $data,\n            CURLOPT_HTTPHEADER => $headers,\n            CURLOPT_TIMEOUT => 30,\n            CURLOPT_CONNECTTIMEOUT => 10,\n            CURLOPT_VERBOSE => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_SSL_VERIFYHOST => false\n        ]);\n        \n        // Execute request\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        \n        curl_close($ch);\n        \n        // Handle cURL errors\n        if ($error) {\n            LogSABH::insert(__FILE__, \"Failed to connect to email service: $error\");\n            return false;\n        }\n        \n        // Handle HTTP errors\n        if ($httpCode >= 400) {\n            $decodedResponse = json_decode($response, true);\n            $message = is_array($decodedResponse) && isset($decodedResponse['message']) \n                ? $decodedResponse['message'] \n                : 'Unknown error from email service';\n            \n            LogSABH::insert(__FILE__, \"Email service error ($httpCode): $message\");\n            return false;\n        }\n        \n        return true;\n    }\n}\n\n\n--- File: 831 # views/perseroanPending/index.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <div class=\"panel-heading\">\n                    <h3 class=\"text-center\">PERSEROAN PENDING</h3>\n                </div>\n                <div class=\"panel-body\">\n                    <a class=\"btn btn-info\" href=\"<?php echo Yii::app()->createUrl('/sabh/PerseroanPending/tambah'); ?>\"></i>Tambah Perseroan Pending</a>\n                    <a class=\"btn btn-info\" href=\"<?php echo Yii::app()->createUrl('/sabh/PerseroanPending/ImportCsv'); ?>\"></i>Import CSV</a>\n                    <div class=\"table-responsive\">\n                        <?php if(Yii::app()->user->hasFlash('message')):?>\n                            <div class=\"alert alert-danger\">\n                            <?php echo Yii::app()->user->getFlash('message'); ?>\n                            </div>\n                        <?php endif; ?>\n                        <?php\n                        $this->widget('zii.widgets.grid.CGridView', array(\n                            'id' => 'perseroan-pending-grid',\n                            'dataProvider' => $model->search(),\n                            'filter'=>$model,\n                            'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                            'template' => \"{summary}\\n{items}\\n{pager}\",\n                            'columns' => array(\n                                array(\n                                    'header' => 'No.',\n                                    'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                                ),\n                                array(\n                                    'name'=>'nomor_surat',\n                                    'value' => '$data->nomor_surat'\n                                ),\n                                array(\n                                    'name'=>'nama_perseroan',\n                                    'value'=>'$data->nama_perseroan',\n                                ),\n                                // array(\n                                //     'name'=>'nomor_sk',\n                                //     'value'=>'$data->nomor_sk',\n                                // ),\n                                array(\n                                    'name'=>'nomor_akta',\n                                    'value'=>'$data->nomorakta',\n                                    'type' => 'html'\n                                ),\n                                array(\n                                    'name'=>'tanggal_akta',\n                                    'value'=>'!empty($data->tanggal_akta[0]) ? Helpers::getDateFormatId($data->tanggal_akta[0]) : \"\"'\n                                ),\n                                array(\n                                    'name'=>'nama_notaris',\n                                    'value'=>'!empty($data->notaris[0]) ? $data->notaris[0] : \"\"',\n                                ),\n                                array(\n                                    'name'=>'status_bayar',\n                                    'value'=>'$data->status_bayar',\n                                    'filter' => CHtml::dropDownList('PerseroanPending[status_bayar]',$model->status_bayar,array(\n                                        0=>'Belum Bayar', \n                                        1=>'Sudah Bayar'),\n                                    array(\n                                        'empty'=>''\n                                    )),\n                                    'value' => '$data->status_bayar == 1 ? \"Sudah Bayar\" : \"Belum Bayar\"'\n                                ),\n                                array(\n                                    'name'=>'status',\n                                    'value'=>'$data->status',\n                                    'filter' => CHtml::dropDownList('PerseroanPending[status]',$model->status,array(\n                                        0 => 'Belum Pendirian', \n                                        1 => 'Sudah Pendirian'\n                                    ),\n                                    array(\n                                        'empty'=>''\n                                    )),\n                                    'value' => '$data->status == 1 ? \"Sudah Pendirian\" : \"Belum Pendirian\"'\n                                ),\n                                array(\n                                    'name' => 'jenis_akses',\n                                    'value' => '$data->jenisakses',\n                                ),\n                                array(\n                                    'header' => 'aksi',\n                                    'value' => '$data->action',\n                                    'type' => 'html'\n                                )\n                            ),\n                        ));\n                        ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n<script type=\"text/javascript\">\n    $(document).on('click','.btn_hapus',function(){\n        var r = confirm(\"Anda yakin akan menghapus data ini?\");\n        if (r == true) {\n            return true;\n        } else {\n            return false;\n        }\n    });\n</script>\n\n--- File: 1204 # services/api/impl/PerkumpulanService.php ---\n<?php\n\nYii::import('application.modules.sabh.models.BadanHukum');\nYii::import('application.modules.sabh.models.TransaksiPerkumpulan');\nYii::import('application.modules.sabh.models.perkumpulan.pembubaran.PembubaranPerkumpulan');\nYii::import('application.modules.sabh.services.api.IPerkumpulanService');\n\nclass PerkumpulanService implements IPerkumpulanService\n{\n    private $perkumpulan;\n    private $transaksiPerkumpulan;\n    private $pembubaranPerkumpulan;\n\n    public function __construct()\n    {\n        $this->perkumpulan = new BadanHukum();\n        $this->transaksiPerkumpulan = new TransaksiPerkumpulan();\n        $this->pembubaranPerkumpulan = new PembubaranPerkumpulan();\n    }\n\n    public function findByNamaAndNomorSkAndNamaNotarisTerakhir($nama, $nomorSk, $namaNotaris)\n    {\n        $criteria = new CDbCriteria;\n        $criteria->condition = '\n            nama LIKE :nama AND \n            nomor_sk = :nomor_sk AND \n            nama_notaris = :nama_notaris AND\n            base = \"perkumpulan\"\n        ';\n        $criteria->params = array(\n            ':nama' => $nama, \n            ':nomor_sk' => $nomorSk, \n            ':nama_notaris' => $namaNotaris\n        );\n\n        $perkumpulan = $this->perkumpulan->find($criteria);\n\n        return $perkumpulan;\n    }\n\n    public function findById($id)\n    {\n        $criteria = new CDbCriteria;\n        $criteria->condition = '\n            badan_hukum_id = :id AND\n            base = \"perkumpulan\"\n        ';\n        $criteria->params = array(':id' => $id);\n\n        $perkumpulan = $this->perkumpulan->find($criteria);\n\n        return $perkumpulan;\n    }\n\n    public function submitFormmPenghapusan(\n        $formDataPengajuanPenghapusan,\n        $formDataPermohonanPenghapusan,\n        $badan_hukum_id\n    ){\n        // this logic is directly adapted from yayasanbaru/PembubaranController.php function actionTambah() \n        $badan_hukum = $this->findById($badan_hukum_id);\n        $this->pembubaranPerkumpulan->assignFromBadanHukum($this->transaksiPerkumpulan, $badan_hukum);\n\n        $this->transaksiPerkumpulan->id_notaris = Yii::app()->user->profilid;\n        $this->transaksiPerkumpulan->kekayaan_awal = $formDataPermohonanPenghapusan['sisaKekayaan'];\n        $this->transaksiPerkumpulan->nomor_akta = $formDataPermohonanPenghapusan['nomorAkta'];\n        $this->transaksiPerkumpulan->tgl_akta = $formDataPermohonanPenghapusan['tanggalAkta'];\n        // skip the verificator\n        $this->transaksiPerkumpulan->flag_upload = null;\n\n        $this->transaksiPerkumpulan->jenis_perubahan = PembubaranPerkumpulan::DASAR_PEMBUBARAN;\n        $this->transaksiPerkumpulan->jenis_transaksi = 'pembubaran';\n        \n        $this->transaksiPerkumpulan->tipe_perubahan = $formDataPengajuanPenghapusan['alasanBerakhir'];\n        $this->transaksiPerkumpulan->tanggal_rups = $formDataPermohonanPenghapusan['tanggalRapat'];\n        $this->transaksiPerkumpulan->koran = $formDataPermohonanPenghapusan['letterList'];\n\n        // $this->transaksiPerkumpulan->koran_likuidasi = $formDataPermohonanPenghapusan['likuidasiList']; // this field is not exist inside tbl_transaksi_perkumpulan_2025\n        $this->transaksiPerkumpulan->kehadiran_rups = $formDataPermohonanPenghapusan['jumlahKuorum'];\n        // $this->transaksiPerkumpulan->steps = $formDataPermohonanPenghapusan['jumlahKuorum'];\n\n        $createTransaksi = $this->transaksiPerkumpulan->createPembubaran($formDataPermohonanPenghapusan['notarisPengganti']);\n        return $createTransaksi;\n    }\n\n}\n\n--- File: 836 # views/restoreAuditTrail/index.php ---\n<?php\n/* 2019-01-14, Mohammad Afandy */\n/* @var $this RestoreAuditTrailController */\n/* @var $audit_transaksi => data table AHU_NOTARIAT.audit_trail_detail by new_value */\n/* @var $nama => nama badan hukum */\n/* @var $base => jenis badan hukum */\n/* @var $tahun => tahun */\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>RESTORE AUDIT TRAIL</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <div class=\"form-group clearfix\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"col-lg-5\">\n                                <label class=\"control-label\"><strong>NAMA PERSEROAN / YAYASAN / PERKUMPULAN</strong></label>\n                            </div>\n                            <div class=\"col-lg-7\">\n                                <?= CHtml::textField('nama_bakum', $nama, ['class'=>'form-control', 'style' => 'text-transform: uppercase;', 'maxlength' => '175']); ?>\n                            </div>\n                        </div>\n                        <div class=\"error_nama\" style=\"color: #FF0000\"></div>\n                    </div>\n\n                    <div class=\"form-group clearfix\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"col-lg-5\">\n                                <label class=\"control-label\"><strong>BASE</strong></label>\n                            </div>\n                            <div class=\"col-lg-7\">\n                                <?php\n                                echo CHtml::dropDownList('base', $base, [\n                                    'perseroan' => 'PERSEROAN', 'yayasan' => 'YAYASAN', 'perkumpulan' => 'PERKUMPULAN',\n                                ], ['empty' => '--PILIH--', 'class' => 'form-control',]);\n                                ?>\n                            </div>\n                            <div class=\"error_base\" style=\"color: #FF0000\"></div>\n                        </div>\n                    </div>\n\n                    <div class=\"form-group clearfix\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"col-lg-offset-10 col-lg-2\">\n                                <?php\n                                echo CHtml::Button('Cari', [\n                                    'class' => 'btn btn-success btn-block btn-md', 'id' => 'btn_cari']\n                                );\n                                ?>\n                            </div>\n                        </div>\n                    </div>\n\n                    <?php\n                    $this->renderPartial('_audit_transaksi', [\n                        'audit_transaksi' => $audit_transaksi,\n                        'tahun' => $tahun,\n                        'base' => $base,\n                    ]);\n                    ?>\n\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n<script>\n    $(document).ready(function() {\n        $(\"#nama_bakum\").on('keyup', function() {\n            $(this).val($(this).val().toUpperCase());\n            if (this.value.trim() === '') {\n                $(\".error_nama\").html(\n                    '<div class=\"col-lg-offset-6\">Nama Tidak Boleh Kosong</div>'\n                );\n            } else {\n                $(\".error_nama\").empty();\n            }\n        });\n\n        $(\"#base\").on('change', function() {\n            if (this.value === '') {\n                $(\".error_base\").html(\n                    '<div class=\"col-lg-offset-6\">Base Tidak Boleh Kosong</div>'\n                );\n            } else {\n                $(\".error_base\").empty();\n            }\n        });\n\n        $(\"#btn_cari\").on(\"click\", function() {\n            let nama_bakum = $(\"#nama_bakum\").val().trim();\n            let base = $(\"#base\").val();\n\n            if (nama_bakum !== '' && base !== '') {\n                window.top.location.href = \"<?= $this->createAbsoluteUrl(\"\") ?>/nama/\" + nama_bakum + \"/base/\" + base;\n                $(\".disabled-screen-loading\").show();\n            } else {\n                if (nama_bakum === '') {\n                    $(\".error_nama\").html(\n                        '<div class=\"col-lg-offset-6\">Nama Tidak Boleh Kosong</div>'\n                    );\n                }\n                if (base === '') {\n                    $(\".error_base\").html(\n                        '<div class=\"col-lg-offset-6\">Base Tidak Boleh Kosong</div>'\n                    );   \n                }\n            }\n            \n        });\n\n    });\n</script>\n\n--- File: 1188 # services/api/PemblokiranProxyService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.PemblokiranTokenService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass PemblokiranProxyService\n{\n    private $pemblokiranTokenService;\n    private $exceptionThrower;\n    private $goBackendUrl;\n    private $timeout;\n    private $sslVerify;\n    \n    public function __construct()\n    {\n        $this->pemblokiranTokenService = new PemblokiranTokenService();\n        $this->exceptionThrower = new APIExceptionThrower();\n\n        $this->goBackendUrl = isset(Yii::app()->params['pemblokiran']['backend_url']) \n            ? Yii::app()->params['pemblokiran']['backend_url'] \n            : 'http://localhost:8080';\n        $this->timeout = isset(Yii::app()->params['pemblokiran']['timeout']) \n            ? Yii::app()->params['pemblokiran']['timeout'] \n            : 30;\n        $this->sslVerify = isset(Yii::app()->params['pemblokiran']['ssl_verify']) \n            ? Yii::app()->params['pemblokiran']['ssl_verify'] \n            : false;\n    }\n    \n    /**\n     * Make a GET request to the Go backend\n     */\n    public function get($endpoint, $userId = null)\n    {\n        return $this->makeRequest('GET', $endpoint, null, $userId);\n    }\n    \n    /**\n     * Make a POST request to the Go backend\n     */\n    public function post($endpoint, $data = null, $userId = null)\n    {\n        return $this->makeRequest('POST', $endpoint, $data, $userId);\n    }\n    \n    /**\n     * Make a PUT request to the Go backend\n     */\n    public function put($endpoint, $data = null, $userId = null)\n    {\n        return $this->makeRequest('PUT', $endpoint, $data, $userId);\n    }\n    \n    /**\n     * Make a DELETE request to the Go backend\n     */\n    public function delete($endpoint, $userId = null)\n    {\n        return $this->makeRequest('DELETE', $endpoint, null, $userId);\n    }\n    \n    /**\n     * Generic method to make HTTP requests to Go backend\n     */\n    private function makeRequest($method, $endpoint, $data = null, $userId = null)\n    {\n        $url = rtrim($this->goBackendUrl, '/') . '/' . ltrim($endpoint, '/');\n\n        $ch = curl_init();\n\n        curl_setopt_array($ch, [\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_TIMEOUT => $this->timeout,\n            CURLOPT_CUSTOMREQUEST => $method,\n            CURLOPT_HTTPHEADER => $this->buildHeaders($userId),\n            CURLOPT_SSL_VERIFYPEER => $this->sslVerify,\n            CURLOPT_FOLLOWLOCATION => true,\n        ]);\n\n        if (in_array($method, ['POST', 'PUT']) && $data !== null) {\n            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));\n        }\n\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        \n        curl_close($ch);\n\n        if ($error) {\n            $this->exceptionThrower->throwInternalServerError('Failed to connect to pemblokiran backend: ' . $error);\n        }\n\n        $decodedResponse = json_decode($response, true);\n\n        if ($httpCode >= 400) {\n            $this->handleHttpError($httpCode, $decodedResponse);\n        }\n        \n        return $decodedResponse;\n    }\n    \n    /**\n     * Build HTTP headers including authentication\n     */\n    private function buildHeaders($userId = null)\n    {\n        $headers = [\n            'Content-Type: application/json',\n            'Accept: application/json',\n        ];\n\n        if ($userId !== null) {\n            $token = $this->pemblokiranTokenService->generateAuthToken($userId);\n            $headers[] = 'X-PHP-Auth: ' . $token;\n        }\n        \n        return $headers;\n    }\n    \n    /**\n     * Handle HTTP errors from Go backend\n     */\n    private function handleHttpError($httpCode, $response)\n    {\n        $responseJson = is_string($response) ? $response : json_encode($response);\n        \n        throw new CHttpException($httpCode, $responseJson);\n    }\n} \n\n--- File: 317 # controllers/api/PdfController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.PdfService');\n\nclass PdfController extends Controller\n{\n    private $exceptionThrower;\n    private $pdfService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->pdfService = new PdfService();\n    }\n\n    public function actionGenerate()\n    {\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $body = RequestContext::getJsonBody();\n        \n        if (!isset($body['content']) || empty(trim($body['content']))) {\n            $this->exceptionThrower->throwBadRequest('Content is required');\n        }\n\n        $htmlContent = $body['content'];\n        $options = isset($body['options']) ? $body['options'] : [];\n\n        $defaultOptions = [\n            'paperWidth' => '8.27',\n            'paperHeight' => '11.7',\n            'marginTop' => '1',\n            'marginBottom' => '1',\n            'marginLeft' => '1',\n            'marginRight' => '1',\n            'landscape' => false\n        ];\n\n        $pdfOptions = array_merge($defaultOptions, $options);\n\n        try {\n            $result = $this->pdfService->generatePdfFromHtml($htmlContent, $pdfOptions);\n            APIResponse::ok($result, 'PDF generated successfully');\n        } catch (Exception $e) {\n            Yii::log('PDF generation error: ' . $e->getMessage(), CLogger::LEVEL_ERROR, 'pdf');\n            $this->exceptionThrower->throwInternalServerError('Failed to generate PDF: ' . $e->getMessage());\n        }\n    }\n    \n    public function actionGenerateAndServe()\n    {\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $htmlContent = isset($_POST['content']) ? $_POST['content'] : null;\n\n        if (!$htmlContent || empty(trim($htmlContent))) {\n            header('HTTP/1.1 400 Bad Request');\n            header('Content-Type: application/json');\n            echo json_encode(['error' => 'Content is required']);\n            Yii::app()->end();\n        }\n\n        $defaultOptions = [\n            'paperWidth' => '8.27',\n            'paperHeight' => '11.7',\n            'marginTop' => '1',\n            'marginBottom' => '1',\n            'marginLeft' => '1',\n            'marginRight' => '1',\n            'landscape' => false\n        ];\n\n        try {\n            $result = $this->pdfService->generatePdfFromHtml($htmlContent, $defaultOptions);\n            \n            $filename = 'surat_jawaban_' . date('Y-m-d_H-i-s') . '.pdf';\n            \n            header('Content-Type: application/pdf');\n            header('Content-Disposition: inline; filename=\"' . $filename . '\"');\n            header('Content-Length: ' . $result['size']);\n            header('Cache-Control: no-cache, must-revalidate');\n            header('Pragma: no-cache');\n            \n            readfile($result['filepath']);\n            \n            if (file_exists($result['filepath'])) {\n                unlink($result['filepath']);\n            }\n            \n            Yii::app()->end();\n            \n        } catch (Exception $e) {\n            Yii::log('PDF generation error: ' . $e->getMessage(), CLogger::LEVEL_ERROR, 'pdf');\n            header('HTTP/1.1 500 Internal Server Error');\n            header('Content-Type: application/json');\n            echo json_encode(['error' => $e->getMessage()]);\n            Yii::app()->end();\n        }\n    }\n    \n    public function actionHealth()\n    {\n        if (!RequestContext::isMethod('GET')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        try {\n            $health = $this->pdfService->checkHealth();\n            APIResponse::ok($health, 'Gotenberg service status');\n        } catch (Exception $e) {\n            Yii::log('Gotenberg health check failed: ' . $e->getMessage(), CLogger::LEVEL_ERROR, 'pdf');\n            $this->exceptionThrower->throwServiceUnavailable('Gotenberg service unavailable');\n        }\n    }\n} \n\n--- File: 1160 # mappers/DPerseroanRangeDateMapper.php ---\n<?php\n\nclass DPerseroanRangeDateMapper extends MapperBase\n{\n    public function findAll($kategori, $tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $kategori = strtoupper(str_replace('_', ' ', $kategori));\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.status_transaksi,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.pemegang_saham,\n            p.tahun,\n            p.nomor_transaksi,\n            p.jenis_perseroan,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            p.provinsi_id_perseroan\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.$tahun.' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            -- tp.id_aksi_transaksi = 9\n            p.jenis_perseroan = \"'.$kategori.'\"\n            AND p.kabupaten_id_perseroan IS NOT NULL\n            AND p.kabupaten_id_perseroan != \"\"\n            AND p.kabupaten_id_perseroan != 0\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllYears($kategori, $tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $kategori = strtolower($kategori);\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::PERSEROAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAll($kategori, $tahun, array(), false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$kategori);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsGroup($kategori, $tanggalAwal, $tanggalAkhir, $param)\n    {\n        $kategori = strtolower($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$kategori);\n        $cmd->from('('.$this->findAllYears($kategori, $tanggalAwal, $tanggalAkhir, array(), 'getText').') AS '.$kategori);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 1194 # services/api/FileService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IFileService');\n\nclass FileService implements IFileService\n{\n    private function getUploadDir($fileType) {\n        $folderMapping = [\n            'PEMBLOKIRAN' => 'sabh/pemblokiran',\n            'PEMBUKAAN_BLOKIR' => 'sabh/pembukaan_blokir'\n        ];\n        \n        return isset($folderMapping[$fileType]) ? $folderMapping[$fileType] : 'sabh/lainnya';\n    }\n\n    public function createFile($fileType, $file)\n    {\n        // 1. Validate input parameters\n        if (empty($fileType) || empty($file)) {\n            throw new Exception('Nama folder dan file wajib diisi');\n        }\n\n        // 2. Create upload directory\n        $folderName = $this->getUploadDir($fileType);\n        $uploadDir = Yii::getPathOfAlias('webroot') . '/uploads/' . $folderName . '/';\n        if (!file_exists($uploadDir)) {\n            if (!mkdir($uploadDir, 0755, true)) {\n                throw new Exception('Gagal membuat direktori upload');\n            }\n        }\n\n        // 3. Validate file upload\n        if (!isset($file['tmp_name']) || !is_uploaded_file($file['tmp_name'])) {\n            throw new Exception('Upload file tidak valid - file tidak diupload dengan benar');\n        }\n\n        // 4. Check for upload errors\n        if (isset($file['error']) && $file['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$file['error']]) ? $errorMessages[$file['error']] : 'Error upload tidak diketahui';\n            throw new Exception('Error upload: ' . $errorMessage);\n        }\n\n        // 5. Validate file size (10MB limit)\n        $maxSize = 10 * 1024 * 1024; // 10MB in bytes\n        if (intval($file['size']) > $maxSize) {\n            throw new Exception('Ukuran file melebihi batas maksimal 10MB');\n        }\n\n        if (intval($file['size']) <= 0) {\n            throw new Exception('Ukuran file tidak valid atau kosong');\n        }\n\n        // 6. Validate file type\n        $finfo = finfo_open(FILEINFO_MIME_TYPE);\n        $mimeType = finfo_file($finfo, $file['tmp_name']);\n        finfo_close($finfo);\n\n        // Allow PDF and common image formats\n        $allowedMimeTypes = [\n            'application/pdf',\n        ];\n\n        if (!in_array($mimeType, $allowedMimeTypes)) {\n            throw new Exception('Tipe file tidak diizinkan. Tipe yang diizinkan: PDF');\n        }\n\n        // 7. Generate unique filename\n        $timestamp = time();\n        $originalName = isset($file['name']) ? $file['name'] : '';\n        $extension = pathinfo($originalName, PATHINFO_EXTENSION);\n        $extension = strtolower($extension);\n        \n        // Ensure proper extension based on mime type\n        if ($mimeType === 'application/pdf' && $extension !== 'pdf') {\n            $extension = 'pdf';\n        }\n\n        $uniqueName = $timestamp . '_' . md5($originalName . $timestamp . rand()) . '.' . $extension;\n        $filePath = $uploadDir . $uniqueName;\n\n        // 8. Move uploaded file\n        if (!move_uploaded_file($file['tmp_name'], $filePath)) {\n            throw new Exception('Gagal menyimpan file yang diupload ke server');\n        }\n\n        // 9. Verify file was actually saved\n        if (!file_exists($filePath)) {\n            throw new Exception('File tidak tersimpan dengan benar');\n        }\n\n        // 10. Return file information\n        return [\n            'original_name' => $originalName,\n            'file_name' => $uniqueName,\n            'file_path' => '/uploads/' . $folderName . '/' . $uniqueName,\n            'file_size' => $file['size'],\n            'file_type' => $mimeType,\n            'file_extension' => $extension,\n            'uploaded_at' => date('Y-m-d H:i:s'),\n            'folder_name' => $folderName\n        ];\n    }\n}\n\n--- File: 1089 # views/badanHukumPending/index.php ---\n<?php\n$this->menu = array(\n\tarray('label'=>'List BadanHukumPending', 'url'=>array('index')),\n\tarray('label'=>'Create BadanHukumPending', 'url'=>array('create')),\n);\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n\t    <section class=\"panel\">\n\t\t    <div class=\"panel-body\">\n\t\t        <div class=\"panel-heading\">\n                    <h3 class=\"text-center\">Badan Hukum Pending</h3>\n\t\t        </div>\n\t\t        <div class=\"panel-body\">\n\t            \t<?php echo CHtml::link('<i class=\"icon-plus\"></i>Tambah Badan Hukum Pending', $this->createUrl($this->getId() . '/create/'), array('class'=>'btn btn-info')); ?>\n\t            \t<?php echo CHtml::link('Import CSV', $this->createUrl($this->getId() . '/importCSV/'), array('class'=>'btn btn-info')); ?>\n\t\t        \t<div class=\"table-responsive\">\n\t\t        \t\t<?php if(Yii::app()->user->hasFlash('message')):?>\n                            <div class=\"alert alert-danger\">\n                            <?php echo Yii::app()->user->getFlash('message'); ?>\n                            </div>\n                        <?php endif; ?>\n\t\t        \t\t<?php $this->widget('zii.widgets.grid.CGridView', array(\n\t\t\t\t\t\t    'id'=>'badan-hukum-pending-grid',\n\t\t\t\t\t\t    'dataProvider'=>$dataProvider->search(),\n\t\t\t\t\t\t    'filter'=>$dataProvider,\n\t\t\t\t\t\t    'itemsCssClass'=>'table table-striped table-hover table-bordered dataTable',\n\t\t\t\t\t\t    'columns'=>array(\n\t\t\t\t\t\t        array(\n\t\t\t\t\t\t\t\t\t'name'=>'base',\n\t\t\t\t\t\t\t\t\t'header'=>'Jenis Badan Hukum',\n\t\t\t\t\t\t\t\t\t'value'=>'strtoupper($data->base)',\n\t\t\t\t\t\t\t\t\t'filter' => CHtml::dropDownList('BadanHukumPending[base]',$dataProvider->base,array('yayasan'=>'YAYASAN','perkumpulan'=>'PERKUMPULAN'),array('empty'=>'')),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t\t'name'=>'nomor_surat',\n\t\t\t\t\t\t\t\t\t'header'=>'Nomor Surat',\n\t\t\t\t\t\t\t\t\t'type'=>'HTML',\n\t\t\t\t\t\t\t\t\t'value'=>'$data->nomor_surat',\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t        array(\n\t\t\t\t\t\t\t\t\t'name'=>'nama',\n\t\t\t\t\t\t\t\t\t'header'=>'Nama Badan Hukum',\n\t\t\t\t\t\t\t\t\t'value'=>'$data->nama',\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t        array(\n\t\t\t\t\t\t\t\t\t'name'=>'nama_notaris',\n\t\t\t\t\t\t\t\t\t'header'=>'Nama Notaris',\n\t\t\t\t\t\t\t\t\t'value'=>'$data->nama_notaris',\n\t\t\t\t\t\t\t\t),\n\t\t\t\t                array(\n\t\t\t                        'name'=>'jenis_akses',\n\t\t\t                        'header'=>'Jenis Akses',\n\t\t\t                        'value'=>'$data->jenis_akses',\n\t\t\t\t                ),\n\t\t\t\t                array(\n                                    'name'=>'status_bayar',\n                                    'value'=>'$data->status_bayar',\n                                    'filter' => CHtml::dropDownList('BadanHukumPending[status_bayar]',$dataProvider->status_bayar,array(0=>'Belum Bayar', 1=>'Sudah Bayar'),array('empty'=>'')),\n                                    'value' => '$data->status_bayar == 1 ? \"Sudah Bayar\" : \"Belum Bayar\"'\n                                ),\n\t\t\t\t                array(\n\t\t\t                        'name'=>'status',\n\t\t\t                        'header'=>'Status',\n\t\t\t                        'value'=>'$data->status ? \"Sudah Pendirian\":\"Belum Pendirian\"',\n\t\t\t                        'filter' => CHtml::dropDownList('BadanHukumPending[status]',$dataProvider->status,array(1=>'Sudah Pendirian', 0=>'Belum Pendirian'),array('empty'=>'')),\n\t\t\t\t                ),\n\t\t\t\t                array(\n\t\t\t\t                \t'header' => 'aksi',\n                                    'value' => 'checkStatus($data)'\n\t\t                       \t),\n\t\t\t\t\t\t      ),\n\t\t\t\t\t\t)); \n\t\t\t\t\t\t?>\n\t\t\t\t\t</div>\n\t\t        </div>\n\t\t    </div>\n\t    </section>\n    </div>\n</div>\n<?php\n    function checkStatus($data){\n        // $model = PerseroanPending::model()->find('id=\"'.$data->id.'\"');\n        $status = $data->status;\n\n        if($status == '0'){\n            echo CHtml::link('Update',yii::app()->CreateUrl(\"/sabh/badanHukumPending/update/\",array(\"id\" => $data->id))).\" | \";\n            echo \"<a href='\".yii::app()->CreateUrl(\"/sabh/badanHukumPending/hapus/\",array(\"id\" => $data->id)).\"' class='btn_hapus'>Hapus</a>\";\n            // echo CHtml::link('delete',yii::app()->CreateUrl(\"/sabh/badanHukumPending/hapus/\",array(\"id\" => $data->id)));\n        }\n    }\n?>\n<script type=\"text/javascript\">\n\t$(document).on('click','.btn_hapus',function(){\n\t\tvar r = confirm(\"Anda yakin akan menghapus data ini?\");\n\t\tif (r == true) {\n            return true;\n        } else {\n            return false;\n        }\n\t});\n</script>\n\n--- File: 1203 # services/api/impl/FileService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IFileService');\n\nclass FileService implements IFileService\n{\n    private function getUploadDir($fileType) {\n        $folderMapping = [\n            'PEMBLOKIRAN' => 'sabh/pemblokiran',\n            'PEMBUKAAN_BLOKIR' => 'sabh/pembukaan_blokir',\n            'PERMOHONAN_BERAKHIR' => 'sabh/permohonan_berakhir',\n        ];\n        \n        return isset($folderMapping[$fileType]) ? $folderMapping[$fileType] : 'sabh/lainnya';\n    }\n\n    public function createFile($fileType, $file)\n    {\n        // 1. Validate input parameters\n        if (empty($fileType) || empty($file)) {\n            throw new Exception('Nama folder dan file wajib diisi');\n        }\n\n        // 2. Create upload directory\n        $folderName = $this->getUploadDir($fileType);\n        $uploadDir = Yii::getPathOfAlias('webroot') . '/uploads/' . $folderName . '/';\n        if (!file_exists($uploadDir)) {\n            if (!mkdir($uploadDir, 0755, true)) {\n                throw new Exception('Gagal membuat direktori upload');\n            }\n        }\n\n        // 3. Validate file upload\n        if (!isset($file['tmp_name']) || !is_uploaded_file($file['tmp_name'])) {\n            throw new Exception('Upload file tidak valid - file tidak diupload dengan benar');\n        }\n\n        // 4. Check for upload errors\n        if (isset($file['error']) && $file['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$file['error']]) ? $errorMessages[$file['error']] : 'Error upload tidak diketahui';\n            throw new Exception('Error upload: ' . $errorMessage);\n        }\n\n        // 5. Validate file size (10MB limit)\n        $maxSize = 10 * 1024 * 1024; // 10MB in bytes\n        if (intval($file['size']) > $maxSize) {\n            throw new Exception('Ukuran file melebihi batas maksimal 10MB');\n        }\n\n        if (intval($file['size']) <= 0) {\n            throw new Exception('Ukuran file tidak valid atau kosong');\n        }\n\n        // 6. Validate file type\n        $finfo = finfo_open(FILEINFO_MIME_TYPE);\n        $mimeType = finfo_file($finfo, $file['tmp_name']);\n        finfo_close($finfo);\n\n        // Allow PDF and common image formats\n        $allowedMimeTypes = [\n            'application/pdf',\n        ];\n\n        if (!in_array($mimeType, $allowedMimeTypes)) {\n            throw new Exception('Tipe file tidak diizinkan. Tipe yang diizinkan: PDF');\n        }\n\n        // 7. Generate unique filename\n        $timestamp = time();\n        $originalName = isset($file['name']) ? $file['name'] : '';\n        $extension = pathinfo($originalName, PATHINFO_EXTENSION);\n        $extension = strtolower($extension);\n        \n        // Ensure proper extension based on mime type\n        if ($mimeType === 'application/pdf' && $extension !== 'pdf') {\n            $extension = 'pdf';\n        }\n\n        $uniqueName = $timestamp . '_' . md5($originalName . $timestamp . rand()) . '.' . $extension;\n        $filePath = $uploadDir . $uniqueName;\n\n        // 8. Move uploaded file\n        if (!move_uploaded_file($file['tmp_name'], $filePath)) {\n            throw new Exception('Gagal menyimpan file yang diupload ke server');\n        }\n\n        // 9. Verify file was actually saved\n        if (!file_exists($filePath)) {\n            throw new Exception('File tidak tersimpan dengan benar');\n        }\n\n        // 10. Return file information\n        return [\n            'original_name' => $originalName,\n            'file_name' => $uniqueName,\n            'file_path' => '/uploads/' . $folderName . '/' . $uniqueName,\n            'file_size' => $file['size'],\n            'file_type' => $mimeType,\n            'file_extension' => $extension,\n            'uploaded_at' => date('Y-m-d H:i:s'),\n            'folder_name' => $folderName\n        ];\n    }\n}\n\n--- File: 151 # models/MappingTipeTransaksi.php ---\n<?php\n\n/**\n * This is the model class for table \"{{mapping_tipe_transaksi}}\".\n *\n * The followings are the available columns in table '{{mapping_tipe_transaksi}}':\n * @property integer $id\n * @property string $tipe_transaksi\n * @property string $jenis_transaksi\n */\nclass MappingTipeTransaksi extends CActiveRecord\n{\n\t/**\n\t * Returns the static model of the specified AR class.\n\t * @param string $className active record class name.\n\t * @return MappingTipeTransaksi the static model class\n\t */\n\tpublic static function model($className=__CLASS__)\n\t{\n\t\treturn parent::model($className);\n\t}\n\n\t/**\n\t * @return CDbConnection database connection\n\t */\n\tpublic function getDbConnection()\n\t{\n\t\treturn Yii::app()->dbBadanHukum;\n\t}\n\n\t/**\n\t * @return string the associated database table name\n\t */\n\tpublic function tableName()\n\t{\n\t\treturn '{{mapping_tipe_transaksi}}';\n\t}\n\n\t/**\n\t * @return array validation rules for model attributes.\n\t */\n\tpublic function rules()\n\t{\n\t\t// NOTE: you should only define rules for those attributes that\n\t\t// will receive user inputs.\n\t\treturn array(\n\t\t\tarray('tipe_transaksi, jenis_transaksi', 'length', 'max'=>250),\n\t\t\t// The following rule is used by search().\n\t\t\t// Please remove those attributes that should not be searched.\n\t\t\tarray('id, tipe_transaksi, jenis_transaksi', 'safe', 'on'=>'search'),\n\t\t);\n\t}\n\n\t/**\n\t * @return array relational rules.\n\t */\n\tpublic function relations()\n\t{\n\t\t// NOTE: you may need to adjust the relation name and the related\n\t\t// class name for the relations automatically generated below.\n\t\treturn array(\n\t\t);\n\t}\n\n\t/**\n\t * @return array customized attribute labels (name=>label)\n\t */\n\tpublic function attributeLabels()\n\t{\n\t\treturn array(\n\t\t\t'id' => 'ID',\n\t\t\t'tipe_transaksi' => 'Tipe Transaksi',\n\t\t\t'jenis_transaksi' => 'Jenis Transaksi',\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves a list of models based on the current search/filter conditions.\n\t * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n\t */\n\tpublic function search()\n\t{\n\t\t// Warning: Please modify the following code to remove attributes that\n\t\t// should not be searched.\n\n\t\t$criteria=new CDbCriteria;\n\n\t\t$criteria->compare('id',$this->id);\n\t\t$criteria->compare('tipe_transaksi',$this->tipe_transaksi,true);\n\t\t$criteria->compare('jenis_transaksi',$this->jenis_transaksi,true);\n\n\t\treturn new CActiveDataProvider($this, array(\n\t\t\t'criteria'=>$criteria,\n\t\t));\n\t}\n\tpublic function getByTipeTransaksi($tipeTransaksi='', $raw = false)\n\t{\n\t\tif (!empty($tipeTransaksi)) {\n\t\t\t$criteria = new CDbCriteria;\n\t\t\t$criteria->select = 'jenis_transaksi';\n\t\t\t$criteria->condition = 'tipe_transaksi = :tipe';\n\t\t\t$criteria->params = array(':tipe' => $tipeTransaksi);\n\t\t\t$data = self::model()->findAll($criteria);\n\t\t\tif (empty($raw)) {\n\t\t\t\tif (!empty($data) && is_array($data)) {\n\t\t\t\t\t$data = $this->getArrFromModel($data, 'jenis_transaksi');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $data;\n\t\t}\n\t}\n\tpublic function getByJenisTransaksi($data='', $filed='', $raw = false)\n\t{\n\t\tif (!empty($data) && !empty($filed) && is_array($filed)) {\n\t\t\tif (!empty($data) && is_array($data)) {\n\t\t\t\t$data = array_map('trim', $data);\n\t\t    \t$data = array_map('strtolower', $data);\n\t\t\t\t$data = implode(\"','\", $data);\n\t\t\t\t$data = \"'\".$data.\"'\";\n\t\t\t}\n\t\t\t$criteria = new CDbCriteria;\n\t\t\t$criteria->condition = 'jenis_transaksi in ('.$data.')';\n\t\t\t$criteria->order = 'id ASC';\n\t\t\t$data = self::model()->findAll($criteria);\n\t\t\tif (empty($raw)) {\n\t\t\t\tif (!empty($data) && is_array($data) && !empty($filed)) {\n\t\t\t\t\t$data = $this->getArrFromModel($data, $filed);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $data;\n\t\t}\n\t}\n\tpublic function getArrFromModel($model='', $filed='')\n\t{\n\t\tif (!empty($model) && is_array($model) && !empty($filed) && is_array($filed)) {\n\t\t\t$result = array();\n\t\t\tforeach ($filed as $k_filed => $v_filed) {\n\t\t\t\t$retArr = array();\n\t\t\t\tforeach ($model as $k_model => $v_model) {\n\t\t\t\t\tif (!empty($v_model[$v_filed])) {\n\t\t\t\t\t\t$retArr[] = $v_model[$v_filed];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!empty($retArr)) {\n\t\t\t\t\t$result[$v_filed] = $retArr;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $result;\n\t\t}\n\t}\n}\n\n--- File: 161 # models/OrderDomain.php ---\n<?php\n\n/**\n * This is the model class for table \"{{order_domain}}\".\n *\n * The followings are the available columns in table '{{order_domain}}':\n * @property integer $id\n * @property integer $order_name_id\n * @property string $nama_base\n * @property string $nama_domain\n * @property string $status\n * @property string $harga\n * @property string $created_date\n */\nclass OrderDomain extends CActiveRecord\n{\n\t/**\n\t * Returns the static model of the specified AR class.\n\t * @param string $className active record class name.\n\t * @return OrderDomain the static model class\n\t */\n\tpublic static function model($className=__CLASS__)\n\t{\n\t\treturn parent::model($className);\n\t}\n\n\t/**\n\t * @return CDbConnection database connection\n\t */\n\tpublic function getDbConnection()\n\t{\n\t\treturn Yii::app()->dbBadanHukum;\n\t}\n\n\t/**\n\t * @return string the associated database table name\n\t */\n\tpublic function tableName()\n\t{\n\t\treturn '{{order_domain}}';\n\t}\n\n\t/**\n\t * @return array validation rules for model attributes.\n\t */\n\tpublic function rules()\n\t{\n\t\t// NOTE: you should only define rules for those attributes that\n\t\t// will receive user inputs.\n\t\treturn array(\n\t\t\t// array('status', 'numerical', 'integerOnly'=>true),\n\t\t\tarray('nama_base', 'length', 'max'=>50),\n\t\t\tarray('harga', 'length', 'max'=>20),\n\t\t\tarray('nama_domain, created_date,response,order_name_id,response_persetujuan', 'safe'),\n\t\t\t// The following rule is used by search().\n\t\t\t// Please remove those attributes that should not be searched.\n\t\t\tarray('id, order_name_id, nama_base, nama_domain,harga, created_date', 'safe', 'on'=>'search'),\n\t\t);\n\t}\n\n\t/**\n\t * @return array relational rules.\n\t */\n\tpublic function relations()\n\t{\n\t\t// NOTE: you may need to adjust the relation name and the related\n\t\t// class name for the relations automatically generated below.\n\t\treturn array(\n\t\t);\n\t}\n\n\t/**\n\t * @return array customized attribute labels (name=>label)\n\t */\n\tpublic function attributeLabels()\n\t{\n\t\treturn array(\n\t\t\t'id' => 'ID',\n\t\t\t'order_name_id' => 'Order Name',\n\t\t\t'nama_base' => 'Nama Base',\n\t\t\t'nama_domain' => 'Nama Domain',\n\t\t\t'harga' => 'Harga',\n\t\t\t'created_date' => 'Created Date',\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves a list of models based on the current search/filter conditions.\n\t * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n\t */\n\tpublic function search()\n\t{\n\t\t// Warning: Please modify the following code to remove attributes that\n\t\t// should not be searched.\n\n\t\t$criteria=new CDbCriteria;\n\n\t\t$criteria->compare('id',$this->id);\n\t\t$criteria->compare('order_name_id',$this->order_name_id);\n\t\t$criteria->compare('nama_base',$this->nama_base,true);\n\t\t$criteria->compare('nama_domain',$this->nama_domain,true);\n\t\t$criteria->compare('harga',$this->harga,true);\n\t\t$criteria->compare('created_date',$this->created_date,true);\n\n\t\treturn new CActiveDataProvider($this, array(\n\t\t\t'criteria'=>$criteria,\n\t\t));\n\t}\n\n\tpublic static function _curl($post = null, $id =null)\n   \t{\n   \t\n   \t\t$url = \"https://ahu.apps.pandi.id/api/\";\n   \t\n   \t\t$ch = curl_init();\n\n        if ($id == 1) {\n        \t$header = [\"Content-type\" => \"application/json\"];\n        \tcurl_setopt($ch, CURLOPT_URL, $url.'v2/show/result');\n        \tcurl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        }elseif($id == 2){\n        \t$header = [\"Content-type: application/json\",\"Authorization: p4nd123\"];\n        \tcurl_setopt($ch, CURLOPT_URL, $url.'v1/create/data');\n        \tcurl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        }else{\n        \t$header = [\"Content-type: application/json\",\"Authorization: p4nd123\"];\n        \tcurl_setopt($ch, CURLOPT_URL, $url.'v1/update/data');\n        \tcurl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        }\n        \n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_HEADER, false);\n        curl_setopt($ch, CURLOPT_VERBOSE, false);\n        // curl_setopt($ch, CURLOPT_NOBODY, true);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n        curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);\n        curl_setopt($ch, CURLOPT_ENCODING, true);\n        curl_setopt($ch, CURLOPT_AUTOREFERER, true);\n        curl_setopt($ch, CURLOPT_MAXREDIRS, 5);\n     \t\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 2);\n        \n        if (!empty($post) && $id == 1){\n            curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        }else{\n        \tcurl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        }\n\n        $st = microtime(true);\n\n        $rs = curl_exec($ch);\n\n\t\tcurl_close($ch);  \n\n        return $rs;\n   \t}\n}\n\n--- File: 1185 # services/api/PdfService.php ---\n<?php\n\nclass PdfService\n{\n    private $gotenbergBaseUrl;\n    private $timeout;\n    \n    public function __construct()\n    {\n        $this->gotenbergBaseUrl = isset(Yii::app()->params['gotenberg']['baseUrl']) \n            ? Yii::app()->params['gotenberg']['baseUrl'] \n            : 'http://gotenberg:3000';\n        $this->timeout = isset(Yii::app()->params['gotenberg']['timeout']) \n            ? Yii::app()->params['gotenberg']['timeout'] \n            : 30;\n    }\n\n    public function generatePdfFromHtml($htmlContent, $options = [])\n    {\n        $formData = $this->prepareFormData($htmlContent, $options);\n        $response = $this->makeGotenbergRequest('/forms/chromium/convert/html', $formData);\n        \n        if ($response === false) {\n            throw new Exception('Gagal menghubungi Gotenberg service');\n        }\n        \n        $filename = 'generated_' . uniqid() . '.pdf';\n        $filepath = sys_get_temp_dir() . DIRECTORY_SEPARATOR . $filename;\n        \n        if (file_put_contents($filepath, $response) === false) {\n            throw new Exception('Gagal menyimpan file PDF');\n        }\n        \n        return [\n            'filename' => $filename,\n            'filepath' => $filepath,\n            'size' => filesize($filepath),\n            'content_base64' => base64_encode($response),\n            'mime_type' => 'application/pdf'\n        ];\n    }\n\n    public function checkHealth()\n    {\n        $healthUrl = rtrim($this->gotenbergBaseUrl, '/') . '/health';\n        \n        $ch = curl_init();\n        curl_setopt_array($ch, [\n            CURLOPT_URL => $healthUrl,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_TIMEOUT => 10,\n            CURLOPT_CONNECTTIMEOUT => 5,\n            CURLOPT_HTTPHEADER => ['Accept: application/json']\n        ]);\n        \n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        curl_close($ch);\n        \n        if ($response === false || !empty($error)) {\n            throw new Exception('Tidak dapat menghubungi Gotenberg service: ' . $error);\n        }\n        \n        return [\n            'status' => $httpCode === 200 ? 'healthy' : 'unhealthy',\n            'http_code' => $httpCode,\n            'response' => $response,\n            'service_url' => $this->gotenbergBaseUrl\n        ];\n    }\n\n    private function prepareFormData($htmlContent, $options)\n    {\n        $formData = [\n            'files' => [\n                'index.html' => $htmlContent\n            ]\n        ];\n        \n        if (isset($options['paperWidth'])) {\n            $formData['paperWidth'] = $options['paperWidth'];\n        }\n        if (isset($options['paperHeight'])) {\n            $formData['paperHeight'] = $options['paperHeight'];\n        }\n        if (isset($options['marginTop'])) {\n            $formData['marginTop'] = $options['marginTop'];\n        }\n        if (isset($options['marginBottom'])) {\n            $formData['marginBottom'] = $options['marginBottom'];\n        }\n        if (isset($options['marginLeft'])) {\n            $formData['marginLeft'] = $options['marginLeft'];\n        }\n        if (isset($options['marginRight'])) {\n            $formData['marginRight'] = $options['marginRight'];\n        }\n        if (isset($options['landscape'])) {\n            $formData['landscape'] = $options['landscape'] ? 'true' : 'false';\n        }\n        \n        return $formData;\n    }\n\n    private function makeGotenbergRequest($endpoint, $formData)\n    {\n        $url = rtrim($this->gotenbergBaseUrl, '/') . $endpoint;\n        $ch = curl_init();\n\n        $postFields = [];\n        $tmpFiles = [];\n\n        // \u2705 Create real temp files (like FormData in Node.js)\n        if (isset($formData['files'])) {\n            foreach ($formData['files'] as $filename => $content) {\n                $tmpPath = tempnam(sys_get_temp_dir(), 'gotenberg_') . '.html';\n                file_put_contents($tmpPath, $content);\n                $postFields['files'] = new CURLFile($tmpPath, 'text/html', $filename);\n                $tmpFiles[] = $tmpPath;\n            }\n        }\n\n        foreach ($formData as $key => $value) {\n            if ($key !== 'files') {\n                $postFields[$key] = $value;\n            }\n        }\n\n        curl_setopt_array($ch, [\n            CURLOPT_URL => $url,\n            CURLOPT_POST => true,\n            CURLOPT_POSTFIELDS => $postFields,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_TIMEOUT => $this->timeout,\n            CURLOPT_CONNECTTIMEOUT => 10,\n            CURLOPT_HTTPHEADER => [\n                'Accept: application/pdf'\n            ]\n        ]);\n\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        curl_close($ch);\n\n        // cleanup temp files\n        foreach ($tmpFiles as $f) {\n            if (file_exists($f)) unlink($f);\n        }\n\n        if ($response === false || !empty($error)) {\n            throw new Exception(\"Gotenberg request failed: $error (URL: $url)\");\n        }\n\n        if ($httpCode !== 200) {\n            throw new Exception(\"Gotenberg returned HTTP $httpCode: \" . substr($response, 0, 500));\n        }\n\n        return $response;\n    }\n}\n\n\n--- File: 456 # views/updateVoucherTerpakai/index.php ---\n<?php\n/*\n* 2019-01-10, AdityaGunawan\n* view update voucher terpakai\n* @var $data_billing array\n* @var $flag_pembayaran bolean\n* @var $data array\n* @var update bolean\n*/\n?>\n<div class=\"row\">    \n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>Update Voucher Terpakai</h3>\n                </center>\n                <hr/>\n                <div class=\"panel-body\">\n                    <div id=\"notif\"> </div> \n                    <?php if (Yii::app()->user->hasFlash('success')) : ?>\n                    <div class=\"alert alert-success alert-dismissible\">\n                        <a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>\n                        <strong><?= Yii::app()->user->getFlash('success'); ?></strong>\n                    </div>\n                    <?php endif; ?>\n                        <h4><?= $error_message? $error_message : ''; ?></h4>               \n                        <?php if($flag_pembayaran == 1):?>\n                            <div class=\"col-lg-8\">\n                                <div class=\"clearfix\"></div><br/>\n                                <div class=\"col-lg-4\">\n                                    <?= CHtml::label('Kode Voucher', 'kd_voucher', array('class' => 'control-label')); ?>                                        \n                                </div>\n                                <div class=\"col-lg-5\">                                        \n                                   <?= CHtml::textField('kd_voucher', $data_billing[\"KODE_PEMBAYARAN\"], ['class' => 'form-control', 'disabled' => 'disabled'] ); ?>\n                                </div>\n\n                                <div class=\"clearfix\"></div><br/>\n                                <div class=\"col-lg-4\">\n                                    <?= CHtml::label('Nomor Transaksi', 'Nomor', array('class' => 'control-label')); ?>                                        \n                                </div>\n                                <div class=\"col-lg-5\">                                        \n                                   <?= CHtml::textField('no_transaksi', $data_billing[\"NO_TRANSAKSI\"], ['class' => 'form-control', 'disabled' => 'disabled'] ); ?>\n                                </div>\n\n                                <div class=\"clearfix\"></div><br/>\n                                <div class=\"col-lg-4\">\n                                    <?= CHtml::label('Waktu Akses', 'waktu', array('class' => 'control-label')); ?>                                        \n                                </div>\n                                <div class=\"col-lg-5\">                                        \n                                   <?= CHtml::textField(\n                                        'waktu_akses', \n                                        $data_billing[\"WAKTU_AKSES\"] ?\n                                            Helpers::getDateTimeFormatId($data_billing[\"WAKTU_AKSES\"]) : '', \n                                        ['class' => 'form-control', 'disabled' => 'disabled'] \n                                    ); ?>\n                                </div>\n                            </div>\n                            <div class=\"clearfix\"></div><br/>\n\n                            <div class=\"col-lg-10\">\n                                <?php echo $this->renderPartial('cetak', array(\n                                    'model' => $data\n                                ));?>\n                            </div>\n                            <div class=\"clearfix\"></div><br/>\n\n                            <?php $form = $this->beginWidget('CActiveForm', array('id'=>'update-voucher-terpakai')); ?>\n                            <div class=\"col-md-8 pull-right\">\n                                <?= CHtml::hiddenField('BillingSimponi[KODE_PEMBAYARAN]', $data_billing[\"KODE_PEMBAYARAN\"], array('class' => 'form-control')); ?>\n                                <?= CHtml::hiddenField('BillingSimponi[NO_TRANSAKSI]', $data_billing[\"NO_TRANSAKSI\"], array('class' => 'form-control')); ?>\n                                <?= CHtml::hiddenField('BillingSimponi[WAKTU_AKSES]', $data_billing[\"WAKTU_AKSES\"], array('class' => 'form-control')); ?>\n                                <?= CHtml::hiddenField('BillingSimponi[TERPAKAI]', $data_billing[\"TERPAKAI\"], array('class' => 'form-control')); ?>\n                                <?php if($update == 1):?>\n                                    <?= CHtml::submitButton('Update', array('confirm' => 'Apakah Anda Yakin?', 'class' => 'btn btn-danger', 'id' => 'update'));?>\n                                    <div class=\"clearfix\"></div><br/>\n                                <?php endif;?>\n                            </div>\n                            <?php $this->endWidget(); ?>\n                      \n                        <?php endif;?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    $('#update-voucher-terpakai').submit(function(eve) {\n        eve.preventDefault();\n\n        $.ajax({\n            url: '/sabh/updateVoucherTerpakai/update/',\n            type: 'POST',\n            data: $(this).serialize(),\n            dataType: 'json',\n            beforeSend: function() {\n                $('.disabled-screen-loading').attr('style', 'display:block;z-index:9999;');\n            },\n            success: function(response){\n                    $('#notif').append(\n                        '<div class=\"alert alert-block alert-dismissible alert-'+response.class+'\">' +\n                            '<button data-dismiss=\"alert\" class=\"close close-sm\" type=\"button\">' +\n                            '<i class=\"fa fa-times\"></i>' +\n                            '</button>'+\n                            '<label class=\"'+response.class+'\">'+response.notif+'</label>' +\n                            '<a href=\"#\" class=\"close\" data-dismiss=\"alert\" aria-label=\"close\">&times;</a>'+\n                        '</div>'\n                    );\n\n                    if (response.class == 'success') {\n                        $('#update').hide();\n                    }\n            },\n            complete: function() {\n                $('.disabled-screen-loading').attr('style', 'display:none;');\n            }\n        });\n    })\n</script>\n\n--- File: 385 # components/enum/BaseEnum.php ---\n<?php\n\nclass BaseEnum\n{\n    const PERSEROAN = 'perseroan';\n    const YAYASAN = 'yayasan';\n    const PERKUMPULAN = 'perkumpulan';\n\n    const PERSEROAN_SWASTA_NASIONAL = 'swasta_nasional';\n    const PERSEROAN_PMDN_FASILITAS = 'pmdn_fasilitas';\n    const PERSEROAN_PMDN_NON_FASILITAS = 'pmdn_non_fasilitas';\n    const PERSEROAN_BUMN = 'bumn';\n    const PERSEROAN_BUMD = 'bumd';\n    const PERSEROAN_PMA = 'pma';\n\n    const YAYASAN_PERORANGAN = 'perorangan';\n    const YAYASAN_BADAN_HUKUM = 'badan_hukum';\n\n    const YAYASAN_NASIONAL = 'nasional';\n    const YAYASAN_ASING = 'asing';\n\n    const VIEW_GRID_PERSEROAN = '_viewGridPerseroan';\n    const VIEW_GRID_YAYASAN = '_viewGridYayasan';\n    const VIEW_GRID_PERKUMPULAN = '_viewGridPerkumpulan';\n    const VIEW_GRID_RANGE_DATE_PERSEROAN = '_viewGridRangeDatePerseroan';\n    const VIEW_GRID_RANGE_DATE_YAYASAN = '_viewGridRangeDateYayasan';\n    const VIEW_GRID_RANGE_DATE_PERKUMPULAN = '_viewGridRangeDatePerkumpulan';\n\n    // MULAI JENIS TRANSAKSI\n    const JENIS_PENDIRIAN    = 'pendirian';\n    const JENIS_PEMBUBARAN   = 'pembubaran';\n    const JENIS_PENYESUAIAN  = 'penyesuaian';\n    const JENIS_PERUBAHAN    = 'perubahan';\n    const JENIS_PENGGABUNGAN = 'penggabungan';\n    // SELESAI JENIS TRANSAKSI\n    \n\n    public static function getListBase($method = 'ucfirst')\n    {\n        return array(\n            self::PERSEROAN=>$method(self::PERSEROAN),\n            self::YAYASAN=>$method(self::YAYASAN),\n            self::PERKUMPULAN=>$method(self::PERKUMPULAN)\n        );\n    }\n\n    public static function getListMaksudTujuan($method = 'ucfirst')\n    {\n        return array(\n            self::PERSEROAN => $method(self::PERSEROAN),\n            self::YAYASAN_PERORANGAN => $method(self::YAYASAN_PERORANGAN),\n        );\n    }\n\n    public static function getListJenisPerseroan($method = 'strtoupper')\n    {\n        return array(\n            self::PERSEROAN_SWASTA_NASIONAL => $method(str_replace('_', ' ', self::PERSEROAN_SWASTA_NASIONAL)),\n            self::PERSEROAN_PMDN_FASILITAS =>$method(str_replace('_', ' ', self::PERSEROAN_PMDN_FASILITAS)),\n            self::PERSEROAN_PMDN_NON_FASILITAS => $method(str_replace('_', ' ', self::PERSEROAN_PMDN_NON_FASILITAS)),\n            self::PERSEROAN_BUMN => $method(str_replace('_', ' ', self::PERSEROAN_BUMN)),\n            self::PERSEROAN_BUMD => $method(str_replace('_', ' ', self::PERSEROAN_BUMD)),\n            self::PERSEROAN_PMA => $method(str_replace('_', ' ', self::PERSEROAN_PMA)),\n        );\n    }\n\n    public static function getListJenisYayasan($method = 'ucwords')\n    {\n        return array(\n            self::YAYASAN_PERORANGAN => $method(self::YAYASAN_PERORANGAN),\n            self::YAYASAN_BADAN_HUKUM => $method(str_replace('_', ' ', self::YAYASAN_BADAN_HUKUM))\n        );\n    }\n\n    public static function getListJenisTransaksiYayasan($method = 'ucwords')\n    {\n        return array(\n            self::YAYASAN_NASIONAL => $method(self::YAYASAN_NASIONAL),\n            self::YAYASAN_ASING => $method(self::YAYASAN_ASING)\n        );\n    }\n\n    public static function changeFormatJenisYayasan(&$jenis)\n    {\n        $arrInDb = array(\n            self::YAYASAN_PERORANGAN => self::YAYASAN_PERORANGAN,\n            self::YAYASAN_BADAN_HUKUM => ucwords(str_replace('_', ' ', self::YAYASAN_BADAN_HUKUM)),\n        );\n        $jenis = $arrInDb[$jenis];\n    }\n\n    public static function getListJenis($tipe = 'perseroan')\n    {\n        $perseroan = array(\n            TransaksiPerseroan::$id_aksi_transaksi_pendirian => 'Pendirian',\n            TransaksiPerseroan::$id_aksi_transaksi_perubahan => 'Perubahan',\n            TransaksiPerseroan::$id_aksi_transaksi_pembubaran => 'Pembubaran',\n            TransaksiPerseroan::$id_aksi_transaksi_marger => 'Penggabungan',\n            TransaksiPerseroan::$penyesuaian => 'Penyesuaian',\n        );\n\n        $yayasan = array(\n            2 => 'Pendirian',\n            3 => 'Perubahan',\n            28 => 'Pembubaran',\n            29 => 'Penggabungan',\n        );\n\n        $perkumpulan = array(\n            TransaksiPerkumpulan::model()->id_aksi_transaksi_pendirian => ucwords(self::JENIS_PENDIRIAN),\n            TransaksiPerkumpulan::model()->id_aksi_transaksi_perubahan => ucwords(self::JENIS_PERUBAHAN),\n        );\n\n        return isset($$tipe) ? $$tipe : array();\n    }\n}\n\n\n--- File: 329 # exception/APIExceptionThrower.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.IExceptionThrower');\n\n/**\n * API Exception Thrower Implementation\n * \n * Concrete implementation of IExceptionThrower interface for API controllers.\n * Provides consistent HTTP exception handling with JSON responses.\n */\nclass APIExceptionThrower implements IExceptionThrower\n{\n    /**\n     * Throws a 400 Bad Request exception\n     * \n     * @param string $message The error message\n     * @param array $errors Optional validation errors\n     * @return void\n     */\n    public function throwBadRequest($message = 'Bad Request', $errors = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => 400\n        ];\n        \n        if (!empty($errors)) {\n            $response['errors'] = $errors;\n        }\n        \n        $this->sendJsonResponse($response, 400);\n    }\n    \n    /**\n     * Throws a 401 Unauthorized exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwUnauthorized($message = 'Unauthorized')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 401\n        ], 401);\n    }\n    \n    /**\n     * Throws a 403 Forbidden exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwForbidden($message = 'Forbidden')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 403\n        ], 403);\n    }\n    \n    /**\n     * Throws a 404 Not Found exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwNotFound($message = 'Not Found')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 404\n        ], 404);\n    }\n    \n    /**\n     * Throws a 405 Method Not Allowed exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwMethodNotAllowed($message = 'Method Not Allowed')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 405\n        ], 405);\n    }\n    \n    /**\n     * Throws a 409 Conflict exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwConflict($message = 'Conflict')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 409\n        ], 409);\n    }\n    \n    /**\n     * Throws a 422 Unprocessable Entity exception\n     * \n     * @param string $message The error message\n     * @param array $errors Validation errors\n     * @return void\n     */\n    public function throwUnprocessableEntity($message = 'Unprocessable Entity', $errors = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => 422\n        ];\n        \n        if (!empty($errors)) {\n            $response['errors'] = $errors;\n        }\n        \n        $this->sendJsonResponse($response, 422);\n    }\n    \n    /**\n     * Throws a 500 Internal Server Error exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwInternalServerError($message = 'Internal Server Error')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 500\n        ], 500);\n    }\n    \n    /**\n     * Throws a 503 Service Unavailable exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwServiceUnavailable($message = 'Service Unavailable')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 503\n        ], 503);\n    }\n    \n    /**\n     * Throws a custom HTTP exception\n     * \n     * @param int $statusCode The HTTP status code\n     * @param string $message The error message\n     * @param array $data Additional data to include in response\n     * @return void\n     */\n    public function throwHttpException($statusCode, $message, $data = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => $statusCode\n        ];\n        \n        if (!empty($data)) {\n            $response['data'] = $data;\n        }\n        \n        $this->sendJsonResponse($response, $statusCode);\n    }\n    \n    /**\n     * Sends JSON response with proper headers\n     * \n     * @param array $data Response data\n     * @param int $statusCode HTTP status code\n     * @return void\n     */\n    private function sendJsonResponse($data, $statusCode)\n    {\n        $statusText = $this->getStatusText($statusCode);\n        \n        header($_SERVER['SERVER_PROTOCOL'] . \" {$statusCode} {$statusText}\");\n        header('Content-Type: application/json');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization');\n        \n        echo CJSON::encode($data);\n        Yii::app()->end();\n    }\n    \n    /**\n     * Gets HTTP status text for status code\n     * \n     * @param int $statusCode HTTP status code\n     * @return string Status text\n     */\n    private function getStatusText($statusCode)\n    {\n        $statusTexts = [\n            200 => 'OK',\n            201 => 'Created',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            405 => 'Method Not Allowed',\n            409 => 'Conflict',\n            422 => 'Unprocessable Entity',\n            500 => 'Internal Server Error',\n            503 => 'Service Unavailable'\n        ];\n        \n        return isset($statusTexts[$statusCode]) ? $statusTexts[$statusCode] : 'Unknown';\n    }\n}\n\n\n--- File: 521 # views/blokirPerkumpulan/detail/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('../_common/_ckeditorAddon') ?>\n<?php $this->renderPartial('./_common/_constants') ?>\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\" id=\"data-pratinjau\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <template x-if=\"stage === 1\">\n            <section class=\"panel\">\n                <header class=\"panel-heading text-center\">\n                    <h3>DETAIL PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES PERKUMPULAN</h3>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_permohonanData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_pemohonData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_dokumenPersyaratan'); ?>\n                    </div>\n\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_riwayatVerifikasi'); ?>\n                    </div>\n\n                    <template x-if=\"canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_verifikasi'); ?>\n                        </div>\n                    </template>\n                    <template x-if=\"!canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_konsepSuratJawaban'); ?>\n                        </div>\n                    </template>\n\n\n                </div>\n            </section>\n        </template>\n\n        <template x-if=\"stage === 2\">\n            <div class=\"container py-4\">\n                <?php $this->renderPartial('./detail/_suratJawaban'); ?>\n            </div>\n        </template>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            currentUser: <?php echo json_encode($user); ?>,\n            currentDomain: DOMAINS.PERKUMPULAN,\n\n\n            viewData: {\n                permohonanId: null,\n                nomorPermohonan: null,\n                jenisLayanan: null,\n                kodeVoucher: null,\n                perkumpulanId: null,\n                namaPerkumpulan: null,\n                alasanPermohonan: null,\n                jenisAkunPemohon: null,\n                statusPemohon: null,\n                diajukanKuasa: null,\n                pemohonData: {},\n                jabatan: null,\n                organData: null,\n                nomorSuratPermohonan: null,\n                tanggalSuratPermohonan: null,\n                nomorAktaPerkumpulan: null,\n                tanggalAktaPerkumpulan: null,\n                nomorAktaKuasa: null,\n                tanggalAktaKuasa: null,\n                namaNotaris: null,\n                statusPermohonan: null,\n                suratJawaban: null,\n                dokumenPermohonan: [],\n                riwayatVerifikasi: [],\n                riwayatSuratJawaban: [],\n                verifikator: {},\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                alasan: null,\n            },\n\n            /**\n             * Initializes the component by fetching data from backend\n             */\n            async init() {\n                this.$loading.startLoading('pratinjau');\n\n                const permohonanId = <?php echo json_encode($id); ?>;\n\n                if (!permohonanId) {\n                    this.$loading.stopLoading('pratinjau');\n                    return;\n                }\n\n                await this.fetchPermohonanDetail(permohonanId);\n\n                this.$loading.stopLoading('pratinjau');\n            },\n\n            /**\n             * Fetches permohonan detail data from the server\n             * @param {string} permohonanId - The permohonan ID\n             * @returns {Promise<void>}\n             */\n            async fetchPermohonanDetail(permohonanId) {\n                const url = new URL(`/sabh/api/pemblokiran/perkumpulan/permohonan/${permohonanId}`, window.location.origin);\n\n                const [res, err] = await safeFetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error fetching permohonan detail:', err);\n                    return;\n                }\n\n                this.viewData = { ...this.viewData, ...res.data };\n            },\n\n            submitVerifikasi(hasil, alasan) {\n                this.formData.hasilVerifikasi = hasil;\n                this.formData.alasan = alasan;\n                this.nextStage();\n            },\n\n            nextStage() {\n                this.stage++;\n            },\n\n            prevStage() {\n                this.stage--;\n            },\n\n            canVerify() {\n                switch (this.viewData.statusPermohonan) {\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturJenderalId;\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturBadanUsahaId;\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_DIREKTUR_BU:\n                        return this.currentUser.user_id === this.viewData.verifikator.verifikatorId;\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_VERIFIKATOR:\n                        return this.currentUser.user_id === this.viewData.verifikator.konseptorId;\n                    default:\n                        return false;\n                }\n            }\n        }\n    }\n</script>\n\n--- File: 921 # views/blokirPerseroan/detail/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('./_common/_constants') ?>\n<?php $this->renderPartial('../_common/_ckeditorAddon') ?>\n\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\" id=\"data-pratinjau\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <template x-if=\"stage === 1\">\n            <section class=\"panel\">\n                <header class=\"panel-heading text-center\">\n                    <h3>DAFTAR PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES PT</h3>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_permohonanData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_pemohonData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_dokumenPersyaratan'); ?>\n                    </div>\n\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_riwayatVerifikasi'); ?>\n                    </div>\n\n                    <template x-if=\"canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_verifikasi'); ?>\n                        </div>\n                    </template>\n                    <template x-if=\"!canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_konsepSuratJawaban'); ?>\n                        </div>\n                    </template>\n\n\n                </div>\n            </section>\n        </template>\n\n        <template x-if=\"stage === 2\">\n            <div class=\"container py-4\">\n                <?php $this->renderPartial('./detail/_suratJawaban'); ?>\n            </div>\n        </template>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            currentUser: <?php echo json_encode($user); ?>,\n            currentDomain: DOMAINS.PERSEROAN_TERBATAS,\n\n\n            viewData: {\n                permohonanId: null,\n                nomorPermohonan: null,\n                jenisLayanan: null,\n                kategoriPermohonan: null,\n                kodeVoucher: null,\n                perseroanTerbatasId: null,\n                namaPerseroanTerbatas: null,\n                alasanPermohonan: null,\n                jenisAkunPemohon: null,\n                statusPemohon: null,\n                diajukanKuasa: false,\n                jenisPemegangSaham: null,\n                jenisBadanHukumPermohonan: null,\n                subjekPermohonan: null,\n                pemohonData: {},\n                pemegangSahamData: {},\n                daftarNomor: {},\n                nomorSuratPermohonan: null,\n                tanggalSuratPermohonan: null,\n                nomorAktaKuasa: null,\n                tanggalAktaKuasa: null,\n                namaNotaris: null,\n                statusPermohonan: null,\n                dokumenPermohonan: {},\n                riwayatVerifikasi: null,\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                alasan: null,\n            },\n\n            signatureData: <?php echo json_encode($signatureData); ?>,\n            /**\n             * Initializes the component by fetching data from backend\n             */\n            async init() {\n                this.$loading.startLoading('pratinjau');\n\n                const permohonanId = <?php echo json_encode($id); ?>;\n\n                if (!permohonanId) {\n                    this.$loading.stopLoading('pratinjau');\n                    return;\n                }\n\n                await this.fetchPermohonanDetail(permohonanId);\n\n                this.$loading.stopLoading('pratinjau');\n            },\n\n            /**\n             * Fetches permohonan detail data from the server\n             * @param {string} permohonanId - The permohonan ID\n             * @returns {Promise<void>}\n             */\n            async fetchPermohonanDetail(permohonanId) {\n                const url = new URL(`/sabh/api/pemblokiran/pt/permohonan/${permohonanId}`, window.location.origin);\n\n                const [res, err] = await safeFetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error fetching permohonan detail:', err);\n                    return;\n                }\n\n                this.viewData = { ...this.viewData, ...res.data };\n            },\n\n            submitVerifikasi(hasil, alasan) {\n                this.formData.hasilVerifikasi = hasil;\n                this.formData.alasan = alasan;\n                this.nextStage();\n            },\n\n            nextStage() {\n                this.stage++;\n            },\n\n            prevStage() {\n                this.stage--;\n            },\n\n            canVerify() {\n                switch (this.viewData.statusPermohonan) {\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturJenderalId;\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturBadanUsahaId;\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_DIREKTUR_BU:\n                        return this.currentUser.user_id === this.viewData.verifikator.verifikatorId;\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_VERIFIKATOR:\n                        return this.currentUser.user_id === this.viewData.verifikator.konseptorId;\n                    default:\n                        return false;\n                }\n            }\n        }\n    }\n</script>\n\n\n--- File: 638 # views/restoreVerifikasiTolak/index.php ---\n<?php /** @var $model array **/ ?>\n<div class=\"col-lg-12\">\n    <section class=\"panel\">\n        <div class=\"panel-body\">\n            <div class=\"panel-body\">\n                <?php if (Yii::app()->user->hasFlash('error')): ?>\n                    <div class=\"alert alert-danger alert-dismissable\">\n                        <button aria-hidden=\"true\" data-dismiss=\"alert\" class=\"close\" type=\"button\">\u00d7</button>\n                        <?= Yii::app()->user->getFlash('error') ?>\n                    </div>\n               <?php endif; ?>\n                <center>\n                    <h3>Restore Verifikasi Pendirian Tolak</h3>\n                </center>\n                <br/>\n                <div class=\"row\">\n                    <form method=\"GET\" action=\"<?php echo $this->createAbsoluteUrl('restoreVerifikasiTolak/index');?>\">\n                        <div class=\"col-sm-3\">\n                            <input type=\"text\" id=\"nama\" name=\"VerifikasiPerkumpulanTolak[nama_perkumpulan]\" class=\"form-control\" value=\"<?= isset($_GET['VerifikasiPerkumpulanTolak']['nama_perkumpulan']) ?  $_GET['VerifikasiPerkumpulanTolak']['nama_perkumpulan'] : '';?>\" placeholder=\"Masukkan Nama\">\n                        </div>\n                        <div class=\"col-sm-3\">\n                            <select name=\"perkumpulan\" class=\"form-control\" id=\"perkumpulan\">\n                                <option value=\"perkumpulan\">Perkumpulan</option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-1\">\n                            <button type=\"submit\" name=\"search\" class=\"btn btn-success btn-md\">Cari..</button>\n                        </div>\n                    </form>\n                    <div class=\"col-sm-1\">\n                        <?php echo CHtml::link('History Restore', array('restoreVerifikasi/historyRestore'), array('class' => 'btn btn-primary btn-md')); ?>\n                    </div>\n                </div> \n                    \n                <br/>\n                <div class=\"table-responsive\">\n                    <?php\n                    $this->beginWidget('zii.widgets.grid.CGridView', array( \n                        'id' => 'restore-verifikasi-perkumpulan-tolak',\n                        'dataProvider' => $model->searchTolak(),\n                        'filter'=>$model,\n                        'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                        'template' => \"{summary}{items}\\n{pager}\",\n                        'afterAjaxUpdate' => \"function(){ $('.keys').attr('title', window.location.href ); } \",\n                        // 'template'=>'{pager}{items}{pager}',\n                        'columns'=>array(\n                            array(\n                                'header' => 'Nomor',\n                                'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                            ),\n                            array(\n                                'name' => 'nomor_transaksi',\n                                'header' => 'Nomor Transaksi',\n                                'value' => '$data->nomor_transaksi',\n                            ),\n                            array(\n                                'name' => 'nama_perkumpulan',\n                                'header' => 'Nama',\n                                'value' => '$data->nama_perkumpulan',\n                            ),\n                            array(\n                                'name' => 'nama_singkat',\n                                'header' => 'Singkatan',\n                                'value' => '$data->nama_singkat',\n                            ),\n                            array(\n                                'name' => 'nama_notaris',\n                                'header' => 'Nama Notaris',\n                                'value' => '$data->nama_notaris',\n                            ),\n                            array(\n                                'name'=>'jenis_tolak',\n                                'header' => 'Alasan Tolak',\n                                'value'=>function($data) {\n                                    return $data->getStatusTolak(false);\n                                },\n                                'filter' => CHtml::activeDropdownList($model, 'jenis_tolak', [\n                                    \"Semua\", \"Nama\", \"Singkatan\", \"Pengesahan\", \"Akta\"\n                                ]),\n\n                            ),\n                            array(\n                                'header' => 'Keterangan Tolak',\n                                'value' => '$data->alasan',\n                            ),\n                            array(\n                                'name' => 'id_verifikator',\n                                'header' => 'Ditolak Oleh',\n                                'value' => 'getNama($data[\"id_verifikator\"])',\n                                'filter' => CHtml::activeTextField($model, 'id_verifikator'),\n                            ),\n                            array(\n                                'name' => 'tgl_verifikasi',\n                                'header' => 'Diverifikasi Tanggal',\n                                'value' => function($data){\n                                    return Helpers::getDateFormatId($data->tgl_verifikasi);\n                                },\n                                'filter' => $this->widget('zii.widgets.jui.CJuiDatePicker', filterDate($model, 'tgl_verifikasi'), true)\n                            ),\n                            array(\n                                'header'=>'Aksi',\n                                'type'=>'raw',\n                                'value'=> function($data) use ($setting) {\n                                        return VerifikasiPerkumpulanTolak::getRestore($setting,$data);\n                                },\n                            ),\n                        )\n                    ));\n                    $this->endWidget('zii.widgets.grid.CGridView');\n                    ?>\n                </div>\n            </div>\n        </div>\n    </section>\n</div>\n\n<script type=\"text/javascript\">\n    jQuery('#restore-verifikasi-perkumpulan-tolak a.restore_klik').live('click',function(){\n        var konfirmasi = confirm('Apakah Anda yakin akan merestore verifikasi ini?');\n        if (konfirmasi) {\n            $('.restore_klik').hide();\n            return true;\n        } else {\n            return false;\n        }\n    });\n      \n\n</script>\n<?php\nfunction filterDate($model, $attributes) {\n    return array(\n        'model' => $model,\n        'attribute' => $attributes,\n        'options' => array(\n        'dateFormat' => 'yy-mm-dd',\n        'changeYear' => true,\n        'changeMonth' => true,\n        'showAnim' => 'slideDown',\n        'yearRange' => '2000:+nn',\n        'width' => '17em',\n        ),\n        'htmlOptions' => array(\n            'class' => 'date',\n        ),\n    );\n}\n\nfunction getNama($user_id) {\n    $raw_data = Yii::app()->db->createCommand()\n        ->select('name')\n        ->from('ahu_user')\n        ->where('user_id=:id_verifikator', [':id_verifikator' => $user_id])\n        ->queryRow();\n        return $raw_data['name'];\n}\n\n\n--- File: 968 # views/blokirYayasan/detail/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('../_common/_ckeditorAddon') ?>\n<?php $this->renderPartial('./_common/_constants') ?>\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\" id=\"data-pratinjau\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <template x-if=\"stage === 1\">\n            <section class=\"panel\">\n                <header class=\"panel-heading text-center\">\n                    <h3>DETAIL PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES YAYASAN</h3>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_permohonanData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_pemohonData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_dokumenPersyaratan'); ?>\n                    </div>\n\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_riwayatVerifikasi'); ?>\n                    </div>\n\n                    <template x-if=\"canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_verifikasi'); ?>\n                        </div>\n                    </template>\n                    <template x-if=\"!canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_konsepSuratJawaban'); ?>\n                        </div>\n                    </template>\n\n\n                </div>\n            </section>\n        </template>\n\n        <template x-if=\"stage === 2\">\n            <div class=\"container py-4\">\n                <?php $this->renderPartial('./detail/_suratJawaban'); ?>\n            </div>\n        </template>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            currentUser: <?php echo json_encode($user); ?>,\n            currentDomain: DOMAINS.PERKUMPULAN,\n\n\n            viewData: {\n                permohonanId: null,\n                nomorPermohonan: null,\n                jenisLayanan: null,\n                kodeVoucher: null,\n                yayasanId: null,\n                namaYayasan: null,\n                alasanPermohonan: null,\n                jenisAkunPemohon: null,\n                statusPemohon: null,\n                diajukanKuasa: null,\n                pemohonData: {},\n                totalPembinaAktif: null,\n                pembinaData: [],\n                jabatan: null,\n                organData: null,\n                daftarNomor: {},\n                nomorSuratPermohonan: null,\n                tanggalSuratPermohonan: null,\n                nomorAktaKuasa: null,\n                tanggalAktaKuasa: null,\n                namaNotaris: null,\n                statusPermohonan: null,\n                suratJawaban: null,\n                dokumenPermohonan: [],\n                riwayatVerifikasi: [],\n                riwayatSuratJawaban: [],\n                verifikator: {\n                    konseptorId: null,\n                    verifikatorId: null,\n                    direkturBadanUsahaId: null,\n                    direkturJenderalId: null\n                },\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                alasan: null,\n            },\n\n            /**\n             * Initializes the component by fetching data from backend\n             */\n            async init() {\n                this.$loading.startLoading('pratinjau');\n\n                const permohonanId = <?php echo json_encode($id); ?>;\n\n                if (!permohonanId) {\n                    console.error('Permohonan ID not provided');\n                    this.$loading.stopLoading('pratinjau');\n                    return;\n                }\n\n                await this.fetchPermohonanDetail(permohonanId);\n\n                this.$loading.stopLoading('pratinjau');\n            },\n\n            /**\n             * Fetches permohonan detail data from the server\n             * @param {string} permohonanId - The permohonan ID\n             * @returns {Promise<void>}\n             */\n            async fetchPermohonanDetail(permohonanId) {\n                const url = new URL(`/sabh/api/pemblokiran/yayasan/permohonan/${permohonanId}`, window.location.origin);\n\n                const [res, err] = await safeFetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error fetching permohonan detail:', err);\n                    return;\n                }\n\n                this.viewData = { ...this.viewData, ...res.data };\n            },\n\n            submitVerifikasi(hasil, alasan) {\n                this.formData.hasilVerifikasi = hasil;\n                this.formData.alasan = alasan;\n                this.nextStage();\n            },\n\n            nextStage() {\n                this.stage++;\n            },\n\n            prevStage() {\n                this.stage--;\n            },\n\n            canVerify() {\n                switch (this.viewData.statusPermohonan) {\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturJenderalId;\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturBadanUsahaId;\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_DIREKTUR_BU:\n                        return this.currentUser.user_id === this.viewData.verifikator.verifikatorId;\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_VERIFIKATOR:\n                        return this.currentUser.user_id === this.viewData.verifikator.konseptorId;\n                    default:\n                        return false;\n                }\n            }\n        }\n    }\n</script>\n\n--- File: 324 # controllers/api/PerkumpulanController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.services.api.impl.PerkumpulanService');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.response.APIResponse');\n\nClass PerkumpulanController extends Controller {\n\n    private $exceptionThrower;\n    private $perkumpulanService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->perkumpulanService = new PerkumpulanService();\n    }\n\n\n    public function actionValidatePerkumpulan() {\n        if (!RequestContext::isMethod('POST')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $body = RequestContext::getJsonBody();\n\n        $nama = $body['nama'];\n        $nomor_sk = $body['nomor_sk'];\n        $notaris_terakhir = $body['notaris_terakhir'];\n\n        if (empty($nama)) {\n            return $this->exceptionThrower->throwBadRequest(\"'nama' wajib diisi\");\n        }\n\n        if (empty($nomor_sk)) {\n            return $this->exceptionThrower->throwBadRequest(\"'nomor_sk' wajib diisi\");\n        }\n\n        if (empty($notaris_terakhir)) {\n            return $this->exceptionThrower->throwBadRequest(\"'notaris_terakhir' wajib diisi\");\n        }\n\n        $perkumpulan = $this->perkumpulanService->findByNamaAndNomorSkAndNamaNotarisTerakhir($nama, $nomor_sk, $notaris_terakhir);\n\n        if (!$perkumpulan) {\n            return $this->exceptionThrower->throwNotFound('Perkumpulan tidak ditemukan');\n        }\n\n        $pembina = $perkumpulan->pembina;\n        $pengawas = $perkumpulan->pengawas;\n        $pengurus = $perkumpulan->pengurus;\n        $pendiri = $perkumpulan->pendiri;\n\n        $dataPembina = json_decode($pembina, true);\n        $dataPengawas = json_decode($pengawas, true);\n        $dataPengurus = json_decode($pengurus, true);\n        $dataPendiri = json_decode($pendiri, true);\n\n        $listGabungan = [];\n\n        $datasets = array(\n            !empty($dataPembina['data']) ? $dataPembina['data'] : array(),\n            !empty($dataPengawas['data']) ? $dataPengawas['data'] : array(),\n            !empty($dataPengurus['data']) ? $dataPengurus['data'] : array(),\n            !empty($dataPendiri['data']) ? $dataPendiri['data'] : array(),\n        );\n\n        foreach ($datasets as $dataset) {\n            if (!empty($dataset)) {\n                // Keep only rows with both fields non-empty\n                $filtered = array_filter($dataset, function ($row) {\n                    return !empty($row['jabatan_pengurus']) && !empty($row['nama_pengurus']);\n                });\n                if (!empty($filtered)) {\n                    $listGabungan = array_merge($listGabungan, $filtered);\n                }\n            }\n        }\n\n        // to copy UI display take _pengurusForm.php\n        APIResponse::ok([\n            'data' => $perkumpulan,\n            'listAnggota' => $listGabungan,\n        ]);\n    }\n\n\n    public function actionGetPerkumpulan() {\n        if (!RequestContext::isMethod('GET')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $id = RequestContext::getQuery('id');\n\n        $perkumpulan = $this->perkumpulanService->findById($id);\n\n        if (!$perkumpulan) {\n            return $this->exceptionThrower->throwNotFound('Perkumpulan tidak ditemukan');\n        }\n\n        APIResponse::ok($perkumpulan->attributes);\n    }\n\n    public function actionPembubaranPerkumpulan(){\n        if(!RequestContext::isMethod('POST')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $body = RequestContext::getJsonBody();\n\n        $formDataPengajuanPenghapusan = $body['formDataPengajuanPenghapusan'];\n        $formDataPermohonanPenghapusan = $body['formDataPermohonanPenghapusan'];\n        $badan_hukum_id = $body['badan_hukum_id'];\n\n        // create transaction\n        $createTransaction = $this->perkumpulanService->submitFormmPenghapusan(\n            $formDataPengajuanPenghapusan,\n            $formDataPermohonanPenghapusan,\n            $badan_hukum_id\n        );\n\n        APIResponse::ok([\n            'newTransaction' => $createTransaction\n        ]);\n    }\n\n    public function actionUploadAktaPerkumpulan(){\n        if (!RequestContext::isMethod('POST')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $nomor_transaksi = RequestContext::getQuery('no');\n        $id = RequestContext::getQuery('id');\n\n        // Get the file from the request\n        $file = $_FILES['tmp_file'];\n\n        if ($file['error'] != UPLOAD_ERR_OK) {\n            return $this->exceptionThrower->throwMethodNotAllowed('File upload error');\n        }\n\n        // Check if the file is uploaded and valid\n        $year = '20' . substr($nomor_transaksi, 2, 2);\n        $checkYear = SabhHelpers::cekTahun($year);\n        if (empty($checkYear)) {\n            $year = date(\"Y\");\n        }\n\n        // create badan hukum akta log\n        // extracted logic from controllers/UploadAktaController.php formUpload()\n        // di staging bisa\n        $badanHukumAktaLog = BadanHukumAktaLog::model()->handleUploadAkta($file, $nomor_transaksi, true, $data_post, false);\n        $transaksi = TransaksiPerkumpulan::model()->find('nomor_transaksi=:no_trans AND id_badan_hukum=:id_badan_hukum AND id_notaris=:id_notaris AND status_transaksi=0',\n        array(\n            ':no_trans' => $nomor_transaksi,\n            ':id_badan_hukum'=>$id,\n            ':id_notaris'=>Yii::app()->user->profilid\n            )\n        );\n        $model = new BadanHukumAkta('simpan', $year);\n        $model->scenario = 'simpan';\n        $model->attributes=$data_post;\n        $model->base = 'perkumpulan';\n        $model->nomor_transaksi = $nomor_transaksi;\n        $trans = Yii::app()->dbBadanHukum->beginTransaction();\n        $akta = $model->saveAkta($model);\n        if($akta){\n            $trans->commit();\n        }else{\n            $trans->rollback();\n        }\n\n        // extracted logic from YayasanController function actionDetailTransaksi($id)\n        $bh = BadanHukum::model()->findByPk((int) $id);\n        TransaksiYayasan::model()->conditionPushPerubahan($transaksi, $bh);\n        TransaksiYayasan::model()->sendActivationDukcapil($nomor_transaksi);\n\n        APIResponse::ok([\n            'message' => 'File uploaded successfully',\n            'file' => $file,\n            'badanHukum' => $badanHukumAktaLog,\n            'bakumAkta' => $model,\n            'transaksi' => $transaksi,\n            'datapost' => $data_post\n        ]);\n    }\n\n}\n\n\n--- File: 668 # views/editDeletePesanNama/index.php ---\n<?php\n/* 2019-01-25, Mohammad Afandy\n * @var $this EditDeletePesanNamaController\n * @var $model model OrderNamePerseroan / model OrderName\n * @var $base jenis badan hukum\n */\n?>\n\n<style>\n.list-aksi li{\n    border-bottom: 1px solid #bdc3c7;\n    margin-bottom: 5px;\n    padding-bottom:5px;\n}\n.list-aksi li:last-child{\n    border-bottom: none;\n}\n</style>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>EDIT DAN DELETE PESAN NAMA</h3>\n                </center>\n                <br>\n                <div class=\"alert alert-danger\" style=\"display: none;\" id=\"alert_message\">\n                    <strong><span id=\"msg\"></span></strong>\n                </div>\n                <div class=\"panel-body\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-3\">\n                            <?php\n                            echo CHtml::dropDownList('base', $base, [\n                                'perseroan' => 'PERSEROAN', 'yayasan' => 'YAYASAN', 'perkumpulan' => 'PERKUMPULAN',\n                            ], ['class' => 'form-control',]);\n                            ?>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"scroll-table\" style=\"overflow-y: auto;\">\n                            <?php\n                            $this->widget('zii.widgets.grid.CGridView', [\n                                'id' => 'edit-delete-pesan-nama-grid',\n                                'dataProvider' => $model->search(),\n                                'filter' => $model,\n                                'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                                'afterAjaxUpdate' => \"function(){\n                                    jQuery('.datepicker').datepicker({\n                                        changeMonth: true,\n                                        changeYear: true,\n                                    });\n                                }\",\n                                'columns' => [\n                                    [\n                                        'header' => 'No.',\n                                        'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                                    ],\n                                    [\n                                        'name' => 'id_pesan',\n                                        'header' => 'Nomor Pemesanan'\n                                    ],\n                                    [\n                                        'name' => 'nama',\n                                        'header' => 'Nama',\n                                    ],\n                                    [\n                                        'name' => 'nama_singkat',\n                                        'header' => 'Singkatan',                             \n                                    ],\n                                    [\n                                        'name' => 'tgl_pesan',\n                                        'header' => 'Tanggal Pemesanan',\n                                        'filter' => CHtml::activeTextField($model, 'tgl_pesan', [\"class\" => \"datepicker\"]),\n                                        'value' => '$data->tgl_pesan_list',\n                                    ],\n                                    [\n                                        'name' => 'tgl_exp_pesan',\n                                        'header' => 'Tanggal Kadaluarsa',\n                                        'type' => 'HTML',\n                                        'filter' => CHtml::activeTextField($model, 'tgl_exp_pesan',[\"class\" => \"datepicker\"]),\n                                        'value' => '\"<font color=red>\".$data->tgl_exp_list.\"</font>\"',\n                                    ],\n                                    [\n                                        'name' => 'is_proses',\n                                        'header' => 'Proses',\n                                        'filter' => [\"Baru\", \"Sudah Diproses\"],\n                                        'value' => '$data->is_proses == 0 ? \"Baru\" : \"Sudah Diproses\"',\n                                    ],\n                                    [\n                                        'name' => 'no_voucher',\n                                        'header' => 'Kode Pembayaran',\n                                        'value' => '$data->no_voucher',\n                                    ],\n                                    [\n                                        'name' => 'nama_pemohon',\n                                        'header' => 'Nama Pemesan',\n                                        'value' => 'strtoupper($data->nama_pemohon)',\n                                    ],\n                                    [\n                                        'name' => 'telepon_pemohon',\n                                        'header' => 'Telepon Pemesan',\n                                        'value' => '$data->telepon_pemohon',\n                                    ],\n                                    [\n                                        'name' => 'email_pemohon',\n                                        'header' => 'Email Pemesan',\n                                        'value' => '$data->email_pemohon',\n                                    ],\n                                    [\n                                        'name' => 'is_active',\n                                        'header' => 'Status',\n                                        'type' => 'raw',\n                                        'filter' => [\"Tidak Aktif\", \"Aktif\", \"Blokir\"],\n                                        'value' => '$data->getStatusPesanNama($data)',\n                                    ],\n                                    [\n                                        'header' => 'Keterangan',\n                                        'type' => 'raw',\n                                        'value' => 'OrderNamePerseroan::model()->getKeteranganNama($data)',\n                                    ],\n                                    [\n                                        'header' => 'Aksi',\n                                        'type' => 'raw',\n                                        'value' => function($data) {\n                                            $bakum = get_class($data) == 'OrderName' ? $data->base : 'perseroan';\n                                            $edit = CHtml::link('EDIT', $this->createAbsoluteUrl('edit', [\n                                                'id' => $data->id, 'base' => $bakum,\n                                            ]), ['class' => 'btn btn-primary btn-sm', 'style' => 'width: 100%']);\n                                            $delete = CHtml::button('DELETE', [\n                                                'data-id' => $data->id,\n                                                'data-base' => $bakum,\n                                                'class' => 'btn btn-danger btn-sm btn_delete',\n                                                'style' => 'width: 100%',\n                                            ]);\n                                            $link = '<ul class=\"list-aksi\"><li>' .$edit. '</li><li>' .$delete. '</li></ul>';\n                                            return $link;\n                                        }\n                                    ],\n                                ],\n                            ]);\n                            ?>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\nYii::app()->clientScript->registerScript('edit-pesan-nama-js', '\n    $(document).ready(function() {\n\n        $(\"#base\").on(\"change\", function() {\n            window.top.location.href = \"' .$this->createAbsoluteUrl(\"\"). '/base/\" + this.value;\n        });\n\n        $(\".datepicker\").datepicker({\n            changeMonth: true,\n            changeYear: true,\n        });\n\n        $(document).on(\"click\", \".btn_delete\", function() {\n\n            if (!confirm(\"Apakah Anda Yakin Ingin Menghapus Data ?\")) {\n                return false;\n            }\n\n            let id = $(this).data(\"id\");\n            let base = $(this).data(\"base\");\n\n            $.ajax({\n                type: \"POST\",\n                url: \"'.$this->createAbsoluteUrl(\"delete\").'\",\n                data: {\n                    id: id,\n                    base: base,\n                },\n                dataType: \"json\",\n                beforeSend: function() {\n                    $(\".disabled-screen-loading\").show();\n                },\n                success: function(result) {\n                    $(\"#msg\").html(result.message);\n                    if (result.success) {\n                        $(\"#alert_message\").removeClass(\"alert-danger\").addClass(\"alert-success\").show();\n                        $.fn.yiiGridView.update(\"edit-delete-pesan-nama-grid\");\n                    } else {\n                        $(\"#alert_message\").removeClass(\"alert-success\").addClass(\"alert-danger\").show();\n                    }\n                },\n                error: function() {\n                    $(\"#msg\").html(\"Terjadi Kesalahan. Silakan Coba Beberapa Saat Lagi\");\n                    $(\"#alert_message\").removeClass(\"alert-success\").addClass(\"alert-danger\").show();\n                },\n                complete: function() {\n                    $(\".disabled-screen-loading\").hide();\n                    $(window).scrollTop(0);\n                }\n            });\n\n        });\n\n    });\n', CClientScript::POS_END);\n?>\n\n--- File: 1143 # views/updateMasterPerseroan/index.php ---\n<?php\n$form = $this->beginWidget('CActiveForm', array(\n    'id' => 'perubahan_detail_form',\n    'enableClientValidation' => true,\n    'clientOptions' => array(\n        'validateOnSubmit' => true,\n        'afterValidate' => 'js:function(form,data,hasError){\n            $(\".disabled_sementara\").removeAttr(\"disabled\");\n            return true;\n        }'\n    )\n        ));\n?>\n<div class=\"row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Update Master Perseroan</legend>\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nama_perseroan', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nama_perseroan', array('class' => 'form-control','style'=>\"text-transform: uppercase\")); ?>\n                        <?php echo $form->error($model, 'nama_perseroan'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nomor_transaksi', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nomor_transaksi', array('class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'nomor_transaksi'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'tahun', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->dropDownList($model, 'tahun', $tahun, array('empty' => 'Tahun Data', 'class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'tahun'); ?>                                \n                    </div>    \n                    <div class=\"clearfix\"></div> \n                    <br/>       \n                    <div class=\"col-lg-12\">                            \n                        <?php echo CHtml::button('Cari', array('id' => 'cari', 'class' => 'pull-right btn btn-primary btn-info')); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<?php $this->endWidget(); ?>\n<div id=\"hasil\" class=\"hide row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Hasil</legend>\n                    <div class=\"col-lg-4\">\n                        <b>Nama</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nama\">\n                        <b></b>                       \n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4\">\n                        <b>Nomor</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nomor\"> \n                        <b></b>                           \n                    </div>\n                    <div class=\"clearfix\"></div> \n\n                    <div class=\"col-lg-4\">\n                        <b>Nama Notaris</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nama_notaris\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div> \n\n                    <div class=\"col-lg-4\">\n                        <b>Nomor SK</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nomor_sk\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4\">\n                        <b>Kota</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"kabupaten\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </fieldset>\n\n                <div class=\"clearfix\"></div>\n                <?php\n                $form = $this->beginWidget('CActiveForm', array(\n                    'id' => 'perubahan_detail_form',\n                    'enableClientValidation' => true,\n                    'clientOptions' => array(\n                        'validateOnSubmit' => true,\n                        'afterValidate' => 'js:function(form,data,hasError){\n                            $(\".disabled_sementara\").removeAttr(\"disabled\");\n                            return true;\n                        }' \n                    )\n                ));\n                ?>\n                <br/>\n                <div class=\"col-lg-12\">\n                    <?php echo CHtml::button('Update', array('id' => 'update', 'class' => 'pull-right btn btn-danger btn-md')); ?>\n                    <?php echo CHtml::button('Download', array('id' => 'download', 'class' => 'pull-right btn btn-warning btn-md', 'style' => 'margin-right:3%')); ?>\n                </div>\n                <?php $this->endWidget(); ?> \n             </div>\n        </section>\n    </div>\n</div>\n<div id=\"wait\" style=\"display:none;width:69px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;\"><b>Loading...</b>\n</div>\n\n\n<script>\njQuery(document).on('click', '#cari',function() {\n    $(\"#nama b\").text('');\n    $(\"#nomor b\").text('');\n    $(\"#nama_notaris b\").text('');\n    $(\"#nomor_sk b\").text('');\n    $(\"#kabupaten b\").text('');\n    $(\"#tahun b\").text('');\n    $('#hasil').addClass('hide');\n    var form_input = $(\"#perubahan_detail_form\").serialize();\n    $.ajax({\n        type: 'POST',\n        url: '<?php echo yii::app()->baseUrl;?>' + '/sabh/updateMasterPerseroan/searchMasterPerseroan',\n        dataType: 'json',\n        beforeSend: function() { $('#wait').show(); },\n        complete: function() { $('#wait').hide(); },\n        data: $(\"#perubahan_detail_form\").serialize(),\n        success: function(result) {\n            if (result.status == false) {\n                alert(result.message);\n            } else if(result.status == true) {\n                $(\"#nama b\").text(result.content.nama_perseroan);\n                $(\"#nomor b\").text(result.content.nomor_transaksi);\n                $(\"#nama_notaris b\").text(result.content.nama_notaris)\n                $(\"#nomor_sk b\").text(result.content.nomor_sk);\n                $(\"#kabupaten b\").text(result.content.provinsi_nama_perseroan);\n                $(\"#tahun b\").text(result.content.tahun);\n                $('#hasil').removeClass('hide');\n            }\n        },\n    });\n});\n\njQuery(document).on('click', '#update', function() {\n    var konfirmasi_dua = window.confirm('Anda yakin ingin update data master?');\n    if (konfirmasi_dua) {\n        $.ajax({\n            type: 'POST',\n            url: '<?php echo yii::app()->baseUrl;?>' + '/sabh/updateMasterPerseroan/updateDataPerseroan',\n            dataType: 'json',\n            beforeSend: function() { $('#wait').show(); },\n            complete: function() { $('#wait').hide(); },\n            success: function(result) {\n                alert(result.message);\n            },\n        });\n    }\n});\n\njQuery(document).on('click', '#download', function() {\n    window.open('<?php echo yii::app()->baseUrl;?>' + '/sabh/updateMasterPerseroan/downloadMasterData', '_blank');\n});\n</script>\n\n\n--- File: 415 # views/bo/index.php ---\n<?php\n/** @var $model model form dari perseroan, yayasan dan perkumpulan **/\n/** @var $modelBo BoForm **/\n/** @var $file file pdf perpres **/\n/** @var $form CActiveForm **/\n\n$form = isset($form) ? $form : new CActiveForm();\n$modelBo = $model->bo;\n$arrDetails = CJSON::decode($modelBo->temp_details);\n$checkedHasBo = !empty($arrDetails);\n$disabledPernyataan = ($modelBo->disclaimer == 0);\n$file = Yii::app()->baseUrl . '/uploads/bo/Perpres-13-tahun-2018-tentang-Beneficial-Ownership.pdf';\n\n$list_is_pendirian = ['pendirian', 'pendirianpending', 'myformpendirian'];\n$controller = Yii::app()->controller->id;\n$perseroanTransaksi = strpos($controller, 'persero') !== false;\n\n$method = Yii::app()->controller->action->id;\n$is_pendirian = false;\n\nif (\n    in_array($method, $list_is_pendirian) ||\n    ($controller == 'yayasan' && $method == 'penyesuaian')\n) {\n    $is_pendirian = true;\n}\n\n?>\n\n<div class=\"row\" id=\"bo_container\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Pemilik Manfaat</legend>\n                    <div class=\"form-group clearfix\">\n                        <?= CHtml::hiddenField('', (int) $is_pendirian, ['id' => 'check_is_pendirian']) ?>\n                        <?= CHtml::hiddenField('', (int) $modelBo->is_exist, ['id' => 'check_has_bo']) ?>\n                        \n                        <?php if ($modelBo->is_exist && !$modelBo->is_api_success) : ?>\n                            <div class=\"col-lg-12\" style=\"margin-bottom: 20px;\">\n                                <div class=\"errorMessage\">\n                                    <b>\n                                        Service bo sedang bermasalah, silahkan isi untuk melanjutkan, atau tunggu hingga service berjalan kembali. silahkan coba refresh laman kembali dalam beberapa menit\n                                    </b>\n                                </div>\n                            </div>\n                        <?php endif; ?>\n                        <div class=\"col-lg-12\">\n                            <font color = \"red\">* Wajib Diisi</font>\n                        </div>\n                        <div class=\"col-lg-12\">\n                            <div class=\"alert alert-warning-kuning\">\n                            <?php if($perseroanTransaksi): ?>\n                                <p class=\"text-justify\" style=\"color: red; font-weight: bold;\">\n                                Kementerian Hukum dalam mendukung pemberantasan tindak \n                                pidana pencucian uang dan Tindak Pidana Pendanaan Terorisme melalui \n                                korporasi, menerapkan kewajiban pelaporan pemilik manfaat, sesuai \n                                ketentuan:\n                                </p>\n                                <ul>\n                                    <li><?php echo CHtml::link('- Peraturan Presiden Nomor 13 Tahun 2018 ( Unduh )', array($file), array(\n                                        'target' => '_blank',\n                                        'class' => 'text-primary',\n                                        'style' => 'font-weight: bold;',\n                                    )); ?></li>\n                                    <li><?php echo CHtml::link('- Peraturan Menteri Hukum dan HAM Nomor 15 Tahun 2019 ( Unduh )', array(Yii::app()->baseUrl .'/uploads/bo/Permenkumham_Nomor_15_Tahun_2019.pdf'), array(\n                                        'target' => '_blank',\n                                        'class' => 'text-primary',\n                                        'style' => 'font-weight: bold;',\n                                    )); ?></li>\n                                    <li><?php echo CHtml::link('- Peraturan Menteri Hukum Nomor 2 Tahun 2025 ( Unduh )', array(Yii::app()->baseUrl .'/uploads/bo/Permenkumham_Nomor_2_Tahun_2025.pdf'), array(\n                                        'target' => '_blank',\n                                        'class' => 'text-primary',\n                                        'style' => 'font-weight: bold;',\n                                    )); ?></li>\n                                </ul>\n                                <div class=\"checkbox\">\n                                    <label>\n                                    \n                                    <?php echo CHtml::checkBox(\n                                        'has_bo',\n                                        $checkedHasBo,\n                                        array(\n                                            'id'=>'has_bo',\n                                            'class' => 'checkbox'\n                                        )\n                                    ); ?>\n                                    \n                                    <b style=\"color: red;\">Saya mengerti, memahami dan bersedia melaksanakan sebagaimana \n                                    ketentuan mengenai pelaporan pemilik manfaat pada korporasi.</b>\n                                    </label>\n                                </div>\n                            <?php else: ?>\n                                <p class=\"text-justify\" style=\"color: red; font-weight: bold;\">\n                                Kementerian Hukum dan HAM dalam mendukung pemberantasan tindak pidana pencucian uang, melalui korporasi/perusahaan menerapkan sistem mengenali pemilik manfaat, bagi para pemohon wajib mengikuti dan mengisi isian sebagai berikut : Pemilik Manfaat adalah orang perseorangan yang dapat menunjuk atau memberhentikan direksi, dewan komisaris, pengurus, pembina, atau pengawas pada Korporasi, memiliki kemampuan untuk mengendalikan Korporasi, berhak atas dan/atau menerima manfaat dari Korporasi baik langsung maupun tidak langsung, merupakan pemilik sebenarnya dari dana atau saham Korporasi dan/atau memenuhi kriteria sebagaimana dimaksud dalam Peraturan Presiden Nomor 13 Tahun 2018.\n                                </p>\n                                <div class=\"checkbox\">\n                                    <label>\n                                    \n                                    <?php echo CHtml::checkBox(\n                                        'has_bo',\n                                        $checkedHasBo,\n                                        array(\n                                            'id'=>'has_bo',\n                                            'class' => 'checkbox'\n                                        )\n                                    ); ?>\n                                    \n                                    <b style=\"color: red;\">Saya mengerti dan memahami pengertian pemilik manfaat.</b>\n                                    </label>\n                                </div>\n                            <?php endif; ?>\n                            </div>\n                            <div class=\"errorMessage\" id=\"has_bo_em_\" style=\"display:none\"></div>\n                            <p class=\"help-block\"><?php echo $form->error($model, 'has_bo'); ?></p>\n                            <?php if (!$perseroanTransaksi):?>\n                            <div class=\"center has-bo-child\" style=\"display: none;\">\n                                <iframe width='800' height='500'\n                                    src='<?php echo $file; ?>#toolbar=0&view=FitH'\n                                    frameborder='0' allowfullscreen>\n                                </iframe>\n                            </div>\n                            <?php endif; ?>\n                        </div>\n                    </div>\n\n                    <div class=\"has-bo-child\" style=\"display: none;\">\n                        <?php if (!$perseroanTransaksi):?>\n                        <div class=\"form-group clearfix\">\n                            <div class=\"col-lg-6 col-lg-offset-5\">\n                                <?php echo CHtml::link('DOWNLOAD', array($file), array(\n                                    'class' => 'btn btn-success',\n                                    'target' => '_blank'\n                                )); ?>\n                            </div>\n                        </div>\n                        <?php endif; ?>\n\n                        <div id=\"container_disclaimer_bo\">\n                            <?php $this->renderPartial('/bo/_disclaimer', array(\n                                'model' => $modelBo,\n                                'perseroanTransaksi' => $perseroanTransaksi\n                            )); ?>\n                        </div>\n\n                        <div class=\"form-group clearfix\">\n                            <div class=\"col-lg-12\">\n                                <?php echo $form->hiddenField($modelBo, 'pernyataan'); ?>\n                                <?php echo $form->hiddenField($modelBo, 'base'); ?>\n                            </div>\n                        </div>\n\n                        <div id=\"container_details\">\n                            <?php if((count($modelBo->details) > 0 && $checkedHasBo) || $perseroanTransaksi): ?>\n                                <?php $this->renderPartial('/bo/_details', array('model' => $modelBo)); ?>\n                            <?php endif; ?>\n                        </div>\n\n                        <?php echo $form->error($model, 'bo'); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<div id=\"modal_bo\"></div>\n\n<?php\nYii::app()->clientScript->registerScript('bo_badan_hukum',\n    file_get_contents(Yii::app()->basePath.'/modules/sabh/views/bo/index.js')\n);\n?>\n\n--- File: 645 # views/restoreVerifikasi/index.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <div class=\"panel-heading\">\n                    <h3 class=\"text-center\">\n                        RESTORE VERIFIKASI PENDIRIAN SETUJU\n                    </h3>\n                </div>\n                \n                <br>\n                <div class=\"grid_view\" style='border: 1px solid #ccc!important;'>\n\n                    <div class=\"row\" style='margin-left: 10px;'>\n                        <br>\n                        <div class=\"col-lg-3\">\n                            <?php echo CHtml::textField(\n                                'Text',\n                                '',\n                                [\n                                    'id' => 'nama_bakum',\n                                    'class' => 'form-control',\n                                    'placeholder' => 'Masukan Nama',\n                                    'width' => 100,\n                                    'maxlength' => 100\n                                ]\n                            ); ?>\n                        </div>\n\n                        <div class=\"col-lg-3\">\n                            <?php echo CHtml::dropDownList(\n                                'drop_base',\n                                'test',\n                                ['yayasan' => 'Yayasan'],\n                                ['rows' => 6, 'cols' => 50, 'class' => 'form-control', 'empty' => 'Perkumpulan']\n                            ); ?>\n                        </div>\n\n                        <div class=\"col-lg-1\">\n                            <?php echo CHtml::button('CARI', array(\n                                'class' => 'btn btn-success',\n                                'id' => 'btn_cari'\n                            )); ?>\n                        </div>\n\n                        <div class=\"col-lg-1\">\n                            <?php echo CHtml::button('History Restore', array(\n                                'class' => 'btn btn-primary',\n                                'id' => 'btn_history',\n                                'submit' => array('RestoreVerifikasi/HistoryRestore'),\n                            )); ?>\n                        </div>\n\n                    </div>\n                    <div class=\"table-responsive\">\n                    <?php  $this->widget('zii.widgets.grid.CGridView', array( \n                        'id' => 'restore-setuju',\n                        'dataProvider' => $model->getSelectRestore(),\n                        'filter' => $model,\n                        'afterAjaxUpdate' => \"\n                            function(){jQuery('.date').datepicker({\n                                'dateFormat':'yy-mm-dd',\n                                'changeYear': true,\n                                'changeMonth':true,\n                                'showAnim':'slideDown',\n                                'yearRange':'2000:+nn'\n                                })\n                            }\",\n                        'itemsCssClass'=>'table table-striped table-hover table-bordered dataTable',\n                        'columns'=>array(\n                            array(\n                                'header' => 'Nomor',\n                                'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                            ),\n\n                            array(\n                                'name' => 'nomor_transaksi',\n                                'header' => 'Nomor Transaksi',\n                                'value' => '$data[\"nomor_transaksi\"]'\n                            ),\n\n                            array(\n                                'name' => 'nama_perkumpulan',\n                                'header' => 'Nama',\n                                'value' => '$data[\"nama_perkumpulan\"]',\n                            ),\n\n                            array(\n                                'name' => 'nama_singkat',\n                                'header' => 'Singkatan',\n                                'value' => '$data[\"nama_singkat\"]',\n                            ),\n\n                            array(\n                                'name' => 'nama_notaris',\n                                'header' => 'Data Pemohon',\n                                'value' => '$data[\"nama_notaris\"]',\n                                'filter' => false,\n                            ),\n\n                            array(\n                                'name' => 'nama_singkat',\n                                'header' => 'Keterangan',\n                                'value' => function ($data) {\n                                    return 'PENDIRIAN PERKUMPULAN';\n                                 },\n                                'filter' => false,\n                                'sortable' => false,\n\n                            ),\n\n                            array(\n                                'name' => 'verifikator_staf',\n                                'header' => 'Disetujui Oleh',\n                                'value' => function ($data) {\n                                    $raw_data = Yii::app()->db->createCommand()\n                                        ->select('name')\n                                        ->from('ahu_user')\n                                        ->where('user_id=:id_verifikator', [':id_verifikator' => $data['verifikator_staf']])\n                                        ->queryRow();\n                                        return $raw_data['name'];\n                                },\n                            ),\n\n                            array(\n                                'name' => 'tgl_verifikasi',\n                                'header' => 'Disetujui Tanggal',\n                                'value' => 'formatDate($data[\"tgl_verifikasi\"], 3)',\n                                'filter' => $this->widget('zii.widgets.jui.CJuiDatePicker', array(\n                                    'model' => $model,\n                                    'attribute' => 'created_date',\n                                    'options' => array(\n                                    'dateFormat' => 'yy-mm-dd',\n                                    'changeYear' => true,\n                                    'changeMonth' => true,\n                                    'showAnim' => 'slideDown',\n                                    'yearRange' => '2000:+nn',\n                                    'width' => '17em',\n                                    ),\n                                    'htmlOptions' => array(\n                                        'class' => 'date',\n                                    ),\n                                ), true),\n    \n                            ),\n\n                            array(\n                                'header' => 'Action',\n                                'value' => 'CHtml::button(\"Restore\", [\"class\" => \"restore btn btn-link\", \"name\" => $data[\"id_perkumpulan\"] . \",\" . $data[\"id_detail\"] ])',\n                                'type' => 'raw',\n                            ),\n                        )));\n                    \n                        ?>\n                    </div>\n\n                </div>\n            </div>\n            \n           \n        </section>\n    </div>\n</div>\n<?php\n/**\n * 2019-01-08, samuel\n * get data dari tbl_transaksi_perkumpulan_{$tahun}\n * @param array $data\n * @return string\n */\n function getFromTransaksi($data) {\n    $raw_data = Yii::app()->dbBadanHukum->createCommand()\n    ->select('*')\n    ->from('tbl_transaksi_perkumpulan_' . $data['tahun'])\n    ->where('nomor_transaksi=:nomor_transaksi', [':nomor_transaksi' => $data['nomor_transaksi']])\n    ->queryRow();\n    return $raw_data;\n}\n\n/**\n * 2019-01-08, samuel\n * konversi string tanggal dengan pola tertentu\n * @param string $da\n * @param int $tipe\n * @return string\n */\nfunction formatDate($da, $tipe = 1)\n{\n    if (empty($da) or strpos($da, '0000-00-00') === 0) {\n        return '';\n    }\n    if ($tipe == 1) {\n        return date('d M Y H:i:s', strtotime($da));\n    } elseif ($tipe == 2) {\n        return date('Y', strtotime($da));\n    } else {\n        return date('d M Y', strtotime($da));\n    }\n}\n\nYii::app()->clientScript->registerScript('search', \"\njQuery(document).on('click', '.restore', function () {\n    var konfirmasi = confirm('Apakah Anda yakin ingin merestore verifikasi ini?');\n    var params = jQuery(this).attr('name');\n    var x = 0;\n    var pemohon = {};\n    $(this).closest('tr').find('td').each(function() {\n        if ($(this).text() == '\u00a0') {\n            pemohon[x] = null;\n        } else {\n            pemohon[x] = $(this).text();\n        }\n        x += 1;\n    });\n    var json_pemohon = JSON.stringify(pemohon)\n    if (konfirmasi) {\n        jQuery.ajax({\n            url: '/sabh/RestoreVerifikasi/AjaxRestore',\n            type: 'POST',\n            data: {\n                'param': params,\n                'json_pemohon': json_pemohon,\n            },\n            success: function (result, status, xhr) {\n                result = JSON.parse(result)\n                if (result.success == true) {\n                    $('#restore-setuju').yiiGridView('update', {\n                        url : ''\n                    });\n                    alert(result.message);\n                } else {\n                    alert(result.message);\n                }\n            }\n\n        })\n    }\n})\njQuery(document).on('click', '#btn_cari', function () {\n    var nama = jQuery('#nama_bakum').val();\n    console.log(nama);\n    jQuery('#restore-setuju').yiiGridView('update', {\n        url : '',\n        data: {\n            'VerifikasiPerkumpulan[nama_perkumpulan]' : nama\n        },\n    });\n    \n})\n\njQuery(document).on('click', '#btn_history', function () {\n    \n})\n\");\n\n?>\n\n--- File: 953 # views/verifikasiPerbaikanData/index.php ---\n<style type=\"text/css\">\n    .bola {\n        border-radius: 200px 200px 200px 200px;\n        -moz-border-radius: 200px 200px 200px 200px;\n        -webkit-border-radius: 200px 200px 200px 200px;\n        border: 0px none #ff0808;\n        /*margin: 5px 5px;\n        margin-top: 0px;\n        margin-left: 0px;*/\n        width: 60px;\n        height: 60px;\n        text-align: center;\n        /*padding: 15px 0px;*/\n        position: relative;\n        top: -30px;\n        margin-bottom: -10px;\n    }\n    .count {\n        padding-top: 15px;\n        color: #ffffff;\n    }\n    .bg-div {\n        text-align: center;\n        background: #f1f3f7;\n        border-radius: 30px;\n    }\n\n</style>\n\n\n<div class=\"row list-transaksi\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>\n                        <?php echo $title ?>\n                    </h3>\n                </center><br/><br/>\n                <?php if ($monitoring) : ?> \n                    <?php foreach ($monitoring as $key => $value) : ?>\n                        <div class=\"col-lg-3\">\n                            <div class=\"bg-div\">\n                                <div align=\"center\">\n                                    <div class=\"bola\" align=\"center\" style=\"background: <?php echo $value['background']; ?>\">\n                                        <h2 class=\"count\"><?php echo $value['jumlah']; ?></h2>\n                                    </div>\n                                    <h5 style=\"margin-top: 0px;\"><b><?php echo strtoupper($value['keterangan']); ?></b></h5> \n                                    <br/>\n                                </div>\n                            </div>\n                        </div>\n\n                        <?php if ($key == 3) : ?>\n                            <div class=\"clearfix\"></div><br/>\n                        <?php endif; ?>\n                    <?php endforeach; ?>\n                <?php endif; ?>\n\n                <div class=\"clearfix\"></div><br/><br/>\n\n                <div class=\"panel-body\" style='font-size: 1.2em'>\n                    Pilih Tahun &nbsp;&nbsp;\n                    <?php\n                    $tahunawal = 2017;\n                    $tahunini = intval(date('Y'));\n                    $tahunarr = array();\n                    do\n                        $tahunarr[$tahunawal] = $tahunawal;\n                    while(++$tahunawal <= $tahunini);\n                    echo CHtml::dropDownList('tahun', Yii::app()->request->getQuery('tahun', $tahunini), $tahunarr, array('class' => 'form-control', 'style' => 'width: auto; display: inline-block;', 'id' => 'pilihtahun'));\n                    ?>\n                </div>\n                <input id=\"action\" type=\"hidden\" value=\"<?= $action; ?>\">\n                <div class=\"panel-body\">\n                    <?php\n                    $urlAjax = $action == 0 ? '/sabh/verifikasiPerbaikanData/index/tahun/'.$tahun : '/sabh/verifikasiPerbaikanData/daftarVerifikasi/tahun/'.$tahun;\n                    $this->widget('zii.widgets.grid.CGridView', array(\n                        'id' => 'agama-grid',\n                        'dataProvider' => $model->search(),\n                        'filter'=>$model,\n                        'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                        'ajaxUrl'=>Yii::app()->createUrl($urlAjax),\n                        'template' => \"{items}\\n{pager}\",\n                        'afterAjaxUpdate'=>\"function(){jQuery('#tanggal_perbaikan, #tanggal_verifikasi').datepicker({'dateFormat': 'yy-mm-dd'})}\",\n                        'columns' => array(\n                            array(\n                                'header' => 'No.',\n                                'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                            ),\n                            'nomor_tiket_perbaikan',\n                            array(\n                                'name'=>'jenis_badan_hukum',\n                                'value'=>'strtoupper($data->jenis_badan_hukum)',\n                                'filter' => CHtml::dropDownList('VerifikasiPerbaikanData[jenis_badan_hukum]',$model->jenis_badan_hukum,array('perkumpulan'=>'PERKUMPULAN','perseroan'=>'PERSEROAN','yayasan'=>'YAYASAN'),array('empty'=>'')),\n                                'type'=>'html'\n                            ),\n                            array(\n                                'name'=>'nama_bankum',\n                                'header'=>'Nama Badan Hukum',\n                            ),\n                            'nomor_surat_sk_sp',\n                            array(\n                                'name'=>'tanggal_perbaikan',\n                                'filter' => $this->widget('zii.widgets.jui.CJuiDatePicker', \n                                        array(\n                                            'model' => $model,\n                                            'attribute' => 'tanggal_perbaikan',\n                                            'language' => '',\n                                            'i18nScriptFile' => 'jquery.ui.datepicker-ja.js',\n                                            'htmlOptions' => array(\n                                                            'id' => 'tanggal_perbaikan',\n                                                            'dateFormat' => 'yy-mm-dd',\n                                                        ),\n                                            'defaultOptions' => array(\n                                                              'showOn' => 'focus', \n                                                              'dateFormat' => 'yy-mm-dd',\n                                                              'maxDate' => 'Now',\n                                                              'showOtherMonths' => false,\n                                                              'selectOtherMonths' => true,\n                                                              'changeMonth' => true,\n                                                              'changeYear' => true,\n                                                              'showButtonPanel' => false,\n                                                                )\n                                                ),\n                                                    true),\n                                'value'=>'!empty($data->tanggal_perbaikan) && $data->tanggal_perbaikan != \"0000-00-00 00:00:00\" ? Helpers::getDateFormatId($data->tanggal_perbaikan) . date(\" H:i:s\",strtotime($data->tanggal_perbaikan)) : Helpers::getDateFormatId($data->created_date) . date(\" H:i:s\",strtotime($data->created_date))'\n                            ),\n                            array(\n                                'name'=>'status_verifikasi',\n                                'value'=>'$data->statusVerifikasi($data->status_verifikasi)',\n                                'filter' => VerifikasiPerbaikanData::listStatusVerifikasi($action),\n                            ),\n                            array(\n                                'name'=>'editor',\n                                'header'=>'Verifikator',\n                                // 'value'=>'TransaksiPerbaikanHistory::getLastVerifikasi($data->nomor_tiket_perbaikan, 1)',\n                            ),\n                            array(\n                                'name'=>'tanggal_verifikasi',\n                                'filter' => $this->widget('zii.widgets.jui.CJuiDatePicker', \n                                        array(\n                                            'model' => $model,\n                                            'attribute' => 'tanggal_verifikasi',\n                                            'language' => '',\n                                            'i18nScriptFile' => 'jquery.ui.datepicker-ja.js',\n                                            'htmlOptions' => array(\n                                                            'id' => 'tanggal_verifikasi',\n                                                            'dateFormat' => 'yy-mm-dd',\n                                                        ),\n                                            'defaultOptions' => array(\n                                                              'showOn' => 'focus', \n                                                              'dateFormat' => 'yy-mm-dd',\n                                                              'maxDate' => 'Now',\n                                                              'showOtherMonths' => false,\n                                                              'selectOtherMonths' => true,\n                                                              'changeMonth' => true,\n                                                              'changeYear' => true,\n                                                              'showButtonPanel' => false,\n                                                                )\n                                                ),\n                                                    true),\n                                'value'=>'!empty($data->tanggal_verifikasi) ? Helpers::getDateFormatId($data->tanggal_verifikasi) . date(\" H:i:s\",strtotime($data->tanggal_verifikasi)) : \"-\"',\n                                'header'=>'Tanggal Verifikasi',\n                            ),\n                            array(\n                                'header'=>'Aksi',\n                                'type'=>'raw',\n                                'value'=> function($data) use ($tahun) {\n                                    return $data->aksiPerbaikanDataStaf($data->id_perbaikan, $data->status_verifikasi, $tahun);\n                                },\n                                'htmlOptions'=>array('style'=>'width:13%;')\n                            ),\n                        ),\n                        )\n                    );\n                    ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n<script>\n    $('#pilihtahun').on('change', function(){\n        $('.disabled-screen-loading').attr('style', 'display:block;z-index:9999;');\n        if($('#action').val() == 0) {\n            var url = '<?= $this->createAbsoluteUrl('index') ?>';\n        } else {\n            var url = '<?= $this->createAbsoluteUrl('daftarVerifikasi') ?>';\n        }\n        if (url.indexOf('?')== -1) {\n            window.top.location.href = url + '?tahun=' + this.value;\n        } else {\n            window.top.location.href = url + '&tahun=' + this.value;\n        }\n    });\n\n    $('.datepicker').datepicker({\n        changeMonth: true,\n        changeYear: true,\n        dateFormat: 'yy-mm-dd'\n    });\n</script>\n\n--- File: 1156 # mappers/DYayasanProvinsiMapper.php ---\n<?php\n\nclass DYayasanProvinsiMapper extends MapperBase\n{\n    public function findAll(\n        $kategori,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.pendiri,\n            ty.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE\n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            ty.pengurus\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'. date('Y') .' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"yayasan\"\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.date('Y').' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllFull(\n        $kategori,\n        $jenis_transaksi,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b. kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.pendiri,\n            ty.id_aksi_transaksi,\n            ty.pengurus,\n            (\n                CASE\n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'. date('Y') .' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"yayasan\"\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.date('Y').' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllJenisTransaksi($jenis_transaksi, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b. kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.pendiri,\n            ty.id_aksi_transaksi,\n            ty.pengurus,\n            (\n                CASE\n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'. date('Y') .' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"yayasan\"\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.date('Y').' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllGroup($kategori, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$kategori.'\n        ');\n        $cmd->from('('.$this->findAll($kategori, array(), false, 'getText').') AS '.$kategori);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllFullGroup($kategori, $jenis_transaksi, $param)\n    {\n        $alias = $kategori.'_'.$jenis_transaksi;\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$alias.'\n        ');\n        $cmd->from('('.$this->findAllFull($kategori, $jenis_transaksi, array(), false, 'getText').') AS '.$alias);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllJenisTransaksiGroup($jenis_transaksi, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$jenis_transaksi.'\n        ');\n        $cmd->from('('.$this->findAllJenisTransaksi($jenis_transaksi, array(), false, 'getText').') AS '.$jenis_transaksi);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 843 # views/toolsDeleteDataDouble/index.php ---\n <div class=\"alert alert-danger alert-dismissable hide\" id=\"Peringatan\">\n         <button aria-hidden=\"true\" id=\"alert_peringatan\" class=\"close\" type=\"button\">\u00d7</button>\n         <span id=\"text_peringatan\" style=\"font-weight: bolder;\"></span>\n </div>\n<?php\n$form = $this->beginWidget('CActiveForm', array(\n    'id' => 'tools-delete-data-double',\n    'enableClientValidation' => true,\n    'clientOptions' => array(\n        'validateOnSubmit' => true,\n        'afterValidate' => 'js:function(form,data,hasError){\n            $(\".disabled_sementara\").removeAttr(\"disabled\");\n            return true;\n        }'\n    )\n        ));\n?>\n<div class=\"row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Tools Delete Data Double</legend>\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nama', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nama', array('class' => 'form-control','style'=>\"text-transform: uppercase\")); ?>\n                        <?php echo $form->error($model, 'nama'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'base', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10 form-group\">\n                        <?php echo $form->dropDownList($model, 'base', $base, array('class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'base'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nomor_transaksi', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nomor_transaksi', array('class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'nomor_transaksi'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'tahun', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10 form-group\">\n                        <?php echo $form->dropDownList($model, 'tahun', $tahun, array('empty' => 'Tahun Data', 'class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'tahun'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div> \n                    <br/>\n                    \n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<?php $this->endWidget(); ?>\n\n<div id=\"delete_hasil\" class=\"row bag_2 hide\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <div class=\"col-lg-12\">\n                    <?php echo CHtml::button('DELETE', array(\n                        'id' => 'delete_transaksi', \n                        'class' => 'col-lg-12 btn btn-danger btn-md',\n                        'data-toggle'=>'modal',\n                        'data-target'=>'#confirm-delete'\n                    )); ?>\n                </div>\n             </div>\n        </section>\n    </div>\n</div>\n\n<!-- modal untuk konfirmasi hapus data -->\n<div class=\"modal fade\" id=\"confirm-delete\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">\u00d7</button>\n        <h4 class=\"modal-title\" id=\"myModalLabel\">Yakin Ingin Hapus Data Ini ?</h4>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn pull-left btn-default\" data-dismiss=\"modal\">Batal</button>\n        <button type=\"button\" class=\"btn btn-danger btn-ok\">Hapus</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n<div id=\"wait\" style=\"display:none;width:110px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;background: black\"><b style=\"color: white\">Mohon Tunggu...</b>\n</div>\n\n\n<script>\n    $(document).ready(function() {\n\n        //untuk event close alert\n        $('#alert_peringatan').click(function(){\n            $('#Peringatan').addClass('hide');\n        });\n\n        //event form tahun di pilih\n        $(\"#FormDeleteDataDouble_tahun\").change(function() {\n\n            //Jika memilih tahun lagi akan menghapus text alert dan alertnya di hide\n            if (!$('#Peringatan').hasClass('hide')) {\n                $('#text_peringatan').text('');\n                $('#Peringatan').addClass('hide');\n            }\n\n            //Reset class alert\n            if ($('#Peringatan').hasClass('alert-success')) {\n                $('#Peringatan').removeClass('alert-success');\n                $('#Peringatan').addClass('alert-danger');\n            }\n\n            //Reset delete_hasil\n            if (!$('#delete_hasil').hasClass('hide')) {\n                $('#delete_hasil').addClass('hide');\n                $('#delete_transaksi').removeAttr(\"data-id_transaksi\");\n                $('#delete_transaksi').removeAttr(\"data-tahun\");\n                $('#delete_transaksi').removeAttr(\"data-base\");\n            }\n            \n            //jika ada form yang kosong akan menampilkan alert\n            if ($('#FormDeleteDataDouble_nama').val() == \"\"\n                || $('#FormDeleteDataDouble_nomor_transaksi').val() == \"\"\n                || $('#FormDeleteDataDouble_base').val() == \"\" ) {\n\n                $('#text_peringatan').text(\"Maaf, Form Tidak Boleh Kosong\");\n                $('#Peringatan').removeClass('hide');\n            } else {\n                $.ajax({\n                    type: 'POST',\n                    url: '<?php echo Yii::app()->baseUrl . '/sabh/toolsDeleteDataDouble/cariDataDouble'; ?>',\n                    dataType: 'json',\n                    beforeSend: function() { $('#wait').show(); },\n                    complete: function() { $('#wait').hide(); },\n                    data: $(\"#tools-delete-data-double\").serialize(),\n                    success: function(msg) {\n                        if (msg.msg_err == '404') {\n                            $('#text_peringatan').text(\"Maaf, Data Tidak Ditemukan\");\n                            $('#Peringatan').removeClass('hide');\n                        } else {\n                            $('#text_peringatan').text(\"Ok, Data Ditemukan\");\n                            $('#Peringatan').removeClass('alert-danger hide');\n                            $('#Peringatan').addClass('alert-success');\n\n                            $('#delete_hasil').removeClass('hide');\n                            $('#delete_transaksi').attr(\"data-id_transaksi\", msg.id_transaksi);\n                            $('#delete_transaksi').attr(\"data-tahun\", msg.data_tahun);\n                            $('#delete_transaksi').attr(\"data-base\", msg.data_base);\n                        }\n                    },\n                });\n            }\n\n        });\n\n        $('#confirm-delete').on('click', '.btn-ok', function(e) {\n            var id_transaksi = $(\"#delete_transaksi\").attr(\"data-id_transaksi\");\n            var tahun = $(\"#delete_transaksi\").attr(\"data-tahun\");\n            var base = $(\"#delete_transaksi\").attr(\"data-base\");\n\n            var $modalDiv = $(e.delegateTarget);\n            $modalDiv.modal('hide');\n            $.ajax({\n                type: 'POST',\n                url: '<?php echo Yii::app()->baseUrl . '/sabh/toolsDeleteDataDouble/deleteDataDouble'; ?>',\n                dataType: 'json',\n                beforeSend: function() { $('#wait').show(); },\n                complete: function() { $('#wait').hide(); },\n                data: {id_transaksi: id_transaksi, tahun: tahun, base: base},\n                success: function(msg) {\n                    if (msg.msg_err == '404') {\n                        $('#text_peringatan').text(\"Maaf, Data Tidak Bisa Dihapus\");\n                        $('#Peringatan').removeClass('hide');\n                    } else {\n                        $('#text_peringatan').text(\"Ok, Data Sudah Dihapus\");\n                        $('#Peringatan').removeClass('hide');\n\n                        $('#delete_hasil').addClass('hide');\n                        $('#delete_transaksi').removeAttr(\"data-id_transaksi\");\n                        $('#delete_transaksi').removeAttr(\"data-tahun\");\n                        $('#delete_transaksi').removeAttr(\"data-base\");\n\n                        $('#FormDeleteDataDouble_nama').val('');\n                        $('#FormDeleteDataDouble_nomor_transaksi').val('');\n                        $('#FormDeleteDataDouble_base').val('');\n                    }\n                },\n            });\n        });\n    });\n</script>\n\n--- File: 1138 # views/updateMasterYayasan/index.php ---\n\n<?php\n$form = $this->beginWidget('CActiveForm', array(\n    'id' => 'search-data-yayasan',\n    'enableClientValidation' => true,\n    'clientOptions' => array(\n        'validateOnSubmit' => true,\n        'afterValidate' => 'js:function(form,data,hasError){\n            $(\".disabled_sementara\").removeAttr(\"disabled\");\n            return true;\n        }'\n    )\n        ));\n?>\n<div class=\"row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Update Master Yayasan</legend>\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nama_yayasan', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nama_yayasan', array('class' => 'form-control','style'=>\"text-transform: uppercase\")); ?>\n                        <?php echo $form->error($model, 'nama_yayasan'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nomor_transaksi', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->textField($model, 'nomor_transaksi', array('class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'nomor_transaksi'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'tahun', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->dropDownList($model, 'tahun', $tahun, array('empty' => 'Tahun Data', 'class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'tahun'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div> \n                    <br/>\n                    <div class=\"col-lg-12\">\n                        <?php echo CHtml::button('Cari', array('id' => 'cari', 'class' => 'pull-right btn btn-primary btn-info')); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<?php $this->endWidget(); ?>\n<div id=\"hasil\" class=\"hide row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Hasil</legend>\n                    <div class=\"col-lg-4\">\n                        <b>Nama</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nama\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4\">\n                        <b>Nomor</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nomor\"> \n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div> \n\n                    <div class=\"col-lg-4\">\n                        <b>Nama Notaris</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nama_notaris\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div> \n\n                    <div class=\"col-lg-4\">\n                        <b>Nomor SK</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nomor_sk\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4\">\n                        <b>Kota</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"kabupaten\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4 hide\">\n                        <b>Tahun</b>\n                    </div>\n                    <div class=\"col-lg-8 hide\" id=\"tahun\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                </fieldset>\n\n                <div class=\"clearfix\"></div>\n                <?php\n                $form = $this->beginWidget('CActiveForm', array(\n                    'id' => 'perubahan_detail_form',\n                    'enableClientValidation' => true,\n                    'clientOptions' => array(\n                        'validateOnSubmit' => true,\n                        'afterValidate' => 'js:function(form,data,hasError){\n                            $(\".disabled_sementara\").removeAttr(\"disabled\");\n                            return true;\n                        }' \n                    )\n                ));\n                ?>\n                <br/>\n                <div class=\"col-lg-12\">\n                    <?php echo CHtml::button('Update', array('id' => 'update', 'class' => 'pull-right btn btn-success btn-md')); ?>\n                    <?php $this->endWidget(); ?> \n                    <a target=\"_blank\" class=\"btn btn-primary btn-md pull-left\" id=\"download_master_yayasan\">Backup Data</a>\n                </div>\n             </div>\n        </section>\n    </div>\n</div>\n\n<!-- hide form untuk menyimpan data setelah klik tombol cari -->\n<form id=\"update-data-yayasan\">\n    <input  name=\"FormUpdateYayasan[nama_yayasan]\" id=\"FormUpdateYayasan_nama_yayasan_update\" type=\"hidden\"> \n    <input name=\"FormUpdateYayasan[nomor_transaksi]\" id=\"FormUpdateYayasan_nomor_transaksi_update\" type=\"hidden\">\n     <input name=\"FormUpdateYayasan[tahun]\" id=\"FormUpdateYayasan_tahun_update\" type=\"hidden\">\n</form>\n\n<div id=\"wait\" style=\"display:none;width:69px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;\"><b>Loading...</b>\n</div>\n\n\n<script>\n    $(document).ready(function() {\n        $(\"#cari\").click(function() {\n            // text\n            $(\"#nama b\").empty();\n            $(\"#nomor b\").empty();\n            $(\"#nama_notaris b\").empty();\n            $(\"#nomor_sk b\").empty();\n            $(\"#kabupaten b\").empty();\n            $(\"#tahun b\").empty();\n\n            // form\n            $(\"#FormUpdateYayasan_nama_yayasan_update\").val('');\n            $(\"#FormUpdateYayasan_nomor_transaksi_update\").val('');\n            $(\"#FormUpdateYayasan_tahun_update\").val('');\n\n            if(!$('#hasil').hasClass('hide')) {\n                $('#hasil').addClass('hide');\n            }\n\n            $.ajax({\n                type: 'POST',\n                url: '<?php echo Yii::app()->baseUrl . '/sabh/updateMasterYayasan/searchDataMasterYayasan'; ?>',\n                dataType: 'json',\n                beforeSend: function() { $('#wait').show(); },\n                complete: function() { $('#wait').hide(); },\n                data: $(\"#search-data-yayasan\").serialize(),\n                success: function(msg) {\n                    if (msg.msg_err == '404') {\n                        $('#hasil').addClass('hide');\n                        $('#download_master_yayasan').attr(\"href\", \"\");\n                        alert(\"Data Tidak Ditemukan\");\n                    } else {\n                        $(\"#nama b\").text(msg.nama_yayasan);\n                        $(\"#nomor b\").text(msg.nomor_transaksi);\n                        $(\"#nama_notaris b\").text(msg.nama_notaris);\n                        $(\"#nomor_sk b\").text(msg.nomor_sk);\n                        $(\"#kabupaten b\").text(msg.kabupaten_nama_yayasan);\n                        $(\"#tahun b\").text(msg.tahun);\n\n                        // form\n                        $(\"#FormUpdateYayasan_nama_yayasan_update\").val(msg.nama_yayasan);\n                        $(\"#FormUpdateYayasan_nomor_transaksi_update\").val(msg.nomor_transaksi);\n                        $(\"#FormUpdateYayasan_tahun_update\").val(msg.tahun);\n\n                        // add href attribute button download\n                        var href_id = msg.id_badan_hukum;\n                        $('#download_master_yayasan').attr(\"href\", \"<?php echo Yii::app()->baseUrl . '/sabh/updateMasterYayasan/downloadDataMasterYayasan/badanHukum/';?>\"+href_id);\n\n                        $('#hasil').removeClass('hide');\n                    }\n                },\n            });\n        });\n\n        $(\"#update\").click(function() {\n            $.ajax({\n                type: 'POST',\n                url: '<?php echo yii::app()->baseUrl . '/sabh/updateMasterYayasan/updateDataMasterYayasan'; ?>',\n                dataType: 'json',\n                beforeSend: function() { $('#wait').show(); },\n                complete: function() { $('#wait').hide(); },\n                data: $(\"#update-data-yayasan\").serialize(),\n                success: function(msg) {\n                    if (msg.msg_err == '404') {\n                        $('#hasil').addClass('hide');\n                        alert(\"Data Tidak Ditemukan\");\n                    } else if (msg.msg_err == '405') {\n                        alert(\"Data Tidak Bisa Di Ubah\");\n                    } else if (msg.msg_err == '200') {\n                        alert(\"Data Berhasil Diupdate\");\n                    } else if (msg.msg_err == '406') {\n                        alert(\"Transaksi Belum Selesai\");\n                    }\n                },\n            });\n        });\n    });\n</script>\n\n--- File: 1165 # mappers/DBakumProvinsiMapper.php ---\n<?php\n\nclass DBakumProvinsiMapper extends MapperBase\n{\n    public function findAllPerseroan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.jenis_perseroan,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.tanggal_sk,\n            p.nomor_transaksi,\n            p.status_transaksi,\n            p.pemegang_saham,\n            p.kegiatan,\n            p.tahun,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            (\"\") AS lat,\n            (\"\") AS lon\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        // ids, secara default dashboard akan menampilkan data tahun ini (agar bisa di join dengan transaksi)\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'. date('Y') .' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            p.provinsi_id_perseroan = :provinsi_id\n            AND p.kabupaten_id_perseroan IS NOT NULL \n            AND p.kabupaten_id_perseroan != 0\n            AND p.jenis_perseroan != \"\"\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.date('Y').' tp2 \n            WHERE p.id_perseroan = tp2.id_perseroan\n            GROUP BY tp2.id_perseroan)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerseroanGroup($param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perseroan\n        ');\n        $cmd->from('('.$this->findAllPerseroan(array(), false, 'getText').') AS perseroan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYayasan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            ty.keterangan_sosial,\n            ty.keterangan_kemanusiaan,\n            ty.keterangan_keagamaan,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.pendiri,\n            ty.pengurus,\n            ty.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE\n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        // ids, secara default dashboard akan menampilkan data tahun ini (agar bisa di join dengan transaksi)\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'. date('Y') .' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"yayasan\"\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.date('Y').' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllYayasanGroup($param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_yayasan\n        ');\n        $cmd->from('('.$this->findAllYayasan(array(), false, 'getText').') AS yayasan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllPerkumpulan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            b.maksud,\n            b.tujuan,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            tp.pengurus,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE\n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'. date('Y') .' tp', 'tp.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"perkumpulan\"\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'.date('Y').' tp2 \n            WHERE b.badan_hukum_id = tp2.id_badan_hukum\n            GROUP BY tp2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulanGroup($param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perkumpulan\n        ');\n        $cmd->from('('.$this->findAllPerkumpulan(array(), false, 'getText').') AS perkumpulan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 693 # views/updateMasterPerkumpulan/index.php ---\n\n<?php\n$form = $this->beginWidget('CActiveForm', array(\n    'id' => 'search-master-perkumpulan',\n    'enableClientValidation' => true,\n    'clientOptions' => array(\n        'validateOnSubmit' => true,\n        'afterValidate' => 'js:function(form,data,hasError){\n            $(\".disabled_sementara\").removeAttr(\"disabled\");\n            return true;\n        }'\n    )\n));\n?>\n<div class=\"row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Update Master Perkumpulan</legend>\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nama_perkumpulan', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">                            \n                        <?php echo $form->textField($model, 'nama_perkumpulan', array('class' => 'form-control','style'=>\"text-transform: uppercase\")); ?>\n                        <?php echo $form->error($model, 'nama_perkumpulan'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'nomor_transaksi', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">                            \n                        <?php echo $form->textField($model, 'nomor_transaksi', array('class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'nomor_transaksi'); ?>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-2\">\n                        <?php echo $form->labelEx($model, 'tahun', array('class' => 'control-label')); ?>\n                    </div>\n                    <div class=\"col-lg-10\">\n                        <?php echo $form->dropDownList($model, 'tahun', $tahun, array('empty' => 'Tahun Data', 'class' => 'form-control')); ?>\n                        <?php echo $form->error($model, 'tahun'); ?>                                \n                    </div>    \n                    <div class=\"clearfix\"></div> \n                    <br/>       \n                    <div class=\"col-lg-12\">                            \n                        <?php echo CHtml::button('Cari', array('id' => 'cari', 'class' => 'pull-right btn btn-info')); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<?php $this->endWidget(); ?>\n\n<div id=\"hasil\" class=\"hide row bag_2\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Hasil</legend>\n                    <div class=\"col-lg-4\">\n                        <b>Nama</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nama\">\n                        <b></b>                       \n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4\">\n                        <b>Nomor</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nomor\"> \n                        <b></b>                           \n                    </div>\n                    <div class=\"clearfix\"></div> \n\n                    <div class=\"col-lg-4\">\n                        <b>Nama Notaris</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nama_notaris\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div> \n\n                    <div class=\"col-lg-4\">\n                        <b>Nomor SK</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"nomor_sk\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4\">\n                        <b>Kota</b>\n                    </div>\n                    <div class=\"col-lg-8\" id=\"kabupaten\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"col-lg-4 hide\">\n                        <b>Tahun</b>\n                    </div>\n                    <div class=\"col-lg-8 hide\" id=\"tahun\">\n                        <b></b>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                </fieldset>\n\n                <div class=\"clearfix\"></div>\n                <?php\n                $form = $this->beginWidget('CActiveForm', array(\n                    'id' => 'perubahan_detail_form',\n                    'enableClientValidation' => true,\n                    'clientOptions' => array(\n                        'validateOnSubmit' => true,\n                        'afterValidate' => 'js:function(form,data,hasError){\n                            $(\".disabled_sementara\").removeAttr(\"disabled\");\n                            return true;\n                        }' \n                    )\n                ));\n                ?>\n                <br/>\n                <div class=\"col-lg-12\">\n                    <?php echo CHtml::button('Update', array('id' => 'update', 'class' => 'pull-right btn btn-success btn-md')); \n                     $this->endWidget(); ?>                   \n                   <a target=\"_blank\" class=\"btn btn-primary btn-md pull-left\" id=\"download_master_perkumpulan\">Backup Data</a>\n                </div>\n             </div>\n        </section>\n    </div>\n</div>\n\n<!-- hide form untuk menyimpan data setelah klik tombol cari -->\n<form id=\"update-master-perkumpulan\">\n    <input name=\"FormUpdatePerkumpulan[nama_perkumpulan]\" id=\"FormUpdatePerkumpulan_nama_perkumpulan_update\" type=\"hidden\">\n    <input name=\"FormUpdatePerkumpulan[nomor_transaksi]\" id=\"FormUpdatePerkumpulan_nomor_transaksi_update\" type=\"hidden\">\n    <input  name=\"FormUpdatePerkumpulan[tahun]\" id=\"FormUpdatePerkumpulan_tahun_update\" type=\"hidden\">\n</form>\n\n<div id=\"wait\" style=\"display:none;width:69px;border:1px solid black;position:absolute;top:50%;left:50%;padding:2px;\"><b>Loading...</b>\n</div>\n\n\n<script>\n    $(document).ready(function() {\n        $(\"#cari\").click(function() {\n            // text\n            $(\"#nama b\").empty();\n            $(\"#nomor b\").empty();\n            $(\"#nama_notaris b\").empty();\n            $(\"#nomor_sk b\").empty();\n            $(\"#kabupaten b\").empty();\n            $(\"#tahun b\").empty();\n\n            // form\n            $(\"#FormUpdatePerkumpulan_nama_perkumpulan_update\").val('');\n            $(\"#FormUpdatePerkumpulan_nomor_transaksi_update\").val('');\n            $(\"#FormUpdatePerkumpulan_tahun_update\").val('');\n\n\n            if(!$('#hasil').hasClass('hide')) {\n                $('#hasil').addClass('hide');\n            }\n\n            $.ajax({\n                type: 'POST',\n                url: '<?php echo Yii::app()->baseUrl . '/sabh/updateMasterPerkumpulan/searchDataMasterPerkumpulan'; ?>',\n                dataType: 'json',\n                beforeSend: function() { $('#wait').show(); },\n                complete: function() { $('#wait').hide(); },\n                data: $(\"#search-master-perkumpulan\").serialize(),\n                success: function(msg) {\n                    if (msg.msg_err == '404') {\n                        $('#hasil').addClass('hide');\n                        $('#download_master_perkumpulan').attr(\"href\", \"\");\n                        alert(\"Data Tidak Ditemukan\");\n                    } else {\n                        // text\n                        $(\"#nama b\").text(msg.nama_perkumpulan);\n                        $(\"#nomor b\").text(msg.nomor_transaksi);\n                        $(\"#nama_notaris b\").text(msg.nama_notaris);\n                        $(\"#nomor_sk b\").text(msg.nomor_sk);\n                        $(\"#kabupaten b\").text(msg.kabupaten_nama_yayasan);\n                        $(\"#tahun b\").text(msg.tahun);\n\n                        // form\n                        $(\"#FormUpdatePerkumpulan_nama_perkumpulan_update\").val(msg.nama_perkumpulan);\n                        $(\"#FormUpdatePerkumpulan_nomor_transaksi_update\").val(msg.nomor_transaksi);\n                        $(\"#FormUpdatePerkumpulan_tahun_update\").val(msg.tahun);\n\n                        // add href attribute button download\n                        var href_id = msg.id_badan_hukum;\n                        $('#download_master_perkumpulan').attr(\"href\", \"<?php echo Yii::app()->baseUrl . '/sabh/updateMasterPerkumpulan/downloadDataMasterPerkumpulan/badanHukum/';?>\"+href_id);\n\n                        $('#hasil').removeClass('hide');\n                    }\n                },\n            });\n        });\n\n        $(\"#update\").click(function() {\n            $.ajax({\n                type: 'POST',\n                url: '<?php echo yii::app()->baseUrl . '/sabh/updateMasterPerkumpulan/updateDataMasterPerkumpulan'; ?>',\n                dataType: 'json',\n                beforeSend: function() { $('#wait').show(); },\n                complete: function() { $('#wait').hide(); },\n                data: $(\"#update-master-perkumpulan\").serialize(),\n                success: function(msg) {\n                    if (msg.msg_err == '404') {\n                        $('#hasil').empty();\n                        alert(\"Data Tidak Ditemukan\");\n                    } else if (msg.msg_err == '405') {\n                        alert(\"Data Tidak Bisa Di Ubah\");\n                    } else if (msg.msg_err == '200') {\n                        alert(\"Data Berhasil Diupdate\");\n                    } else if (msg.msg_err == '406') {\n                        alert(\"Transaksi Belum Selesai\");\n                    }\n                },\n            });\n        });\n    });\n\n    \n\n</script>\n\n--- File: 629 # views/perbaikanData/index.php ---\n<style type=\"text/css\">\n\t.btn-blue {\n\t\tbackground-color: #008CBA;\n\t\tcolor: white;\n\t}\n\n\t.btn-perseroan {\n\t\tbackground-color: #3e4e60;\n\t\tcolor: #ffffff;\n\t\t/*border: 1px solid #000000;*/\n\t}\n\n\t.btn-yayasan {\n\t\tbackground-color: #e4ba00;\n\t\tcolor: #ffffff;\n\t\t/*border: 1px solid #000000;*/\n\t}\n\n\t.btn-perkumpulan {\n\t\tbackground-color: #c93e33;\n\t\tcolor: #ffffff;\n\t\t/*border: 1px solid #000000;*/\n\t}\n\n\t.btn-perseroan:focus, .btn-yayasan:focus, .btn-perkumpulan:focus {\n\t\tbackground-color: #ffffff;\n\t}\n\n\t::-webkit-input-placeholder {\n\t   text-transform: initial;\n\t}\n\n\t:-moz-placeholder { \n\t   text-transform: initial;\n\t}\n\n\t::-moz-placeholder {  \n\t   text-transform: initial;\n\t}\n\n\t:-ms-input-placeholder { \n\t   text-transform: initial;\n\t}\n</style>\n\n<?php\n$this->breadcrumbs=array(\n\t'Permohonan Perbaikan Data Badan Hukum', ucfirst($jenis),\n\t);\n?>\n\n<center><h3>PERMOHONAN PERBAIKAN DATA BADAN HUKUM</h3></center><br><br>\n\n<div class=\"alert alert-block alert-danger\">\n\t<label>Download Manual Book Permohonan Perbaikan Data. </label>\n\t<?= '<a href=\"'.Yii::app()->getBaseUrl(true).'/uploads/manual/panduan_perbaikan_data.pdf\" target=\"_blank\">Klik</a>'; ?>\n</div>\n\n<input type=\"hidden\" id=\"jenis\" value=\"<?= $jenis ?>\">\n<div id=\"btn-badanhukum\" class=\"btn-group btn-group-justified\">\n\t<a class=\"btn btn-perseroan\" id=\"btn-perseroan\" href=\"<?php echo CHtml::normalizeUrl(array('perbaikanData/perseroan')); ?>\">Perseroan</a>\n\t<a class=\"btn btn-yayasan\" id=\"btn-yayasan\" href=\"<?php echo CHtml::normalizeUrl(array('perbaikanData/yayasan')); ?>\">Yayasan</a>\n\t<a class=\"btn btn-perkumpulan\" id=\"btn-perkumpulan\" href=\"<?php echo CHtml::normalizeUrl(array('perbaikanData/perkumpulan')); ?>\">Perkumpulan</a>\n</div><br><br>\n\n<?php\n    foreach(Yii::app()->user->getFlashes() as $key => $message) {\n        echo '<div class=\"alert alert-block alert-danger\">\n                  <button data-dismiss=\"alert\" class=\"close close-sm\" type=\"button\">\n                      <i class=\"fa fa-times\"></i>\n                  </button>\n                  <label class=\"flash-' . $key . '\">' . $message . '</label>\n              </div>';\n    }\n?>\n\n<?php $form=$this->beginWidget('CActiveForm', array(\n\t'id'=>'form-cari',\n\t'enableClientValidation' => true,\n    'clientOptions' => array(\n        'validateOnSubmit' => true,\n    )\n)); \n?>\n\n<div class=\"form\">\n\t<section id=\"panel-perseroan\" class=\"panel\">\n\t\t<div class=\"panel-body\">\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-lg-5\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<?php echo $form->labelEx($model,'no_voucher' . ucfirst($jenis) . '<font color=\"red\"> *</font>', array('class' => '',)); ?>\n\t\t\t\t\t\t<?php echo $form->textField($model,'no_voucher', array(\n\t\t\t\t\t\t'placeholder' => 'Masukkan Kode Voucher Perbaikan' . ucfirst($jenis),\n\t\t\t\t\t\t'class' => 'form-control',\n\t\t\t\t\t\t'style' => 'text-transform:uppercase;',\n\t\t\t\t\t\t'autocomplete' => 'off',\n\t\t\t\t\t\t'data-voucher' => strtolower($jenis) == 'perseroan' ? '001001053' : '001001058'\n\t\t\t\t\t\t\t)); ?>\n\t\t\t\t\t\t<?php echo $form->error($model,'no_voucher'); ?>\n\t\t\t\t\t\t<p class=\"help-block link-voucher\"><span class=\"icon-info-sign\"></span>\n\t\t\t\t\t\t<?php if($jenis == 'perseroan'){?>\n                            Kode voucher dapat dibeli melalui link berikut ini, klik <b><?php echo BillingHelpers::mappingLink(32, $jenis);?></b></p>\n\t\t\t\t\t\t\t<?php }else{?>\n\t\t\t\t\t\t\t\tKode voucher dapat dibeli melalui link berikut ini, klik <b><?php echo BillingHelpers::mappingLink(33, $jenis);?></b></p>\n\t\t\t\t\t\t<?php }?>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-5\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<?php echo $form->labelEx($model,'nama' . ucfirst($jenis) . '<font color=\"red\"> *</font>', array('class' => '',)); ?>\n\t\t\t\t\t\t<?php echo $form->textField($model,'nama', array(\n\t\t\t\t\t\t'placeholder' => 'Masukkan Nama ' . ucfirst($jenis),\n\t\t\t\t\t\t'class' => 'form-control',\n\t\t\t\t\t\t'style' => 'text-transform:uppercase;',\n\t\t\t\t\t\t'autocomplete' => 'off',\n\t\t\t\t\t\t)); ?>\n\t\t\t\t\t\t<?php echo $form->error($model,'nama'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"row\">\n\t\t\t\t<div class=\"col-lg-5\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t\t<?php echo $form->labelEx($model,'nomor', array('class' => '',)); ?>\n\t\t\t\t\t\t\t<?php echo $form->textField($model,'nomor', array(\n\t\t\t\t\t\t\t'placeholder' => 'Masukkan Nomor SK/SP',\n\t\t\t\t\t\t\t'class' => 'form-control',\n\t\t\t\t\t\t\t'autocomplete' => 'off',\n\t\t\t\t\t\t\t\t)); ?>\n\t\t\t\t\t\t\t<?php echo $form->error($model,'nomor'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"col-lg-5\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<?php echo $form->labelEx($model,'tgl_sksp', array('class' => '',)); ?>\n\t\t\t\t\t\t<?php echo $form->textField($model,'tgl_sksp', array(\n\t\t\t\t\t\t'placeholder' => 'Masukkan Tanggal SK/SP',\n\t\t\t\t\t\t'class' => 'form-control',\n\t\t\t\t\t\t'autocomplete' => 'off',\n\t\t\t\t\t\t\t)); ?>\n\t\t\t\t\t\t<?php echo $form->error($model,'tgl_sksp'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<br><br><br>&nbsp;&nbsp;&nbsp;\n\t\t\t<?php echo CHtml::submitButton('Cari', array('class' => 'btn btn-blue', 'name'=>'cariBtn', 'id'=>'cariBtn')); ?>\n\t\t</div>\n\t</section>\n</div>\n<?php $this->endWidget(); ?>\n\n<div id=\"dialog-confirm\" title=\"Apakah data yang anda isi sudah benar?\">\n    <div>\n    \t<p>Nama <?= ucfirst($jenis) ?> : <span id=\"confirmNama\" /></p>\n    </div>\n    <div>\n    \t<p>Nomor SK/SP : <span id=\"confirmNomor\" /></p>\n    </div>\n    <div>\n    \t<p>Tanggal SK/SP : <span id=\"confirmTgl\" /></p>\n    </div>\n</div>\n\n<?php\n    foreach(Yii::app()->user->getFlashes() as $key => $message) {\n        echo '<div class=\"flash-' . $key . '\">' . $message . \"</div>\\n\";\n    }\n?>\n\n<script type=\"text/javascript\">\n    $(function() {\n\t\t$(\"#FormPerbaikanData_tgl_sksp\").datepicker({\n\t        changeMonth: true,\n\t        changeYear: true,\n\t        dateFormat: 'dd-mm-yy',\n\t        maxDate: \"Now\",\n\t    });\n\n\t\tvar postForm = false;\n        $(\"#dialog-confirm\").dialog({\n            resizable: false,\n            height: 250,\n            autoOpen: false,\n            width: 430,\n            modal: true,\n            buttons: {\n            \tYa: function(){\n            \t\t\tpostForm = true;\n\t\t\t            $(\"#form-cari\").submit();\n            \t\t\t$(this).dialog(\"close\");\n\t\t\t         },\n                Tidak: function() {\n\t                    $(this).dialog(\"close\");\n\t                }\n            }\n        });\n\n        $(\"#cariBtn\").on('click', function(e) {\n\t\t\tif(!postForm) {\n\t\t\t  \te.preventDefault();\n\t\t\t  \tif($('#FormPerbaikanData_nama').val() == \"\" && $('#FormPerbaikanData_nomor').val() == \"\" && $('#FormPerbaikanData_tgl_sksp').val() == \"\") {\n\t\t\t  \t\t$(\"#form-cari\").submit();\n\t\t\t  \t\treturn;\n\t\t\t  \t} else {\n\t\t\t\t  \t$(\"#dialog-confirm\").dialog('open');\n\t\t            $(\"#confirmNama\").text($('#FormPerbaikanData_nama').val());\n\t\t            $(\"#confirmNomor\").text($('#FormPerbaikanData_nomor').val());\n\t\t            $(\"#confirmTgl\").text($('#FormPerbaikanData_tgl_sksp').val());\n\t\t\t  \t}\n\t\t\t}\n        });\n\n        if($(\"#jenis\").val() == 'perseroan') {\n        \t$(\"#btn-perseroan\").css(\"background-color\", \"lighten(#3e4e60, 50%)\");\n        \t$(\"#btn-perseroan\").attr(\"disabled\", \"disabled\");\n        } else if ($(\"#jenis\").val() == 'yayasan') {\n        \t$(\"#btn-yayasan\").css(\"background-color\", \"lighten(#e4ba00, 50%)\");\n        \t$(\"#btn-yayasan\").attr(\"disabled\", \"disabled\");\n        } else {\n        \t$(\"#btn-perkumpulan\").css(\"background-color\", \"lighten(#c93e33, 50%)\");\n        \t$(\"#btn-perkumpulan\").attr(\"disabled\", \"disabled\");\n        }\n\n        $(\"#FormPerbaikanData_tgl_sksp\").on('paste', function(e) {\n        \te.preventDefault();\n        });\n    });\n</script>\n\n--- File: 852 # views/monitoringPerseroan/index.php ---\n<?php\n/* @var $this MonitoringPerseroanController */\n/* @var $listDay array */\n/* @var $listMonth array */\n/* @var $listYear array */\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Monitoring Pendirian Dan Perubahan Perseroan Dengan Modal Dasar < 50 Juta</legend>\n                    <div class=\"task-option\">\n                <?php\n                echo CHtml::beginForm(array('downloadExcel'), 'post', array('id'=>'form_filter'));\n                echo CHtml::dropDownList('ListDay', date('j'), $listDay, array(\n                    'class' => 'styled'\n                ));\n                ?>\n                <?php\n                echo CHtml::dropDownList('ListMonthly', date('n'), $listMonth, array(\n                    'class' => 'styled'\n                ));\n                ?>\n                <?php\n                echo CHtml::dropDownList('ListYear', date('Y'), $listYear, array(\n                    'class' => 'styled'\n                ));\n                ?>\n                &nbsp;\n                <?php\n                echo CHtml::dropDownList('TypeCharts', 0, array(\n                         'Total Keseluruhan', 'Harian', 'Bulanan', 'Tahunan', 'Total Per Bulan',\n                        'Total Per Tahun'), array(\n                    'class' => 'styled'\n                ));\n                echo CHtml::endForm();\n                ?>\n            </div>\n                    <div id=\"rep-graph\" class=\"graph\"></div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Detail Perseroan</legend>\n                    <div class=\"panel-body\">\n                        <div id=\"grid-view\"></div>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\nYii::app()->clientScript->registerScriptFile($this->getBaseModule()->assetsUrl . '/js/highcharts.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile($this->getBaseModule()->assetsUrl . '/js/highcharts-3d.js', CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile($this->getBaseModule()->assetsUrl . '/js/highcharts-exporting.js', CClientScript::POS_END);\nYii::app()->clientScript->registerScript('monitoring-perseroan-js',\n'\n    (function(){\n        $(document).ready(function() {\n            // filter by day, month, year\n            $(\"#TypeCharts\").change(function(){\n                /*\n                 value of type is :\n                 0 = Total Keseluruhan\n                 1 = Harian\n                 2 = Bulanan\n                 3 = Tahunan\n                 4 = Total Per Bulan\n                 5 = Total Per Tahun\n                */ \n                var type = $(\"#TypeCharts\").val();\n                switch (parseInt(type)) {\n                    case 1:\n                        daySelected();\n                        break;\n                    case 2:\n                        monthSelected();\n                        break;\n                    case 3:\n                        yearSelected();\n                        break;\n                    case 4:\n                        totalPerMonth();\n                        break;\n                    case 5:\n                        totalPerYear();\n                        break;\n                    case 0:\n                        allTotal();\n                        break;\n                }\n            });\n\n            // run this after page fully loaded\n            $(\"#TypeCharts\").trigger(\"change\");\n\n            // run by trigger\n            $(\"#ListDay, #ListMonthly, #ListYear\").change(function(){\n                $(\"#TypeCharts\").trigger(\"change\");\n            });\n\n            /************************* by day *********************************/\n            // filter by day\n            function daySelected()\n            {\n                $(\"#ListDay\").show();\n                $(\"#ListMonthly\").show();\n                $(\"#ListYear\").show();\n                reqChartDay();\n                reqGridDay();\n            }\n\n            // for chart\n            function reqChartDay()\n            {\n                var d = parseInt($(\"#ListDay\").val());\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { day: d, month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGraphDay').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            // for grid\n            function reqGridDay()\n            {\n                var d = parseInt($(\"#ListDay\").val());\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    data: { day: d, month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGridDay').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            /*********************** end by day *******************************/\n\n            /*********************** by month *********************************/\n            // filter by month\n            function monthSelected()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").show();\n                $(\"#ListYear\").show();\n                reqChartMonthly();\n                reqGridMonthly();\n            }\n\n            // for chart\n            function reqChartMonthly()\n            {\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGraphMonthly').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            // for grid\n            function reqGridMonthly()\n            {\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    data: { month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGridMonthly').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            function totalPerMonth()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").show();\n                $(\"#ListYear\").show();\n                reqChartTotalMonthly();\n                reqGridMonthly();\n            }\n\n            // for chart\n            function reqChartTotalMonthly()\n            {\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGraphTotalMonthly').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            /************************ end by month ****************************/\n            \n            /************************* by year ********************************/\n            // filter year\n            function yearSelected()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").hide();\n                $(\"#ListYear\").show();\n                reqChartYear();\n                reqGridYear();\n            }\n\n            // for chart\n            function reqChartYear()\n            {\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { year: y},\n                    url: \"'.$this->createUrl('ajaxGraphYear').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            // for grid\n            function reqGridYear()\n            {\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    data: { year: y},\n                    url: \"'.$this->createUrl('ajaxGridYear').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            function totalPerYear()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").hide();\n                $(\"#ListYear\").show();\n                reqChartTotalYear();\n                reqGridYear();\n            }\n\n            function reqChartTotalYear()\n            {\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { year: y},\n                    url: \"'.$this->createUrl('ajaxGraphTotalYear').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            /************************** end by year ***************************/\n\n            /************************** all total *****************************/\n\n            function allTotal()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").hide();\n                $(\"#ListYear\").hide();\n                reqChartAllTotal();\n                reqGridAllTotal();\n            }\n\n            // for chart all total\n            function reqChartAllTotal()\n            {\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    url: \"'.$this->createUrl('ajaxGraphAllTotal').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n             // for grid all total\n            function reqGridAllTotal() \n            {\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    url: \"'.$this->createUrl('ajaxGridAllTotal').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            /************************** end all total *************************/\n        });\n    })();\n',\nCClientScript::POS_END);\n?>\n\n--- File: 674 # views/verifikatorPerseroan/index.php ---\n<?php\n/* @var $model VerifikasiPerseroan */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>DAFTAR TRANSAKSI PERSEROAN</h3>\n                </center>\n                \n                <div class=\"row\">\n                    <div class=\"col-md-12\" style=\"margin-bottom: 20px;\">\n                        <div class=\"pull-right\">\n                            <?= CHtml::link('Lihat Berakhirnya Status Badan Hukum', \n                                ['berakhirnyaStatus'], \n                                ['class' => 'btn btn-primary btn-lg', 'style' => 'background-color: #337ab7; border-color: #2e6da4;']\n                            ); ?>\n                        </div>\n                        <div class=\"clearfix\"></div>\n                    </div>\n                </div>\n                <br>\n                <div class=\"panel-body\">\n                    <div class=\"row\">\n                        <div class=\"col-md-2\">\n                            <label>Pilih Tahun</label>\n                            <?= CHtml::dropDownList('tahun', date('Y'), \n                                array_combine(range(2015, date('Y')), range(2015, date('Y'))), \n                                array('class' => 'form-control', 'id' => 'tahun-select')\n                            ); ?>\n                        </div>\n                    </div>\n                    <br>\n                    <div class=\"table-responsive\">\n                        <?php\n                        $this->widget('zii.widgets.grid.CGridView', array(\n                            'id' => 'verifikasi-perseroan-grid',\n                            'dataProvider' => $model->search(),\n                            'filter' => $model,\n                            'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                            'columns' => [\n                                [\n                                    'header' => 'No',\n                                    'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                                    'headerHtmlOptions' => ['style' => 'width: 50px; text-align: center'],\n                                    'htmlOptions' => ['style' => 'text-align: center'],\n                                ],\n                                [\n                                    'header' => 'Nomor Transaksi',\n                                    'name' => 'nomor_transaksi',\n                                    'value' => '$data->nomor_transaksi',\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Jenis Transaksi',\n                                    'name' => 'TransPerseroan.id_aksi_transaksi',\n                                    'value' => function($data) {\n                                        if (isset($data->TransPerseroan) && isset($data->TransPerseroan->id_aksi_transaksi)) {\n                                            $aksi = $data->TransPerseroan->id_aksi_transaksi;\n                                            if ($aksi == TransaksiPerseroan::$id_aksi_transaksi_pendirian) {\n                                                return 'Pendirian';\n                                            } elseif ($aksi == TransaksiPerseroan::$id_aksi_transaksi_perubahan) {\n                                                return 'Perubahan';\n                                            } elseif ($aksi == TransaksiPerseroan::$id_aksi_transaksi_permohonan_berakhir) {\n                                                return 'Berakhirnya Status Badan Hukum';\n                                            } elseif ($aksi == TransaksiPerseroan::$id_aksi_transaksi_marger) {\n                                                return 'Merger';\n                                            } elseif ($aksi == TransaksiPerseroan::$id_aksi_transaksi_akusisi) {\n                                                return 'Akuisisi';\n                                            } elseif ($aksi == TransaksiPerseroan::$id_aksi_transaksi_pembubaran) {\n                                                return 'Pembubaran';\n                                            } elseif ($aksi == TransaksiPerseroan::$id_aksi_transaksi_peleburan) {\n                                                return 'Peleburan';\n                                            }\n                                        }\n                                        return '-';\n                                    },\n                                    'filter' => CHtml::dropDownList(\n                                        get_class($model).'[TransPerseroan.id_aksi_transaksi]',\n                                        isset($model->TransPerseroan) ? $model->TransPerseroan->id_aksi_transaksi : '',\n                                        [\n                                            TransaksiPerseroan::$id_aksi_transaksi_pendirian => 'Pendirian',\n                                            TransaksiPerseroan::$id_aksi_transaksi_perubahan => 'Perubahan',\n                                            TransaksiPerseroan::$id_aksi_transaksi_permohonan_berakhir => 'Berakhirnya Status Badan Hukum',\n                                            TransaksiPerseroan::$id_aksi_transaksi_marger => 'Merger',\n                                            TransaksiPerseroan::$id_aksi_transaksi_akusisi => 'Akuisisi',\n                                            TransaksiPerseroan::$id_aksi_transaksi_pembubaran => 'Pembubaran',\n                                            TransaksiPerseroan::$id_aksi_transaksi_peleburan => 'Peleburan',\n                                        ],\n                                        ['empty' => '']\n                                    ),\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Jenis Perseroan',\n                                    'name' => 'TransPerseroan.jenis_perseroan',\n                                    'value' => function($data) {\n                                        if (isset($data->TransPerseroan) && isset($data->TransPerseroan->jenis_perseroan)) {\n                                            return $data->TransPerseroan->jenis_perseroan;\n                                        }\n                                        return '-';\n                                    },\n                                    'filter' => CHtml::dropDownList(\n                                        get_class($model).'[TransPerseroan.jenis_perseroan]',\n                                        isset($model->TransPerseroan) ? $model->TransPerseroan->jenis_perseroan : '',\n                                        [\n                                            'PMDN' => 'PMDN',\n                                            'PMA' => 'PMA',\n                                            'SWASTA NASIONAL' => 'SWASTA NASIONAL',\n                                            'PMDN FASILITAS' => 'PMDN FASILITAS',\n                                        ],\n                                        ['empty' => '']\n                                    ),\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Nama Perseroan',\n                                    'name' => 'nama_perseroan',\n                                    'value' => '$data->nama_perseroan',\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Tanggal Permohonan',\n                                    'value' => function($data) {\n                                        return date('d F Y', strtotime($data->created_date));\n                                    },\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Verifikasi Level 1',\n                                    'value' => function($data) {\n                                        $detail = $data->getOwnVerifDet(Yii::app()->user->id);\n                                        if ($detail && $detail->tgl_verifikasi_1) {\n                                            return date('d F Y', strtotime($detail->tgl_verifikasi_1));\n                                        }\n                                        return '-';\n                                    },\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Verifikasi Level 2',\n                                    'value' => function($data) {\n                                        $detail = $data->getOwnVerifDet(Yii::app()->user->id);\n                                        if ($detail && $detail->tgl_verifikasi_2) {\n                                            return date('d F Y', strtotime($detail->tgl_verifikasi_2));\n                                        }\n                                        return '-';\n                                    },\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Status Verifikasi',\n                                    'name' => 'status',\n                                    'value' => function($data) {\n                                        $detail = $data->getOwnVerifDet(Yii::app()->user->id);\n                                        if ($detail) {\n                                            if ($detail->status == 1) {\n                                                return CHtml::tag('span', ['class' => 'label label-success'], 'Diterima');\n                                            } elseif ($detail->status == 2) {\n                                                return CHtml::tag('span', ['class' => 'label label-danger'], 'Ditolak');\n                                            }\n                                        }\n                                        return CHtml::tag('span', ['class' => 'label label-info'], 'Menunggu Verifikasi');\n                                    },\n                                    'filter' => CHtml::dropDownList(\n                                        get_class($model).'[status]',\n                                        $model->status,\n                                        [\n                                            '0' => 'Menunggu Verifikasi',\n                                            '1' => 'Diterima',\n                                            '2' => 'Ditolak',\n                                        ],\n                                        ['empty' => '']\n                                    ),\n                                    'type' => 'raw',\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0'],\n                                ],\n                                [\n                                    'header' => 'Aksi',\n                                    'value' => function($data) {\n                                        $current_user_id = Yii::app()->user->id;\n                                        $detail = $data->getOwnVerifDet($current_user_id);\n                                        \n                                        if ($detail && $detail->canVerify($current_user_id)) {\n                                            $verification_level = $detail->getVerificationLevel($current_user_id);\n                                            $btn_text = $verification_level == 1 ? 'Verifikasi Level 1' : 'Verifikasi Level 2';\n                                            \n                                            return CHtml::tag('button', [\n                                                'type' => 'button',\n                                                'class' => 'btn btn-success btn-sm',\n                                                'data-id' => $data->id,\n                                                'data-nomor' => $data->nomor_transaksi\n                                            ], $btn_text);\n                                        }\n                                        \n                                        // If user already verified at their level\n                                        if ($detail) {\n                                            $verification_level = $detail->getVerificationLevel($current_user_id);\n                                            if (($verification_level == 1 && $detail->tgl_verifikasi_1) ||\n                                                ($verification_level == 2 && $detail->tgl_verifikasi_2)) {\n                                                return CHtml::tag('span', ['class' => 'text-success'], 'Sudah Verifikasi');\n                                            }\n                                        }\n                                        \n                                        return '-';\n                                    },\n                                    'type' => 'raw',\n                                    'headerHtmlOptions' => ['style' => 'color: #667fa0; text-align: center'],\n                                    'htmlOptions' => ['style' => 'text-align: center'],\n                                ],\n                            ],\n                            'pager' => [\n                                'class' => 'CLinkPager',\n                                'firstPageLabel' => 'First',\n                                'lastPageLabel' => 'Last',\n                                'prevPageLabel' => 'Previous',\n                                'nextPageLabel' => 'Next',\n                                'header' => '',\n                                'htmlOptions' => ['class' => 'pagination pagination-sm'],\n                            ],\n                        ));\n                        ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\n$script = <<< JS\n$(document).ready(function(){\n    $('#tahun-select').change(function(){\n        var tahun = $(this).val();\n        // Filter berdasarkan tahun jika diperlukan\n        // Implementasi filtering akan ditambahkan nanti\n    });\n    \n    $(document).on('click', '.btn-success', function(){\n        var id = $(this).data('id');\n        var nomor = $(this).data('nomor');\n        \n        // Redirect ke halaman detail verifikasi\n        window.location.href = '/sabh/verifikatorPerseroan/verifikasiDetail?id_verif=' + id + '&nomor_transaksi=' + nomor;\n    });\n});\nJS;\nYii::app()->clientScript->registerScript('js-verifikator-perseroan-index', $script, CClientScript::POS_END);\n?>\n\n--- File: 671 # views/toolHapusMaster/index.php ---\n<style>.errorMessage{color:red;}</style>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>FORM TOOL HAPUS PESAN NAMA</h3>\n                </center>\n            </div>\n            <form id=\"form-tipe\" action=\"/sabh/toolPesanNama/index\" method=\"POST\">\n                <div class=\"panel-body\">\n                    <div class=\"form-group\">\n                        <div class=\"col-lg-3\">\n                            <label for=\"NomorSk\" class=\"control-label required\">TIPE <span class=\"required\">*</span></label>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <select id=\"tipe\" name=\"tipe\" class=\"form-control\">\n                                <option>-- Pilih Tipe --</option>\n                                <option value=\"perseroan\" <?= (!empty($is_perseroan)) ? 'selected' : '' ?>>Perseroan</option>\n                                <option value=\"yayasan\" <?= (!empty($is_yayasan_perkumpulan) && $is_yayasan_perkumpulan == 'yayasan') ? 'selected' : '' ?>>Yayasan</option>\n                                <option value=\"perkumpulan\"<?= (!empty($is_yayasan_perkumpulan) && $is_yayasan_perkumpulan == 'perkumpulan') ? 'selected' : '' ?>>Perkumpulan</option>\n                            </select>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"panel-body\" id=\"form-nama\" style=\"display: none\">\n                    <div class=\"form-group\">\n                        <div class=\"col-lg-3\">\n                            <label for=\"NomorSk\" class=\"control-label required\" id=\"label-nama\">NAMA <?= (!empty($is_yayasan_perkumpulan)) ? (($is_yayasan_perkumpulan == 'yayasan') ? 'YAYASAN' : 'PERKUMPULAN') : 'PERSEROAN' ?><span class=\"required\">*</span></label>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <input type=\"text\" name=\"nama\" id=\"nama\" value=\"<?= (!empty($nama)) ? $nama : '' ?>\" class=\"form-control\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"panel-body\">\n                    <div class=\"form-group\">\n                        <div class=\"col-lg-3\">\n                            &nbsp;\n                        </div>\n                        <div class=\"col-lg-3\">\n                            <img id=\"loading\" src=\"/themes/flatlab/assets/img/loading-spinner-grey.gif\" width=\"25px\" style=\"display: none\">\n                            <button id=\"btn-submit\" class=\"btn btn-danger\">Cari</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </section>\n    </div>\n</div>\n<?php if (empty($kosong) && !empty($model) && (!empty($is_yayasan_perkumpulan) || !empty($is_perseroan))) { ?>\n    <style>\n        .list_action li {\n            border-bottom:1px solid #BAB8B8; margin-bottom: 0px; padding:2px;\n        }\n\n        .list_action li:last-child {\n            border-bottom:none; margin-bottom: 1px; padding-top:3px;\n        }\n    </style>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">            \n                <div class=\"panel-body\">\n                    <div class=\"panel-heading\">\n                        <h3 class=\"text-center\">\n                            DAFTAR TRANSAKSI <?= (!empty($is_yayasan_perkumpulan)) ? (($is_yayasan_perkumpulan == 'yayasan') ? 'YAYASAN' : 'PERKUMPULAN') : 'PERSEROAN' ?> <?= $nama ?>\n                        </h3>\n                    </div>\n                    <br>\n                    \n                    <div class=\"table-responsive\">\n                        <?php if (!empty($is_yayasan_perkumpulan)) { ?>\n                            <h5 align=\"center\"><b>Data diperoleh dari tabel <?= (!empty($master)) ? 'master' : ' transaksi' ?></b></h5>\n                            <table class=\"table table-striped table-bordered table-hover\">\n                                <tr>\n                                    <td>No</td>\n                                    <td>ID Badan Hukum</td>\n                                    <td>Nama Badan Hukum</td>\n                                    <td>Nomor Transaksi</td>\n                                    <td>Nama Notaris</td>\n                                    <td>Aksi</td>\n                                </tr>\n                                <?php \n                                    $row = 1;\n                                    foreach ($model as $key => $value) { \n                                ?>\n                                    <tr>\n                                        <td><?= $row++ ?></td>\n                                        <td><?= (!empty($master)) ? $value['badan_hukum_id'] : $value['id_badan_hukum'] ?></td>\n                                        <td><?= (!empty($master)) ? $value['nama'] : get_nama($value, $is_yayasan_perkumpulan) ?></td>\n                                        <td><?= (!empty($master)) ? ((!empty($value['no_transaksi'])) ? $value['no_transaksi'] : '<i>Nomor Transaksi kosong</i>') : get_nomor_tanggal($value) ?></td>\n                                        <td><?= $value['nama_notaris'] ?></td>\n                                        <td>\n                                            <a href=\"/sabh/toolPesanNama/hapus/id/<?= (!empty($master)) ? $value['badan_hukum_id'] : $value['id_badan_hukum'] ?>/tipe/<?= $is_yayasan_perkumpulan ?>\" onclick=\"return confirm('Anda yakin ingin menghapus ini?');\">Hapus <?= ($is_yayasan_perkumpulan == 'yayasan') ? 'Yayasan' : 'Perkumpulan' ?></a>\n                                        </td>\n                                    </tr>\n                                <?php } ?>\n                            </table>\n                        <?php } elseif(!empty($is_perseroan)) { ?>\n                            <h5 align=\"center\"><b>Data diperoleh dari tabel <?= (!empty($master)) ? 'master' : ' transaksi' ?></b></h5>\n                            <table class=\"table table-striped table-bordered table-hover\">\n                                <tr>\n                                    <td>No</td>\n                                    <td>ID Perseroan</td>\n                                    <td>Nama Perseroan</td>\n                                    <td>Nomor Transaksi</td>\n                                    <td>Nama Notaris</td>\n                                    <td>Aksi</td>\n                                </tr>\n                                <?php \n                                    $row = 1;\n                                    foreach ($model as $key => $value) { \n                                ?>\n                                    <tr>\n                                        <td><?= $row++ ?></td>\n                                        <td><?= $value[\"id_perseroan\"] ?></td>\n                                        <td><?= $value[\"nama_perseroan\"] ?></td>\n                                        <td><?= get_nomor_tanggal($value) ?></td>\n                                        <td><?= $value['nama_notaris'] ?></td>\n                                        <td>\n                                            <a href=\"/sabh/toolPesanNama/hapus/id/<?= $value['id_perseroan'] ?>/tipe/<?= $is_perseroan ?>\" onclick=\"return confirm('Anda yakin ingin menghapus ini?');\">Hapus Perseroan</a>\n                                        </td>\n                                    </tr>\n                                <?php } ?>\n                            </table>\n                        <?php } ?>\n                    </div>\n                </div>\n            </section>\n        </div>\n    </div>\n<?php } ?> \n<?php if (!empty($kosong)) { ?>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">            \n                <div class=\"panel-body\">\n                    <h3 align=\"center\">Data tidak ditemukan</h3>\n                </div>\n            </section>\n        </div>\n    </div>\n<?php } ?>\n<?php if (!empty($delete) && (!empty($perseroan) || !empty($yayasan_perkumpulan))) { ?>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">            \n                <div class=\"panel-body\">\n                    <h3 align=\"center\">Data <?= ($perseroan == 1) ? 'Perseroan' : (($yayasan_perkumpulan == 1) ? 'Yayasan' : 'Perkumpulan') ?> berhasil dihapus</h3>\n                </div>\n            </section>\n        </div>\n    </div>\n<?php } ?>\n<?php if (empty($delete) && (!empty($perseroan) || !empty($yayasan_perkumpulan))) { ?>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">            \n                <div class=\"panel-body\">\n                    <h3 align=\"center\">Data <?= (!empty($perseroan)) ? 'Perseroan' : ((!empty($yayasan_perkumpulan)) ? 'Yayasan' : 'Perkumpulan') ?> gagal dihapus</h3>\n                </div>\n            </section>\n        </div>\n    </div>\n<?php } ?>\n<?php\nfunction get_nama($data, $base='yayasan'){\n    // $check = BadanHukum::model()->find('badan_hukum_id=\"'.$data[\"id_badan_hukum\"].'\"');\n    if($base == \"yayasan\")\n        return $data['nama_yayasan'];\n    else\n        return $data['nama_perkumpulan'];\n}\n\nfunction ubah_format($q){\n    $q = preg_replace('/(\\d{2})-(\\d{2})-(\\d{4})/', \"$3-$2-$1\", $q);\n\n    if(!preg_match('/(\\d{4})-(\\d{2})-(\\d{2})( \\d{2}:\\d{2}:\\d{2})?/', $q, $mtc))\n        return $q;\n    else{\n        $b = array( 1 => 'Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember');\n        $mtc[2] = intval($mtc[2]);\n\n        if(!isset($mtc[4]))\n            $mtc[4] = '';\n\n        return \"{$mtc[3]} {$b[$mtc[2]]} {$mtc[1]}{$mtc[4]}\";\n    }\n}\n\nfunction get_nomor_tanggal($data){\n    $ret = $data['nomor_transaksi'] . '<hr style=\"margin:2px 0\">';\n        if(strlen($data['nomor_transaksi']) === 16 || strlen($data['nomor_transaksi']) === 17){\n            $ret .=  \"Tanggal Transaksi:<br/>\";\n            $ret .=  \" - \".ubah_format($data['created_date']) . \"<br/>\";                        \n        } else {\n            if (empty($data['nomor_transaksi'])) {\n                $ret .=  '<i>Nomor Transaksi kosong</i>';\n            } else {\n                $ret .=  '<i>data migrasi</i>';\n            }\n        }\n\n    return $ret;\n}\nYii::app()->clientScript->registerScript('formToolPesanNama', \"\n    var tipe = $('#tipe').val();\n\n    if (tipe == 'yayasan' || tipe == 'perkumpulan' || tipe == 'perseroan') {\n        $('#form-nama').css('display', 'block');\n    }\n\n    if (event.keyCode === 13) {\n        $('#btn-submit').click();\n    }\n\n    $('#tipe').on('change', function() {\n        var tipe = $('#tipe').val();\n        var placeholder = 'Masukkan Nama';\n        var label = 'NAMA';\n\n        if (tipe == 'yayasan') {\n            label = 'NAMA YAYASAN';\n            placeholder = 'Masukkan Nama Yayasan';\n        } else if (tipe == 'perkumpulan') {\n            label = 'NAMA PERKUMPULAN';\n            placeholder = 'Masukkan Nama Perkumpulan';\n        } else if (tipe == 'perseroan') {\n            label = 'NAMA PERSEROAN';\n            placeholder = 'Masukkan Nama Perseroan';\n        }\n\n        $('#label-nama').html(label);\n        $('#form-nama').css('display', 'block');\n        $('#nama').attr('placeholder', placeholder);\n    });\n\n    $('#btn-submit').click(function() {\n        $('#loading').css('display', 'block');\n        $('#btn-submit').css('display', 'none');\n        var tipe = $('#tipe').val();\n        var nama = $('#nama').val();\n        var jenis = '';\n\n        if (tipe == 'yayasan') {\n            jenis = 'Yayasan';\n        } else if (tipe == 'perkumpulan') {\n            jenis = 'Perkumpulan';\n        } else if (tipe == 'perseroan') {\n            jenis = 'Perseroan';\n        }\n\n        if (tipe == '' && nama == '') {\n            $('#loading').css('display', 'none');\n            $('#btn-submit').css('display', 'block');\n            $('#errorMessage').html('Nama ' + jenis + ' tidak boleh kosong.');\n            setTimeout(function(){\n                $('#errorMessage').css('display', 'none');\n            }, 3000);\n        }\n    });\n\");\n?>\n\n--- File: 1162 # mappers/DYayasanRangeDateMapper.php ---\n<?php\n\nclass DYayasanRangeDateMapper extends MapperBase\n{\n    public function findAll(\n        $kategori,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.status_transaksi,\n            b.created,\n            b.tahun,\n            b.no_transaksi,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllFull(\n        $kategori,\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.status_transaksi,\n            b.created,\n            b.no_transaksi,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllJenisTransaksi(\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllYears(\n        $kategori,\n        $tanggalAwal,\n        $tanggalAkhir,\n        array $param = [],\n        $method = 'queryAll'\n    ) {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::YAYASAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAll($kategori, $tahun, array(), false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n           *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$kategori);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsFull(\n        $kategori,\n        $jenis_transaksi,\n        $tanggalAwal,\n        $tanggalAkhir,\n        array $param = [],\n        $method = 'queryAll'\n    ) {\n        $alias = $kategori.'_'.$jenis_transaksi;\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::YAYASAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllFull($kategori, $jenis_transaksi, $tahun, array(), false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$alias);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsJenisTransaksi(\n        $jenis_transaksi,\n        $tanggalAwal,\n        $tanggalAkhir,\n        array $param = [],\n        $method = 'queryAll'\n    ) {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(\n            BaseEnum::YAYASAN,\n            $tanggalAwal,\n            $tanggalAkhir\n        );\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllJenisTransaksi(\n                $jenis_transaksi,\n                $tahun,\n                array(),\n                false,\n                'getText'\n            );\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$jenis_transaksi);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsGroup($kategori, $tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$kategori);\n        $cmd->from('('.$this->findAllYears($kategori, $tanggalAwal, $tanggalAkhir, array(), 'getText').') AS '.$kategori);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYearsFullGroup($kategori, $jenis_transaksi, $tanggalAwal, $tanggalAkhir, $param)\n    {\n        $alias = $kategori.'_'.$jenis_transaksi;\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$alias);\n        $cmd->from('('.$this->findAllYearsFull(\n            $kategori,\n            $jenis_transaksi,\n            $tanggalAwal,\n            $tanggalAkhir,\n            array(),\n            'getText').') AS '.$alias);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYearsJenisTransaksiGroup(\n        $jenis_transaksi,\n        $tanggalAwal,\n        $tanggalAkhir,\n        $param\n    ) {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$jenis_transaksi);\n        $cmd->from('('.$this->findAllYearsJenisTransaksi(\n            $jenis_transaksi,\n            $tanggalAwal,\n            $tanggalAkhir,\n            array(),\n            'getText'\n        ).') AS '.$jenis_transaksi);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 932 # views/blokirPerseroan/create/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/dialog') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('_common/_constants') ?>\n\n\n<div x-data=\"blokirPerseroanForm()\" id=\"blokir-perseroan-form\">\n    <div class=\"permohonan-header\">\n        <h1>PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES</h1>\n\n        <div class=\"progress-bar\">\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 1}\">1</div>\n                <div class=\"step-label\">Data Permohonan</div>\n            </div>\n            <div class=\"step-connector\"></div>\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 2}\">2</div>\n                <div class=\"step-label\">Data Pemohon</div>\n            </div>\n            <div class=\"step-connector\"></div>\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 3}\">3</div>\n                <div class=\"step-label\">Unggah Dokumen</div>\n            </div>\n            <div class=\"step-connector\"></div>\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 4}\">4</div>\n                <div class=\"step-label\">Pratinjau</div>\n            </div>\n        </div>\n    </div>\n\n\n    <template x-if=\"stage === 1\">\n        <div>\n            <?php $this->renderPartial('create/_dataPermohonan') ?>\n        </div>\n    </template>\n\n    <template x-if=\"stage === 2\">\n        <div>\n            <?php $this->renderPartial('create/_dataPemohon') ?>\n        </div>\n    </template>\n\n    <template x-if=\"stage === 3\">\n        <div>\n            <?php $this->renderPartial('create/_dataDokumen') ?>\n        </div>\n    </template>\n\n    <template x-if=\"stage === 4\">\n        <div>\n            <?php $this->renderPartial('create/_dataPratinjau') ?>\n        </div>\n    </template>\n</div>\n\n\n<script type=\"text/javascript\">\n    function blokirPerseroanForm() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            userId: <?php echo Yii::app()->user->id; ?>,\n\n\n            formData: {\n                jenisPermohonan: JENIS_PERMOHONAN.SEBAGIAN,\n                jenisLayanan: JENIS_LAYANAN.BLOKIR,\n                namaPerseroan: 'PT Dummy Perseroan',\n                kodeVoucher: 'VCHR123456',\n                alasanPermohonan: 'Permohonan blokir akses karena perubahan kepemilikan.',\n                selectedPerseroan: {\n                    nama: 'PT Dummy Perseroan',\n                    nomor_transaksi: 'NIB123456789',\n                    npwp: '12.345.678.9-012.345',\n                    status: 'Aktif',\n                    alamat: 'Jl. Dummy Raya No. 123, Jakarta'\n                },\n\n                statusPemohonNama: 'Ahli Waris Pemegang Saham',\n                statusPemohonKey: STATUS_PEMOHON.AHLI_WARIS_PEMEGANG_SAHAM,\n                namaPemohon: 'Budi Santoso',\n                nikPemohon: '3174090909090001',\n                jabatanPemohon: 'Direktur',\n                emailPemohon: 'budi.santoso@email.com',\n                teleponPemohon: '081234567890',\n                jenisPemegangSaham: JENIS_PEMEGANG_SAHAM.PERORANGAN,\n                namaBadanHukum: 'PT Dummy Perseroan',\n\n                namaNotaris: 'Siti Notaris',\n                nikNotaris: '3174090909090002',\n                emailNotaris: 'siti.notaris@email.com',\n                teleponNotaris: '081298765432',\n            },\n\n            userProfile: null,\n\n\n            init() {\n                this.loadUserProfile();\n            },\n\n            async loadUserProfile() {\n                const [res, err] = await safeFetch('/sabh/api/blokirAuth/me', {\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error loading user profile:', err);\n                    alert('Error loading user profile');\n                    return;\n                }\n\n                this.userProfile = res.data;\n                console.log(this.userProfile);\n            },\n\n            submitFirstForm(\n                jenisLayanan,\n                jenisPermohonan,\n                kodeVoucher,\n                alasanPermohonan,\n                selectedPerseroan\n            ) {\n                this.formData.jenisLayanan = jenisLayanan;\n                this.formData.jenisPermohonan = jenisPermohonan;\n                this.formData.kodeVoucher = kodeVoucher;\n                this.formData.alasanPermohonan = alasanPermohonan;\n                this.formData.selectedPerseroan = selectedPerseroan;\n            },\n\n            submitSecondFormPemohon(\n                statusPemohonNama,\n                statusPemohonKey,\n                namaPemohon,\n                nikPemohon,\n                jabatanPemohon,\n                emailPemohon,\n                teleponPemohon,\n                jenisPemegangSaham,\n                namaBadanHukum\n            ) {\n                this.formData.statusPemohonNama = statusPemohonNama;\n                this.formData.statusPemohonKey = statusPemohonKey;\n                this.formData.namaPemohon = namaPemohon;\n                this.formData.nikPemohon = nikPemohon;\n                this.formData.jabatanPemohon = jabatanPemohon;\n                this.formData.emailPemohon = emailPemohon;\n                this.formData.teleponPemohon = teleponPemohon;\n                this.formData.jenisPemegangSaham = jenisPemegangSaham;\n                this.formData.namaBadanHukum = namaBadanHukum;\n            },\n\n            submitSecondFormNotaris(\n                namaNotaris,\n                nikNotaris,\n                emailNotaris,\n                teleponNotaris\n            ) {\n                this.formData.namaNotaris = namaNotaris;\n                this.formData.nikNotaris = nikNotaris;\n                this.formData.emailNotaris = emailNotaris;\n                this.formData.teleponNotaris = teleponNotaris;\n            },\n\n\n            submitThirdForm(\n                files\n            ) {\n                for (const key in DOCUMENT_FIELDS) {\n                    if (files[key]) {\n                        this.formData[key] = files[key];\n                    }\n                }\n\n            },\n\n\n            documentsToPayload: {\n                [DOCUMENT_FIELDS.SURAT_PERMOHONAN]: 'url_surat_permohonan',\n                [DOCUMENT_FIELDS.BUKTI_PELAPORAN]: 'url_bukti_pelaporan_pemilik_manfaat',\n                [DOCUMENT_FIELDS.PUTUSAN_PENGADILAN]: 'url_putusan_atau_penetapan_pengadilan',\n                [DOCUMENT_FIELDS.LAPORAN_KEUANGAN_AUDIT]: 'url_laporan_keuangan_audit',\n                [DOCUMENT_FIELDS.LABORAN_PAJAK_TAHUNAN]: 'url_laporan_pajak_tahunan',\n                [DOCUMENT_FIELDS.RIWAYAT_PERUBAHAN_SAHAM]: 'url_riwayat_perubahan_saham',\n                [DOCUMENT_FIELDS.SURAT_PERMOHONAN]: 'url_surat_permohonan',\n                [DOCUMENT_FIELDS.BUKTI_PELAPORAN]: 'url_bukti_pelaporan_pemilik_manfaat',\n                [DOCUMENT_FIELDS.PUTUSAN_PENGADILAN]: 'url_putusan_atau_penetapan_pengadilan',\n                [DOCUMENT_FIELDS.LAPORAN_KEUANGAN_AUDIT]: 'url_laporan_keuangan_audit',\n                [DOCUMENT_FIELDS.LABORAN_PAJAK_TAHUNAN]: 'url_laporan_pajak_tahunan',\n                [DOCUMENT_FIELDS.RIWAYAT_PERUBAHAN_SAHAM]: 'url_riwayat_perubahan_saham',\n                [DOCUMENT_FIELDS.SURAT_KETERANGAN_WARIS]: 'url_surat_keterangan_waris',\n                [DOCUMENT_FIELDS.SURAT_KUASA]: 'url_surat_kuasa_atau_akta_notaris',\n                [DOCUMENT_FIELDS.SURAT_PERDAMAIAN]: 'url_surat_perdamaian_atau_akta_perdamaian',\n                [DOCUMENT_FIELDS.LABORAN_KEUANGAN_DAN_PAJAK]: 'url_laporan_keuangan_dan_pajak',\n                [DOCUMENT_FIELDS.PENCABUTAN_PERKARA_ATAU_PUTUSAN_SENGKETA]: 'url_surat_pencabutan_perkara_atau_putusan_sengketa',\n            },\n\n\n\n\n            async createPermohonan() {\n                const filesPayload = Object.keys(this.documentsToPayload).reduce((acc, key) => {\n                    if (this.formData[key]) {\n                        acc[this.documentsToPayload[key]] = this.formData[key].path;\n                    }\n                    return acc;\n                }, {});\n                \n                const payload = {\n                    jenis_layanan_permohonan: this.formData.jenisLayanan,\n                    kategori_permohonan: this.formData.jenisPermohonan,\n                    kode_voucher: this.formData.kodeVoucher,\n                    nama_perseroan_terbatas: this.formData.namaPerseroan,\n                    alasan_permohonan: this.formData.alasanPermohonan,\n                    status_pemohon: this.formData.statusPemohonKey,\n                    nama_pemohon: this.formData.namaPemohon,\n                    nik: this.formData.nikPemohon,\n                    jabatan: this.formData.jabatanPemohon,\n                    email: this.formData.emailPemohon,\n                    no_telepon: this.formData.teleponPemohon,\n                    nama_notaris: this.formData.namaNotaris,\n                    nik_notaris: this.formData.nikNotaris,\n                    email_notaris: this.formData.emailNotaris,\n                    no_telepon_notaris: this.formData.teleponNotaris,\n                   \n                    ...filesPayload,\n                }\n\n                console.log(payload)\n\n                const [res, err] = await safeFetch('/sabh/api/permohonanPemblokiranPT/create', {\n                    method: 'POST',\n                    body: payload,\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error creating permohonan:', err);\n                    alert('Error creating permohonan');\n                    return;\n                }\n\n                console.log(res);\n                // $dto = new CreatePermohonanPemblokiranPTDto();\n\n// // Data Permohonan\n// $dto->jenis_layanan_permohonan = ArrayHelper::get($data, 'jenis_layanan_permohonan');\n// $dto->kategori_permohonan = ArrayHelper::get($data, 'kategori_permohonan');\n// $dto->kode_voucher = ArrayHelper::get($data, 'kode_voucher');\n// $dto->nama_perseroan_terbatas = ArrayHelper::get($data, 'nama_perseroan_terbatas');\n// $dto->alamat_permohonan = ArrayHelper::get($data, 'alamat_permohonan');\n\n// // Data Pemohon\n// $dto->status_pemohon = ArrayHelper::get($data, 'status_pemohon');\n// $dto->nama_pemohon = ArrayHelper::get($data, 'nama_pemohon');\n// $dto->nik = ArrayHelper::get($data, 'nik');\n// $dto->jabatan = ArrayHelper::get($data, 'jabatan');\n// $dto->email = ArrayHelper::get($data, 'email');\n// $dto->no_telepon = ArrayHelper::get($data, 'no_telepon');\n\n// // Data Notaris\n// $dto->nama_notaris = ArrayHelper::get($data, 'nama_notaris');\n// $dto->nik_notaris = ArrayHelper::get($data, 'nik_notaris');\n// $dto->email_notaris = ArrayHelper::get($data, 'email_notaris');\n// $dto->no_telepon_notaris = ArrayHelper::get($data, 'no_telepon_notaris');\n\n// // Dokumen Persyaratan\n// $dto->url_surat_permohonan = ArrayHelper::get($data, 'url_surat_permohonan');\n// $dto->url_bukti_pelaporan_pemilik_manfaat = ArrayHelper::get($data, 'url_bukti_pelaporan_pemilik_manfaat');\n// $dto->url_putusan_atau_penetapan_pengadilan = ArrayHelper::get($data, 'url_putusan_atau_penetapan_pengadilan');\n// $dto->url_riwayat_perubahan_saham = ArrayHelper::get($data, 'url_riwayat_perubahan_saham');\n// $dto->url_surat_kuasa_atau_akta_notaris = ArrayHelper::get($data, 'url_surat_kuasa_atau_akta_notaris');\n// $dto->url_laporan_keuangan_audit = ArrayHelper::get($data, 'url_laporan_keuangan_audit');\n// $dto->url_laporan_pajak_tahunan = ArrayHelper::get($data, 'url_laporan_pajak_tahunan');\n// $dto->url_surat_keterangan_waris = ArrayHelper::get($data, 'url_surat_keterangan_waris');\n// $dto->url_surat_perdamaian_atau_akta_perdamaian = ArrayHelper::get($data, 'url_surat_perdamaian_atau_akta_perdamaian');\n// $dto->url_laporan_keuangan_dan_pajak = ArrayHelper::get($data, 'url_laporan_keuangan_dan_pajak');\n// $dto->url_surat_pencabutan_perkara_atau_putusan_sengketa = ArrayHelper::get($data, 'url_surat_pencabutan_perkara_atau_putusan_sengketa');\n            },\n\n            submitFourthForm() {\n                this.createPermohonan();\n            },\n\n            nextStage() {\n                if (this.stage < 4) this.stage++;\n            },\n\n            prevStage() {\n                if (this.stage > 1) this.stage--;\n            },\n\n            submitForm() {\n                alert('Form submitted!');\n            }\n        };\n    }\n</script>\n\n--- File: 1158 # mappers/DBakumRangeDateMapper.php ---\n<?php\n\nclass DBakumRangeDateMapper extends MapperBase\n{\n    public function findAllPerseroan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.jenis_perseroan,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.tanggal_sk,\n            p.nomor_transaksi,\n            p.status_transaksi,\n            p.pemegang_saham,\n            p.kegiatan,\n            p.tahun,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            p.provinsi_id_perseroan AS provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.$tahun.' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            -- tp.id_aksi_transaksi = 9\n            p.kabupaten_id_perseroan IS NOT NULL\n            AND p.kabupaten_id_perseroan != \"\"\n            AND p.kabupaten_id_perseroan != 0\n            AND p.jenis_perseroan != \"\"\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.$tahun.' tp2 \n            WHERE p.id_perseroan = tp2.id_perseroan\n            GROUP BY tp2.id_perseroan)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS perseroan');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllPerseroanYears($tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::PERSEROAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllPerseroan($tahun, array(), false, 'getText');\n        }\n\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS perseroan');\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerseroanYearsGroup($tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perseroan\n        ');\n        $cmd->from('('.$this->findAllPerseroanYears($tanggalAwal, $tanggalAkhir, array(), 'getText').') AS perseroan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYayasan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id AS kabupaten_id,\n            b.kabupaten_nama AS kabupaten_nama,\n            b.provinsi_nama AS provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.keterangan_sosial,\n            ty.keterangan_kemanusiaan,\n            ty.keterangan_keagamaan,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS yayasan');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllYayasanYears($tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::YAYASAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllYayasan($tahun, $param, false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n           *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS yayasan');\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYayasanYearsGroup($tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_yayasan\n        ');\n        $cmd->from('('.$this->findAllYayasanYears($tanggalAwal, $tanggalAkhir, array(), 'getText').') AS yayasan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllPerkumpulan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id AS kabupaten_id,\n            b.kabupaten_nama AS kabupaten_nama,\n            b.provinsi_nama AS provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            b.maksud,\n            b.tujuan,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            tp.pengurus,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'.$tahun.' tp', 'tp.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"perkumpulan\"\n            -- AND tp.id_aksi_transaksi = 14\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'.$tahun.' tp2 \n            WHERE b.badan_hukum_id = tp2.id_badan_hukum\n            GROUP BY tp2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS perkumpulan');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllPerkumpulanYears($tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::PERKUMPULAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllPerkumpulan($tahun, $param, false, 'getText');\n        }\n\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS perkumpulan');\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulanYearsGroup($tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perkumpulan\n        ');\n        $cmd->from('('.$this->findAllPerkumpulanYears($tanggalAwal, $tanggalAkhir, array(), 'getText').') AS perkumpulan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 359 # components/PerseroanMapper.php ---\n<?php\n\n/**\n * Class Mapper for Perseroan\n * @author Hendi\n * @since 2016-08-31\n */\n\nclass PerseroanMapper extends MapperBase\n{\n    /**\n     * @return array\n     */\n    public function queryAll($db, $sql, $arrayParam = null)\n    {\n        return $this->execSqlQueryAll($db, $sql, $arrayParam);\n    }\n\n    /**\n     * @return array\n     */\n    public function findAllTableTransaction($tahun = null, $scalar = false)\n    {\n        if ($tahun === null) {\n            $sql = \"Show tables like 'tbl\\_transaksi\\_perseroan\\_____'\";\n        } else {\n            $sql = \"Show tables like 'tbl\\_transaksi\\_perseroan\\_\".$tahun.\"'\";\n        }\n        \n        if ($scalar) {\n            return $this->execSqlQueryScalar('dbBadanHukum', $sql);\n        } else {\n            return $this->execSqlQueryColumn('dbBadanHukum', $sql);\n        }\n    }\n\n    /**\n     * @return array\n     */\n    public function findAllTableAfter2016($yearPp29)\n    {\n        $year = date('Y');\n        $tbl = array();\n        for ($i = $year; $i >= $yearPp29; $i-- ) {\n            $showTbls = $this->findAllTableTransaction($i, true);\n            if ($showTbls) {\n                $tbl[] = $showTbls;\n            }\n        }\n        return $tbl;\n    }\n\n    /**\n     *\n     */\n    public function checkTableExist($db, $table)\n    {\n        $sql = \"show tables like \".$table;\n        return $this->execSqlQueryColumn($db, $sql);\n    }\n\n    /**\n     * untuk grafik detail monitoring pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by harian\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByDay($strSql, $paramBind = array())\n    {\n        $sql = \"\n        SELECT \n            b.jenis,\n            COUNT(*) AS jumlah\n        FROM\n            (\n                SELECT\n                    a.*,\n                CASE\n                    WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                    WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                    ELSE NULL\n                    END AS 'jenis'\n                FROM\n                    (\n                    $strSql\n                    ) AS a\n            ) AS b\n        WHERE b.jenis IS NOT NULL\n        GROUP BY b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik detail monitoring pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by bulanan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByMonthly($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                b.tanggal,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        EXTRACT(DAY FROM a.created_date) AS tanggal,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis, b.tanggal\n            ORDER BY \n                b.tanggal;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik detail monitoring pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by tahunan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByYear($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                b.bulan,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        EXTRACT(MONTH FROM a.created_date) AS bulan,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis, b.bulan\n            ORDER BY \n                b.bulan;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik monitoring total pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by bulanan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByTotalMonthly($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis\n            ORDER BY \n                b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik monitoring total pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by tahunan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByTotalYear($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis\n            ORDER BY \n                b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik monitoring total semua pendirian dan perubahan dengan modal dasar < 50 jt\n     * tanpa filter\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByAllTotal($strSql)\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis\n            ORDER BY \n                b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql);\n    }\n\n    /**\n     * create string sql\n     * @param string $strSql\n     * @param FormFilter $formFilter\n     */\n    private function basicSqlDetail($strSql, $formFilter, $additionalParam)\n    {\n        $sql = \"\n            SELECT\n                b.*\n            FROM \n                (\n                    SELECT\n                        a.id_transaksi,\n                        a.id_perseroan,\n                        a.nama_perseroan,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis',\n                        a.total_modal_dasar,\n                        a.total_modal_ditempatkan,\n                        a.created_date,\n                        a.tahun,\n                        a.nomor_transaksi\n                    FROM\n                    (\n                    \".$strSql.\"\n                    ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n        \";\n\n        $sqlData = $this->basicSqlFilter($sql, $formFilter, true, $additionalParam);\n\n        return $sqlData;\n    }\n\n    /**\n     * untuk grid/tabel informasi detail dari grafik\n     * monitoring pendirian dan perubahan perseroan dengan modal dasar < 50 jt\n     * filter by hari\n     * @param string $strSql\n     * @param FormFilter $formFilter\n     */\n    public function findDetailTransaction($strSql, $formFilter, $additionalParam = array())\n    {\n        $sqlData = $this->basicSqlDetail($strSql, $formFilter, $additionalParam);\n        return $sqlData;\n        //return $this->createCommand('dbBadanHukum', $sql);\n    }\n\n    /**\n     * count total row data\n     * @param string $strSql\n     * @param FormFilter $formFilter\n     */\n    public function countDetailTransaction($sqlData, $paramBind)\n    {\n        $sql = 'SELECT COUNT(*) FROM (' . $sqlData . ') as count_alias';\n        return $this->execSqlQueryScalar('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /********************* Start Monitoring Bukti Setor ***********************/\n\n    /**\n     * @return array\n     */\n    public function findAllYearPendirianPp29()\n    {\n        $sql = \"\n            SELECT\n                DISTINCT\n                EXTRACT(YEAR FROM a.created_date) AS tahun\n            FROM\n            tbl_pendirian_pp29 a;\n        \";\n\n        return $this->execSqlQueryColumn('dbBadanHukum', $sql);\n    }\n\n    /**\n     * @param array $arrTahun\n     * @return array $newArrTahun\n     */\n    public function checkTableTransaksiPerseroanExist($arrTahun)\n    {\n        $newArrTahun = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $tableTransaksiExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_transaksi\\_perseroan\\_\".$tahun.\"'\");\n            if (!empty($tableTransaksiExist)) {\n                $newArrTahun[] = $tahun;\n            }\n        }\n\n        return $newArrTahun;\n    }\n\n    /**\n     * @param string $jenis\n     * @param array $arrTahun\n     * @return array $newArrTahun\n     */\n    public function checkTableTransaksiBakumExist($jenis, $arrTahun)\n    {\n        $newArrTahun = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $tableTransaksiExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_transaksi\\_\".$jenis.\"\\_\".$tahun.\"'\");\n            if (!empty($tableTransaksiExist)) {\n                $newArrTahun[] = $tahun;\n            }\n        }\n\n        return $newArrTahun;\n    }\n\n    /**\n     *\n     */\n    public function checkTableExistForMonitoringBuktiSetor($arrTahun)\n    {\n        $newArrTahun = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $tableTransaksiExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_transaksi\\_perseroan\\_\".$tahun.\"'\");\n            $tableUploadModalDasarExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_upload\\_modal\\_dasar\\_\".$tahun.\"'\");\n            if (!empty($tableTransaksiExist) && !empty($tableUploadModalDasarExist)) {\n                $newArrTahun[] = $tahun;\n            }\n        }\n\n        return $newArrTahun;\n    }\n\n    /**\n     * @param boolean $whereExist if the end of string of $sql with clause WHERE\n     * add clause AND\n     */\n    private function basicSqlFilter($sql, $formFilter, $whereExist = true, $additionalParam = array())\n    {\n        $arrCondition = array();\n        $arrParamBind = array();\n        $arrParam = array();\n        foreach ($formFilter->attributes as $key => $value) {\n            if (!empty($value)) {\n                if (strpos($key, 'tanggal') !== false) { // if contain words tanggal\n                    //$arrCondition[] = \"DATE_FORMAT(\".$key.\", '%d-%m-%Y') = '\".$value.\"'\";\n                    $arrCondition[] = \"DATE_FORMAT($key, '%d-%m-%Y') = :$key\";\n                } else {\n                    //$arrCondition[] = \"LOWER(\".$key.\") LIKE '%\".strtolower($value).\"%'\";\n                    $arrCondition[] = \"LOWER($key) LIKE :$key\";\n                    $value = \"%\".strtolower($value).\"%\";\n                }\n                $arrParamBind[] = array(':'.$key, $value, PDO::PARAM_STR);\n                $arrParam[\":$key\"] = $value;\n            }\n        }\n        $strCondition = implode($arrCondition, ' AND ');\n        if (count($arrCondition) >= 1) {\n            if ($whereExist) {\n                $sql .= ' AND ';\n            } else {\n                $sql .= ' WHERE ';\n            }\n        }\n\n        // add $arrParam and $arrParamBind\n        if (!empty($additionalParam)) {\n            foreach ($additionalParam as $key => $value) {\n                $arrParam[$key] = $value;\n                $arrParamBind[] = array($key, $value, PDO::PARAM_STR);\n            }\n        }\n\n        $sql .= $strCondition;\n        return array('sql'=>$sql, 'paramBind'=>$arrParamBind, 'param'=>$arrParam);\n    }\n\n    /**\n     *\n     */\n    public function findAllBuktiModalDasar($strSql, $formFilter, $whereExist)\n    {\n        $sqlData = $this->basicSqlFilter($strSql, $formFilter, $whereExist);\n        return $sqlData;\n    }\n\n    /**\n     *\n     */\n    public function countBuktiModalDasar($sqlData, $paramBind)\n    {\n        $sql = 'SELECT COUNT(*) FROM (' . $sqlData . ') as count_alias';\n        return $this->execSqlQueryScalar('dbBadanHukum', $sql, $paramBind);\n    }\n}\n\n\n--- File: 927 # views/blokirPerseroan/pratinjau/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <section class=\"panel\">\n            <header class=\"panel-heading text-center\">\n                <h3>DAFTAR PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES PT</h3>\n            </header>\n            <div class=\"panel-body\">\n                <div class=\"container mx-0\">\n                    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n                        Data Permohonan\n                    </div>\n                    <div class=\"form-content\">\n                        <div class=\"form-parent\">\n                            <div class=\"form-group mb-0\">\n                                <label class=\"col-lg-3\">Jenis Layanan <span class=\"required\">*</span></label>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <div class=\"radio-group\">\n                                        <div class=\"radio-option\">\n                                            <input type=\"radio\" id=\"blokir\" name=\"jenisLayanan\" value=\"blokir\" x-model=\"formData.jenisLayanan\" disabled>\n                                            <label for=\"blokir\">Blokir Akses PT</label>\n                                        </div>\n                                        <div class=\"radio-option\">\n                                            <input type=\"radio\" id=\"buka\" name=\"jenisLayanan\" value=\"buka\" x-model=\"formData.jenisLayanan\" disabled>\n                                            <label for=\"buka\">Buka Blokir Akses PT</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label class=\"col-lg-3\">Jenis Permohonan <span class=\"required\">*</span></label>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <div class=\"radio-group\">\n                                        <div class=\"radio-option\">\n                                            <input type=\"radio\" id=\"seluruhnya\" name=\"jenisPermohonan\" value=\"seluruhnya\" x-model=\"formData.jenisPermohonan\" disabled>\n                                            <label for=\"seluruhnya\">Seluruhnya</label>\n                                        </div>\n                                        <div class=\"radio-option\">\n                                            <input type=\"radio\" id=\"sebagian\" name=\"jenisPermohonan\" value=\"sebagian\" x-model=\"formData.jenisPermohonan\" disabled>\n                                            <label for=\"sebagian\">Pemegang Saham</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <label class=\"col-lg-3\">Kode Voucher <span class=\"required\">*</span></label>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <input type=\"text\" id=\"kodeVoucher\" name=\"kodeVoucher\" class=\"form-control\" x-model=\"formData.kodeVoucher\" disabled>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col-lg-3\">\n                                    <label for=\"namaPerseroan\" class=\"control-label\">Nama Perseroan Terbatas</label>\n                                </div>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <input x-init=\"console.log(data)\" type=\"text\" id=\"namaPerseroan\" name=\"namaPerseroan\" class=\"form-control\" x-model=\"formData.selectedPerseroan.nama\" disabled>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n                                <div class=\"col-lg-3\">\n                                    <label for=\"alasanPermohonan\" class=\"control-label\">Alasan Permohonan <span class=\"required\">*</span></label>\n                                </div>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <textarea id=\"alasanPermohonan\" name=\"alasanPermohonan\" class=\"form-control\" rows=\"4\" x-model=\"formData.alasanPermohonan\" disabled></textarea>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"container py-4\">\n                    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n                        Data Pemohon\n                    </div>\n                    <div class=\"form-content form-parent\">\n                        <div class=\"form-group\">\n                            <label class=\"col-lg-3\">Status Pemohon <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"statusPemohon\" name=\"statusPemohon\" class=\"form-control\" x-model=\"formData.statusPemohonNama\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-lg-3\">Nama Pemohon <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"namaPemohon\" name=\"namaPemohon\" class=\"form-control\" x-model=\"formData.namaPemohon\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-lg-3\">NIK / Nomor Identitas <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"nikPemohon\" name=\"nikPemohon\" class=\"form-control\" x-model=\"formData.nikPemohon\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-lg-3\">Jabatan di Perseroan <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"jabatanPemohon\" name=\"jabatanPemohon\" class=\"form-control\" x-model=\"formData.jabatanPemohon\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-lg-3\">Email Aktif <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"email\" id=\"emailPemohon\" name=\"emailPemohon\" class=\"form-control\" x-model=\"formData.emailPemohon\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label class=\"col-lg-3\">No. Telepon / WhatsApp <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"teleponPemohon\" name=\"teleponPemohon\" class=\"form-control\" x-model=\"formData.teleponPemohon\" disabled>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"container py-4\"\n                    x-show=\"formData.namaNotaris\"\n                    x-cloak\n                    x-transition.duration.300ms.origin.top>\n                    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n                        Data Kuasa\n                    </div>\n                    <div class=\"form-content form-parent\">\n                        <div class=\"form-group\">\n                            <label for=\"namaNotaris\" class=\"col-lg-3\">Nama Notaris <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"namaNotaris\" name=\"namaNotaris\" class=\"form-control\" x-model=\"formData.namaNotaris\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nikNotaris\" class=\"col-lg-3\">NIK / Identitas <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"nikNotaris\" name=\"nikNotaris\" class=\"form-control\" x-model=\"formData.nikNotaris\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"emailNotaris\" class=\"col-lg-3\">Email Aktif <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"email\" id=\"emailNotaris\" name=\"emailNotaris\" class=\"form-control\" x-model=\"formData.emailNotaris\" disabled>\n                            </div>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"teleponNotaris\" class=\"col-lg-3\">No. Telepon / WhatsApp <span class=\"required\">*</span></label>\n                            <div class=\"col-lg-9 pl-0\">\n                                <input type=\"text\" id=\"teleponNotaris\" name=\"teleponNotaris\" class=\"form-control\" x-model=\"formData.teleponNotaris\" disabled>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"container py-4\">\n                    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n                        Dokumen Persyaratan\n                    </div>\n                    <div class=\"form-content form-parent\">\n                        <template x-for=\"fieldKey in DOCUMENT_FIELD_ROLES[formData.jenisLayanan][formData.jenisPermohonan][!!formData.namaNotaris][formData.statusPemohonKey]\" :key=\"fieldKey\">\n                            <div class=\"form-group\">\n                                <label class=\"col-lg-3\" :for=\"fieldKey\">\n                                    <span x-text=\"DOCUMENT_FIELDS_LABELS[fieldKey].label\"></span>\n                                    <span class=\"required\">*</span>\n                                    <template x-if=\"DOCUMENT_FIELDS_LABELS[fieldKey].message\">\n                                        <div class=\"text-xs text-gray-500 mt-1 font-normal\">\n                                            <span x-text=\"DOCUMENT_FIELDS_LABELS[fieldKey].message\"></span>\n                                        </div>\n                                    </template>\n                                </label>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <div class=\"pdf-preview-container\" x-show=\"formData[fieldKey]\">\n                                        <embed :src=\"getPdfUrl(formData[fieldKey])\" type=\"application/pdf\" width=\"100%\" height=\"300\" />\n                                    </div>\n                                    <div class=\"file-preview\">\n                                        <div class=\"file-preview-info w-full flex items-center justify-between gap-2\">\n                                            <div class=\"flex items-center min-w-0 gap-2\">\n                                                <span class=\"file-preview-icon\"><i class=\"icon-file\"></i></span>\n                                                <span class=\"file-preview-name flex-1 truncate\" style=\"min-width:0;\" x-text=\"formData[fieldKey] ? formData[fieldKey].name : 'Belum diupload'\"></span>\n                                            </div>\n                                            <template x-if=\"formData[fieldKey]\">\n                                                <div class=\"flex gap-2\">\n                                                    <button type=\"button\" class=\"p-2 text-blue-600 hover:text-blue-800 shrink-0 flex items-center justify-center\" title=\"Lihat dokumen\" @click.prevent=\"window.open(getPdfUrl(formData[fieldKey]), '_blank')\">\n                                                        <i class=\"icon-eye-open\"></i>\n                                                    </button>\n                                                    <button type=\"button\" class=\"p-2 text-blue-600 hover:text-blue-800 shrink-0 flex items-center justify-center\" title=\"Download dokumen\" @click.prevent=\"downloadFile(fieldKey)\">\n                                                        <i class=\"icon-download-alt\"></i>\n                                                    </button>\n                                                </div>\n                                            </template>\n                                        </div>\n                                    </div>\n                                    <div class=\"text-danger mt-1\" x-show=\"!formData[fieldKey]\">\n                                        Dokumen wajib diupload\n                                    </div>\n                                </div>\n                            </div>\n                        </template>\n                        <div class=\"alert alert-danger mt-4\" x-show=\"hasMissingFiles\">\n                            Ada dokumen wajib yang belum diupload.\n                        </div>\n                    </div>\n                </div>\n                <div class=\"container py-4\">\n                    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n                        Riwayat Verifikasi\n                    </div>\n                    <div class=\"form-content\">\n                        <table class=\"table table-hover table-striped table-bordered\">\n                            <thead>\n                                <tr>\n                                    <th>Telah Diverifikasi Oleh</th>\n                                    <th>Status Verifikasi</th>\n                                    <th>Catatan Verifikasi</th>\n                                    <th>Tanggal Verifikasi</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <template x-for=\"item in verifikasiRiwayat\" :key=\"item.id\">\n                                    <tr>\n                                        <td x-text=\"item.verifikator\"></td>\n                                        <td x-text=\"item.status\"></td>\n                                        <td x-text=\"item.catatan\"></td>\n                                        <td x-text=\"item.tanggal\"></td>\n                                    </tr>\n                                </template>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n                <!-- <?php $this->renderPartial('pratinjau/_verifikasiVerifikator') ?> -->\n                <?php $this->renderPartial('pratinjau/_verifikasiDirekturPerdata') ?>\n            </div>\n        </section>\n    </div>\n</div>\n\n<script src=\"https://cdn.ckeditor.com/4.7.2/full/ckeditor.js\"></script>\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            formData: {\n                jenisLayanan: null,\n                jenisPermohonan: null,\n                kodeVoucher: null,\n                selectedPerseroan: null,\n                alasanPermohonan: null,\n                statusPemohonNama: null,\n                namaPemohon: null,\n                nikPemohon: null,\n                jabatanPemohon: null,\n                emailPemohon: null,\n                teleponPemohon: null,\n                namaNotaris: null,\n                nikNotaris: null,\n                emailNotaris: null,\n                teleponNotaris: null,\n            \n            },\n            verifikasiRiwayat: [],\n            init() {\n                this.$loading.startLoading('pratinjau');\n                // Simulate API fetch\n                setTimeout(() => {\n                    this.formData = {\n                        jenisLayanan: 'blokir',\n                        jenisPermohonan: 'sebagian',\n                        kodeVoucher: 'VCHR123456',\n                        selectedPerseroan: {\n                            nama: 'PT Dummy Perseroan'\n                        },\n                        alasanPermohonan: 'Permohonan blokir akses karena perubahan kepemilikan.',\n                        statusPemohonNama: 'Pemegang Saham',\n                        namaPemohon: 'Budi Santoso',\n                        nikPemohon: '3174090909090001',\n                        jabatanPemohon: 'Direktur',\n                        emailPemohon: 'budi.santoso@email.com',\n                        teleponPemohon: '081234567890',\n                        namaNotaris: 'Siti Notaris',\n                        nikNotaris: '3174090909090002',\n                        emailNotaris: 'siti.notaris@email.com',\n                        teleponNotaris: '081298765432',\n                        \n                        suratPermohonan: {\n                            name: 'SuratPermohonan.pdf',\n                            type: 'application/pdf',\n                            size: 102400\n                        },\n                        buktiPelaporan: {\n                            name: 'BuktiPelaporan.pdf',\n                            type: 'application/pdf',\n                            size: 204800\n                        },\n                        putusanPengadilan: {\n                            name: 'PutusanPengadilan.pdf',\n                            type: 'application/pdf',\n                            size: 307200\n                        },\n                    };\n                    this.verifikasiRiwayat = [{\n                            id: 1,\n                            verifikator: 'Admin 1',\n                            status: 'Disetujui',\n                            catatan: 'Semua dokumen lengkap.',\n                            tanggal: '2024-06-01 10:00'\n                        },\n                        {\n                            id: 2,\n                            verifikator: 'Admin 2',\n                            status: 'Ditolak',\n                            catatan: 'Perlu revisi dokumen.',\n                            tanggal: '2024-06-02 14:30'\n                        },\n                    ];\n                    this.$loading.stopLoading('pratinjau');\n                }, 500);\n            },\n            \n            \n            getPdfUrl(file) {\n                if (file) {\n                    return URL.createObjectURL(file);\n                }\n                return '';\n            },\n\n\n            downloadFile(fieldKey) {\n                const file = this.formData[fieldKey];\n                if (!file) return;\n                const url = this.getPdfUrl(file);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = file.name;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n            },\n        }\n    }\n</script>\n\n--- File: 318 # controllers/api/VerifikasiPerubahanPerseroanController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.BaseApiException');\nYii::import('application.modules.sabh.exception.ValidationException');\nYii::import('application.modules.sabh.exception.AccessDeniedException');\nYii::import('application.modules.sabh.exception.NotFoundException');\nYii::import('application.modules.sabh.services.perseroan.VerifikasiPerubahanPerseroanService');\nYii::import('application.modules.sabh.services.perseroan.PemegangSahamService');\nYii::import('application.modules.sabh.repositories.perseroan.TransaksiPerseroanRepository');\nYii::import('application.modules.sabh.repositories.perseroan.RiwayatVerifikasiRepository');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.response.APIResponse');\n\nclass VerifikasiPerubahanPerseroanController extends Controller {\n\n    private $service;\n    private $pemegangSahamService;\n    \n    public function init() {    \n        parent::init();\n        $this->service = new VerifikasiPerubahanPerseroanService();\n        $this->pemegangSahamService = new PemegangSahamService();\n    }\n\n    /**\n     * Preview a document file\n     * @param string $path Base64 encoded file path\n     */\n    public function actionPreviewDokumen($path) {\n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $decodedPath = base64_decode($path);\n            $fullPath = Yii::getPathOfAlias('webroot') . $decodedPath;\n\n            if (!file_exists($fullPath)) {\n                throw new NotFoundException('File tidak ditemukan');\n            }\n\n            $ext = strtolower(pathinfo($fullPath, PATHINFO_EXTENSION));\n            \n            $contentType = 'application/octet-stream';\n            if ($ext === 'pdf') {\n                $contentType = 'application/pdf';\n            } else if (in_array($ext, ['doc', 'docx'])) {\n                $contentType = 'application/msword';\n            }\n\n            header('Content-Type: ' . $contentType);\n            header('Content-Disposition: inline; filename=\"' . basename($fullPath) . '\"');\n            header('Content-Length: ' . filesize($fullPath));\n            header('Cache-Control: must-revalidate');\n            header('Pragma: public');\n            header('Expires: 0');\n\n            readfile($fullPath);\n            exit;\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());  \n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Download a document file\n     * @param string $path Base64 encoded file path\n     */\n    public function actionDownloadDokumen($path) {\n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $decodedPath = base64_decode($path);\n            $fullPath = Yii::getPathOfAlias('webroot') . $decodedPath;\n\n            if (!file_exists($fullPath)) {\n                throw new NotFoundException('File tidak ditemukan');\n            }\n\n            $ext = strtolower(pathinfo($fullPath, PATHINFO_EXTENSION));\n            \n            $contentType = 'application/octet-stream';\n            if ($ext === 'pdf') {\n                $contentType = 'application/pdf';\n            } else if (in_array($ext, ['doc', 'docx'])) {\n                $contentType = 'application/msword';\n            }\n\n            header('Content-Type: ' . $contentType);\n            header('Content-Disposition: attachment; filename=\"' . basename($fullPath) . '\"');\n            header('Content-Length: ' . filesize($fullPath));\n            header('Cache-Control: must-revalidate');\n            header('Pragma: public');\n            header('Expires: 0');\n\n            readfile($fullPath);\n            exit;\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Lists all verification requests\n     * @return void\n     */\n    public function actionDaftar() {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            $result = $this->service->getDaftarPerubahan($input);\n            \n            $response = array(\n                'data' => $result['data'],\n                'pagination' => array(\n                    'total_records' => (int)$result['pagination']['total_records'],\n                    'total_pages' => (int)$result['pagination']['total_pages'],\n                    'current_page' => (int)$result['pagination']['current_page'],\n                    'limit' => (int)$result['pagination']['limit']\n                )\n            );\n            \n            APIResponse::ok($response, 'Success');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Shows verification history\n     */\n    public function actionRiwayat() {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (!isset($input['page']) || !isset($input['limit'])) {\n                throw new ValidationException(\"'page' and 'limit' are required\");\n            }\n\n            $result = $this->service->getRiwayatPerubahan($input);\n            APIResponse::ok($result, 'Success');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Shows detailed preview of a Perseroan change request\n     * @param string $id The transaction ID\n     */\n    public function actionPratinjau($id) {\n        \n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            if (empty($id)) {\n                throw new ValidationException(\"ID verifikasi wajib diisi\");\n            }\n\n            $result = $this->service->getPratinjauPerubahan($id);\n            \n            if (!$result) {\n                throw new NotFoundException('Data tidak ditemukan');\n            }\n\n            APIResponse::ok($result, 'Success');\n    \n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Get voting details for a transaction\n     * @param string $token Base64 encoded token containing transaction ID and email\n     */\n    public function actionVoteDetail($token) {\n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            if (empty($token)) {\n                throw new ValidationException(\"Token is required\");\n            }\n\n            $decodedToken = base64_decode($token);\n            if ($decodedToken === false) {\n                throw new ValidationException('Token format tidak valid.');\n            }\n\n            // Token format: nomor_transaksi|email\n            list($nomorTransaksi, $email) = explode('|', $decodedToken);\n            \n            if (empty($nomorTransaksi) || empty($email)) {\n                throw new ValidationException('Token tidak lengkap.');\n            }\n\n            // Get transaction data\n            $transaction = TransaksiPerseroan::model()->findByAttributes([\n                'nomor_transaksi' => $nomorTransaksi\n            ]);\n            if (!$transaction) {\n                throw new NotFoundException('Data transaksi tidak ditemukan.');\n            }\n\n            // Get persetujuan data\n            $persetujuan = PerubahanPerseroanPersetujuanPemegangSaham::model()->findByAttributes([\n                'nomor_transaksi' => $nomorTransaksi,\n                'email_ps' => $email\n            ]);\n\n            if (!$persetujuan) {\n                throw new NotFoundException('Data persetujuan tidak ditemukan.');\n            }\n\n            // Check if voting period has expired\n            if ($persetujuan->isTokenExpired()) {\n                throw new ValidationException('Link persetujuan telah kedaluwarsa.');\n            }\n\n            $result = $this->service->getPratinjauPerubahanByTransaction($nomorTransaksi);\n            // Add voting status to response\n            $result['voting_status'] = array(\n                'has_voted' => $persetujuan->status != PerubahanPerseroanPersetujuanPemegangSaham::STATUS_MENUNGGU,\n                'vote_result' => $persetujuan->status == PerubahanPerseroanPersetujuanPemegangSaham::STATUS_DISETUJUI ? 1 : \n                               ($persetujuan->status == PerubahanPerseroanPersetujuanPemegangSaham::STATUS_DITOLAK ? 2 : null),\n                'vote_catatan' => $persetujuan->alasan_penolakan,\n                'vote_date' => $persetujuan->tanggal_response,\n                'is_expired' => $persetujuan->isTokenExpired()\n            );\n\n            APIResponse::ok($result, 'Success');\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Approve a verification request\n     * @param string $id Verification ID\n     */\n    public function actionApprove($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            $catatan = isset($input['catatan']) ? $input['catatan'] : '';\n\n            $result = $this->service->approveVerifikasi($id, $catatan);\n            APIResponse::ok($result, 'Verifikasi berhasil disetujui');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Reject a verification request\n     * @param string $id Verification ID\n     */\n    public function actionReject($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (!isset($input['catatan']) || empty($input['catatan'])) {\n                throw new ValidationException('Catatan penolakan wajib diisi');\n            }\n\n            $result = $this->service->rejectVerifikasi($id, $input['catatan']);\n            APIResponse::ok($result, 'Verifikasi berhasil ditolak');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Request revision for a verification request\n     * @param string $id Verification ID\n     */\n    public function actionRevise($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (!isset($input['catatan']) || empty($input['catatan'])) {\n                throw new ValidationException('Catatan perbaikan wajib diisi');\n            }\n\n            $result = $this->service->reviseVerifikasi($id, $input['catatan']);\n            APIResponse::ok($result, 'Verifikasi dikembalikan untuk perbaikan');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Handle shareholder vote submission\n     * @param string $token Base64 encoded token containing transaction ID and email\n     */\n    /**\n     * Submit revision response for a verification request\n     * @param string $id Verification ID\n     */\n    public function actionSubmitRevision($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $result = $this->service->submitRevision($id, '');\n            APIResponse::ok($result, 'Perbaikan berhasil disubmit');\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Restore a verification request back to MENUNGGU_KATIMJA status\n     * @param string $id Verification ID\n     */\n    public function actionRestore($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            $catatan = isset($input['catatan']) ? $input['catatan'] : '';\n\n            $result = $this->service->restoreVerifikasi($id, $catatan);\n            APIResponse::ok($result, 'Verifikasi berhasil dikembalikan ke Katimja');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    public function actionVote($token) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            if (empty($token)) {\n                throw new ValidationException(\"Token is required\");\n            }\n\n            $decodedToken = base64_decode($token);\n            if ($decodedToken === false) {\n                throw new ValidationException('Token format tidak valid.');\n            }\n\n            // Token format: nomor_transaksi|email\n            list($nomorTransaksi, $email) = explode('|', $decodedToken);\n            \n            if (empty($nomorTransaksi) || empty($email)) {\n                throw new ValidationException('Token tidak lengkap.');\n            }\n\n            $input = RequestContext::getJsonBody();\n            if (!isset($input['vote'])) {\n                throw new ValidationException('Vote is required');\n            }\n\n            if ($input['vote'] === false && empty($input['catatan'])) {\n                throw new ValidationException('Catatan penolakan wajib diisi');\n            }\n\n            $catatan = isset($input['catatan']) ? $input['catatan'] : '';\n            \n            // Get persetujuan data\n            $persetujuan = PerubahanPerseroanPersetujuanPemegangSaham::model()->findByAttributes([\n                'nomor_transaksi' => $nomorTransaksi,\n                'email_ps' => $email\n            ]);\n\n            if (!$persetujuan) {\n                throw new NotFoundException('Data persetujuan tidak ditemukan.');\n            }\n\n            // Check if voting period has expired\n            if ($persetujuan->isTokenExpired()) {\n                throw new ValidationException('Link persetujuan telah kedaluwarsa.');\n            }\n\n            // Process the vote using PemegangSahamService\n            $pemegangSahamService = new PemegangSahamService();\n            $voteData = array(\n                'vote' => $input['vote'] ? '1' : '2',\n                'alasan_penolakan' => $catatan\n            );\n            \n            $result = $pemegangSahamService->processVote($persetujuan->token, $voteData);\n            \n            if ($result['status'] === 'success') {\n                APIResponse::ok(array('success' => true), 'Vote berhasil disimpan');\n            } else {\n                throw new ValidationException('Gagal menyimpan vote');\n            }\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Trigger PS notification for a transaction\n     * POST /sabh/api/verifikasiPerubahanPerseroan/triggerPSNotification\n     */\n    public function actionTriggerPSNotification() {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (empty($input['nomor_transaksi'])) {\n                throw new ValidationException('Nomor transaksi wajib diisi');\n            }\n\n            $nomorTransaksi = $input['nomor_transaksi'];\n            $idPerseroan = $input['id_perseroan'] ? $input['id_perseroan'] : null;\n            \n            if (empty($idPerseroan)) {\n                throw new ValidationException('ID Perseroan wajib diisi');\n            }\n            \n            // Trigger PS notification using the initialized service\n            $result = $this->pemegangSahamService->triggerNotificationAfterAktaUpload($nomorTransaksi, $idPerseroan);\n            \n            if ($result) {\n                APIResponse::ok([\n                    'success' => true,\n                    'nomor_transaksi' => $nomorTransaksi,\n                    'id_perseroan' => $idPerseroan\n                ], 'PS notification berhasil dikirim');\n            } else {\n                throw new ValidationException('Gagal mengirim notifikasi PS');\n            }\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n}\n\n--- File: 1114 # views/penghapusanBadanHukum/permohonan/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/dialog') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<script defer src=\"https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js\"></script>\n\n<div x-data=\"permohonanForm()\" id=\"blokir-perseroan-form\">\n    <!-- FIRST STAGE => PENGAJUAN PENGHAPUSAN -->\n    <template x-if=\"stage === 1\">\n        <div>\n            <?php $this->renderPartial('permohonan/_formPengajuanPenghapusan') ?>\n        </div>\n    </template>\n\n    <!-- SECOND STAGE => PERMOHONAN PENGHAPUSAN -->\n    <template x-if=\"stage === 2\">\n        <div>\n            <?php $this->renderPartial('permohonan/_formPermohonanPenghapusan') ?>\n        </div>\n    </template>\n\n    <!-- MODAL CONFIRMATION => ALSO USED AT _formPengajuanPenghapusan.php and _formPermohonanPenghapusan.php -->\n    <template x-if=\"isFormConfirmation === true\">\n        <?php $this->renderPartial('modal/_modalConfirmation') ?>\n    </template>\n\n    <!-- MODAL PRATINJAU => ONLY USED AT _formPermohonanPenghapusan.php -->\n    <template x-if='isFormPratinjau === true'>\n        <?php $this->renderPartial('modal/_modalPratinjau') ?>\n    </template>\n</div>\n\n\n<script type=\"text/javascript\">\n    function permohonanForm() {\n        return {\n            /**\n             * Gets the loading overlay component instance.\n             * @returns {LoadingOverlayComponent}\n             */\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            // part of index.php\n            stage: 1,\n            formDataIndex: {\n                jenisLayanan: 'blokir',\n            },\n            isFormConfirmation: false,\n            isFormPratinjau: false,\n            handleFormConfirmation() {\n                this.isFormConfirmation = !this.isFormConfirmation;\n                document.body.style.overflow = this.isFormConfirmation ? 'hidden' : '';\n            },\n\n            handleModalFormPratinjau() {\n                this.isFormPratinjau = !this.isFormPratinjau;\n                document.body.style.overflow = this.isFormPratinjau ? 'hidden' : '';\n            },\n            handleSubmitModal(){\n                // if stage 1 then redirect into 2\n                if(this.stage === 1) { \n                    this.handleFormConfirmation();\n                    this.$nextTick(() => {  \n                        this.stage = 2;\n                        this.saveStateToSession();\n                    });\n                } \n                // else if stage 2 than pop up pratinjau form\n                else {\n                    this.handleFormConfirmation();\n                    this.handleModalFormPratinjau();\n                }\n            },\n\n            // utility\n            init() {\n                const savedStateJSON = sessionStorage.getItem('permohonanFormState');\n                if (savedStateJSON) {\n                    const savedState = JSON.parse(savedStateJSON);\n                    // index.php\n                    this.stage = savedState.stage || this.stage;\n                    \n                    // _formPengajuanPenghapusan.php\n                    this.formDataPengajuanPenghapusan = savedState.formDataPengajuanPenghapusan || this.formDataPengajuanPenghapusan;\n                    this.requirementsPengajuanPenghapusan = savedState.requirementsPengajuanPenghapusan || this.requirementsPengajuanPenghapusan,\n                    this.errorsPengajuanPenghapusan = savedState.errorsPengajuanPenghapusan || this.errorsPengajuanPenghapusan,\n                    this.perkumpulan = savedState.perkumpulan || this.perkumpulan;\n                    this.validationResult = savedState.validationResult || this.validationResult;\n                    \n                    // _formPermohonanPenghapusan.php\n                    this.formDataPermohonanPenghapusan   = savedState.formDataPermohonanPenghapusan || this.formDataPermohonanPenghapusan;\n                    this.errorsPermohonanPenghapusan = savedState.errorsPermohonanPenghapusan || this.errorsPermohonanPenghapusan;\n                } else {\n                    console.log(\"Session last input is not found\")\n                }\n            },\n            \n            saveStateToSession() {\n                const currState = {\n                    /// index.php\n                    stage:this.stage,\n                    \n                    // _formPengajuanPenghapusan.php\n                    formDataPengajuanPenghapusan: this.formDataPengajuanPenghapusan,\n                    requirementsPengajuanPenghapusan: this.requirementsPengajuanPenghapusan,\n                    // errorsPengajuanPenghapusan: this.errorsPengajuanPenghapusan,\n                    perkumpulan: this.perkumpulan,\n                    validationResult: this.validationResult,\n                    \n                    // _formPermohonanPenghapusan.php\n                    // errorsPermohonanPenghapusan: this.errorsPermohonanPenghapusan,\n                    formDataPermohonanPenghapusan: this.formDataPermohonanPenghapusan\n                }\n\n                sessionStorage.setItem('permohonanFormState', JSON.stringify(currState));\n            },\n\n            goBack() {\n                if(this.stage === 2) {\n                    this.$nextTick(() => {\n                        this.stage = 1;\n                        this.saveStateToSession();\n                    })\n                } else {\n                    window.history.back();\n                    sessionStorage.removeItem('permohonanFormState')\n                }\n            },\n\n            // part of _formPengajuanPenghapusan.php\n            formDataPengajuanPenghapusan: {\n                alasanBerakhir: '',\n                namaPerkumpulan: '',\n                nomorSkTerakhir: '',\n                notarisTerakhir: '',\n                isBeritaRapat: false,\n                declaration: false,\n            },\n            requirementsPengajuanPenghapusan: {\n                kuorumPeserta: false,\n                kuorumSuara: false,\n                daftarAnggota: false,\n                daftarHadir: false,\n                aktaPembubaran: false,\n                pengumumanPembubaran: false,\n                pengumumanLikuidasi: false,\n                declaration: false,\n            },\n            errorsPengajuanPenghapusan: {\n                alasanBerakhir: null,\n                namaPerkumpulan: null,\n                nomorSkTerakhir: null,\n                notarisTerakhir: null,\n                requirements: null,\n            },\n            perkumpulan: null,\n            validationResult: null,\n            isKegiatanSosial(value){\n                if(!this.perkumpulan) return false\n                if(!this.perkumpulan.data.keterangan_sosial) return false\n                return this.perkumpulan.data.keterangan_sosial.sosial.includes(val)\n            },\n            isKegiatanKemanusiaan(value){\n                if(!this.perkumpulan) return false\n                if(!this.perkumpulan.data.keterangan_keagamaan) return false\n                return this.perkumpulan.data.keterangan_keagamaan.kemanusiaan.includes(val)\n            },\n            isKegiatanKeagamaan(value){\n                if(!this.perkumpulan) return false\n                if(!this.perkumpulan.data.keterangan_keagamaan) return false\n                return this.perkumpulan.data.keterangan_keagamaan.keagamaan.includes(val)\n            },\n            \n            validateFormsPengajuanPenghapusan() {\n                this.$loading.startLoading('validateFormsPengajuanPenghapusan');\n\n                Object.keys(this.errorsPengajuanPenghapusan).forEach(key => {\n                    this.errorsPengajuanPenghapusan[key] = null;\n                });\n\n                let hasError = false;\n                if (!this.formDataPengajuanPenghapusan.namaPerkumpulan) {\n                    this.errorsPengajuanPenghapusan.namaPerkumpulan = 'Nama Perkumpulan tidak boleh kosong';\n                    hasError = true;\n                } \n\n                if (!this.formDataPengajuanPenghapusan.nomorSkTerakhir) {\n                    this.errorsPengajuanPenghapusan.nomorSkTerakhir = 'Nomor SK Terakhir tidak boleh kosong';\n                    hasError = true;\n                }\n\n                if (!this.formDataPengajuanPenghapusan.notarisTerakhir) {\n                    this.errorsPengajuanPenghapusan.notarisTerakhir = 'Nama Notaris Terakhir tidak boleh kosong';\n                    hasError = true;\n                } \n\n                if (!this.formDataPengajuanPenghapusan.alasanBerakhir) {\n                    this.errorsPengajuanPenghapusan.alasanBerakhir = 'Alasan Berakhirnya Status Badan Hukum tidak boleh kosong';\n                    hasError = true;\n                } \n\n                this.$loading.stopLoading('validateFormsPengajuanPenghapusan');\n\n                return !hasError;\n            },\n            getCookie(name) {\n                const match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));\n                return match ? match[2] : null;\n            },\n            async safeFetch(url, options = {}) {\n                let body;\n\n                // Handle different body types\n                if (options.body instanceof FormData) {\n                    body = options.body;\n                } else if (typeof options.body === 'object' && options.body !== null) {\n                    body = JSON.stringify(options.body);\n                    options.headers = {\n                        'Content-Type': 'application/json',\n                        ...options.headers\n                    };\n                } else if (typeof options.body === 'string') {\n                    body = options.body;\n                    options.headers = {\n                        'Content-Type': 'text/plain',\n                        ...options.headers\n                    };\n                }\n\n                options?.onStart?.();\n\n                const loadingKey = url + Math.random().toString(36).substring(2, 15);\n\n                if (options.loadingSet) {\n                    options.loadingSet.add(loadingKey);\n                }\n\n                try {\n                    const sessionId = this.getCookie('PHPSESSID');\n                    const response = await fetch(url, {\n                        ...options,\n                        body,\n                        credentials: 'include',\n                        headers: {\n                            'X-PHPSESSID': `${sessionId}`,\n                            ...options.headers\n                        }\n                    });\n\n                    const contentType = response.headers.get('content-type');\n                    const isJSON = contentType && contentType.includes('application/json');\n                    const data = isJSON ? await response.json() : await response.text();\n\n                    if (!response.ok) {\n                        return [null, data];\n                    }\n\n                    return [data, null];\n                } catch (err) {\n                    console.error('Fetch error:', err);\n                    return [null, { message: 'Kesalahan tidak diketahui, silakan coba lagi.', error: err }];\n                } finally {\n                    if (options.loadingSet) {\n                        options.loadingSet.delete(loadingKey);\n                    }\n                }\n            },\n            async validatePerkumpulan() {\n                this.saveStateToSession();\n                if (!this.validateFormsPengajuanPenghapusan()) return;\n\n                const [res, err] = await this.safeFetch('/sabh/api/perkumpulan/validatePerkumpulan', {\n                    method: 'POST',\n                    loadingSet: this.$loading.loadingSet,\n                    body: {\n                        nama: this.formDataPengajuanPenghapusan.namaPerkumpulan,\n                        nomor_sk: this.formDataPengajuanPenghapusan.nomorSkTerakhir,\n                        notaris_terakhir: this.formDataPengajuanPenghapusan.notarisTerakhir,\n                    }   \n                });\n\n                if (err) {\n                    this.errorsPengajuanPenghapusan.namaPerkumpulan = err.message;\n                    return;\n                }\n\n                this.perkumpulan = res.data;\n                this.saveStateToSession();\n            },\n            validateRequirementsPengajuanPenghapusan() {\n                const isAllRequirementsMet = Object.values(this.requirementsPengajuanPenghapusan).every(value => value);\n\n                if (!isAllRequirementsMet) {\n                    this.errorsPengajuanPenghapusan.requirements = 'Mohon lengkapi semua persyaratan di bawah ini';\n                } else {\n                    this.errorsPengajuanPenghapusan.requirements = null;\n                }\n\n                if (!this.requirementsPengajuanPenghapusan.declaration) {\n                    this.errorsPengajuanPenghapusan.declaration = 'Mohon centang pernyataan di bawah ini';\n                } else {\n                    this.errorsPengajuanPenghapusan.declaration = null;\n                }\n\n                return isAllRequirementsMet;\n            },\n            validateFormPengajuanPenghapusan() {\n                // Clear all errorsPengajuanPenghapusan first\n                Object.keys(this.errorsPengajuanPenghapusan).forEach(key => {\n                    this.errorsPengajuanPenghapusan[key] = null;\n                });\n\n                let isValid = true;\n\n                // Validate required fields\n\n                if (!this.formDataPengajuanPenghapusan.alasanBerakhir) {\n                    this.errorsPengajuanPenghapusan.alasanBerakhir = 'Alasan berakhirnya status badan hukum wajib dipilih';\n                    isValid = false;\n                }\n\n                if (!this.formDataPengajuanPenghapusan.namaPerkumpulan) {\n                    this.errorsPengajuanPenghapusan.namaPerkumpulan = 'Nama Perkumpulan wajib diisi';\n                    isValid = false;\n                }\n\n                if (!this.formDataPengajuanPenghapusan.nomorSkTerakhir) {\n                    this.errorsPengajuanPenghapusan.nomorSkTerakhir = 'Nomor SK Terakhir wajib diisi';\n                    isValid = false;\n                }\n\n                if (!this.formDataPengajuanPenghapusan.notarisTerakhir) {\n                    this.errorsPengajuanPenghapusan.notarisTerakhir = 'Nama Notaris wajib diisi';\n                    isValid = false;\n                }\n\n                if (!this.validateRequirementsPengajuanPenghapusan()) {\n                    isValid = false;\n                }\n\n                return isValid;\n            },\n            clearErrorPengajuanPenghapusan(field) {\n                if (this.errorsPengajuanPenghapusan[field]) {\n                    this.errorsPengajuanPenghapusan[field] = null;\n                }\n            },\n            submitFormPengajuanPenghapusan() {\n                this.saveStateToSession();\n                if (!this.validateFormPengajuanPenghapusan()) return;\n                if (!this.requirementsPengajuanPenghapusan.declaration) {\n                    this.errorsPengajuanPenghapusan.declaration = 'Saya menyatakan bahwa semua informasi yang diberikan telah sesuai dengan peraturan perundang-undangan yang berlaku, dan data isian sesuai dengan dokumen yang ada pada saya';\n                }\n                this.handleFormConfirmation();\n            },\n\n            // part of _formPermohonanPenghapusan.php\n            formDataPermohonanPenghapusan: {\n                nomorAkta: '',\n                tanggalAkta: '',\n                aktaPembubaran: '',\n                tanggalRapat: '',\n                jumlahKuorum: '',\n                sisaKekayaan: '',\n                firstDeclaration: false,\n                secondDeclaration: false,\n                notarisPengganti: false,\n                letterList: [\n                    { tanggal_cetak: '', surat_kabar: '' } \n                ],\n                likuidasiList: [\n                    { tanggal_cetak: '', surat_kabar: '' } \n                ]\n            },\n            errorsPermohonanPenghapusan: {\n                nomorAkta: null,\n                tanggalAkta: null,\n                aktaPembubaran: null,\n                tanggalRapat: null,\n                jumlahKuorum: null,\n                sisaKekayaan: null,\n                firstDeclaration: null,\n                secondDeclaration: null,\n                notarisPengganti: null,\n                letterList: [\n                    { tanggal_cetak: null, surat_kabar: null }\n                ],\n                likuidasiList: [\n                    { tanggal_cetak: null, surat_kabar: null }\n                ]\n            },\n            getPendiriPerkumpulan() {\n                if (!this.perkumpulan || !Array.isArray(this.perkumpulan.listAnggota)) {\n                    return [];\n                }\n\n                return this.perkumpulan.listAnggota.filter(\n                    anggota => anggota.organ_perkumpulan?.toLowerCase() === 'pendiri'\n                );\n            },\n            getOrganPerkumpulan() {\n                if (!this.perkumpulan || !Array.isArray(this.perkumpulan.listAnggota)) {\n                    return [];\n                }\n\n                return this.perkumpulan.listAnggota.filter(\n                    anggota => anggota.organ_perkumpulan?.toLowerCase() !== 'pendiri'\n                );\n            },\n            handleFileUpload(event) {\n                const file = event.target.files[0];\n                if (!file) return;\n\n                const reader = new FileReader();\n                reader.onload = () => {\n                    this.formDataPermohonanPenghapusan.aktaPembubaran = {\n                        name: file.name,\n                        type: file.type,\n                        size: file.size,\n                        data: reader.result \n                    };\n                };\n                reader.readAsDataURL(file);\n            },  \n\n            addLetter(){\n                this.formDataPermohonanPenghapusan.letterList.push({ tanggal_cetak: '', surat_kabar: '' });\n                this.errorsPermohonanPenghapusan.letterList.push({ tanggal_cetak: null, surat_kabar: null });\n            },\n            removeLetter(index){\n                if (this.formDataPermohonanPenghapusan.letterList.length > 1) {\n                    this.formDataPermohonanPenghapusan.letterList.splice(index, 1);\n                    this.errorsPermohonanPenghapusan.letterList.splice(index, 1);\n                } else {\n                    alert('Item terakhir tidak bisa dihapus.');\n                }\n            },\n            addLiquidationLetter() {\n                this.formDataPermohonanPenghapusan.likuidasiList.push({ tanggal_cetak: '', surat_kabar: '' });\n                this.errorsPermohonanPenghapusan.likuidasiList.push({ tanggal_cetak: null, surat_kabar: null });\n            },\n            removeLiquidationLetter(index) {\n                if (this.formDataPermohonanPenghapusan.likuidasiList.length > 1) {\n                    this.formDataPermohonanPenghapusan.likuidasiList.splice(index, 1);\n                    this.errorsPermohonanPenghapusan.likuidasiList.splice(index, 1);\n                } else {\n                    alert('Item terakhir tidak bisa dihapus.');\n                }\n            },\n            clearErrorPermohonanPengajuan(field) {\n                if (this.errorsPermohonanPenghapusan[field]) {\n                    this.errorsPermohonanPenghapusan[field] = null;\n                }\n            },\n            validateFormPermohonanPengajuan(){\n                Object.keys(this.errorsPermohonanPenghapusan).forEach(key => {\n                    if (key === 'likuidasiList' || key === 'letterList') {\n                        this.errorsPermohonanPenghapusan.likuidasiList = [];\n                        this.errorsPermohonanPenghapusan.letterList = [];\n                    } else {\n                        this.errorsPermohonanPenghapusan[key] = null;\n                    }\n                });\n\n                let isValid = true;\n\n                if(!this.formDataPermohonanPenghapusan.nomorAkta) {\n                    this.errorsPermohonanPenghapusan.nomorAkta = \"Nomor Akta wajib diisi\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.tanggalAkta) {\n                    this.errorsPermohonanPenghapusan.tanggalAkta = \"Tanggal Akta wajib diisi\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.aktaPembubaran) {\n                    this.errorsPermohonanPenghapusan.aktaPembubaran = \"Akta Pembubaran wajib diisi\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.tanggalRapat) {\n                    this.errorsPermohonanPenghapusan.tanggalRapat = \"Tanggal Rapat wajib diisi\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.jumlahKuorum) {\n                    this.errorsPermohonanPenghapusan.jumlahKuorum = \"Jumlah Kuorum wajib diisi\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.sisaKekayaan) {\n                    this.errorsPermohonanPenghapusan.sisaKekayaan = \"Sisa Kekayaan wajib diisi\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.firstDeclaration) {\n                    this.errorsPermohonanPenghapusan.firstDeclaration = \"Mohon centang pernyataan di bawah ini\";\n                    isValid = false;\n                }\n                if(!this.formDataPermohonanPenghapusan.secondDeclaration) {\n                    this.errorsPermohonanPenghapusan.secondDeclaration = \"Mohon centang pernyataan di bawah ini\";\n                    isValid = false;\n                }\n                this.formDataPermohonanPenghapusan.likuidasiList.forEach((item, index) => {\n                    this.errorsPermohonanPenghapusan.likuidasiList[index] = { tanggal_cetak: null, surat_kabar: null };\n                    if (!item.tanggal_cetak) {\n                        this.errorsPermohonanPenghapusan.likuidasiList[index].tanggal_cetak = \"Tanggal cetak wajib diisi.\";\n                        isValid = false;\n                    }\n                    if (!item.surat_kabar) {\n                        this.errorsPermohonanPenghapusan.likuidasiList[index].surat_kabar = \"Nomor surat kabar wajib diisi.\";\n                        isValid = false;\n                    }\n                });\n                this.formDataPermohonanPenghapusan.letterList.forEach((item, index) => {\n                    this.errorsPermohonanPenghapusan.letterList[index] = { tanggal_cetak: null, surat_kabar: null };\n                    if (!item.tanggal_cetak) {\n                        this.errorsPermohonanPenghapusan.letterList[index].tanggal_cetak = \"Tanggal cetak wajib diisi.\";\n                        isValid = false;\n                    }\n                    if (!item.surat_kabar) {\n                        this.errorsPermohonanPenghapusan.letterList[index].surat_kabar = \"Nomor surat kabar wajib diisi.\";\n                        isValid = false;\n                    }\n                });\n\n                return isValid;\n            },\n            handleNextPermohonanPengajuan() {\n                this.saveStateToSession()\n                if (!this.validateFormPermohonanPengajuan()) {\n                    return;\n                }\n                this.handleFormConfirmation()\n            },\n            dataURLToBlob(dataURL) {\n                const [header, base64Data] = dataURL.split(',');\n                const mime = header.split(':')[1].split(';')[0]; // Extract mime type\n                const binary = atob(base64Data); // Decode base64 to binary string\n                const array = [];\n                for (let i = 0; i < binary.length; i++) {\n                    array.push(binary.charCodeAt(i)); // Convert binary string to byte array\n                }\n                return new Blob([new Uint8Array(array)], { type: mime });\n            },\n            async submitPermohonanPengajuan(){\n                // hit api for pembubaran perkumpulan\n                const [res, err] = await this.safeFetch('/sabh/api/perkumpulan/pembubaranPerkumpulan', {\n                    method: 'POST',\n                    loadingSet: this.$loading.loadingSet,\n                    body: {\n                        formDataPengajuanPenghapusan: this.formDataPengajuanPenghapusan,\n                        formDataPermohonanPenghapusan: this.formDataPermohonanPenghapusan,\n                        badan_hukum_id: this.perkumpulan.data.badan_hukum_id\n                    }\n                });\n\n                if (err) {\n                    this.errorsPermohonanPenghapusan.nomorAkta = err.message;\n                    return;\n                }\n\n                sessionStorage.removeItem('permohonanFormState');\n                window.location.href = '/sabh/perkumpulan/listTransaksi';\n                return;\n\n                // const nomorTransaksi = res.data.newTransaction.nomor_transaksi\n                // const idBakum = res.data.newTransaction.id_badan_hukum\n                \n                // const akta = this.formDataPermohonanPenghapusan.aktaPembubaran; \n                // const blob = this.dataURLToBlob(akta.data);\n\n                // // Prepare FormData\n                // const fd = new FormData();\n                // fd.append('no', nomorTransaksi);\n                // fd.append('id', idBakum);\n                // fd.append('tmp_file', blob, akta.name); \n\n                // // Send the file to the backend\n                // const [resAkta, errAkta] = await this.safeFetch(\n                //     `/sabh/api/perkumpulan/uploadAktaPerkumpulan?no=${encodeURIComponent(nomorTransaksi)}&id=${encodeURIComponent(idBakum)}`,\n                //     {\n                //         method: 'POST',\n                //         body: fd\n                //     }\n                // );\n\n                // if (errAkta) {\n                //     this.errorsPermohonanPenghapusan.aktaPembubaran = errAkta.message;\n                //     return;\n                // }\n\n                // console.log('test')\n                // console.log(resAkta.data);\n            }\n        }\n    }\n</script>\n\n\n--- File: 1109 # views/votingPerubahanPerseroan/index.php ---\n<?php\n\n/**\n * @var VotingPerubahanPerseroanController $this\n */\n?>\n\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('../_common/dialog') ?>\n<?php $this->renderPartial('_common/constants') ?>\n\n<style>\n    .comparison-old {\n        background-color: #fff3cd !important;\n    }\n\n    .comparison-new {\n        background-color: #e8f5e9 !important;\n    }\n</style>\n\n<div class=\"container py-4\">\n    <div x-data=\"voteVerifikasi()\" x-cloak class=\"row\" id=\"vote-verifikasi\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">\n                <!-- Header with Perseroan Name -->\n                <center>\n                    <h3><br />\n                        <span x-text=\"(data.changed_data?.nama_perseroan || data.nama_perseroan) || 'Loading...'\"></span>\n                    </h3>\n                </center>\n                <br />\n\n                <!-- Show side by side if not finished -->\n                <template x-if=\"data.changed_data && data.changed_data.status != '7'\">\n                    <div class=\"row\">\n                        <!-- Data Lama -->\n                        <div>\n                            <div class=\"panel-body\">\n                                <fieldset class=\"fieldset\">\n                                    <legend>DATA PERSEROAN</legend>\n                                    <div class=\"data-list\">\n                                        <div class=\"data-item\">\n                                            <div class=\"data-label\">Nama Perseroan</div>\n                                            <div class=\"data-content\">\n                                                <span class=\"data-value\"\n                                                    x-text=\"data.master_data?.nama_perseroan || '-'\"\n                                                    :class=\"{'comparison-old': data.master_data?.nama_perseroan !== data.changed_data.nama_perseroan}\"></span>\n                                            </div>\n                                        </div>\n\n                                        <div class=\"data-item\">\n                                            <div class=\"data-label\">Nomor Transaksi</div>\n                                            <div class=\"data-content\">\n                                                <span class=\"data-value\"\n                                                    x-text=\"data.nomor_transaksi || '-'\"></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </fieldset>\n                            </div>\n                        </div>\n                    </div>\n                </template>\n\n                </fieldset>\n        </div>\n\n\n        <!-- PENGURUS DAN PEMEGANG SAHAM -->\n        <template x-if=\"data.changed_data && data.changed_data.status != '7'\">\n            <!-- Show side by side if not finished -->\n            <div class=\"row\"></div>\n            <!-- Data Lama -->\n            <div class=\"col-lg-6\">\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>PENGURUS DAN PEMEGANG SAHAM</legend>\n                        <div class=\"form-group clearfix\">\n                            <div style=\"overflow-x: auto;\">\n                            <table class=\"table table-striped table-hover table-bordered dataTable\">\n                                <thead>\n                                    <tr>\n                                        <th>Nama</th>\n                                        <th>Penanggung Jawab</th>\n                                        <th>Modal ditempatkan</th>\n                                        <th>Jumlah Lembar Saham</th>\n                                        <th>Jabatan</th>\n                                        <th>Total</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <template x-for=\"(pemegang, index) in data.master_data?.pemegang_saham\" :key=\"index\">\n                                        <tr>\n                                            <td x-text=\"pemegang.nama_badan_hukum || '-'\"></td>\n                                            <td x-text=\"pemegang.penanggung_jawab ? 'Ya' : 'Tidak'\"></td>\n                                            <td x-text=\"pemegang.modal_di_tempatkan || '-'\"></td>\n                                            <td x-text=\"formatNumber(pemegang.jumlah_lembar_saham_modal_ditempatkan)\"></td>\n                                            <td x-text=\"pemegang.jabatan || '-'\"></td>\n                                            <td x-text=\"formatCurrency(pemegang.total_harga_saham_yang_dipegang, pemegang.currency || 'rupiah')\"></td>\n                                        </tr>\n                                    </template>\n                                    <template x-if=\"!data.master_data?.pemegang_saham || data.master_data?.pemegang_saham.length === 0\">\n                                        <tr>\n                                            <td colspan=\"6\" class=\"text-center\">Tidak ada data</td>\n                                        </tr>\n                                    </template>\n                                </tbody>\n                            </table>\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n\n            <!-- Data Baru -->\n            <div class=\"col-lg-6\">\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>PENGURUS DAN PEMEGANG SAHAM (SEMULA)</legend>\n                        <div class=\"form-group clearfix\">\n                            <div style=\"overflow-x: auto;\">\n                            <table class=\"table table-striped table-hover table-bordered dataTable\">\n                                <thead>\n                                    <tr>\n                                        <th>Nama</th>\n                                        <th>Penanggung Jawab</th>\n                                        <th>Modal ditempatkan</th>\n                                        <th>Jumlah Lembar Saham</th>\n                                        <th>Jabatan</th>\n                                        <th>Total</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <template x-for=\"(pemegang, index) in data.changed_data.pemegang_saham\" :key=\"index\">\n                                        <tr>\n                                            <td>\n                                                <span class=\"data-value\"\n                                                    x-text=\"pemegang.nama_badan_hukum || '-'\"\n                                                    :class=\"{'text-success': !data.master_data?.pemegang_saham?.find(p => p.nama_badan_hukum === pemegang.nama_badan_hukum)}\"></span>\n                                            </td>\n                                            <td>\n                                                <span class=\"data-value\"\n                                                    x-text=\"pemegang.penanggung_jawab ? 'Ya' : 'Tidak'\"\n                                                    :class=\"{'text-success': !data.master_data?.pemegang_saham?.find(p => \n                                                                  p.nama_badan_hukum === pemegang.nama_badan_hukum && \n                                                                  p.penanggung_jawab === pemegang.penanggung_jawab\n                                                              )}\"></span>\n                                            </td>\n                                            <td>\n                                                <span class=\"data-value\"\n                                                    x-text=\"pemegang.modal_di_tempatkan || '-'\"\n                                                    :class=\"{'text-success': !data.master_data?.pemegang_saham?.find(p => \n                                                                  p.nama_badan_hukum === pemegang.nama_badan_hukum && \n                                                                  p.modal_di_tempatkan === pemegang.modal_di_tempatkan\n                                                              )}\"></span>\n                                            </td>\n                                            <td>\n                                                <span class=\"data-value\"\n                                                    x-text=\"formatNumber(pemegang.jumlah_lembar_saham_modal_ditempatkan)\"\n                                                    :class=\"{'text-success': !data.master_data?.pemegang_saham?.find(p => \n                                                                  p.nama_badan_hukum === pemegang.nama_badan_hukum && \n                                                                  p.jumlah_lembar_saham_modal_ditempatkan === pemegang.jumlah_lembar_saham_modal_ditempatkan\n                                                              )}\"></span>\n                                            </td>\n                                            <td>\n                                                <span class=\"data-value\"\n                                                    x-text=\"pemegang.jabatan || '-'\"\n                                                    :class=\"{'text-success': !data.master_data?.pemegang_saham?.find(p => \n                                                                  p.nama_badan_hukum === pemegang.nama_badan_hukum && \n                                                                  p.jabatan === pemegang.jabatan\n                                                              )}\"></span>\n                                            </td>\n                                            <td>\n                                                <span class=\"data-value\"\n                                                    x-text=\"formatCurrency(pemegang.total_harga_saham_yang_dipegang, pemegang.currency || 'rupiah')\"\n                                                    :class=\"{'text-success': !data.master_data?.pemegang_saham?.find(p => \n                                                                  p.nama_badan_hukum === pemegang.nama_badan_hukum && \n                                                                  p.total_harga_saham_yang_dipegang === pemegang.total_harga_saham_yang_dipegang\n                                                              )}\"></span>\n                                            </td>\n                                        </tr>\n                                    </template>\n                                    <template x-if=\"!data.changed_data.pemegang_saham || data.changed_data.pemegang_saham.length === 0\">\n                                        <tr>\n                                            <td colspan=\"6\" class=\"text-center\">Tidak ada data</td>\n                                        </tr>\n                                    </template>\n                                </tbody>\n                            </table>\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n    </div>\n    </template>\n\n    <!-- Show single column if finished -->\n    <template x-if=\"data.changed_data && data.changed_data.status == '7'\">\n        <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>PENGURUS DAN PEMEGANG SAHAM (MENJADI)</legend>\n                <div class=\"form-group clearfix\">\n                    <div style=\"overflow-x: auto;\">\n                    <table class=\"table table-striped table-hover table-bordered dataTable\">\n                        <thead>\n                            <tr>\n                                <th>Nama</th>\n                                <th>Penanggung Jawab</th>\n                                <th>Modal ditempatkan</th>\n                                <th>Jumlah Lembar Saham</th>\n                                <th>Jabatan</th>\n                                <th>Total</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <template x-for=\"(pemegang, index) in data.changed_data.pemegang_saham\" :key=\"index\">\n                                <tr>\n                                    <td x-text=\"pemegang.nama_badan_hukum || '-'\"></td>\n                                    <td x-text=\"pemegang.penanggung_jawab ? 'Ya' : 'Tidak'\"></td>\n                                    <td x-text=\"pemegang.modal_di_tempatkan || '-'\"></td>\n                                    <td x-text=\"formatNumber(pemegang.jumlah_lembar_saham_modal_ditempatkan)\"></td>\n                                    <td x-text=\"pemegang.jabatan || '-'\"></td>\n                                    <td x-text=\"formatCurrency(pemegang.total_harga_saham_yang_dipegang, pemegang.currency || 'rupiah')\"></td>\n                                </tr>\n                            </template>\n                            <template x-if=\"!data.changed_data.pemegang_saham || data.changed_data.pemegang_saham.length === 0\">\n                                <tr>\n                                    <td colspan=\"6\" class=\"text-center\">Tidak ada data</td>\n                                </tr>\n                            </template>\n                        </tbody>\n                    </table>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </template>\n\n\n\n    <!-- PEMEGANG SAHAM -->\n    <template x-if=\"data.changed_data && data.changed_data.status != '7'\">\n        <!-- Show side by side if not finished -->\n        <div class=\"row\">\n            <!-- Data Lama -->\n            <div class=\"col-lg-6\">\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>PENGURUS DAN PEMEGANG SAHAM (SEMULA)</legend>\n                        <div class=\"form-group clearfix\">\n                            <div style=\"overflow-x: auto;\">\n                            <table class=\"table table-hover table-bordered dataTable\" :class=\"{'comparison-old': JSON.stringify(data.master_data?.pemegang_saham) !== JSON.stringify(data.changed_data?.pemegang_saham)}\">\n                                <thead>\n                                    <tr>\n                                        <th>Nama</th>\n                                        <th>Jabatan</th>\n                                        <th>Email</th>\n                                        <th>Jumlah Lembar Saham</th>\n                                        <th>Total Nilai Saham</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <template x-for=\"(pemegang, index) in data.master_data?.pemegang_saham\" :key=\"index\">\n                                        <tr>\n                                            <td x-text=\"pemegang.nama_badan_hukum || '-'\"></td>\n                                            <td x-text=\"pemegang.jabatan || '-'\"></td>\n                                            <td x-text=\"pemegang.email || '-'\"></td>\n                                            <td x-text=\"formatNumber(pemegang.jumlah_lembar_saham_modal_ditempatkan)\"></td>\n                                            <td x-text=\"formatCurrency(pemegang.total_harga_saham_yang_dipegang, pemegang.currency || 'rupiah')\"></td>\n                                        </tr>\n                                    </template>\n                                    <template x-if=\"!data.master_data?.pemegang_saham || data.master_data?.pemegang_saham.length === 0\">\n                                        <tr>\n                                            <td colspan=\"5\" class=\"text-center\">Tidak ada data</td>\n                                        </tr>\n                                    </template>\n                                </tbody>\n                            </table>\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n\n            <!-- Data Baru -->\n            <div class=\"col-lg-6\">\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>PENGURUS DAN PEMEGANG SAHAM (MENJADI)</legend>\n                        <div class=\"form-group clearfix\">\n                            <div style=\"overflow-x: auto;\">\n                            <table class=\"table table-hover table-bordered dataTable\" :class=\"{'comparison-new': JSON.stringify(data.changed_data?.pemegang_saham) !== JSON.stringify(data.master_data?.pemegang_saham)}\">\n                                <thead>\n                                    <tr></tr>\n                                    <th>Nama</th>\n                                    <th>Jabatan</th>\n                                    <th>Email</th>\n                                    <th>Jumlah Lembar Saham</th>\n                                    <th>Total Nilai Saham</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <template x-for=\"(pemegang, index) in data.changed_data.pemegang_saham\" :key=\"index\">\n                                        <tr>\n                                            <td x-text=\"pemegang.nama_badan_hukum || '-'\"></td>\n                                            <td x-text=\"pemegang.jabatan || '-'\"></td>\n                                            <td x-text=\"pemegang.email || '-'\"></td>\n                                            <td x-text=\"formatNumber(pemegang.jumlah_lembar_saham_modal_ditempatkan)\"></td>\n                                            <td x-text=\"formatCurrency(pemegang.total_harga_saham_yang_dipegang, pemegang.currency || 'rupiah')\"></td>\n                                        </tr>\n                                    </template>\n                                    <template x-if=\"!data.changed_data.pemegang_saham || data.changed_data.pemegang_saham.length === 0\">\n                                        <tr>\n                                            <td colspan=\"5\" class=\"text-center\">Tidak ada data</td>\n                                        </tr>\n                                    </template>\n                                </tbody>\n                            </table>\n                            </div>\n                        </div>\n                    </fieldset>\n                </div>\n            </div>\n        </div>\n    </template>\n\n    <!-- Show single column if finished -->\n    <template x-if=\"data.changed_data && data.changed_data.status == '7'\">\n        <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>PEMEGANG SAHAM</legend>\n                <div class=\"form-group clearfix\">\n                    <table class=\"table table-striped table-hover table-bordered dataTable\">\n                        <thead>\n                            <tr>\n                                <th>Nama</th>\n                                <th>Jabatan</th>\n                                <th>Email</th>\n                                <th>Jumlah Lembar Saham</th>\n                                <th>Total Nilai Saham</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <template x-for=\"(pemegang, index) in data.changed_data.pemegang_saham\" :key=\"index\">\n                                <tr>\n                                    <td x-text=\"pemegang.nama_badan_hukum || '-'\"></td>\n                                    <td x-text=\"pemegang.jabatan || '-'\"></td>\n                                    <td x-text=\"pemegang.email || '-'\"></td>\n                                    <td x-text=\"formatNumber(pemegang.jumlah_lembar_saham_modal_ditempatkan)\"></td>\n                                    <td x-text=\"formatCurrency(pemegang.total_harga_saham_yang_dipegang, pemegang.currency || 'rupiah')\"></td>\n                                </tr>\n                            </template>\n                            <template x-if=\"!data.changed_data.pemegang_saham || data.changed_data.pemegang_saham.length === 0\">\n                                <tr>\n                                    <td colspan=\"5\" class=\"text-center\">Tidak ada data</td>\n                                </tr>\n                            </template>\n                        </tbody>\n                    </table>\n                </div>\n            </fieldset>\n        </div>\n    </template>\n\n    <!-- Expired Notice -->\n    <div class=\"panel-body\" x-show=\"data.voting_expired\">\n        <div class=\"alert alert-danger\">\n            <strong>Perhatian!</strong>\n            <p>Link persetujuan ini telah kedaluwarsa. Silakan hubungi administrator untuk informasi lebih lanjut.</p>\n        </div>\n    </div>\n\n    <!-- Already Voted Notice -->\n    <div class=\"panel-body\" x-show=\"data.voting_status && data.voting_status.has_voted\">\n        <fieldset class=\"fieldset\">\n            <legend>HASIL PERSETUJUAN ANDA</legend>\n            <div class=\"data-list\">\n                <div class=\"data-item\">\n                    <div class=\"data-label\">Status</div>\n                    <div class=\"data-content\">\n                        <span class=\"badge\"\n                            :class=\"{\n                                              'badge-success': data.voting_status.vote_result == 1,\n                                              'badge-danger': data.voting_status.vote_result == 2\n                                          }\"\n                            style=\"padding: 5px 10px; border-radius: 4px; font-weight: normal;\"\n                            x-text=\"data.voting_status.vote_result == 1 ? 'DISETUJUI' : 'DITOLAK'\">\n                        </span>\n                    </div>\n                </div>\n\n                <template x-if=\"data.voting_status.vote_result == 2\"></template>\n                <div class=\"data-item\">\n                    <div class=\"data-label\">Alasan Penolakan</div>\n                    <div class=\"data-content\">\n                        <span class=\"data-value\" x-text=\"data.voting_status.vote_catatan || '-'\"></span>\n                    </div>\n                </div>\n                </template>\n\n                <div class=\"data-item\">\n                    <div class=\"data-label\">Tanggal Persetujuan</div>\n                    <div class=\"data-content\">\n                        <span class=\"data-value\" x-text=\"formatDate(data.voting_status.vote_date)\"></span>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n\n    <!-- PERSETUJUAN PERUBAHAN -->\n    <template x-if=\"!data.voting_expired && !data.has_voted && data.voting_status && !data.voting_status.has_voted && data.changed_data\">\n        <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>PERSETUJUAN PERUBAHAN</legend>\n                <div class=\"form-group clearfix\">\n                    <div class=\"col-lg-12\">\n                        <div class=\"data-list\">\n                            <div class=\"data-item\">\n                                <div class=\"data-label\">\n                                    Hasil Persetujuan <span class=\"required\">*</span>\n                                </div>\n                                <div class=\"data-content\">\n                                    <div class=\"radio-group\" style=\"display: flex; gap: 20px;\">\n                                        <label class=\"radio-inline\">\n                                            <input type=\"radio\"\n                                                name=\"vote_result\"\n                                                value=\"1\"\n                                                x-model=\"voteResult\"> Setuju\n                                        </label>\n                                        <label class=\"radio-inline\">\n                                            <input type=\"radio\"\n                                                name=\"vote_result\"\n                                                value=\"2\"\n                                                x-model=\"voteResult\"> Tidak Setuju\n                                        </label>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"data-item\">\n                                <div class=\"data-label\">\n                                    Komentar <template x-if=\"voteResult === '2'\"><span class=\"required\">*</span></template><template x-if=\"voteResult !== '2'\"> (Opsional)</template>\n                                </div>\n                                <div class=\"data-content\">\n                                    <textarea class=\"form-control\"\n                                        x-model=\"voteCatatan\"\n                                        rows=\"4\"\n                                        style=\"width: 100%; resize: vertical;\"\n                                        :class=\"{ 'is-invalid': showValidation && voteResult === '2' && !voteCatatan }\"\n                                        placeholder=\"Masukkan komentar persetujuan\"></textarea>\n                                    <div x-show=\"showValidation && ((voteResult === '2' && !voteCatatan) || !voteResult)\"\n                                        class=\"alert alert-danger\"\n                                        style=\"margin-top: 10px;\">\n                                        <template x-if=\"!voteResult\">Silakan pilih hasil persetujuan</template>\n                                        <template x-if=\"voteResult === '2' && !voteCatatan\">Komentar wajib diisi jika tidak setuju</template>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <!-- Action Buttons -->\n                        <div style=\"margin-top: 20px;\">\n                            <div class=\"text-danger mb-3\" style=\"font-size: 0.9em;\">\n                                Dengan mengklik \"Kirim Konfirmasi\", Anda menyatakan bahwa keputusan ini dibuat dengan penuh tanggung jawab. Jawaban yang sudah dikirim tidak bisa diubah kembali.\n                            </div>\n                            <div class=\"action-buttons\" style=\"display: flex; justify-content: flex-end;\">\n                                <button @click=\"handleVote()\"\n                                    class=\"btn btn-primary\"\n                                    :disabled=\"showValidation && (!voteResult || (voteResult === '2' && !voteCatatan))\">\n                                    <i class=\"icon-check\"></i> Kirim Konfirmasi\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </template>\n    </section>\n</div>\n</div>\n</div>\n\n<script>\n    $('.icon-check').click(function() {\n        console.log({\n            a: \"gagagaga\"\n        })\n    });\n\n    function voteVerifikasi() {\n        return {\n            // Initialize all reactive properties\n            voteResult: '',\n            voteCatatan: '',\n            showValidation: false,\n            data: {\n                id: '',\n                nomor_transaksi: '',\n                jenis_perubahan: '',\n                created_date: '',\n                nama_perseroan: '',\n                nama_singkat: '',\n                jenis_perseroan: '',\n                npwp_perseroan: '',\n                provinsi_nama_perseroan: '',\n                kabupaten_nama_perseroan: '',\n                alamat_perseroan: '',\n                rt_perseroan: '',\n                rw_perseroan: '',\n                kecamatan_nama_perseroan: '',\n                kelurahan: '',\n                modal_dasar: [],\n                total_modal_dasar: 0,\n                modal_ditempatkan: [],\n                total_modal_ditempatkan: 0,\n                pemegang_saham: [],\n                voting_expired: false,\n                voting_status: {\n                    has_voted: false,\n                    vote_result: null,\n                    vote_catatan: null,\n                    vote_date: null\n                }\n            },\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n\n            token: '<?php echo $token; ?>',\n\n            init() {\n                this.fetchData();\n            },\n\n            async fetchData() {\n                const [res, err] = await safeFetch(`/sabh/api/verifikasiPerubahanPerseroan/voteDetail?token=${this.token}`, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error:', err);\n                    return;\n                }\n\n                if (res.success && res.data) {\n                    // The API response structure is res.data, not res.data.data\n                    const apiData = res.data;\n\n                    // Initialize changed_data arrays\n                    if (apiData.changed_data) {\n                        apiData.changed_data.modal_dasar = apiData.changed_data.modal_dasar || [];\n                        apiData.changed_data.modal_ditempatkan = apiData.changed_data.modal_ditempatkan || [];\n                        apiData.changed_data.pemegang_saham = apiData.changed_data.pemegang_saham || [];\n                        apiData.changed_data.maksud_tujuan = apiData.changed_data.maksud_tujuan || [];\n                        apiData.changed_data.pemilik_manfaat = apiData.changed_data.pemilik_manfaat || [];\n                    } else {\n                        // Fallback to old structure for backward compatibility\n                        apiData.modal_dasar = apiData.modal_dasar || [];\n                        apiData.modal_ditempatkan = apiData.modal_ditempatkan || [];\n                        apiData.pemegang_saham = apiData.pemegang_saham || [];\n                    }\n\n                    // Initialize master_data arrays if available\n                    if (apiData.master_data) {\n                        apiData.master_data.modal_dasar = apiData.master_data.modal_dasar || [];\n                        apiData.master_data.modal_ditempatkan = apiData.master_data.modal_ditempatkan || [];\n                        apiData.master_data.pemegang_saham = apiData.master_data.pemegang_saham || [];\n                        apiData.master_data.maksud_tujuan = apiData.master_data.maksud_tujuan || [];\n                        apiData.master_data.pemilik_manfaat = apiData.master_data.pemilik_manfaat || [];\n                    }\n\n                    // Set voting status from API response\n                    if (apiData.voting_status) {\n                        apiData.voting_status = {\n                            has_voted: apiData.voting_status.has_voted || false,\n                            vote_result: apiData.voting_status.vote_result || null,\n                            vote_catatan: apiData.voting_status.vote_catatan || null,\n                            vote_date: apiData.voting_status.vote_date || null\n                        };\n                    } else {\n                        apiData.voting_status = {\n                            has_voted: false,\n                            vote_result: null,\n                            vote_catatan: null,\n                            vote_date: null\n                        };\n                    }\n\n                    this.data = apiData;\n                    console.log('Mapped Data:', this.data);\n                }\n            },\n\n            handleVote() {\n                this.showValidation = true;\n\n                // Check if form is valid\n                const isValid = this.voteResult && (this.voteResult === '1' || (this.voteResult === '2' && this.voteCatatan));\n                if (!isValid) {\n                    return;\n                }\n\n                this.submitVote();\n            },\n\n            async submitVote() {\n                const [res, err] = await safeFetch(`/sabh/api/verifikasiPerubahanPerseroan/vote?token=${this.token}`, {\n                    method: 'POST',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                    body: JSON.stringify({\n                        vote: this.voteResult === '1',\n                        catatan: this.voteCatatan\n                    })\n                });\n\n                if (err) {\n                    alert(`Gagal mengirim persetujuan: ${err.message}`);\n                    return;\n                }\n\n                if (res.success) {\n                    alert(`Persetujuan berhasil ${this.voteResult === '1' ? 'diberikan' : 'ditolak'}`);\n                    window.location.href = window.location.href;\n                }\n            },\n\n            formatNumber(number) {\n                if (!number) return '-';\n                return new Intl.NumberFormat('id-ID').format(number);\n            },\n\n            formatCurrency(amount, currency = 'rupiah') {\n                if (!amount) return '-';\n\n                const formatter = new Intl.NumberFormat('id-ID', {\n                    style: 'currency',\n                    currency: currency.toUpperCase() === 'USD' ? 'USD' : 'IDR',\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2\n                });\n\n                return formatter.format(amount)\n                    .replace('IDR', 'Rp')\n                    .replace('USD', '$')\n                    .replace(',00', '');\n            },\n\n            formatDate(dateString) {\n                if (!dateString) return '-';\n\n                try {\n                    const date = new Date(dateString);\n                    if (isNaN(date.getTime()))\n                        return dateString;\n\n                    const day = String(date.getDate()).padStart(2, '0');\n                    const month = [\n                        'Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni',\n                        'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'\n                    ][date.getMonth()];\n                    const year = date.getFullYear();\n                    const hours = String(date.getHours()).padStart(2, '0');\n                    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n                    return `${day} ${month} ${year} ${hours}:${minutes}`;\n                } catch (e) {\n                    console.error('Date formatting error:', e);\n                    return dateString;\n                }\n            }\n        };\n    }\n</script>\n\n--- File: 337 # components/PajakAPI.php ---\n<?php\nClass PajakAPI {\n\n    public static function getToken($no_transaksi = null) {\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'token_djp',\n        ]);\n\n        if($setting) {\n            $token = json_decode($setting->value, true);\n            if(isset($token['token']) && isset($token['expired'])) {\n                if($token['expired'] > time()) {\n                    return $token['token'];\n                }\n            }\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['no_transaksi'] = $no_transaksi;\n        $logs['type'] = 'GETTOKEN';\n        $logs['ip_address'] = 'AHU >> DJP';\n\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'cid_djp',\n        ]);\n        $client_id = $setting->value;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'username_djp',\n        ]);\n        $username = $setting->value;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'pass_djp',\n        ]);\n        $password = $setting->value;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'client_sec',\n        ]);\n        $client_sec = $setting->value;\n\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n        $url = $setting->value.\"/auth/oauth/token\";\n        $logs['service_uri'] = $url;\n\n        $header = [\n            'Authorization: Basic '.base64_encode($client_id.':'.$client_sec),\n        ];\n\n        $post_fields = [\n            'grant_type' => 'password',\n            'client_id' => $client_id,\n            'username' => $username,\n            'password' => $password,\n        ];\n\n        $post = http_build_query($post_fields);\n        $logs['request'] = $post;\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $error = curl_error($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        if($token = CHtml::value($rs, 'access_token', null)) {\n            $logs['is_error'] = 0;\n            BakumSetting::model()->updateDataSetting('token_djp', json_encode([\n                'token' => $token,\n                'expired' => CHtml::value($rs, 'expires_in', 0) + time(),\n            ]));\n        }\n        $logs['additional_data'] = compact('header', 'post_fields', 'error');\n\n        LogHelpers::saveLogDjp($logs);\n        return $token;\n    }\n\n    public static function getWilayahDJP($kd_wil = 0, $jns_wil = 0) {\n        $token = self::getToken();\n\n        if(is_null($token)) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'DATAWILAYAH';\n\n\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n\n        $url = $setting->value.\"/api/getWilayah\";\n        $logs['service_uri'] = $url;\n\n        $post = [\n            'kdWil' => $kd_wil,\n            'jnsWil' => $jns_wil,\n        ];\n        $post = json_encode($post);\n        $logs['request'] = $post;\n\n        $header = [\n            \"Authorization: bearer \".$token,\n            \"Content-Type: application/json\"\n        ];\n        $logs['additional_data'] = compact('header');\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        $data = [];\n        if(CHtml::value($rs, 'kdStatus', null) == 1) {\n            $logs['is_error'] = 0;\n            $data = CHtml::value($rs, 'message', []);\n        }\n\n        LogHelpers::saveLogDjp($logs);\n        return $data;\n    }\n\n    public static function checkNpwp($npwp) {\n        $token = self::getToken();\n\n        if(is_null($token)) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'CHECKNPWP';\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n        $url = $setting->value.\"/api/getwpbynpwp/\".$npwp;\n        $logs['service_uri'] = $url;\n        $logs['request'] = $npwp;\n\n        $header = [\n            \"Authorization: bearer \".$token,\n        ];\n        $logs['additional_data'] = compact('header');\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        if (curl_getinfo($ch)['http_code'] != 200) {\n            return \"ERRDJP\";\n        }\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        if(CHtml::value($rs, 'message.npwp', null)) {\n            $logs['is_error'] = 0;\n        }\n\n        LogHelpers::saveLogDjp($logs);\n        return $rs;\n    }\n\n    public static function getTokenKswp() {\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'kswp_djp',\n        ]);\n\n        if (empty($setting)) {\n            return false;\n        }\n\n        $kswp_djp = json_decode($setting->value, true);\n\n        if (empty($kswp_djp['url']) || empty($kswp_djp['user']) || empty($kswp_djp['pass'])) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'GETTOKENKSWP';\n        $logs['ip_address'] = 'AHU >> DJP';\n\n        $url = $kswp_djp['url'] . \"/djp/token\";\n        $logs['service_uri'] = $url;\n\n        $post_fields = [\n            'user' => $kswp_djp['user'],\n            'pwd' => $kswp_djp['pass'],\n        ];\n\n        $post = http_build_query($post_fields);\n        $logs['request'] = $post;\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $error = curl_error($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n        $status = CHtml::value($rs, 'status', null);\n        $token = null;\n        if ($status == 200) {\n            if ($token = CHtml::value($rs, 'message', null)) {\n                $logs['is_error'] = 0;\n                // BakumSetting::model()->updateDataSetting('token_kswp', $token);\n            }\n        }\n        $logs['additional_data'] = compact('post_fields', 'error');\n\n        // comment dulu\n        LogHelpers::saveLogDjp($logs);\n        return $token;\n    }\n\n    public static function checkNpwpPerseroan($npwp, $kdizin, $counter = 1) {\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'kswp_djp',\n        ]);\n\n        if (empty($setting)) {\n            return false;\n        }\n\n        $kswp_djp = json_decode($setting->value, true);\n\n        if (empty($kswp_djp['url'])) {\n            return false;\n        }\n\n        // $token = BakumSetting::model()->findByAttributes([\n        //     'name' => 'token_kswp',\n        // ]);\n\n        // $token = Chtml::value($token, 'value', null);\n\n        // if (empty($token)) {\n        //     if (!($token = self::getTokenKswp())) {\n        //         return false;\n        //     }\n        // }\n\n        $token = self::getTokenKswp();\n\n        $url = $kswp_djp['url'] . \"/djp/kswp\";\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'CHECKNPWPPERSEROAN';\n        $logs['service_uri'] = $url;\n\n        $post_fields = [\n            'npwp' => $npwp,\n            'kdizin' => $kdizin,\n        ];\n\n        $post = http_build_query($post_fields);\n        $logs['request'] = $post;\n\n        $header = [\n            \"Authorization: \" . $token,\n        ];\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $error = curl_error($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        if (curl_getinfo($ch)['http_code'] == 0) {\n            return \"ERRKSWP\";\n        }\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        if ($msg_status = Chtml::value($rs, 'message.status', null)) {\n            $logs['is_error'] = 0;\n        } else { // coba login\n            if ($status = Chtml::value($rs, 'status', null)) {\n                if (\n                    ($status == 400 || $status == 406) && // respon error token tidak valid/kadaluarsa\n                    $counter <= 1                         // set max jumlah rekursif function\n                ) {\n                    $token = self::getTokenKswp();\n                    if (!empty($token)) {\n                        $counter++;\n                        return self::checkNpwpPerseroan($npwp, $kdizin, $counter);\n                    }\n                }\n            }\n        }\n\n        $logs['additional_data'] = compact('header', 'post_fields', 'error');\n\n        LogHelpers::saveLogDjp($logs);\n        return $rs;\n    }\n\n    public static function sendDataDJP($nomor) {\n        $token = self::getToken($nomor);\n\n        if(is_null($token)) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'SENDDATA';\n        $logs['no_transaksi'] = $nomor;\n\n        $post_fields = static::prepareData($nomor);\n        $post = json_encode($post_fields);\n        $logs['request'] = $post_fields;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n        $url = $setting->value.\"/api/submitReg\";\n        $logs['service_uri'] = $url;\n\n        $header = [\n            \"Authorization: bearer \".$token,\n            \"Content-Type: application/json\",\n        ];\n\n        $logs['additional_data'] = compact('header');\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 20);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n        if(CHtml::value($rs, 'message.npwp', null)) {\n            $logs['is_error'] = 0;\n        }\n\n        LogHelpers::saveLogDjp($logs);\n        return $result;\n    }\n\n    public static function prepareData($nomor) {\n        /*$model = TransaksiPerseroan::model()->findByAttributes([\n            'nomor_transaksi' => $nomor,\n        ]);*/\n        $tahun = \"20\".substr($nomor, 2, 2);\n\n        $model = Yii::app()->dbBadanHukum->createCommand()\n                  ->select('*')\n                  ->from('tbl_transaksi_perseroan_'.$tahun)                  \n                  ->where(\"nomor_transaksi = \".$nomor)\n                  ->queryRow();\n\n        $model = (object)$model; \n        \n        $kegiatan = json_decode($model->kegiatan,true);\n        $kegiatan = end($kegiatan);\n        $klu = CHtml::value($kegiatan, 'id', \"\");\n        $jenisUsaha = CHtml::value($kegiatan, 'tujuan', [\"-\"]);\n        $jenisUsaha = end($jenisUsaha);\n\n        $jenis_perseroan = CHtml::value($model, 'jenis_perseroan', \"\") == \"PMA\" ? \"1\" : \"2\";\n\n        $kode_kelurahan = Chtml::value($model, 'kelurahan');\n        $kode_kecamatan = Chtml::value($model, 'kecamatan_id_perseroan');\n        $kode_kabupaten = Chtml::value($model, 'kabupaten_id_perseroan');\n        $kode_provinsi = Chtml::value($model, 'provinsi_id_perseroan');\n\n        if(!empty($kode_kelurahan)){\n            if(!is_numeric($kode_kelurahan)) {            \n                $kd_wil_persero = Wilayah::getCodewWilByName($kode_kelurahan, $kode_kecamatan);\n                $kelurahan_persero = $kode_kelurahan;\n                $kecamatan_persero = Wilayah::getNameById($kode_kecamatan);\n                $kabupaten_persero = Wilayah::getNameById($kode_kabupaten);\n                $provinsi_persero = Wilayah::getNameById($kode_provinsi);\n                $kd_pos_persero = \"\";\n            } else {\n                $kd_wil_persero = \"-\";\n                $kelurahan_persero = \"-\";\n                $kecamatan_persero = \"-\";\n                $kabupaten_persero = \"-\";\n                $provinsi_persero = \"-\";\n                $kd_pos_persero = '-';\n            }\n        }\n\n\n        /*if(!is_numeric($kode_kelurahan)) {\n            $kode_kelurahan = Chtml::value($model, 'kelurahan_id_perseroan', '-');\n        }\n        if($wilayah = WilayahSabh::model()->findByAttributes(['WSID' => $kode_kelurahan])) {\n            $kelurahan_persero = $wilayah->NM_KELURAHAN;\n            $kecamatan_persero = $wilayah->NM_KECAMATAN;\n            $kabupaten_persero = $wilayah->NM_DATI2;\n            $provinsi_persero = $wilayah->NM_DATI1;\n            $kd_pos_persero = $wilayah->KD_POS ? : \"-\";\n            $kd_wil_persero = $wilayah->KD_WIL ? : \"-\";\n        } else {\n            $kelurahan_persero = '-';\n            $kecamatan_persero = '-';\n            $kabupaten_persero = '-';\n            $provinsi_persero = '-';\n            $kd_pos_persero = '-';\n            $kd_wil_persero = '-';\n        }*/\n\n        $decode = TransaksiPerseroan::parse_akta($model);\n        $decode = reset($decode);\n        $noAkta = Chtml::value($model, 'nomor_akta_perseroan') ? :  $decode->nomor_akta;\n        $tglAkta = Chtml::value($model, 'tgl_akta_perseroan') ? :  $decode->tanggal_akta;\n        $tglAkta = date('d-m-Y', strtotime($tglAkta));\n        $bln_awal = CHtml::value($model, 'tahun_buku');\n        $bln_awal = date('m', strtotime($bln_awal));\n        $awal = intval($bln_awal);\n        $bln_akhir = str_pad($awal > 1 ? $awal - 1 : 12, 2, '0', STR_PAD_LEFT);\n\n        $pemegangs = Perseroan::json_decode_($model->pemegang_saham);\n        $dataPengurus = [];\n        if (is_array($pemegangs)) {\n            $already_penanggung = false;\n            foreach ($pemegangs as $v) {\n                if (isset($v->data[0])) {\n                    $pemegang = $v->data[0];\n                    if(Chtml::value($pemegang, 'jenis_pemegang_saham', '-') == \"Perorangan\") {\n                        $kode_kelurahan = Chtml::value($pemegang, 'kelurahan', '-');\n                        if($wilayah = WilayahSabh::model()->findByAttributes(['WSID' => $kode_kelurahan])) {\n                            $kelurahan = $wilayah->NM_KELURAHAN;\n                            $kecamatan = $wilayah->NM_KECAMATAN;\n                            $kabupaten = $wilayah->NM_DATI2;\n                            $provinsi = $wilayah->NM_DATI1;\n                            $kd_pos = $wilayah->KD_POS ? : \"-\";\n                            $kd_wil = $wilayah->KD_WIL ? : \"-\";\n                        } else {\n                            $kelurahan = '-';\n                            $kecamatan = '-';\n                            $kabupaten = '-';\n                            $provinsi = '-';\n                            $kd_pos = '-';\n                            $kd_wil = '-';\n                        }\n                        $kecamatanPj = Chtml::value($pemegang, 'kecamatan_dewan', '-');\n                        $dati2Pj = Chtml::value($pemegang, 'kabupaten_dewan', '-');\n                        $dati1Pj = Chtml::value($pemegang, 'provinsi_dewan', '-');\n\n                        $is_penanggung = (Chtml::value($pemegang, 'penanggungJawab') == \"penanggung jawab\" || Chtml::value($pemegang, 'penanggung_jawab') == \"1\") && !$already_penanggung;\n                        if($is_penanggung) {\n                            $already_penanggung = true;\n                        }\n\n                        $is_dirkom = Chtml::value($pemegang, 'direksi', '-') == \"direksi atau komisaris\";\n                        if($is_dirkom) {\n                            $dataPengurus[] = [\n                                'statusPj' => $is_penanggung ? \"0\" : \"1\",\n                                'namaPj' => Chtml::value($pemegang, 'nama_badan_hukum'),\n                                'jabatanPj' => \"2\",\n                                'kdNegaraPj' => Chtml::value($pemegang, 'is_asing') == \"0\" ? \"ID\" : \"AS\",\n                                'nomorIdPj' => Chtml::value($pemegang, 'nik') ? : (Chtml::value($pemegang, 'passport', '-') ? : \"-\"),\n                                'npwpPj' => Chtml::value($pemegang, 'NPWP', \"\") ? : \"\",\n                                'alamatPj' => Chtml::value($pemegang, 'alamat_lengkap_dewan', '-') ? : \"-\",\n                                'rtPj' => Chtml::value($pemegang, 'rt_dewan', '') ? : \"\",\n                                'rwPj' => Chtml::value($pemegang, 'rw_dewan', '') ? : \"\",\n                                'kelurahanPj' => $kelurahan,\n                                'kecamatanPj' => $kecamatan,\n                                'dati2Pj' => $kabupaten,\n                                'dati1Pj' => $provinsi,\n                                'kodePosPj' => $kd_pos,\n                                'kodeWilayahPj' => $kd_wil,\n                                'nomorTeleponPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'nomorHpPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'emailPj' => Chtml::value($pemegang, 'email', '-') ? : \"-\",\n                                'nomorKitasPj' => Chtml::value($pemegang, 'kitas', '-') ? : \"-\",\n                                'modalPj' => \"\",\n                                'ketJabPj' => Chtml::value($pemegang, 'jabatan', \"\"),\n                            ];\n                            if($is_penanggung) {\n                                $is_penanggung = false;\n                            }\n                        }\n\n                        $is_pemsaham = Chtml::value($pemegang, 'pemegangSaham', '-') == \"pemegang saham\";\n                        if($is_pemsaham) {\n                            $dataPengurus[] = [\n                                'statusPj' => $is_penanggung ? \"0\" : \"1\",\n                                'namaPj' => Chtml::value($pemegang, 'nama_badan_hukum'),\n                                'jabatanPj' => \"1\",\n                                'kdNegaraPj' => Chtml::value($pemegang, 'is_asing') == \"0\" ? \"ID\" : \"AS\",\n                                'nomorIdPj' => Chtml::value($pemegang, 'nik') ? : (Chtml::value($pemegang, 'passport', '-') ? : \"-\"),\n                                'npwpPj' => Chtml::value($pemegang, 'NPWP', \"\") ? : \"\",\n                                'alamatPj' => Chtml::value($pemegang, 'alamat_lengkap_dewan', '-') ? : \"-\",\n                                'rtPj' => Chtml::value($pemegang, 'rt_dewan', '') ? : \"\",\n                                'rwPj' => Chtml::value($pemegang, 'rw_dewan', '') ? : \"\",\n                                'kelurahanPj' => $kelurahan,\n                                'kecamatanPj' => $kecamatan,\n                                'dati2Pj' => $kabupaten,\n                                'dati1Pj' => $provinsi,\n                                'kodePosPj' => $kd_pos,\n                                'kodeWilayahPj' => $kd_wil,\n                                'nomorTeleponPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'nomorHpPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'emailPj' => Chtml::value($pemegang, 'email', '-') ? : \"-\",\n                                'nomorKitasPj' => Chtml::value($pemegang, 'kitas', '-') ? : \"-\",\n                                'modalPj' => Chtml::value($pemegang, 'total_harga_saham_yang_dipegang', '-') ? : \"-\",\n                                'ketJabPj' => Chtml::value($pemegang, 'jabatan'),\n                            ];\n                        }\n                        if(!$is_dirkom && !$is_pemsaham) {\n                            $dataPengurus[] = [\n                                'statusPj' => (Chtml::value($pemegang, 'penanggungJawab') == \"penanggung jawab\" || Chtml::value($pemegang, 'penanggung_jawab') == \"1\") ? \"0\" : \"2\",\n                                'namaPj' => Chtml::value($pemegang, 'nama_badan_hukum'),\n                                'jabatanPj' => \"2\",\n                                'kdNegaraPj' => Chtml::value($pemegang, 'is_asing') == \"0\" ? \"ID\" : \"AS\",\n                                'nomorIdPj' => Chtml::value($pemegang, 'nik') ? : (Chtml::value($pemegang, 'passport', '-') ? : \"-\"),\n                                'npwpPj' => Chtml::value($pemegang, 'NPWP', \"\") ? : \"\",\n                                'alamatPj' => Chtml::value($pemegang, 'alamat_lengkap_dewan', '-') ? : \"-\",\n                                'rtPj' => Chtml::value($pemegang, 'rt_dewan', '') ? : \"\",\n                                'rwPj' => Chtml::value($pemegang, 'rw_dewan', '') ? : \"\",\n                                'kelurahanPj' => $kelurahan,\n                                'kecamatanPj' => $kecamatan,\n                                'dati2Pj' => $kabupaten,\n                                'dati1Pj' => $provinsi,\n                                'kodePosPj' => $kd_pos,\n                                'kodeWilayahPj' => $kd_wil,\n                                'nomorTeleponPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'nomorHpPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'emailPj' => Chtml::value($pemegang, 'email', '-') ? : \"-\",\n                                'nomorKitasPj' => Chtml::value($pemegang, 'kitas', '-') ? : \"-\",\n                                'modalPj' => Chtml::value($pemegang, 'total_harga_saham_yang_dipegang', '-') ? : \"-\",\n                                'ketJabPj' => Chtml::value($pemegang, 'jabatan', \"\"),\n                            ];\n                        }\n                    }\n                }\n            }\n        }\n        $val = Helpers::GetLastSK($model->id_notaris);\n        if(!empty($val[2])) {\n            $aktTmp = $val[2];\n        } else {\n            $aktTmp = Chtml::value($model, 'NotarisNg.nama_kabupaten_penempatan', '-');\n        }\n        $alamat = substr($model->alamat_perseroan, 0, 100);\n        return [\n            'userIdNotaris' => $model->id_notaris,\n            'nomorTransaksi' => $nomor,\n            'nomorSkPengesahan' => $model->nomor_sk,\n            'namaPerseroan' => $model->nama_perseroan,\n            'jenisPemodalan' => $jenis_perseroan,\n            'alamat' => $alamat,\n            \"rt\" => $model->rt_perseroan ? : \"\",\n            \"rw\" => $model->rw_perseroan ? : \"\",\n            \"nomorFax\" => \"-\",\n            'kodeWilayah' => $kd_wil_persero,\n            'nomorTelepon' => $model->nomor_telepon_perseroan,\n            'email' => $model->email_perseroan,\n            'aktaTmp' => $aktTmp,\n            'aktaTgl' => $tglAkta,\n            'nomorAkta' => $noAkta,\n            'namaNotaris' => $model->nama_notaris,\n            'thBukuAwal' => $bln_awal,\n            'thBukuAkhir' => $bln_akhir,\n            'jenisUsaha' => $jenisUsaha,\n            'klu' => $klu,\n            'dataPengurus' => $dataPengurus,\n        ];\n    }\n\n    public static function prepareDataTest($data) {\n        return [\n            'userIdNotaris' => \"312\",\n            'nomorTransaksi' => \"2012738124784\",\n            'nomorSkPengesahan' => \"AHU-AH.03.03-00050\",\n            'namaPerseroan' => \"MAJU KEMANA PONDOK\",\n            'jenisPemodalan' => \"1\",\n            'alamat' => \"JL PEMUDA\",\n            \"rt\" => \"02\",\n            \"rw\" => \"003\",\n            \"nomorFax\" => \"-\",\n            'kodeWilayah' => \"3171041004\",\n            'nomorTelepon' => \"0856384573845\",\n            'email' => \"audris@docotel.com\",\n            'aktaTmp' => \"-\",\n            'aktaTgl' => \"01-01-1997\",\n            'nomorAkta' => '09/02',\n            'namaNotaris' => \"sabh\",\n            'thBukuAwal' => \"1\",\n            'thBukuAkhir' => \"12\",\n            'jenisUsaha' => \"usaha x\",\n            'klu' => \"45101\",\n            'dataPengurus' => [\n                [\n                    'statusPj' => \"0\",\n                    'namaPj' => \"pj1\",\n                    'jabatanPj' => \"2\",\n                    'kdNegaraPj' => \"ID\",\n                    'nomorIdPj' => \"23410591\",\n                    'npwpPj' => \"168268944542000\",\n                    'alamatPj' => \"jl semenu\",\n                    'rtPj' => \"21\",\n                    'rwPj' => \"22\",\n                    'kelurahanPj' => \"Jurang Mangu\",\n                    'kecamatanPj' => \"Pondok Aren\",\n                    'dati2Pj' => \"Tangsel\",\n                    'dati1Pj' => \"Banten\",\n                    'kodePosPj' => \"62115\",\n                    'kodeWilayahPj' => \"1226090001\",\n                    'nomorTeleponPj' => \"084567765432\",\n                    'nomorHpPj' => \"084567765432\",\n                    'emailPj' => \"audris@gmial.com\",\n                    'nomorKitasPj' => \"-\",\n                    'modalPj' => \"3000000\",\n                    'ketJabPj' => \"Komisaris\",\n                ],\n                [\n                    'statusPj' => \"1\",\n                    'namaPj' => \"psj1\",\n                    'jabatanPj' => \"2\",\n                    'kdNegaraPj' => \"ID\",\n                    'nomorIdPj' => \"23410591\",\n                    'npwpPj' => \"168268944542000\",\n                    'alamatPj' => \"jl semenu\",\n                    'rtPj' => \"21\",\n                    'rwPj' => \"22\",\n                    'kelurahanPj' => \"Jurang Mangu\",\n                    'kecamatanPj' => \"Pondok Aren\",\n                    'dati2Pj' => \"Tangsel\",\n                    'dati1Pj' => \"Banten\",\n                    'kodePosPj' => \"62115\",\n                    'kodeWilayahPj' => \"1226090001\",\n                    'nomorTeleponPj' => \"084567765432\",\n                    'nomorHpPj' => \"084567765432\",\n                    'emailPj' => \"audris@gmial.com\",\n                    'nomorKitasPj' => \"-\",\n                    'modalPj' => \"3000000\",\n                    'ketJabPj' => \"Komisaris\",\n                ],\n                [\n                    'statusPj' => \"1\",\n                    'namaPj' => \"pjx1\",\n                    'jabatanPj' => \"1\",\n                    'kdNegaraPj' => \"AS\",\n                    'nomorIdPj' => \"23410591\",\n                    'npwpPj' => \"\",\n                    'alamatPj' => \"jl semenu\",\n                    'rtPj' => \"21\",\n                    'rwPj' => \"22\",\n                    'kelurahanPj' => \"Jurang Mangu\",\n                    'kecamatanPj' => \"Pondok Aren\",\n                    'dati2Pj' => \"Tangsel\",\n                    'dati1Pj' => \"Banten\",\n                    'kodePosPj' => \"62115\",\n                    'kodeWilayahPj' => \"1226090001\",\n                    'nomorTeleponPj' => \"084567765432\",\n                    'nomorHpPj' => \"084567765432\",\n                    'emailPj' => \"audris@gmial.com\",\n                    'nomorKitasPj' => \"9049049245\",\n                    'modalPj' => \"3000000\",\n                    'ketJabPj' => \"Komisaris\",\n                ],\n            ]\n        ];\n    }\n}\n\n?>\n\n\n--- File: 285 # controllers/PublicApiBakumController.php ---\n<?php\n\nclass PublicApiBakumController extends Controller {\n\n    /**\n     * Validate Secret Key from X-SECRET-TOKEN header against ahu_setting\n     */\n    private function validateSecretKey($secretKey) {\n        try {\n            $db = Yii::app()->db;\n            \n            $cfg = $db->createCommand()\n                ->select('value')\n                ->from('ahu_setting')\n                ->where('name=:nm', [':nm' => 'api_bakum_secret_token'])\n                ->queryRow();\n            $expectedSecret = isset($cfg['value']) ? trim($cfg['value']) : null;         \n            return !empty($expectedSecret) && $secretKey == $expectedSecret;\n        } catch (Exception $e) {\n            return false;\n        }\n    }\n\n    /**\n     * Parse JSON body payload\n     */\n    private function getJsonPayload() {\n        $input = file_get_contents('php://input');\n        $data = json_decode($input, true);\n        \n        if (json_last_error() !== JSON_ERROR_NONE) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid JSON payload: ' . json_last_error_msg(),\n                'data' => []\n            ], 400);\n            return false;\n        }\n        \n        return $data;\n    }\n\n    /**\n     * Send JSON response\n     */\n    private function sendResponse($data, $status = 200) {\n        header('Content-Type: application/json');\n        http_response_code($status);\n        echo CJSON::encode($data);\n        Yii::app()->end();\n    }\n\n    /**\n     * Check Yayasan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaYayasanCheck\n     */\n    public function actionPesanNamaYayasanCheck() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['novoucher'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter novoucher required',\n                'data' => []\n            ], 400);\n            return;\n        }\n        \n        $id = 'yayasan';\n        $novoucher = $jsonData['novoucher'];\n        \n        try {\n            $OrderName = new OrderName;\n            $OrderName->base = $id;\n            $OrderName->no_voucher = $novoucher;\n            \n            $criteria = new CDbCriteria;\n            $criteria->condition = 'no_voucher = :voucher AND base = :base AND is_active = 1';\n            $criteria->params = array(':voucher' => $novoucher, ':base' => $id);\n            $criteria->order = 'tgl_pesan DESC';\n            \n            $reservations = OrderName::model()->findAll($criteria);\n            \n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => $reservation->is_active ? 'active' : 'inactive'\n                ];\n            }\n            \n            $this->sendResponse([\n                'success' => true,\n                'message' => 'Data pesan nama yayasan berhasil ditemukan',\n                'data' => $data\n            ]);\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Save Yayasan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaYayasan\n     */\n    public function actionPesanNamaYayasan() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        // Validate required fields\n        $requiredFields = ['novoucher', 'nama', 'nama_singkat', 'nama_pemohon', 'email_pemohon', 'telepon_pemohon'];\n        foreach ($requiredFields as $field) {\n            if (!isset($jsonData[$field]) || empty($jsonData[$field])) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => \"Parameter $field required\",\n                    'data' => []\n                ], 400);\n                return;\n            }\n        }\n        \n        // Copy exact logic from BaseController->savepesannama for yayasan\n        $id = 'yayasan';\n        \n        if (Yii::app()->user->isGuest)\n            $profile = FALSE;\n        else {\n            if (in_array('cs-sabh-cikini', Yii::app()->user->group)) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal pesan nama ' . strtoupper($id),\n                    'data' => []\n                ], 403);\n                return;\n            }\n            $profile = MsNotarisProfile::model()->findByPk(Yii::app()->user->profilid);\n        }\n        $isnotaris = !empty(Yii::app()->user->profilid) ? true : false;\n        $isgabung = false;\n        // Handle regular POST requests for API (removed AJAX check)\n        if (true) {\n            $jenis_perseroan = '';\n            $OrderMode = new OrderName;\n            $OrderMode->base = $base = $id;\n            $OrderMode->is_proses = 0; // Set default value\n\n            // Cek voucher gabung apakah sudah sampai pesan nama\n            $cekgabung = BillingModalDasar::model()->cekGabung($jsonData['novoucher']);\n            if (!empty($cekgabung)) {\n                if ($cekgabung->is_gabung == 1 && $cekgabung->proses > 0) {\n                    $this->sendResponse([\n                        'success' => false,\n                        'message' => 'Gagal pesan nama ' . strtoupper($id),\n                        'data' => []\n                    ], 400);\n                    return;\n                }\n            }\n\n            $OrderMode->nama = $nama = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama'])));\n            $OrderMode->nama_singkat = $nama_singkat = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama_singkat'])));\n            $OrderMode->tgl_pesan = $tanggalPesan = date('Y-m-d H:i:s');\n            $OrderMode->tgl_exp_pesan = $tanggalExp = date('Y-m-d H:i:s', strtotime('+60 days'));\n            \n            $OrderMode->kegiatan = $kegiatan = !empty($jsonData['kegiatan_mbg']) && !!$jsonData['kegiatan_mbg'] ? 'Makan Bergizi Gratis' : '';\n            $OrderMode->kode_wilayah = $kodeWilayah = !empty($jsonData['kode_wilayah']) ? $jsonData['kode_wilayah'] : '';\n            $OrderMode->nama_wilayah = $namaWilayah = !empty($jsonData['nama_wilayah']) ? $jsonData['nama_wilayah'] : '';\n\n            if (!$OrderMode->no_voucher) {\n                $OrderMode->no_voucher = $voucher = $jsonData['novoucher'];\n            }\n            $OrderMode->id_notaris = $profile ? $profile->ID_NOTARIS : '';\n            $nama_pemohon = $telepon_pemohon = $email_pemohon = \"\";\n\n            if(!empty($jsonData['OrderName']['nama_pemohon']))\n                $nama_pemohon = $jsonData['OrderName']['nama_pemohon'];\n            if(!empty($jsonData['OrderName']['telepon_pemohon']))\n                $telepon_pemohon = $jsonData['OrderName']['telepon_pemohon'];\n            if(!empty($jsonData['OrderName']['email_pemohon']))\n                $email_pemohon = $jsonData['OrderName']['email_pemohon'];\n            \n            //post order domain\n            if(!empty($jsonData['OrderDomain']['nama_domain'])){\n                $arr_domain  = explode(',',$jsonData['OrderDomain']['nama_domain']);\n            }\n            $nama_domain = isset($arr_domain) ? $arr_domain : '';\n            $harga = !empty($jsonData['OrderDomain']['harga']) ? $jsonData['OrderDomain']['harga'] : '';\n            if(!empty($jsonData['OrderDomain']['nama_base']))\n                $nama_base = $jsonData['OrderDomain']['nama_base'];\n            $nama_base = isset($nama_base) ? $nama_base : '';\n\n            $OrderMode->nama_pemohon = $nama_pemohon = $profile ? $profile->NAMA_LENGKAP : (isset($jsonData['nama_pemohon']) ? $jsonData['nama_pemohon'] : $nama_pemohon);\n            $OrderMode->telepon_pemohon = $telepon_pemohon = !empty($profile->NO_HP) ? $profile->NO_HP : (isset($jsonData['telepon_pemohon']) ? $jsonData['telepon_pemohon'] : $telepon_pemohon);\n            $OrderMode->email_pemohon = $email_pemohon = $profile ? $profile->EMAIL : (isset($jsonData['email_pemohon']) ? $jsonData['email_pemohon'] : $email_pemohon);\n\n            $OrderMode->base = $base = $id;\n            $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name WHERE nama=:nama AND base=:base AND is_active = 1')\n                ->bindValue(':nama', $OrderMode->nama)\n                ->bindValue(':base', $OrderMode->base)\n                ->queryScalar();\n\n            if(!empty($cekOrderActive)){\n                // Name already reserved\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Nama yayasan sudah dipesan',\n                    'data' => [\n                        'nama' => $nama,\n                        'error_type' => 'name_already_reserved'\n                    ]\n                ], 409);\n                return;\n            }\n            \n            $simpanorder = $OrderMode->savePesanNama($nama_domain,$nama_base,$harga);\n\n            if (!empty($simpanorder)) {\n                $no_pesan = $OrderMode->id_pesan;\n\n                //cek jenis voucher,jika gabung berarti bisa lanut pendirian langsung\n                $cekgabung = BillingModalDasar::model()->cekGabung($OrderMode->no_voucher);\n                if(!empty($cekgabung)){\n                    if($cekgabung->is_gabung == 1 && $cekgabung->proses < 2) {\n                        $isgabung = true;\n                    }\n                }\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Pesan nama yayasan berhasil',\n                    'data' => [\n                        'id_pesan' => $no_pesan,\n                        'nama' => $nama,\n                        'nama_singkat' => $nama_singkat,\n                        'tanggal_pesan' => $tanggalPesan,\n                        'tanggal_exp' => $tanggalExp,\n                        'is_gabung' => $isgabung\n                    ]\n                ]);\n            } else {\n                \n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal menyimpan pesan nama yayasan',\n                    'data' => []\n                ], 500);\n            }\n        }\n    }\n\n    /**\n     * Check Perkumpulan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulanCheck\n     */\n    public function actionPesanNamaPerkumpulanCheck() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['novoucher'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter novoucher required',\n                'data' => []\n            ], 400);\n            return;\n        }\n        \n        $id = 'perkumpulan';\n        $novoucher = $jsonData['novoucher'];\n        \n        try {\n            $OrderName = new OrderName;\n            $OrderName->base = $id;\n            $OrderName->no_voucher = $novoucher;\n            \n            $criteria = new CDbCriteria;\n            $criteria->condition = 'no_voucher = :voucher AND base = :base AND is_active = 1';\n            $criteria->params = array(':voucher' => $novoucher, ':base' => $id);\n            $criteria->order = 'tgl_pesan DESC';\n            \n            $reservations = OrderName::model()->findAll($criteria);\n            \n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => $reservation->is_active ? 'active' : 'inactive'\n                ];\n            }\n            \n            $this->sendResponse([\n                'success' => true,\n                'message' => 'Data pesan nama perkumpulan berhasil ditemukan',\n                'data' => $data\n            ]);\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Save Perkumpulan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulan\n     */\n    public function actionPesanNamaPerkumpulan() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        // Validate required fields\n        $requiredFields = ['novoucher', 'nama', 'nama_singkat', 'nama_pemohon', 'email_pemohon', 'telepon_pemohon'];\n        foreach ($requiredFields as $field) {\n            if (!isset($jsonData[$field]) || empty($jsonData[$field])) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => \"Parameter $field required\",\n                    'data' => []\n                ], 400);\n                return;\n            }\n        }\n        \n        // Copy exact logic from BaseController->savepesannama for perkumpulan\n        $id = 'perkumpulan';\n        \n        if (Yii::app()->user->isGuest)\n            $profile = FALSE;\n        else {\n            if (in_array('cs-sabh-cikini', Yii::app()->user->group)) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal pesan nama ' . strtoupper($id),\n                    'data' => []\n                ], 403);\n                return;\n            }\n            $profile = MsNotarisProfile::model()->findByPk(Yii::app()->user->profilid);\n        }\n        $isnotaris = !empty(Yii::app()->user->profilid) ? true : false;\n        $isgabung = false;\n        // Handle regular POST requests for API (removed AJAX check)\n        if (true) {\n            $jenis_perseroan = '';\n            $OrderMode = new OrderName;\n            $OrderMode->base = $base = $id;\n            $OrderMode->is_proses = 0; // Set default value\n\n            // Cek voucher gabung apakah sudah sampai pesan nama\n            $cekgabung = BillingModalDasar::model()->cekGabung($jsonData['novoucher']);\n            if (!empty($cekgabung)) {\n                if ($cekgabung->is_gabung == 1 && $cekgabung->proses > 0) {\n                    $this->sendResponse([\n                        'success' => false,\n                        'message' => 'Gagal pesan nama ' . strtoupper($id),\n                        'data' => []\n                    ], 400);\n                    return;\n                }\n            }\n\n            $OrderMode->nama = $nama = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama'])));\n            $OrderMode->nama_singkat = $nama_singkat = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama_singkat'])));\n            $OrderMode->tgl_pesan = $tanggalPesan = date('Y-m-d H:i:s');\n            $OrderMode->tgl_exp_pesan = $tanggalExp = date('Y-m-d H:i:s', strtotime('+60 days'));\n            \n            $OrderMode->kegiatan = $kegiatan = !empty($jsonData['kegiatan_mbg']) && !!$jsonData['kegiatan_mbg'] ? 'Makan Bergizi Gratis' : '';\n            $OrderMode->kode_wilayah = $kodeWilayah = !empty($jsonData['kode_wilayah']) ? $jsonData['kode_wilayah'] : '';\n            $OrderMode->nama_wilayah = $namaWilayah = !empty($jsonData['nama_wilayah']) ? $jsonData['nama_wilayah'] : '';\n\n            if (!$OrderMode->no_voucher) {\n                $OrderMode->no_voucher = $voucher = $jsonData['novoucher'];\n            }\n            $OrderMode->id_notaris = $profile ? $profile->ID_NOTARIS : '';\n            $nama_pemohon = $telepon_pemohon = $email_pemohon = \"\";\n\n            if(!empty($jsonData['OrderName']['nama_pemohon']))\n                $nama_pemohon = $jsonData['OrderName']['nama_pemohon'];\n            if(!empty($jsonData['OrderName']['telepon_pemohon']))\n                $telepon_pemohon = $jsonData['OrderName']['telepon_pemohon'];\n            if(!empty($jsonData['OrderName']['email_pemohon']))\n                $email_pemohon = $jsonData['OrderName']['email_pemohon'];\n            \n            //post order domain\n            if(!empty($jsonData['OrderDomain']['nama_domain'])){\n                $arr_domain  = explode(',',$jsonData['OrderDomain']['nama_domain']);\n            }\n            $nama_domain = isset($arr_domain) ? $arr_domain : '';\n            $harga = !empty($jsonData['OrderDomain']['harga']) ? $jsonData['OrderDomain']['harga'] : '';\n            if(!empty($jsonData['OrderDomain']['nama_base']))\n                $nama_base = $jsonData['OrderDomain']['nama_base'];\n            $nama_base = isset($nama_base) ? $nama_base : '';\n\n            $OrderMode->nama_pemohon = $nama_pemohon = $profile ? $profile->NAMA_LENGKAP : (isset($jsonData['nama_pemohon']) ? $jsonData['nama_pemohon'] : $nama_pemohon);\n            $OrderMode->telepon_pemohon = $telepon_pemohon = !empty($profile->NO_HP) ? $profile->NO_HP : (isset($jsonData['telepon_pemohon']) ? $jsonData['telepon_pemohon'] : $telepon_pemohon);\n            $OrderMode->email_pemohon = $email_pemohon = $profile ? $profile->EMAIL : (isset($jsonData['email_pemohon']) ? $jsonData['email_pemohon'] : $email_pemohon);\n\n            $OrderMode->base = $base = $id;\n            $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name WHERE nama=:nama AND base=:base AND is_active = 1')\n                ->bindValue(':nama', $OrderMode->nama)\n                ->bindValue(':base', $OrderMode->base)\n                ->queryScalar();\n\n            if(!empty($cekOrderActive)){\n                // Name already reserved\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Nama perkumpulan sudah dipesan',\n                    'data' => [\n                        'nama' => $nama,\n                        'error_type' => 'name_already_reserved'\n                    ]\n                ], 409);\n                return;\n            }\n            \n            $simpanorder = $OrderMode->savePesanNama($nama_domain,$nama_base,$harga);\n\n            if (!empty($simpanorder)) {\n                $no_pesan = $OrderMode->id_pesan;\n\n                //cek jenis voucher,jika gabung berarti bisa lanut pendirian langsung\n                $cekgabung = BillingModalDasar::model()->cekGabung($OrderMode->no_voucher);\n                if(!empty($cekgabung)){\n                    if($cekgabung->is_gabung == 1 && $cekgabung->proses < 2) {\n                        $isgabung = true;\n                    }\n                }\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Pesan nama perkumpulan berhasil',\n                    'data' => [\n                        'id_pesan' => $no_pesan,\n                        'nama' => $nama,\n                        'nama_singkat' => $nama_singkat,\n                        'tanggal_pesan' => $tanggalPesan,\n                        'tanggal_exp' => $tanggalExp,\n                        'is_gabung' => $isgabung\n                    ]\n                ]);\n            } else {\n                \n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal menyimpan pesan nama perkumpulan',\n                    'data' => []\n                ], 500);\n            }\n        }\n    }\n\n    /**\n     * Check Reserved Names (General)\n     * Endpoint: /publicApiBakum/checkNamaReservation\n     */\n    public function actionCheckNamaReservation() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n        \n        // Get entity type from parameter (yayasan/perkumpulan/perseroan)\n        $entity_type = isset($jsonData['entity_type']) ? $jsonData['entity_type'] : null;\n        $nama = isset($jsonData['nama']) ? $jsonData['nama'] : null;\n        \n        if (!$nama) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter nama required',\n                'data' => []\n            ], 400);\n            return;\n        }\n        \n        if (!$entity_type) {\n            $entity_type = 'yayasan'; // default\n        }\n        \n        try {\n            if ($entity_type == 'perseroan') {\n                $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name_perseroan WHERE nama=:nama AND is_active = 1')\n                    ->bindValue(':nama', strtoupper(trim($nama)))\n                    ->queryScalar();\n            } else {\n                $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name WHERE nama=:nama AND base=:base AND is_active = 1')\n                    ->bindValue(':nama', strtoupper(trim($nama)))\n                    ->bindValue(':base', $entity_type)\n                    ->queryScalar();\n            }\n            \n            $this->sendResponse([\n                'success' => true,\n                'message' => 'success',\n                'data' => [\n                    'nama' => $nama,\n                    'entity_type' => $entity_type,\n                    'is_reserved' => !empty($cekOrderActive),\n                    'message' => !empty($cekOrderActive) ? 'Nama sudah dipesan' : 'Nama tersedia'\n                ]\n            ]);\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Copy of listPesanNama method from BaseController\n     */\n    private function listPesanNama($id, $voucher, $idNotaris = false, $dataPost='', $model=null)\n    {\n        if ($id == 'perseroan') {\n            $OrderName = new OrderNamePerseroan;\n        } else {\n            $OrderName = new OrderName;\n            $OrderName->base = $id;\n        }\n\n        if (Yii::app()->user->isGuest) {\n            $OrderName->id_notaris = null;\n        }\n\n        if ($voucher) {\n            if ($id == 'perkumpulan') {\n                $OrderName->id_pesan = $voucher;\n            } else {\n                $OrderName->no_voucher = $voucher;\n            }\n        } else {\n            $OrderName->id_notaris = $idNotaris;\n\n            if ($dataPost) {\n                if ($id == 'perkumpulan') {\n                    $OrderName->id_pesan = $dataPost;\n                } else {\n                    $OrderName->no_voucher = $dataPost;\n                }\n            }\n        }\n\n        $this->render('/badan_hukum/listDataPesanNama', array(\n            'OrderName' => $OrderName,\n            'id' => $id,\n            'idNotaris' => $idNotaris,\n            'dataPost' => $dataPost,\n            'model' => $model,\n        ));\n\n        return;\n    }\n\n    /**\n     * Check Yayasan Name Reservation by Keyword (Similarity Search)\n     * Endpoint: /publicApiBakum/pesanNamaYayasanCheckByKeyword\n     */\n    public function actionPesanNamaYayasanCheckByKeyword() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['keyword']) || empty($jsonData['keyword'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter keyword required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $keyword = trim($jsonData['keyword']);\n        $base = 'yayasan';\n\n        try {\n            $keyword = strtoupper(trim($keyword));\n            $arr = preg_split('/\\s/', $keyword, -1, PREG_SPLIT_NO_EMPTY);\n\n            if (!empty($arr)) {\n                $q = [];\n                foreach ($arr as $value) {\n                    $q[] = \"nama LIKE '%\" . addslashes($value) . \"%'\";\n                }\n                $whereClause = '(' . implode(' AND ', $q) . ') AND base = :base AND is_active = 1';\n                \n\n                $criteria = new CDbCriteria;\n                $criteria->condition = $whereClause;\n                $criteria->params = [':base' => $base];\n                $criteria->order = 'tgl_pesan DESC';\n\n                $reservations = OrderName::model()->findAll($criteria);\n                \n\n                // Convert to array format for checkSimilarity\n                $data = [];\n                foreach ($reservations as $reservation) {\n                    $data[] = [\n                        'id_pesan' => $reservation->id_pesan,\n                        'nama' => $reservation->nama,\n                        'nama_singkat' => $reservation->nama_singkat,\n                        'tgl_pesan' => $reservation->tgl_pesan,\n                        'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                        'nama_pemohon' => $reservation->nama_pemohon,\n                        'email_pemohon' => $reservation->email_pemohon,\n                        'telepon_pemohon' => $reservation->telepon_pemohon,\n                        'kegiatan' => $reservation->kegiatan,\n                        'kode_wilayah' => $reservation->kode_wilayah,\n                        'nama_wilayah' => $reservation->nama_wilayah,\n                        'status' => $reservation->is_active ? 'active' : 'inactive'\n                    ];\n                }\n\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => count($data) . ' data pesan nama yayasan ditemukan',\n                    'data' => $data\n                ]);\n            } else {\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Tidak ada data ditemukan',\n                    'data' => []\n                ]);\n            }\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Check Yayasan Name Reservation by Email\n     * Endpoint: /publicApiBakum/pesanNamaYayasanCheckByEmail\n     */\n    public function actionPesanNamaYayasanCheckByEmail() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['email_pemohon']) || empty($jsonData['email_pemohon'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter email_pemohon required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $email = trim($jsonData['email_pemohon']);\n        $base = 'yayasan';\n\n        try {\n            $criteria = new CDbCriteria;\n            $criteria->condition = 'email_pemohon = :email AND base = :base';\n            $criteria->params = [':email' => $email, ':base' => $base];\n            $criteria->order = 'tgl_pesan DESC';\n\n            $reservations = OrderName::model()->findAll($criteria);\n\n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'nama_pemohon' => $reservation->nama_pemohon,\n                    'email_pemohon' => $reservation->email_pemohon,\n                    'telepon_pemohon' => $reservation->telepon_pemohon,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => 'active'\n                ];\n            }\n\n            $this->sendResponse([\n                'success' => true,\n                'message' => count($data) . ' data pesan nama yayasan ditemukan untuk email ' . $email,\n                'data' => $data\n            ]);\n\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Check Perkumpulan Name Reservation by Keyword (Similarity Search)\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulanCheckByKeyword\n     */\n    public function actionPesanNamaPerkumpulanCheckByKeyword() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['keyword']) || empty($jsonData['keyword'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter keyword required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $keyword = trim($jsonData['keyword']);\n        $base = 'perkumpulan';\n\n        try {\n            $keyword = strtoupper(trim($keyword));\n            $arr = preg_split('/\\s/', $keyword, -1, PREG_SPLIT_NO_EMPTY);\n\n            if (!empty($arr)) {\n                $q = [];\n                foreach ($arr as $value) {\n                    $q[] = \"nama LIKE '%\" . addslashes($value) . \"%'\";\n                }\n                $whereClause = '(' . implode(' AND ', $q) . ') AND base = :base AND is_active = 1';\n\n                $criteria = new CDbCriteria;\n                $criteria->condition = $whereClause;\n                $criteria->params = [':base' => $base];\n                $criteria->order = 'tgl_pesan DESC';\n\n                $reservations = OrderName::model()->findAll($criteria);\n\n                // Convert to array format for checkSimilarity\n                $data = [];\n                foreach ($reservations as $reservation) {\n                    $data[] = [\n                        'id_pesan' => $reservation->id_pesan,\n                        'nama' => $reservation->nama,\n                        'nama_singkat' => $reservation->nama_singkat,\n                        'tgl_pesan' => $reservation->tgl_pesan,\n                        'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                        'nama_pemohon' => $reservation->nama_pemohon,\n                        'email_pemohon' => $reservation->email_pemohon,\n                        'telepon_pemohon' => $reservation->telepon_pemohon,\n                        'kegiatan' => $reservation->kegiatan,\n                        'kode_wilayah' => $reservation->kode_wilayah,\n                        'nama_wilayah' => $reservation->nama_wilayah,\n                        'status' => $reservation->is_active ? 'active' : 'inactive'\n                    ];\n                }\n\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => count($data) . ' data pesan nama perkumpulan ditemukan',\n                    'data' => $data\n                ]);\n            } else {\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Tidak ada data ditemukan',\n                    'data' => []\n                ]);\n            }\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Check Perkumpulan Name Reservation by Email\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulanCheckByEmail\n     */\n    public function actionPesanNamaPerkumpulanCheckByEmail() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['email_pemohon']) || empty($jsonData['email_pemohon'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter email_pemohon required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $email = trim($jsonData['email_pemohon']);\n        $base = 'perkumpulan';\n\n        try {\n            $criteria = new CDbCriteria;\n            $criteria->condition = 'email_pemohon = :email AND base = :base';\n            $criteria->params = [':email' => $email, ':base' => $base];\n            $criteria->order = 'tgl_pesan DESC';\n\n            $reservations = OrderName::model()->findAll($criteria);\n\n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'nama_pemohon' => $reservation->nama_pemohon,\n                    'email_pemohon' => $reservation->email_pemohon,\n                    'telepon_pemohon' => $reservation->telepon_pemohon,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => 'active'\n                ];\n            }\n\n            $this->sendResponse([\n                'success' => true,\n                'message' => count($data) . ' data pesan nama perkumpulan ditemukan untuk email ' . $email,\n                'data' => $data\n            ]);\n\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n}\n\n--- File: 909 # views/blokirPerseroan/register.php ---\nregister here\n\n--- File: 910 # views/blokirPerseroan/login.php ---\nlogin here\n\n--- File: 229 # error/IError.php ---\n<?php\n\ninterface IError {\n\n    function getStatusCode();\n    function getMessage();\n}\n\n--- File: 330 # exception/ValidationException.php ---\n<?php\n\nclass ValidationException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 400);\n    }\n}\n\n\n--- File: 326 # exception/InternalServerException.php ---\n<?php\n\nclass InternalServerException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 500);\n    }\n}\n\n\n--- File: 331 # exception/AccessDeniedException.php ---\n<?php\n\nclass AccessDeniedException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 403);\n    }\n}\n\n\n--- File: 332 # exception/NotFoundException.php ---\n<?php\n\nclass NotFoundException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 404);\n    }\n}\n\n\n--- File: 163 # models/FormDataPerseroanPenyesuaianType.php ---\n<?php\n\nclass FormDataPerseroanPenyesuaianType extends FormDataPerseroanPerubahanType {\n\n    public function checkMinimumSelection($attribute, $params)\n    {\n\n    }\n}\n\n--- File: 1082 # views/yayasanbaru/organ/_organ.php ---\n<?php\n/** @var $listPengurus array list organ yayasan */\n\n$this->renderPartial('/yayasanbaru/pratinjau/_organ', array(\n    'listPengurus' => $listPengurus,\n));\n?>\n\n\n--- File: 1075 # views/yayasanbaru/organ/_pendiri.php ---\n<?php\n/** @var $listPendiri array list pendiri yayasan */\n\n$this->renderPartial('/yayasanbaru/pratinjau/_pendiri', array(\n    'listPendiri' => $listPendiri,\n));\n?>\n\n\n--- File: 729 # views/perseroan/_isiKabErr.php ---\n<!DOCTYPE html>\n<html>\n<body>\n\tTerjadi kesalahan dalam melakukan proses data, <a href='#' onclick='javascript:window.history.go(-1);return false;'>klik di sini untuk mencoba lagi</a>.\n</body>\n</html>\n\n--- File: 225 # models/yayasanbaru/perubahan/AktaPerubahanForm.php ---\n<?php\nYii::import('application.modules.sabh.models.yayasanbaru.AktaTransaksiForm');\n/**\n * Model form untuk menyediakan isian data tanggal dan nomor akta\n * pada transaksi perubahan\n */\nclass AktaPerubahanForm extends AktaTransaksiForm\n{\n\n}\n\n--- File: 219 # models/yayasanbaru/penggabungan/AktaPenggabunganForm.php ---\n<?php\nYii::import('application.modules.sabh.models.yayasanbaru.AktaTransaksiForm');\n/**\n * Model form untuk menyediakan isian data tanggal dan nomor akta\n * pada transaksi penggabungan\n */\nclass AktaPenggabunganForm extends AktaTransaksiForm\n{\n\n}\n\n--- File: 1146 # dto/EmailDto.php ---\n<?php\n\nclass EmailDto {\n    public $to;\n    public $subject;\n    public $body;\n\n    public function __construct($to, $subject, $body) {\n        $this->to = $to;\n        $this->subject = $subject;\n        $this->body = $body;\n    }\n}\n\n\n--- File: 1017 # views/yayasanbaru/penggabungan/_listYayasan.php ---\n<?php\n/** @var $modelPilih PilihGabungForm */\n\n$this->renderPartial('/yayasanbaru/pratinjau/penggabungan/_listYayasan', array(\n    'parent' => $modelPilih->parent,\n    'childs' => $modelPilih->childs\n));\n?>\n\n\n--- File: 461 # views/bumdes/viewQRCode_404.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <h4 class=\"text-center\">Data tidak tercatat dalam database Ditjen AHU Online.</h4>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 838 # views/banded/update.php ---\n<?php\n\n\n// $this->breadcrumbs=array(\n// \t'Badan Hukum Pending'=>array('index'),\n// \t'Update',\n// );\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <?php echo $this->renderPartial('_form', array('model'=>$model)); ?>    \n    </div>\n</div>\n\n--- File: 1140 # views/match/update.php ---\n<?php\n\n\n// $this->breadcrumbs=array(\n// \t'Badan Hukum Pending'=>array('index'),\n// \t'Update',\n// );\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <?php echo $this->renderPartial('_form', array('model'=>$model)); ?>    \n\t</div>\n</div>\n\n--- File: 716 # views/perseroan/viewQRCode_404.php ---\n\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">\n                <div class=\"panel-body\">\n                    <h4 class=\"text-center\">Data tidak tercatat dalam database Ditjen AHU Online.</h4>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n\n\n\n--- File: 380 # components/validators/filterNumber.php ---\n<?php\n\n/**\n *\n * @since 2017-04-20\n */\nclass filterNumber extends CValidator\n{\n    /**\n     * @inheritdoc\n     */\n    public function validateAttribute($object, $attribute)\n    {\n        $value = preg_replace(\"/[^0-9]/\",\"\", $object->$attribute);\n        $object->$attribute = $value;\n    }\n}\n\n\n--- File: 1088 # views/badanHukumPending/update.php ---\n<?php\n\n\n// $this->breadcrumbs=array(\n// \t'Badan Hukum Pending'=>array('index'),\n// \t'Update',\n// );\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <?php echo $this->renderPartial('_form', array('model'=>$model, 'base' => $base)); ?>    </div>\n</div>\n\n--- File: 590 # views/perkumpulan/update_ordername_perkumpulan.php ---\n<?php\n\n\n// $this->breadcrumbs=array(\n// \t'Badan Hukum Pending'=>array('index'),\n// \t'Update',\n// );\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <?php echo $this->renderPartial('/perseroan/_form_update_ordername', array('model'=>$model)); ?>    \n\t</div>\n</div>\n\n--- File: 797 # views/yayasan/update_ordername_yayasan.php ---\n<?php\n\n\n// $this->breadcrumbs=array(\n// \t'Badan Hukum Pending'=>array('index'),\n// \t'Update',\n// );\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <?php echo $this->renderPartial('/perseroan/_form_update_ordername', array('model'=>$model)); ?>    \n\t</div>\n</div>\n\n--- File: 939 # views/historyPlain/download.php ---\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <section class=\"panel\">\n            <div class=\"panel-heading\">\n                <h3 class=\"text-center\"><?php echo $teks ?></h3>\n\n            </div>\n            <div class=\"panel-body\">\n                <h2></h2>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 849 # views/monitoringPerseroan/_detailDownload.php ---\n<?php /* @var $model TransaksiPerseroan */ ?>\n\n<?php if(strlen($model->nomor_transaksi) === 16 || strlen($model->nomor_transaksi) === 17): ?>\n    <?php echo TransaksiPerseroan::model()->getSKTransaksi($model, true); ?>\n<?php else: ?>\n    <i>data migrasi</i>\n<?php endif; ?>\n\n--- File: 1033 # views/yayasanbaru/penggabungan/_stickerYayasan.php ---\n<?php /** @var $item ItemGabungForm */?>\n<div class=\"col-lg-12 alert alert-danger\">\n    <div style=\"font-weight: bold;\"><?php echo $item->nama; ?></div>\n    <br />\n    <div><?php echo $item->getAttributeLabel('nomor_sk'); ?> : <br /><?php echo $item->nomor_sk; ?></div>\n</div>\n\n--- File: 400 # response/IResponse.php ---\n<?php\n\n/**\n * Interface for API response handling\n * \n * This interface defines methods for sending different types of API responses\n * with consistent formatting across the application.\n */\ninterface IResponse\n{\n    /**\n     * Send a success response\n     * \n     * @param string $message The success message\n     * @return void\n     */\n    public static function ok($data = [], $message = 'Success');\n}\n\n\n--- File: 547 # views/persero/pembubaran/expired.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <h4>Saat ini fitur Pembubaran Perseroan tidak dapat dilakukan karena akses Anda sudah dalam masa kadaluarsa.</h4>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>    \n\n--- File: 830 # views/perseroanPending/update.php ---\n<?php\n/* @var $this PerseroanPendingController */\n/* @var $model PerseroanPending */\n\n$this->breadcrumbs=array(\n\t'Perseroan Pendings'=>array('index'),\n\t'Update',\n);\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <?php echo $this->renderPartial('_form', array('model'=>$model)); ?>    </div>\n</div>\n\n--- File: 288 # controllers/TestController.php ---\n<?php\n\nclass TestController extends CController\n{\n    public function actionSessionSet()\n    {\n        Yii::app()->session['a'] = 'Test Session Refresh Page';\n        echo $_SERVER[\"SERVER_ADDR\"];\n    }\n\n    public function actionSessionGet()\n    {\n        echo \"<pre>\";\n        var_dump(Yii::app()->session->sessionID, $_SERVER[\"SERVER_ADDR\"], Yii::app()->session['a']);\n    }\n}\n\n\n--- File: 386 # repositories/IUserRepository.php ---\n<?php\n\ninterface IUserRepository\n{\n    /**\n     * Get user by ID\n     * @param mixed $userId\n     * @return DclUser|null\n     */\n    public function getUserById($userId);\n\n    /**\n     * Get all roles for a user\n     * @param mixed $userId\n     * @return array Array of role names\n     */\n    public function getUserRoles($userId);\n} \n\n--- File: 1147 # dto/GetPerseroanDto.php ---\n<?php\n\nclass GetPerseroanDto {\n    public $nama;\n    public $npwp;\n    public $nib;\n    public $alamat;\n\n    public function __construct($nama, $npwp, $nib, $alamat) {\n        $this->nama = $nama;\n        $this->npwp = $npwp;\n        $this->nib = $nib;\n        $this->alamat = $alamat;\n    }\n}\n\n\n--- File: 766 # views/default/onprogress.php ---\n<div class=\"row\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-heading\">\n            <h3>\n                Aplikasi Sedang dalam pengembangan\n            </h3>\n        </div>\n        <div id=\"collapseOne\" class=\"panel-collapse collapse in\">\n            <div class=\"panel-body\">\n                Aplikasi Sedang dalam pengembangan. Permohonan dapat dilakukan secara manual.\n            </div>\n        </div>\n    </div>\n</div>\n\n\n--- File: 1054 # views/yayasanbaru/pratinjau/_aktaNotaris.php ---\n<?php\n/** @var $models array AktaNotarisForm */\n/** @var $legend string legend */\n?>\n<?php $this->beginWidget('DclPanel', array(\n    'legend' => $legend,\n)); ?>\n\n<?php foreach($models as $key => $model): ?>\n<?php $this->renderPartial('/yayasanbaru/pratinjau/_aktaNotarisDetail', array('model' => $model)); ?>\n<?php endforeach; ?>\n\n<?php $this->endWidget(); ?>\n\n--- File: 251 # controllers/PenghapusanBadanHukumController.php ---\n<?php\n\nclass PenghapusanBadanHukumController extends Controller\n{\n\n    // unused UI\n    // public function actionDaftarPermohonan()\n    // {\n    //     $this->render('daftarPermohonan');\n    // }\n\n    public function actionForm()\n    {\n        if (!Yii::app()->user->isGuest) {\n            $this->render('permohonan/index');\n            exit();\n        }\n        throw new CHttpException(404, 'The requested page does not exist.');\n    }\n}\n\n\n--- File: 1042 # views/yayasanbaru/perubahan/_listOrganForm.php ---\n<?php\n/** @var $model PemberitahuanDataForm */\n?>\n<?php if(is_array($model->list_organ)): ?>\n    <?php foreach($model->list_organ as $key => $organ): ?>\n            <?php echo CHtml::activeHiddenField($model, 'list_organ[]', array(\n                'value' => $organ,\n                'id' => \"PemberitahuanDataForm_list_organ_{$key}\"\n            )); ?>\n    <?php endforeach; ?>\n<?php endif; ?>\n\n--- File: 1094 # views/dashboard/_fieldKabupatenForm.php ---\n<?php /* @var $form CActiveForm */ ?>\n<?php /* @var $model DashboardFilterForm */ ?>\n<?php /* @var $listKabupaten Array */ ?>\n\n<?php $form = new CActiveForm(); ?>\n<?php echo $form->dropDownlist($model, 'kabupaten_id', $listKabupaten,\n    array('class'=>'styled select-kabupaten form-control', 'empty'=>' PILIH KABUPATEN ')); ?>\n<?php echo $form->hiddenField($model, 'kabupaten_nama'); ?>\n\n--- File: 832 # views/perseroanPending/create.php ---\n<?php\n/* @var $this PerseroanPendingController */\n/* @var $model PerseroanPending */\n\n$this->breadcrumbs=array(\n\t'Perseroan Pendings'=>array('index'),\n\t'Create',\n);\n?>\n\n<div class=\"row-fluid\">\n    <div class=\"span12\">\n        <div class=\"top-bar\">\n            <h3>Create PerseroanPending</h3>\n        </div>\n        <?php echo $this->renderPartial('_form', array('model'=>$model,'data'=>$data)); ?>    </div>\n</div>\n\n--- File: 1149 # enums/FileType.php ---\n<?php\n\nclass FileType\n{\n    const PEMBLOKIRAN = 'PEMBLOKIRAN';\n    const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n\n\n    public static function getAllTypes()\n    {\n        return [\n            self::PEMBLOKIRAN,\n            self::PEMBUKAAN_BLOKIR\n        ];\n    }\n\n    public static function isValid($fileType)\n    {\n        return in_array($fileType, self::getAllTypes());\n    }\n} \n\n--- File: 230 # error/YiiNotFoundError.php ---\n<?php\n\nrequire_once Yii::getPathOfAlias('application.modules.sabh.error.IError') . '.php';\n\nclass YiiNotFoundError implements IError {\n\n    private $message;\n\n    public function __construct($message) {\n        $this->message = $message;\n\n        header('Content-Type: application/json', true, 404);\n        echo CJSON::encode(['error' => $message]);\n        Yii::app()->end();\n    }\n\n    public function getStatusCode() {\n        return 404;\n    }\n\n    public function getMessage() {\n        return $this->message;\n    }\n}\n\n--- File: 576 # views/perbaikanModalDasar/history.php ---\n<?php\n/* @var $this PerbaikanModalDasarController */\n/* @var $model PerbaikanModalDasar */\n\n$this->beginWidget('DclPanel', array(\n    'title'=>CHtml::tag('h3', array(), 'Riwayat Perbaikan Modal Dasar'),\n    'htmlLinks'=>array(\n        CHtml::link('Tambah', array('tambah'), array('class'=>'btn btn-info')). '<br />'\n    )\n));\n?>\n<?php $this->renderPartial('_list', array('model'=>$model)); ?>\n<?php $this->endWidget();?>\n\n--- File: 378 # components/widgets/views/checklistVoucher/_form.php ---\n<?php\n/* @var CActiveForm $form */\n/* @var FormDataPerseroanPerubahan $model */\n/* @var string $attribute */\n/* @var array listVoucherPerubahan */\n?>\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"col-lg-3\">\n        </div>\n        <div class=\"col-lg-9\">\n            <?php echo $form->checkBoxList($model, $attribute, $list); ?>\n            <?php echo $form->error($model, $attribute); ?>\n        </div>\n    </div>\n</div>\n\n--- File: 1000 # views/yayasanbaru/pembubaran/_skForm.php ---\n<?php /** @var $modelCari CariForm */ ?>\n<div class=\"panel\">\n    <div class=\"panel-body\">\n        <div class=\"alert alert-danger fade in\">\n            <div class=\"form-group\">\n                <div class=\"col-lg-4\">\n                    <h4><?php echo $modelCari->getAttributeLabel('nomor_sk'); ?>:</h4>\n                </div>\n                <div class=\"col-lg-8\">\n                    <h4><?php echo $modelCari->nomor_sk; ?></h4>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n--- File: 397 # repositories/perseroan/RiwayatVerifikasiRepository.php ---\n<?php\n\nYii::import('application.modules.sabh.models.RiwayatVerifikasi');\n\nclass RiwayatVerifikasiRepository {\n    \n    public function findAllByTransaksi($transactionId) {\n        return RiwayatVerifikasi::model()->findAll([\n            'condition' => 'id_transaksi = :id',\n            'params' => [':id' => $transactionId],\n            'order' => 'created_date DESC'\n        ]);\n    }\n\n    public function save($data) {\n        $model = new RiwayatVerifikasi();\n        $model->attributes = $data;\n        return $model->save();\n    }\n}\n\n--- File: 1079 # views/yayasanbaru/organ/_jabatanForm.php ---\n<?php\n/** @var $model OrganYayasanForm */\n/** @var $form CActiveForm */\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"col-lg-6\">\n    <?php echo $form->labelEx($model, 'jabatan', array('class' => 'control-label')); ?>\n    <?php echo $form->dropDownList(\n        $model,\n        'jabatan',\n        $model->listJabatan(),\n        array('class' => 'form-control')\n    ); ?>\n    <?php echo $form->error($model, 'jabatan'); ?>\n</div>\n\n--- File: 379 # components/validators/validateBo.php ---\n<?php\n\n/**\n *\n */\nclass validateBo extends CValidator\n{\n    /**\n     * @inheritdoc\n     */\n    public function validateAttribute($object, $attribute)\n    {\n        if (\n            $object->$attribute !== null &&\n            $object->$attribute instanceof BoForm &&\n            $object->$attribute->pernyataan == 1 &&\n            $object->$attribute->disclaimer == 1 &&\n            $object->$attribute->disclaimer2 == 1\n        ) {\n            if (!$object->$attribute->validate()) {\n                $this->addError($object, $attribute, 'Gagal validasi data BO.');\n            }\n        }\n    }\n}\n\n\n--- File: 416 # views/bo/monitoring/_tipeLengkap.php ---\n<?php\n\n/** @var $countTipe array **/\n?>\n<div class=\"symbol green\" style=\"border-radius: 4px;\"\n    data-tipe=\"<?php echo BoMonitoring::TIPE_LENGKAP; ?>\">\n    <div style=\"display: inline-block; width: 100%; text-align: center;\">\n        <h1 style=\"color: #fff;\" class=\"_isi\"><?= $countTipe['isi'] ?></h1>\n        <p style=\"color: #fff;\"><strong>Ada Pemilik Manfaat Korporasi</strong></p>\n    </div>\n    <div class=\"clearfix\">&nbsp;</div>\n</div>\n\n\n--- File: 534 # views/persero/profil/profil.php ---\n<style>\n.mimik_tabel{\n\tbackground-color: white;\n\tbackground-image: none;\n\tpadding-bottom: 40px !important;\n\tmin-height: 80%;\n}\nh3{\n\tmargin-top: 4em;\n}\n</style>\n<div class='mimik_tabel'>\n\t<div>\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<h3><?= empty($teks) ? '' : $teks ?></h3>\n\t\t\t\t<section id='hasil_cari'>\n\t\t\t\t\t<a href='/profil-pt'>Kembali ke halaman pencarian</a>.\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n\n--- File: 1063 # views/yayasanbaru/pratinjau/pembubaran/_alasan.php ---\n<?php\n/** @var $alasan string alasan pembubaran */\n/** @var $legend string legend */\n?>\n<?php $this->beginWidget('DclPanel', array(\n    'legend' => $legend,\n)); ?>\n\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-3\">\n        <span class=\"control-label\" style=\"font-weight: bold;\">Dasar Pembubaran</span>\n    </div>\n    <div class=\"col-lg-9\">\n        <span style=\"font-weight: bold;\"><?php echo $alasan; ?></span>\n    </div>\n</div>\n\n<?php $this->endWidget(); ?>\n\n--- File: 850 # views/monitoringPerseroan/_detailMaksudTujuan.php ---\n<?php /* @var $this MonitoringPerseroanController */ ?>\n<?php /* @var $model TransaksiPerseroan */ ?>\n\n<?php $maksud_tujuan = $this->parse_maksud_tujuan($model); ?>\n<?php if (count($maksud_tujuan) > 0): ?>\n    <?php foreach($maksud_tujuan as $c => $dta): ?>\n        <?php foreach($dta as $key => $val): ?>\n            <div class=\"form-group clearfix\">\n                <?php echo $val ?>\n            </div>\n        <?php endforeach; ?>\n    <?php endforeach; ?>\n<?php endif; ?>\n\n--- File: 436 # views/bo/monitoring-notaris/_countTipe.php ---\n<div class=\"row\">\n    <?php foreach($countTipe as $key => $countTipeItem): ?>\n        <div class=\"col-md-4\">\n            <div class=\"col-md-6\">\n                <?php $this->renderPartial('/bo/monitoring/_tipeTidakLengkap', array('countTipe' => $countTipeItem)); ?>\n            </div>\n            <div class=\"col-md-6\">\n                <?php $this->renderPartial('/bo/monitoring/_tipeLengkap', array('countTipe' => $countTipeItem)); ?>\n            </div>\n        </div>\n    <?php endforeach; ?>\n</div>\n\n--- File: 423 # views/bo/monitoring/_tipeTidakLengkap.php ---\n<?php\n\n/** @var $countTipe array **/\n?>\n<div class=\"symbol red\" style=\"border-radius: 4px;\"\n    data-tipe=\"<?php echo BoMonitoring::TIPE_TIDAK_LENGKAP; ?>\">\n    <div style=\"display: inline-block; width: 100%; text-align: center;\">\n        <h1 style=\"color: #fff;\" class=\"_tidak_isi\"><?= $countTipe['tidak_isi'] ?></h1>\n        <p style=\"color: #fff;\"><strong>Tidak Ada Pemilik Manfaat Korporasi</strong></p>\n    </div>\n    <div class=\"clearfix\">&nbsp;</div>\n</div>\n\n\n--- File: 1073 # views/yayasanbaru/organ/_negaraForm.php ---\n<?php\n/** @var $model OrganYayasanAsingForm */\n/** @var $form CActiveForm */\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"col-lg-6\">\n    <?php echo $form->labelEx($model, 'negara', array('class' => 'control-label')); ?>\n    <?php echo $form->dropDownList(\n        $model,\n        'negara',\n        $model->listNegara(),\n        array('class' => 'form-control', 'empty' => '--PILIH NEGARA--')\n    ); ?>\n    <?php echo $form->error($model, 'negara'); ?>\n</div>\n\n--- File: 89 # models/KriteriaBo.php ---\n<?php\n\nclass KriteriaBo extends CActiveRecord\n{\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return Banded the static model class\n     */\n    public static function model($className = __CLASS__) {\n        return parent::model($className);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return 'tbl_kriteria_bo';\n    }\n}\n\n\n--- File: 339 # components/LogSABH.php ---\n<?php\nclass LogSABH{\n    static public function insert($directory=\"\", $content=\"\"){\n        $path = getcwd() . '/protected/runtime/application.log.sabh.' . date('mY') . '.txt';        \n        $f = @fopen($path,\"rb\");            \n        $message = \"IN : \".$directory.\"\\n\";        \n        $message .= \"[\".date('d M Y H:i:s').\"] : \" . $content . \"\\n\\n\";        \n        $message .= @fread($f,8192);\n        $f = @fopen($path,\"wb\");\n        @fwrite($f, $message);\n        @fclose($f);      \n        return false;\n    }\n}\n?>\n\n\n--- File: 1066 # views/yayasanbaru/pilihPerubahan/_listOrganForm.php ---\n<?php\n/** @var $model PemberitahuanDataForm */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"alert alert-block alert-success\">\n            <?php echo $form->checkBoxList($model, 'list_organ', \n                PemberitahuanDataForm::listOrgan(), array(\n                    'template' => '<div class=\"checkbox\"><label>{input} {label}</label></div>',\n                    'separator' => '',\n                    'uncheckValue' => null,\n                )\n            ); ?>\n        </div>\n    </div>\n</div>\n\n\n--- File: 384 # components/enum/JenisTransaksiEnum.php ---\n<?php\n\n/**\n *\n */\nclass JenisTransaksiEnum\n{\n    const PENDIRIAN = 'Pendirian';\n    const PERUBAHAN_PAD = 'Perubahan Anggaran Dasar';\n    const PERUBAHAN_PPAD = 'Pemberitahuan Perubahan Anggaran Dasar';\n    const PERUBAHAN_NONPAD = 'Pemberitahuan Perubahan Data';\n    const PERUBAHAN_PPAD_NONPAD = 'Pemberitahuan Perubahan Anggaran Dasar Dan Data';\n    const PENYESUAIAN = 'Penyesuaian';\n    const MERGER = 'Merger';\n    const AKUISISI = 'Akuisisi';\n    const PEMBUBARAN = 'Pembubaran';\n}\n\n\n--- File: 1076 # views/yayasanbaru/organ/_kabupatenForm.php ---\n<?php\n/** @var $model OrganYayasanNonAsingForm */\n/** @var $form CActiveForm */\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"col-lg-6\">\n    <?php echo $form->labelEx($model, 'kabupaten_id', array('class' => 'control-label')); ?>\n    <?php echo $form->dropDownList(\n        $model,\n        'kabupaten_id',\n        $model->listKabupaten(),\n        array('class' => 'form-control', 'empty' => '--PILIH KABUPATEN--')\n    ); ?>\n    <?php echo $form->error($model, 'kabupaten_id'); ?>\n</div>\n\n--- File: 1051 # views/yayasanbaru/perubahan/_aktaForm.php ---\n<?php\n/** @var $arrModelAkta array model AktaPerubahanForm */\n?>\n<?php $this->beginWidget('DclPanel', array(\n    'legend' => 'AKTA NOTARIS',\n)); ?>\n\n<?php if(is_array($arrModelAkta) && !empty($arrModelAkta)): ?>\n    <?php foreach($arrModelAkta as $key => $model): ?>\n        <?php $this->renderPartial('/yayasanbaru/perubahan/_aktaDetailForm', array(\n            'model' => $model,\n            'key' => $key,\n            'form' => $form,\n        )); ?>\n    <?php endforeach; ?>\n<?php endif; ?>\n\n<?php $this->endWidget(); ?>\n\n--- File: 345 # components/Timer.php ---\n<?php\n/*Author : Kuuga\n *Year : 2014-Feb\n */\nclass Timer {\n\t\t\n\n\t/*public function countDays($datExp, $dateOrder) {\n\t\t$datediff = strtotime($datExp) - strtotime($dateOrder);\n\t\treturn floor($datediff / (60 * 60 * 24));\n\t}*/\n\t\n\tstatic public function countDays($datExp, $currentDate) {\n\t\t$datediff = strtotime($datExp) - strtotime($currentDate);\n\t\t$count = ceil($datediff / (60 * 60 * 24));\n                if($count>0)\n                    return $count;\n                else\n                    return 0;\n\t}\n\t\n\tpublic function tenggangWaktu(){\n\t\t\n\t}\n\n}\n\n\n--- File: 598 # views/perkumpulan/_konfirmasiSukses.php ---\n<script>\n    $(document).on('click','#fin',function(event){\n        event.preventDefault();\n        window.location.reload();\n    });\n</script>\n<div id=\"konfirmasi_Sukses\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content modal-yellow\">\n            <div class=\"modal-body\">\n                <p>\n                    Kode voucher berhasil dimasukkan !\n                </p>\n                <a href=\"javascript:;\" id=\"fin\" class=\"btn btn-danger\" data-dismiss=\"modal\">Baik</a>\n            </div>\n\n        </div><!-- modal content -->\n\n    </div><!-- modal dialog -->\n</div><!-- modal -->\n\n--- File: 738 # views/perseroan/_konfirmasiSukses.php ---\n<script>\n    $(document).on('click','#fin',function(event){\n        event.preventDefault();\n        window.location.reload();\n    });\n</script>\n<div id=\"konfirmasi_Sukses\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content modal-yellow\">\n            <div class=\"modal-body\">\n                <p>\n                    Kode voucher berhasil dimasukkan !\n                </p>\n                <a href=\"javascript:;\" id=\"fin\" class=\"btn btn-danger\" data-dismiss=\"modal\">Baik</a>\n            </div>\n\n        </div><!-- modal content -->\n\n    </div><!-- modal dialog -->\n</div><!-- modal -->\n\n--- File: 791 # views/yayasan/_konfirmasiSukses.php ---\n<script>\n    $(document).on('click','#fin',function(event){\n        event.preventDefault();\n        window.location.reload();\n    });\n</script>\n<div id=\"konfirmasi_Sukses\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content modal-yellow\">\n            <div class=\"modal-body\">\n                <p>\n                    Kode voucher berhasil dimasukkan !\n                </p>\n                <a href=\"javascript:;\" id=\"fin\" class=\"btn btn-danger\" data-dismiss=\"modal\">Baik</a>\n            </div>\n\n        </div><!-- modal content -->\n\n    </div><!-- modal dialog -->\n</div><!-- modal -->\n\n--- File: 1065 # views/yayasanbaru/pilihPerubahan/_listAngkatKembaliForm.php ---\n<?php\n/** @var $model PemberitahuanDataForm */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"alert alert-block alert-success\">\n            <?php echo $form->checkBoxList($model, 'list_angkat_kembali', \n                PemberitahuanDataForm::listAngkatKembali(), array(\n                    'template' => '<div class=\"checkbox\"><label>{input} {label}</label></div>',\n                    'separator' => '',\n                    'uncheckValue' => null,\n                )\n            ); ?>\n        </div>\n    </div>\n</div>\n\n\n--- File: 1150 # enums/JenisKewarganegaraan.php ---\n<?php\n\nclass JenisKewarganegaraan {\n    const WNI = 'WNI';\n    const WNA = 'WNA';\n    \n    public static function values() {\n        return array(\n            self::WNI,\n            self::WNA\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'WNI' => self::WNI,\n            'WNA' => self::WNA\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 218 # models/yayasanbaru/penggabungan/SyaratGabungChildForm.php ---\n<?php\n\n/**\n * Model form untuk bagian syarat data yayasan child yang akan digabungkan\n *\n */\nclass SyaratGabungChildForm extends SyaratGabungForm\n{\n    /**\n     * @return array rules\n     */\n    public function rules()\n    {\n        return array(\n            array('jenis_rapat, syarat', 'required'),\n            array('jenis_rapat', 'in', 'range' => array_keys(parent::listJenisRapat())),\n            array('syarat', 'validateSyarat'),\n            array('jenis_rapat', 'validateSyaratRapat'),\n            array('syarat_rapat_pembina, syarat_rapat_gabungan, list_pengurus', 'safe'),\n        );\n    }\n}\n\n\n--- File: 351 # components/MyController.php ---\n<?php\nclass MyController extends CController{\n\t //public $layout = '//layouts/column1';\n\t public $layout = 'null';\n\n    /**\n     * @var array context menu items. This property will be assigned to {@link CMenu::items}.\n     */\n    public $menu = array();\n\n    /**\n     * @var array the breadcrumbs of the current page. The value of this property will\n     * be assigned to {@link CBreadcrumbs::links}. Please refer to {@link CBreadcrumbs::links}\n     * for more details on how to specify this property.\n     */\n    /*\n     * \n      array(\n      'Sample post'=>array('post/view', 'id'=>12),\n      'Edit',\n      )\n     */\n    public $breadcrumbs = array();\n}\n\n\n--- File: 412 # views/bo/popupUpdate.php ---\n<?php\n/** @var $this BoController */\n/** @var $detail BoDetailForm **/\n?>\n<div class='overlay_candra'><div><div>\n<div class='col-lg-6'>\n    <section class='panel'>\n        <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>Edit Pemilik Manfaat</legend>\n                <div class=\"form-group clearfix\">\n                    <div class=\"col-lg-12\">\n                        <div id=\"container_form_create_bo\">\n                        <?php $this->renderPartial('_create', array(\n                            'detail' => $detail,\n                        )); ?>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </section>\n</div>\n</div></div></div>\n\n--- File: 1011 # views/yayasanbaru/penggabungan/_koranDetailsForm.php ---\n<?php\n/** @var $arrModelKoran array KoranGabungForm */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<?php $btnAction = true; ?>\n<?php foreach($arrModelKoran as $key => $modelKoran): ?>\n    <?php $this->renderPartial('_koranDetailForm', array(\n        'index' => $key,\n        'modelKoran' => $modelKoran,\n        'btnAction' => $btnAction,\n        'form' => $form,\n        'aksi' => $aksi,\n        'datepickerClientOptions' => $datepickerClientOptions\n    )); ?>\n<?php $btnAction = false; ?>\n<?php endforeach; ?>\n\n--- File: 981 # views/yayasanbaru/pembubaran/_koranDetailsForm.php ---\n<?php\n/** @var $arrModelKoran array KoranForm */\n/** @var $clientOptions array clinet options datepicker */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<?php $btnAction = true; ?>\n<?php foreach($arrModelKoran as $key => $modelKoran): ?>\n    <?php $this->renderPartial('_koranDetailForm', array(\n        'index' => $key,\n        'modelKoran' => $modelKoran,\n        'btnAction' => $btnAction,\n        'form' => $form,\n        'clientOptions' => $clientOptions\n    )); ?>\n<?php $btnAction = false; ?>\n<?php endforeach; ?>\n\n--- File: 859 # views/verifikasiPerubahanPerseroan/_common/constants.php ---\n<script>\nconst STATUS_PERMOHONAN_TEXT = {\n    'MENUNGGU_KONSEPTOR': 'Menunggu Konseptor',\n    'MENUNGGU_VERIFIKATOR': 'Menunggu Verifikator',\n    'MENUNGGU_DIREKTUR_BU': 'Menunggu Direktur BU',\n    'MENUNGGU_JENDERAL': 'Menunggu Jenderal',\n    'DITOLAK_KONSEPTOR': 'Ditolak Konseptor',\n    'DITOLAK_VERIFIKATOR': 'Ditolak Verifikator',\n    'DITOLAK_DIREKTUR_BU': 'Ditolak Direktur BU',\n    'DITOLAK_JENDERAL': 'Ditolak Jenderal',\n    'SELESAI': 'Selesai'\n};\n</script>\n\n--- File: 1081 # views/yayasanbaru/organ/_isDiIndonesiaForm.php ---\n<?php\n/** @var $model OrganYayasanAsingForm */\n/** @var $form CActiveForm */\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"panel-body\">\n    <div class=\"form-group\">\n        <div class=\"col-lg-6\">\n            <label class=\"checkbox-line\">\n            <?php echo $form->checkBox($model, 'is_di_indonesia', array('class' => 'update-form')); ?>\n            <?php echo $form->labelEx($model, 'is_di_indonesia', array(\n                'class' => 'control-label'\n            )); ?>\n            </label>\n            <?php echo $form->error($model, 'is_di_indonesia'); ?>\n        </div>\n    </div>\n</div>\n\n--- File: 1110 # views/votingPerubahanPerseroan/_common/constants.php ---\n<script>\nconst STATUS_PERMOHONAN_TEXT = {\n    'MENUNGGU_KONSEPTOR': 'Menunggu Konseptor',\n    'MENUNGGU_VERIFIKATOR': 'Menunggu Verifikator',\n    'MENUNGGU_DIREKTUR_BU': 'Menunggu Direktur BU',\n    'MENUNGGU_JENDERAL': 'Menunggu Jenderal',\n    'DITOLAK_KONSEPTOR': 'Ditolak Konseptor',\n    'DITOLAK_VERIFIKATOR': 'Ditolak Verifikator',\n    'DITOLAK_DIREKTUR_BU': 'Ditolak Direktur BU',\n    'DITOLAK_JENDERAL': 'Ditolak Jenderal',\n    'SELESAI': 'Selesai'\n};\n</script>\n\n\n--- File: 409 # views/bo/_formButton.php ---\n<?php\n/** @var $state value dari attribute state di model BoDetailForm */\n?>\n<?php if($state === BoDetailForm::STATE_CREATE): ?>\n<div class=\"col-lg-6 col-lg-offset-5\">\n    <?php echo CHtml::button('SIMPAN', array(\n        'class' => 'btn btn-info',\n        'id' => 'simpan_bo'\n    )); ?>\n</div>\n<?php endif ?>\n\n<?php if($state === BoDetailForm::STATE_UPDATE): ?>\n<div class=\"col-lg-6 col-lg-offset-4\">\n    <?php echo CHtml::button('SIMPAN PERUBAHAN', array(\n        'class' => 'btn btn-info',\n        'id' => 'simpan_perubahan_bo'\n    )); ?>\n</div>\n<?php endif ?>\n\n--- File: 420 # views/bo/monitoring/_pdfPerkumpulan.php ---\n<?php foreach($datas as $key => $data): ?>\n    <tr class=\"tr-<?= BoMonitoring::getRowCssClass($data); ?>\">\n        <td class=\"td\"><?= ($key+1) ?></td>\n        <td class=\"td\"><?= $data['nama_perkumpulan'] ?></td>\n        <td class=\"td\"><?= $data['nomor_sk'] ?></td>\n        <td class=\"td\"><?= $data['nama_notaris'] ?></td>\n        <td class=\"td\"><?= $data['kedudukan_notaris'] ?></td>\n        <td class=\"td\"><?= $data['provinsi_nama_perkumpulan'] ?></td>\n        <td class=\"td\"><?= $data['kabupaten_nama_perkumpulan'] ?></td>\n    </tr>\n<?php endforeach; ?>\n\n--- File: 428 # views/bo/monitoring/_pdfYayasan.php ---\n<?php foreach($datas as $key => $data): ?>\n    <tr class=\"tr-<?= BoMonitoring::getRowCssClass($data); ?>\">\n        <td class=\"td\"><?= ($key+1) ?></td>\n        <td class=\"td\"><?= $data['nama_yayasan'] ?></td>\n        <td class=\"td\"><?= $data['nomor_sk'] ?></td>\n        <td class=\"td\"><?= $data['nama_notaris'] ?></td>\n        <td class=\"td\"><?= $data['kedudukan_notaris'] ?></td>\n        <td class=\"td\"><?= $data['provinsi_nama_yayasan'] ?></td>\n        <td class=\"td\"><?= $data['kabupaten_nama_yayasan'] ?></td>\n    </tr>\n<?php endforeach; ?>\n\n--- File: 1015 # views/yayasanbaru/penggabungan/_rapatDetailsForm.php ---\n<?php\n/** @var $arrModelDetail array RapatDetailForm */\n/** @var $form CActiveForm */\n/** @var $modelPilih PilihForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<?php if(is_array($arrModelDetail)): ?>\n    <?php foreach($arrModelDetail as $key => $modelDetail): ?>\n        <div id=\"container-kuorum-detail-<?php echo $key; ?>\">\n            <?php $this->renderPartial('_rapatDetailForm', array(\n                'index' => $key,\n                'modelDetail' => $modelDetail,\n                'modelPilih' => $modelPilih,\n                'form' => $form,\n            )); ?>\n        </div>\n    <?php endforeach; ?>\n<?php endif; ?>\n\n--- File: 866 # views/verifikator/pesanNama/monitoring.php ---\n<?php\n/* @var $this VerifikatorController */\n/* @var $dp array VerifikasiActive */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>MONITORING ON/OFF USER<br>VERIFIKASI PESAN NAMA</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?php echo CHtml::link('Kembali', array('index'), array('class'=>'btn btn-info')); ?>\n                    <?php $this->renderPartial('pesanNama/_pMonitoring', array(\n                        'dp'=>$dp\n                    )); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 874 # views/verifikator/pesanNama/create.php ---\n<?php\n/* @var $this VerifikatorController */\n/* @var $model VerifikatorPesanNamaForm */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>FORM PENGAJUAN OFF USER<br>VERIFIKASI PESAN NAMA</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>Tambah Pengajuan</legend>\n                        <?php $this->renderPartial('pesanNama/_form', array(\n                            'model'=>$model\n                        )); ?>\n                    </fieldset>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 995 # views/yayasanbaru/pembubaran/_kuorumSetujuForm.php ---\n<?php\n/** @var $arrModelKourum array KourumForm */\n?>\n<?php foreach($arrModelKuorum as $key => $modelKuorum): ?>\n<div id=\"kuorum-setuju-detail-<?php echo $key; ?>\">\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"wrapper-class\">\n            <?php echo CHtml::activeCheckBox($modelKuorum, \"[$key]is_setuju\"); ?>\n            <?php echo CHtml::label($modelKuorum->nama, \"KuorumForm_{$key}_is_setuju\", array('class' => 'control-label', 'id' => \"lKuorumForm_{$key}_is_setuju\"));?>\n        </div>\n    </div>\n</div>\n</div>\n<?php endforeach; ?>\n\n--- File: 998 # views/yayasanbaru/pembubaran/_disclaimerForm.php ---\n<?php\n/** @var $model SyaratForm atau InputForm*/\n/** @var $form CActiveForm */\n/** disclaimer ini dipakai oleh form persyaratan dan input */\n?>\n<div class=\"panel\">\n    <div class=\"panel-body\">\n        <div class=\"alert alert-danger fade in\">\n            <div class=\"form-group clearfix\">\n                <div class=\"col-lg-12\">\n                    <div class=\"wrapper-class\">\n                    <?php echo $form->checkBox($model, 'disclaimer'); ?>\n                    <?php echo $form->labelEx($model, 'disclaimer', array('class' => 'control-label'));?>\n                    <?php echo $form->error($model, 'disclaimer'); ?>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n--- File: 870 # views/verifikator/pesanNama/update.php ---\n<?php\n/* @var $this VerifikatorController */\n/* @var $model VerifikatorPesanNamaForm */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>FORM AKTIFKAN USER<br>VERIFIKASI PESAN NAMA</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>Aktifkan Verifikator</legend>\n                        <?php $this->renderPartial('pesanNama/_formUpdate', array(\n                            'model'=>$model\n                        )); ?>\n                    </fieldset>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 86 # models/FormDeleteDataDouble.php ---\n<?php\n\nclass FormDeleteDataDouble extends CFormModel\n{\n    public $nama;\n    public $nomor_transaksi;\n    public $base;\n    public $tahun;\n\n    public function rules()\n    {\n        return array(\n            array('nama, nomor_transaksi, base, tahun', 'required'),\n            array('tahun', 'date', 'format'=>'yyyy'),\n            array('nama, nomor_transaksi', 'filter', 'filter' => 'trim'),\n            array('nama, nomor_transaksi', 'filter', 'filter' => 'strip_tags'),\n        );\n    }\n    public function attributeLabels()\n    {\n        return array(\n            'nama' => 'Nama',\n            'nomor_transaksi' => 'Nomor Transaksi',\n            'base' => 'Base',\n            'tahun' => 'Tahun',\n        );\n    }\n\n}\n?>\n\n\n--- File: 421 # views/bo/monitoring/_filterKriteria.php ---\n<?php\n\n/** @var $model BoMonitoring **/\n\n$i = 'a';\n$listKriteria = $model->listKriteria();\n?>\n\n<?= CHtml::hiddenField('kriteria', ''); ?>\n\n<?php foreach($listKriteria as $key => $kriteria): ?>\n    <?php $checked = in_array($key, (array) $model->kriteria) ? 'checked' : ''; ?>\n    <?= CHtml::activeCheckBox($model, 'kriteria[]', array(\n        'uncheckValue' => null,\n        'value' => $key,\n        'checked' => $checked,\n        'name' => 'kriteria[]'\n    )); ?>\n    <i class=\"icon-info-sign\" title=\"<?= $kriteria ?>\"></i>\n    <label><?= $i++; ?></label>\n    &nbsp;&nbsp;\n<?php endforeach; ?>\n\n--- File: 875 # views/verifikator/pesanNama/history.php ---\n<?php\n/* @var $this VerifikatorController */\n/* @var $model array VerifikasiActive */\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>RIWAYAT ON/OFF USER VERIFIKASI PESAN NAMA<br><?php echo $verifikator; ?></h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?php echo CHtml::link('Monitoring', array('monitoring'), array('class'=>'btn btn-info')); ?>\n                    <?php $this->renderPartial('pesanNama/_list', array(\n                        'model'=>$model\n                    )); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 1044 # views/yayasanbaru/perubahan/_syaratDokumen.php ---\n<?php\n/** @var $model TransaksiPerubahanForm */\n/** @var $form DclActiveForm */\n?>\n<?php $this->beginWidget('DclPanel', array(\n    'legend' => $model->getAttributeLabel('syarat_dokumen'),\n)); ?>\n\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <?php echo $form->checkBoxList(\n            $model,\n            'syarat_dokumen',\n            $model->listSyaratDokumen(),\n            array(\n            'template' => '<label>{input} {label}</label>',\n        )); ?>\n    </div>\n    <div class=\"col-lg-12\"><?php echo $form->error($model, 'syarat_dokumen'); ?></div>\n</div>\n\n<?php $this->endWidget(); ?>\n\n--- File: 635 # views/restoreVerifikasiTolak/_kasi.php ---\n<div class=\"row\">\n\t<div class=\"col-sm-3\">\n\t\t<input type=\"text\" id=\"nama\" name=\"nama\" class=\"form-control\" value=\"<?= ($nama != null) ? $nama : \"\"; ?>\" placeholder=\"Masukkan Nama\">\n\t</div>\n\t<div class=\"col-sm-3\">\n\t\t<select name=\"perkumpulan\" class=\"form-control\" id=\"perkumpulan\">\n\t\t\t<option value=\"perkumpulan\">Perkumpulan</option>\n\t\t</select>\n\t</div>\n\t<div class=\"col-sm-1\">\n\t\t<button type=\"button\" name=\"search\" class=\"btn btn-success btn-xs\">Cari..</button>\n\t</div>\n\t<div class=\"col-sm-1\">\n\t\t<a href=\"#\" class=\"btn btn-primary btn-xs\">History Restore..</a>\n\t</div>\n</div>     \n\n\n--- File: 643 # views/verifikatorAktifPerkumpulan/create.php ---\n<?php\n/* @var $this VerifikatorAktifPerkumpulanController */\n/* @var $model VerifikatorPerkumpulanForm */\n\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>FORM PENGAJUAN OFF USER</h3>\n                    <h3>VERIFIKASI PENDIRIAN</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <fieldset class=\"fieldset\">\n                        <legend>Tambah Pengajuan</legend>\n                        <?php $this->renderPartial('_form', [\n                            'model' => $model,\n                        ]); ?>\n                    </fieldset>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 1069 # views/yayasanbaru/pilihPerubahan/_syaratAlamatForm.php ---\n<?php\n/** @var $model PemberitahuanDataForm */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"alert alert-block alert-success\">\n            <strong><?php echo $form->labelEx($model, 'syarat_alamat'); ?></strong>\n            <?php echo $form->checkBoxList($model, 'syarat_alamat', \n                PemberitahuanDataForm::listSyaratAlamat(), array(\n                    'template' => '<div class=\"checkbox\"><label>{input} {label}</label></div>',\n                    'separator' => '',\n                    'uncheckValue' => null,\n                )\n            ); ?>\n        </div>\n    </div>\n</div>\n\n\n--- File: 1072 # views/yayasanbaru/pilihPerubahan/_syaratNamaForm.php ---\n<?php\n/** @var $model PersetujuanAnggaranForm */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"alert alert-block alert-success\">\n            <strong><?php echo $form->labelEx($model, 'syarat_nama'); ?></strong>\n            <?php echo $form->checkBoxList($model, 'syarat_nama', \n                PersetujuanAnggaranForm::listSyaratNama(), array(\n                    'template' => '<div class=\"checkbox\"><label>{input} {label}</label></div>',\n                    'separator' => '',\n                    'uncheckValue' => null,\n                )\n            ); ?>\n        </div>\n    </div>\n</div>\n\n\n--- File: 169 # models/FormUpdateYayasan.php ---\n<?php\n\nclass FormUpdateYayasan extends CFormModel\n{\n    public $nama_yayasan;\n    public $nomor_transaksi;\n    public $tahun;\n\n    public function rules()\n    {\n        return array(\n            array('nama_yayasan, nomor_transaksi, tahun', 'required'),\n            array('tahun', 'date', 'format'=>'yyyy'),\n            array('nama_yayasan, nomor_transaksi, tahun', 'filter', 'filter' => 'trim'),\n            array('nama_yayasan, nomor_transaksi', 'filter', 'filter' => 'strip_tags'),\n        );\n    }\n    public function attributeLabels()\n    {\n        return array(\n            'nama_yayasan' => 'Nama Yayasan',\n            'nomor_transaksi' => 'Nomor Transaksi',\n            'tahun' => 'Tahun',\n        );\n    }\n}\n\n\n--- File: 382 # components/validators/voucherYayasan.php ---\n<?php\n\n/**\n *\n */\nclass voucherYayasan extends voucherValidator\n{\n    /**\n     * @inheritdoc\n     */\n    public function validateAttribute($object, $attribute)\n    {\n        if (empty($this->aksi) || empty($this->default_tipe_transaksi)) {\n            throw new CException('Property aksi atau default_tipe_transaksi tidak diset.');\n        }\n        if (!empty($object->$attribute)) {\n            $this->kode_voucher = $object->$attribute;\n            $this->id_produk = 50;\n            $this->default_id_mapping = 3;\n            $this->base = 'yayasan';\n            $billing = $this->getBillingByMapping();\n            if (!empty($billing)) {\n                $this->addError($object, $attribute, $this->getKeterangan($billing));\n            }\n        }\n    }\n}\n\n--- File: 1153 # enums/KategoriPermohonan.php ---\n<?php\n\nclass KategoriPermohonan {\n    const SELURUHNYA = 'SELURUHNYA';\n    const SEBAGIAN = 'SEBAGIAN';\n    \n    public static function values() {\n        return array(\n            self::SELURUHNYA,\n            self::SEBAGIAN\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'SELURUHNYA' => self::SELURUHNYA,\n            'SEBAGIAN' => self::SEBAGIAN\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 164 # models/FormUpdatePerkumpulan.php ---\n<?php\n\nclass FormUpdatePerkumpulan extends CFormModel\n{\n    public $nama_perkumpulan;\n    public $nomor_transaksi;\n    public $tahun;\n\n    public function rules()\n    {\n        return array(\n            array('nama_perkumpulan, nomor_transaksi, tahun', 'required'),\n            array('tahun', 'date', 'format'=>'yyyy'),\n            array('nama_perkumpulan, nomor_transaksi, tahun', 'filter', 'filter' => 'trim'),\n            array('nama_perkumpulan, nomor_transaksi', 'filter', 'filter' => 'strip_tags'),\n        );\n    }\n    public function attributeLabels()\n    {\n        return array(\n            'nama_perkumpulan' => 'Nama Perkumpulan',\n            'nomor_transaksi' => 'Nomor Transaksi',\n            'tahun' => 'Tahun',\n        );\n    }\n\n}\n?>\n\n\n--- File: 1078 # views/yayasanbaru/organ/popup.php ---\n<?php\n/** @var $model OrganYayasanForm */\n/** @var $editable boolean */\n/** @var $listOrgan array */\n?>\n\n<fieldset class=\"fieldset\">\n    <legend>KELOMPOK YAYASAN</legend>\n    <?php $form = $this->beginWidget('CActiveForm', array(\n        'id' => 'form-organ-yayasan',\n        'htmlOptions' => array('role' => 'form'),\n    )); ?>\n    <div id=\"container-form-organ\">\n        <?php $this->renderPartial('/yayasanbaru/organ/_form', array(\n            'model' => $model,\n            'listOrgan' => $listOrgan,\n            'editable' => $editable,\n            'form' => $form,\n        ));?>\n    </div>\n    <?php $this->endWidget(); ?>\n</fieldset>\n\n\n--- File: 1152 # enums/JenisPemegangSaham.php ---\n<?php\n\nclass JenisPemegangSaham {\n    const PERORANGAN = 'PERORANGAN';\n    const BADAN_HUKUM = 'BADAN_HUKUM';\n    \n    public static function values() {\n        return array(\n            self::PERORANGAN,\n            self::BADAN_HUKUM\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'PERORANGAN' => self::PERORANGAN,\n            'BADAN_HUKUM' => self::BADAN_HUKUM\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 116 # models/TransaksiBoHistory.php ---\n<?php\n\nclass TransaksiBoHistory extends CActiveRecord\n{\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return 'tbl_transaksi_bo_history';\n    }\n\n    public function behaviors()\n    {\n        return array(\n            'LoggableBehavior' => array(\n                'class' => 'application.models.LoggableBehavior',\n            )\n        );\n    }\n\n    public function beforeSave()\n    {\n        if ($this->isNewRecord) {\n            $this->created_date = date('Y-m-d H:i:s');\n            $this->created_by = Yii::app()->user->id;\n        }\n        return parent::beforeSave();\n    }\n}\n\n\n--- File: 1005 # views/yayasanbaru/penggabungan/_aktaSatuChild.php ---\n<?php\n/** @var $this controllers/yayasanbaru/PenggabunganController */\n/** @var $modelPilih PilihGabungForm */\n?>\n\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-6\">\n        <?php echo $form->labelEx($modelPilih, 'parent', array('class' => 'control-label')); ?>\n        <?php $this->renderPartial('_stickerYayasan', array('item' => $modelPilih->parent)); ?>\n    </div>\n    <div class=\"col-lg-6\">\n    <?php echo $form->labelEx($modelPilih, 'childs', array('class' => 'control-label')); ?>\n        <?php $this->renderPartial('_stickerYayasan', array('item' => reset($modelPilih->childs))); ?>\n    </div>\n</div>\n\n--- File: 725 # views/perseroan/email_block.php ---\n<h3>\n    TELAH DIBLOCK\n</h3>\n\n<table>\n    <tr>\n        <td>Badan Hukum Atas Nama</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->nama ?></td>\n    </tr>\n    <tr>\n        <td>Tertanggal</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->blokir_date ?></td>\n    </tr>\n    <tr>\n        <td>Password Untuk Unblock</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->password_match ?></td>\n    </tr>\n</table>\n\n<p>Dengan Keterangan Sebagai Berikut:</p>\n<p><?php echo $model->keterangan ?></p>\n\n--- File: 1122 # views/badanhukum/email_block.php ---\n<h3>\n    TELAH DIBLOCK\n</h3>\n\n<table>\n    <tr>\n        <td>Badan Hukum Atas Nama</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->nama ?></td>\n    </tr>\n    <tr>\n        <td>Tertanggal</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->blokir_date ?></td>\n    </tr>\n    <tr>\n        <td>Password Untuk Unblock</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->password_match ?></td>\n    </tr>\n</table>\n\n<p>Dengan Keterangan Sebagai Berikut:</p>\n<p><?php echo $model->keterangan ?></p>\n\n--- File: 653 # views/verifikatorPerbaikan/perbaikan/monitoring.php ---\n<?php\n/* @var $this VerifikatorPerbaikanController */\n/* @var $dp array VerifikasiOnOffPerbaikan */\n\n$this->breadcrumbs = ['List' => ['index'], 'Monitoring'];\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>MONITORING ON/OFF USER<br>VERIFIKASI PERBAIKAN</h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?php echo CHtml::link('Kembali', ['index'], ['class'=>'btn btn-info']); ?>\n                    <?php $this->renderPartial('perbaikan/_listMonitoring', [\n                        'dp'=>$dp\n                    ]); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 1070 # views/yayasanbaru/pilihPerubahan/_syaratKedudukanForm.php ---\n<?php\n/** @var $model PemberitahuanAnggaranForm */\n/** @var $form CActiveForm */\n\n$form = isset($form) ? $form : new CActiveForm();\n?>\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"alert alert-block alert-success\">\n            <strong><?php echo $form->labelEx($model, 'syarat_kedudukan'); ?></strong>\n            <?php echo $form->checkBoxList($model, 'syarat_kedudukan', \n                PemberitahuanAnggaranForm::listSyaratKedudukan(), array(\n                    'template' => '<div class=\"checkbox\"><label>{input} {label}</label></div>',\n                    'separator' => '',\n                    'uncheckValue' => null,\n                )\n            ); ?>\n        </div>\n    </div>\n</div>\n\n\n--- File: 97 # models/BoMonitoringNotarisDetail.php ---\n<?php\n\nclass BoMonitoringNotarisDetail extends BoMonitoring\n{\n    /**\n     * @return array rules model\n     */\n    public function rules()\n    {\n        return array(\n            array('bakum, start, end, id_notaris', 'required'),\n            array('bakum', 'in', 'range' => array('perseroan', 'yayasan', 'perkumpulan')),\n            array('id_notaris', 'numerical', 'integerOnly' => true),\n            array('start, end', 'date', 'format' => 'yyyy-mm-dd'),\n            array('start', 'validateTanggal'),\n        );\n    }\n\n    public function setBoAttribute(&$model)\n    {\n        $model->start = $this->start;\n        $model->end = $this->end;\n        $model->id_notaris = $this->id_notaris;\n        $model->initOtherAttribute();\n    }\n}\n\n\n--- File: 432 # views/bo/monitoring/_pdfPerseroan.php ---\n<?php foreach($datas as $key => $data): ?>\n    <tr class=\"tr-<?= BoMonitoring::getRowCssClass($data); ?>\">\n        <td class=\"td\"><?= ($key+1) ?></td>\n        <td class=\"td\"><?= $data['nama_perseroan'] ?></td>\n        <td class=\"td\"><?= $data['nomor_sk'] ?></td>\n        <td class=\"td\"><?= $data['nama_notaris'] ?></td>\n        <td class=\"td\"><?= $data['kedudukan_notaris'] ?></td>\n        <td class=\"td\"><?= $data['jenis_perseroan'] ?></td>\n        <td class=\"td\"><?= $data['provinsi_nama_perseroan'] ?></td>\n        <td class=\"td\"><?= $data['kabupaten_nama_perseroan'] ?></td>\n    </tr>\n<?php endforeach; ?>\n\n--- File: 681 # views/pemegangSahamBlokir/blokir.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-heading\">\n                <h3 class=\"text-center\">\n                    DATA PENGURUS <?php echo !empty($model->nama_perseroan) ? $model->nama_perseroan : \"\"; ?>\n                </h3>\n            </div>\n            <div class=\"panel-body\">\n                <div class=\"form-group clearfix\"></div>\n                <div class=\"table-responsive\">\n                <?php $this->renderPartial('_itemPengurus', array('model'=>$model, 'data'=>$data, 'peritem'=>true)); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n<?php\nYii::app()->clientScript->registerScript('detailPengurus', file_get_contents(__DIR__.'/listPengurus.js'), CClientScript::POS_END);\n\n--- File: 402 # views/bo/popupCreate.php ---\n<?php\n/** @var $this BoController */\n/** @var $detail BoDetailForm **/\n/** @var $validationDukcapilMsg string **/\n?>\n<div class='overlay_candra'><div><div>\n<div class='col-lg-6'>\n    <section class='panel'>\n        <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>Tambah Pemilik Manfaat</legend>\n                <div class=\"form-group clearfix\">\n                    <div class=\"col-lg-12\">\n                        <div id=\"container_form_create_bo\">\n                        <?php $this->renderPartial('_create', array(\n                            'detail' => $detail,\n                            'validationDukcapilMsg' => $validationDukcapilMsg\n                        )); ?>\n                        </div>\n                    </div>\n                </div>\n            </fieldset>\n        </div>\n    </section>\n</div>\n</div></div></div>\n\n--- File: 69 # models/FormDataPerubahanYayasanSyarat.php ---\n<?php\n\nclass FormDataPerubahanYayasanSyarat extends CFormModel {  \n    /*\n     * Step 1 Persyaratan Utama\n     */\n    public $rups_utama;\n    public $syarat_utama;\n    public $syarat_utama_sub;\n    public $syarat_pengurus;\n    public $pengurus;\n    public $pernyataan_syarat;\n    \n    public $isBack;\n    \n    public function rules() {\n        return array(            \n            array('pernyataan_syarat', 'required', 'message'=>'Anda wajib mencentang pernyataan.'),\n            array('syarat_utama', 'required'),\n            array('syarat_utama, syarat_utama_sub, syarat_pengurus, pernyataan_syarat, rups_utama', 'safe'),            \n        );\n    }      \n    \n    public function attributeLabels() {\n\t\treturn array();\n    }    \n}\n?>\n\n--- File: 181 # models/FormDataPerubahanPerkumpulanSyarat.php ---\n<?php\n\nclass FormDataPerubahanPerkumpulanSyarat extends CFormModel {  \n    /*\n     * Step 1 Persyaratan Utama\n     */\n    public $rups_utama;\n    public $syarat_utama;\n    public $syarat_utama_sub;\n    public $syarat_pengurus;\n    public $pengurus;\n    public $pernyataan_syarat;\n    \n    public $isBack;\n    \n    public function rules() {\n        return array(            \n            array('pernyataan_syarat', 'required', 'message'=>'Anda wajib mencentang pernyataan.'),\n            array('syarat_utama', 'required'),\n            array('syarat_utama, syarat_utama_sub, syarat_pengurus, pernyataan_syarat, rups_utama', 'safe'),            \n        );\n    }      \n    \n    public function attributeLabels() {\n\t\treturn array();\n    }    \n}\n?>\n\n--- File: 709 # views/perseroan/_formblockirpassword.php ---\n<div class=\"form-group\">\n    <?php echo $form->labelEx($model, 'password', array('class' => 'control-label col-md-2')); ?>\n    <div class=\"col-md-8\">\n        <?php echo $form->passwordField($model, 'password', array(\n            'class' => 'form-control'\n        )); ?>\n        <?php echo $form->error($model, 'password'); ?>\n    </div>\n</div>\n\n<div class=\"form-group\">\n    <?php echo $form->labelEx($model, 'password_match', array('class' => 'control-label col-md-2')); ?>\n    <div class=\"col-md-8\">\n        <?php echo $form->passwordField($model, 'password_match', array(\n            'class' => 'form-control'\n        )); ?>\n        <?php echo $form->error($model, 'password_match'); ?>\n    </div>\n</div>\n\n--- File: 1119 # views/badanhukum/_formblockirpassword.php ---\n<div class=\"form-group\">\n    <?php echo $form->labelEx($model, 'password', array('class' => 'control-label col-md-2')); ?>\n    <div class=\"col-md-8\">\n        <?php echo $form->passwordField($model, 'password', array(\n            'class' => 'form-control'\n        )); ?>\n        <?php echo $form->error($model, 'password'); ?>\n    </div>\n</div>\n\n<div class=\"form-group\">\n    <?php echo $form->labelEx($model, 'password_match', array('class' => 'control-label col-md-2')); ?>\n    <div class=\"col-md-8\">\n        <?php echo $form->passwordField($model, 'password_match', array(\n            'class' => 'form-control'\n        )); ?>\n        <?php echo $form->error($model, 'password_match'); ?>\n    </div>\n</div>\n\n--- File: 155 # models/FormDataPerseroanPerubahanSyarat.php ---\n<?php\n\nclass FormDataPerseroanPerubahanSyarat extends CFormModel {  \n    /*\n     * Step 1 Persyaratan Utama\n     */\n    public $rups_utama;\n    public $syarat_utama;\n    public $syarat_utama_sub;\n    public $syarat_pengurus;\n    public $pengurus;\n    public $pernyataan_syarat;\n    \n    public $isBack;\n    \n    public function rules() {\t\t \n        return array(            \n            array('pernyataan_syarat', 'required', 'message'=>'Anda wajib mencentang pernyataan.'),\n            array('syarat_utama', 'required'),\n            array('syarat_utama, syarat_utama_sub, syarat_pengurus, pernyataan_syarat, rups_utama', 'safe'),            \n        );\n    }      \n    \n    public function attributeLabels() {\n\t\treturn array();\n    }    \n}\n?>\n\n--- File: 574 # views/perbaikanModalDasar/_modal.php ---\n<?php\n/* @var $this PerbaikanModalDasarController */\n/* @var $model FormPerbaikanModalDasar */\n\n$content = 'Total modal dasar dengan kode pembayaran : <strong>{kode}</strong> akan diperbaiki menjadi <strong>{total}</strong>';\n$total_modal_dasar = 'Rp. ' . number_format($model->total_modal_dasar,0,',','.');\n$content = str_replace(\n    ['{kode}', '{total}'],\n    [$model->kode_pembayaran, $total_modal_dasar],\n    $content\n);\n$this->widget('DclModal', array(\n    'idModal'=>'confirm-perbaikan-modal-dasar',\n    'title'=>'Konfirmasi',\n    'content'=>$content,\n    'classButton'=>'btn btn-success',\n    'buttons' => array(\n        array('title' => 'Simpan', 'options' =>array('id' => 'btn-yes')\n        )\n    )\n));?>\n\n--- File: 1118 # views/badanhukum/_formFilter.php ---\n<div class=\"col-md-4\">\n    <form action=\"\" method=\"post\" id=\"baseForm\">\n        <select class=\"filter form-control input-sm m-bot15\" name=\"BadanHukum[base]\">\n            <option value=\"perseroan\" <?php echo isset($selectPerseroan) ? $selectPerseroan : '';?>>PERSEROAN</option>\n            <option value=\"yayasan\" <?php echo isset($selectYayasan) ? $selectYayasan : '';?>>YAYASAN</option>\n            <option value=\"perkumpulan\" <?php echo isset($selectPerkumpulan) ? $selectPerkumpulan : '';?>>PERKUMPULAN</option>\n        </select>\n    </form>\n</div>\n<script>\n    $(document).ready(function(){\n        $('.filter').change(function(){\n            window.location.href=$(this).val()+'Listordername';\n        })\n    });\n</script>\n\n\n--- File: 655 # views/verifikatorPerbaikan/perbaikan/active.php ---\n<?php\n/* @var $this VerifikatorPerbaikanController */\n/* @var $model VerifikatorPerbaikanForm */\n\n$this->breadcrumbs = ['List' => ['index'], 'Aktif form'];\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>FORM AKTIFKAN USER<br>VERIFIKASI PERBAIKAN</h3>\n                </center>\n                <br>\n                <div class=\"panel-body col-lg-offset-2 col-lg-8\">\n                    <fieldset class=\"fieldset\">\n                        <legend>Aktifkan Verifikator</legend>\n                        <?php $this->renderPartial('perbaikan/_formActive', [\n                            'model'=>$model\n                        ]); ?>\n                    </fieldset>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 813 # views/template/loader.php ---\n<style>\n\t.loading{\n\t\tposition: fixed;\n\t\ttop:40%;\n\t\tleft: 40%;\n\t\t/*background: orange !important;*/\n\t\twidth: 500px;\n\t\tcolor:#000;\n\t\theight: 100px;\n\t\topacity: 0.5;\n\t\tfont-size: 15px;\n\t\ttext-align:center;\n\t\tdisplay: none;\n\t\tz-index: 9999;\n\t}\n</style>\n<div id=\"loading\" class=\"loading\" style=\"display:none;\">\n    <img src=\"<?php echo Yii::app()->request->baseUrl; ?>/images/icon-loading.png\" /><!--position: absolute;left:0;bottom:0;-->\n    <br>\n    <span style=\"line-height:35px;height: 60px;width: 100%;\">\n        Mohon menunggu. Sistem sedang memprosess..\n    </span>\n    <div style=\"padding-bottom: 5px;\">&nbsp;</div>\n</div>\n\n\n--- File: 656 # views/verifikatorPerbaikan/perbaikan/nonactive.php ---\n<?php\n/* @var $this VerifikatorPerbaikanController */\n/* @var $model VerifikatorPesanNamaForm */\n\n$this->breadcrumbs = ['List' => ['index'], 'Non aktif form'];\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>FORM PENGAJUAN OFF USER<br>VERIFIKASI PERBAIKAN</h3>\n                </center>\n                <br>\n                <div class=\"panel-body col-lg-offset-2 col-lg-8\">\n                    <fieldset class=\"fieldset\">\n                        <legend>Tambah Pengajuan</legend>\n                        <?php $this->renderPartial('perbaikan/_formNonactive', array(\n                            'model'=>$model\n                        )); ?>\n                    </fieldset>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 659 # views/verifikatorPerbaikan/perbaikan/history.php ---\n<?php\n/* @var $this VerifikatorPerbaikanController */\n/* @var $model array VerifikasiOnOffPerbaikan */\n\n$this->breadcrumbs = ['List' => ['index'], 'Monitoring' => ['monitoring'], 'History'];\n?>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>RIWAYAT ON/OFF USER PERBAIKAN <br><?php echo $verifikator; ?></h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <?php echo CHtml::link('Monitoring', ['monitoring'], ['class'=>'btn btn-info']); ?>\n                    <?php $this->renderPartial('perbaikan/_listHistory', [\n                        'model'=>$model\n                    ]); ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 669 # views/editDeletePesanNama/edit.php ---\n<?php\n/* 2019-01-25, Mohammad Afandy\n * @var $this EditDeletePesanNamaController\n * @var $model model OrderNamePerseroan / model OrderName\n * @var $base jenis badan hukum\n */\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>EDIT PESAN NAMA <?= strtoupper($base) ?></h3>\n                    <h3><?= $model->nama ?></h3>\n                </center>\n                <br>\n                <div class=\"panel-body\">\n                    <div class=\"row\">\n                        <?php\n                        $this->renderPartial('_form', [\n                            'model' => $model,\n                            'base' => $base,\n                        ]);\n                        ?>\n                    </div>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n\n--- File: 976 # views/yayasanbaru/kedudukan/_kabupatenForm.php ---\n<?php\n/** @var $model TransaksiPerubahanForm */\n/** @var $form DclActiveForm */\n$form = isset($form) ? $form : new DclActiveForm();\n\n$kabupaten = $model->listKabupaten();\nif ($isResetNewRegion) {\n    $kabupaten = array();\n}\n\n?>\n<div class=\"col-lg-2\">\n    <?php echo $form->labelEx($model, 'kabupaten_id', array(\n        'class' => 'control-label'\n    )); ?>\n</div>\n<div class=\"col-lg-4\">\n    <?php echo $form->dropDownList($model, 'kabupaten_id', $kabupaten, array(\n        'class' => 'form-control',\n        'empty' => '--PILIH KABUPATEN--',\n        'disabled' => !$isEditable,\n    )); ?>\n    <?php echo $form->error($model, 'kabupaten_id'); ?>\n</div>\n\n--- File: 510 # views/history/detail_history_transaksi.php ---\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <?php if($transaksi): ?>\n            <?php echo $this->renderPartial('/preview/_preview_history_perkumpulan', [\n                    'model' => $transaksi,\n                    'bo' => $bo,\n                    'flagdownload' => !empty($flag) ? true : false,\n                ], true); ?>\n        <?php else: ?>\n            <section class=\"panel\">\n                <header class=\"panel-heading\">\n                    Data Tidak Ditemukan\n                </header>\n                <div class=\"panel-body text-center\">\n                    <div class=\"alert alert-info\">\n                        <p>data yang anda cari tidak ada di history transaksi</p>\n                        <?php echo CHtml::link('Kembali', array('listPerkumpulanDitolak'), ['class' => 'btn btn-danger']); ?>\n                    </div>\n                </div>\n            </section>\n        <?php endif;?>\n    </div>\n</div>\n\n\n\n--- File: 825 # views/template/alert_close_browser.php ---\n<div id=\"modal-alert-closebrowser\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\n\t<div class=\"modal-dialog\">\n\t\t<div class=\"modal-content modal-yellow\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<div class=\"modal-title text-center\">\n\t\t\t\t\tPeringatan!!!\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div class=\"modal-body\">\n\t\t\t\t<p class=\"text-center\">\n\t\t\t\tJika pemohon menutup website AHU Online, maka dianggap belum melakukan permohonan \n\t\t\t\tdan harus mengulang permohonan dari awal.\n\t\t\t\t</p>\n\t\t\t</div>\n\n\t\t\t<div class=\"modal-footer\">\n\t\t\t\t<div class=\"pull-right\">\t\t\t\t\t\n\t\t\t\t\t<a data-dismiss=\"modal\" class=\"btn btn-success\">OK</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div><!-- modal content -->\n\n\t</div><!-- modal dialog -->\n</div><!-- modal -->\n\n--- File: 812 # views/template/preview_pesanNama.php ---\n<div id=\"preview_pesanNama\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content modal-yellow\">\n            <div class=\"modal-header\">\n                <div class=\"modal-title text-center\">\n                    Pratinjau\n                </div>\n            </div>\n\n            <div class=\"modal-body\">\n                <p class=\"text-center\">\n                    <?php echo $message;?>\n                </p>\n            </div>\n\n            <div class=\"modal-footer\">\n                <a href=\"javascript:;\" class=\"btn btn-danger\" data-dismiss=\"modal\"  onclick=\"$('.bio-data').slideDown();return false;\"><?php echo $button2;?></a>\n                <a id=\"doPenanNama\" href=\"javascript:;\" class=\"btn btn-success\"><?php echo $button;?></a>\n            </div>\n\n        </div><!-- modal content -->\n\n    </div><!-- modal dialog -->\n</div><!-- modal -->\n\n--- File: 1030 # views/yayasanbaru/penggabungan/_kuorumSetujuForm.php ---\n<?php\n/** @var $arrModelKuorum array KuorumGabungForm */\n/** @var $indexDetail integer key array model details */\n?>\n<?php foreach($arrModelKuorum as $key => $modelKuorum): ?>\n<div id=\"kuorum-setuju-detail-<?php echo \"{$indexDetail}_{$key}\"; ?>\">\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-12\">\n        <div class=\"wrapper-class\">\n            <?php echo CHtml::activeCheckBox($modelKuorum, \"[$indexDetail][$key]is_setuju\"); ?>\n            <?php echo CHtml::label($modelKuorum->nama, \"KuorumGabungForm_{$indexDetail}_{$key}_is_setuju\", array(\n                'class' => 'control-label',\n                'id' => \"lKuorumGabungForm_{$indexDetail}_{$key}_is_setuju\"\n            ));?>\n        </div>\n    </div>\n</div>\n</div>\n<?php endforeach; ?>\n\n--- File: 1151 # enums/JenisLayananPermohonan.php ---\n<?php\n\nclass JenisLayananPermohonan {\n    const PEMBLOKIRAN = 'PEMBLOKIRAN';\n    const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n    \n    public static function values() {\n        return array(\n            self::PEMBLOKIRAN,\n            self::PEMBUKAAN_BLOKIR\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'PEMBLOKIRAN' => self::PEMBLOKIRAN,\n            'PEMBUKAAN_BLOKIR' => self::PEMBUKAAN_BLOKIR\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n}\n\n\n--- File: 187 # models/FormInputPP29.php ---\n<?php\n\n/**\n * Model untuk form UpdateMasterPerseroanController\n * @property string $nama_perseroan\n * @property string $nomor_transaksi\n */\nclass FormInputPP29 extends CFormModel\n{\n    public $nomor_transaksi;\n    public $nama_perseroan;\n\n    /**\n     * method pengecekan pada saat validate\n     */\n    public function rules()\n    {\n        return array(\n            array('nama_perseroan, nomor_transaksi', 'required'),\n            array('nama_perseroan, nomor_transaksi', 'filter', 'filter' => 'trim'),\n            array('nama_perseroan, nomor_transaksi', 'filter', 'filter' => 'strip_tags'),\n        );\n    }\n    /**\n     * method untuk label\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'nama_perseroan' => 'Nama Perseroan',\n            'nomor_transaksi' => 'Nomor Transaksi',\n        );\n    }\n\n}\n\n\n--- File: 247 # controllers/LogPersyaratanController.php ---\n<?php\n\nclass LogPersyaratanController extends BackendController {\n    public $userId;\n\n    public function beforeAction($action) {\n        $this->userId = CHtml::value(Yii::app(), 'user.id', null);\n        return parent::beforeAction($action);\n    }\n    \n    /**\n     * Halaman Index View Log Persyaratan\n     * \n     * @return View\n     */\n    public function actionIndex() {\n        if($this->userId) {\n            $model = new LogPersyaratan('search');\n            $model->unsetAttributes();\n            if(isset($_GET['LogPersyaratan'])) {\n                $model->attributes = $_GET['LogPersyaratan'];\n            }\n            $userModel = new User();\n            return $this->render('viewerCeklistPersyaratan', array(\n                'model' => $model,\n                'user' => $userModel,\n            ));\n        }\n        throw new CHttpException(404, 'The requested page does not exist.');\n    }\n}\n?>\n\n--- File: 290 # controllers/VoucherController.php ---\n<?php\nClass VoucherController extends Controller{\n\t\n\tpublic function actionCreate(){\n\t\t//echo strlen('20906817877133355828831');exit;\n\t\t$model = New Voucher;\n\t\tif(isset($_POST['Voucher'])){\n\t\t\t$model->attributes = $_POST['Voucher'];\n\t\t\t$model->no_transaksi=\"0\";\n\t\t\tif($model->save()){\n\t\t\t\tYii::app()->user->setFlash('success','Nomor Voucher #'.$_POST['Voucher']['no_voucher'].' telah berhasil disimpan');\n\t\t\t\t$this->redirect(array('voucher/listvoucher'));\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t$this->render('_formVoucher',array('model'=>$model));\n\t}\n\t\n\tpublic function actionListvoucher(){\n\t\t$model = New Voucher(\"search\");\n\t\t$model -> limitRow = 20;\n\t\t$model->unsetAttributes();\n\t\tif(isset($_GET['Voucher'])){\n\t\t\t$model->attributes = $_GET['Voucher'];\n\t\t}\n\t\t$this->render('listVoucher',array('model'=>$model));\n\t}\n\t\n}\n\n\n--- File: 394 # repositories/MaksudTujuanRepository.php ---\n<?php\n\nclass MaksudTujuanRepository {\n    /**\n     * Get maksud dan tujuan data from database based on KBLI codes\n     * @param array $kegiatanIds Array of KBLI codes\n     * @return array Raw database results\n     */\n    public function findByKegiatanIds($kegiatanIds) {\n        if (empty($kegiatanIds)) {\n            return [];\n        }\n\n        return Yii::app()->dbBadanHukum->createCommand()\n            ->select('b.kd_jns_kegiatan as id, a.uraian_maksud as maksud, b.uraian_kegiatan as tujuan')\n            ->from('TBL_JNS_MAKSUD a')\n            ->join('TBL_JNS_KEGIATAN b', 'a.kd_jns_maksud = b.kd_jns_maksud')\n            ->where(array('in', 'b.kd_jns_kegiatan', $kegiatanIds))\n            ->order('b.kd_jns_kegiatan')\n            ->queryAll();\n    }\n}\n\n\n--- File: 826 # views/template/info_submit.php ---\n<?php\n    Yii::app()->clientScript->registerScript('info_submit', \"\n\t\t\t$('#info_submit').modal('show');\n\n\t\t\t$('#info_submit').on('hidden.bs.modal', function(){\n\t\t\t\t$('.list-transaksi').show();\n\t\t\t});\n\n    \");\n?>\n\n<div id=\"info_submit\" class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\" data-backdrop=\"static\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content modal-yellow\">\n            <div class=\"modal-header\">\n                <div class=\"modal-title text-center\">\n                    Perhatian\n                </div>\n            </div>\n\n            <div class=\"modal-body\">\n                <p class=\"text-center\">\n                    <?php echo $message;?>\n                </p>\n            </div>\n\n            <div class=\"modal-footer\">\n                <a href=\"javascript:;\" class=\"btn btn-danger\" data-dismiss=\"modal\">Saya Mengerti!!</a>\n            </div>\n\n        </div><!-- modal content -->\n\n    </div><!-- modal dialog -->\n</div><!-- modal -->\n\n\n--- File: 149 # models/FormFilter.php ---\n<?php\n\n/**\n * Class FormFilter\n * for filter CGridView in Monitoring Perseroan\n */\n\nclass FormFilter extends CFormModel\n{\n    public $nama_perseroan;\n    public $jenis;\n    public $total_modal_dasar;\n    public $total_modal_ditempatkan;\n\n    public function rules()\n    {\n        return array(\n            array('nama_perseroan, jenis, total_modal_dasar, total_modal_ditempatkan', 'safe'),\n        );\n    }\n\n    public function getAttributesForExcel()\n    {\n        return array(\n            'no' => 'No.',\n            'nama_perseroan' => 'Perseroan',\n            'jenis' => 'Jenis Transkasi',\n            'total_modal_dasar' => 'Modal Dasar',\n            'total_modal_ditempatkan' => 'Modal Ditempatkan/Disetor'\n        );\n    }\n\n    public function getAttributesTypeCurrency()\n    {\n        return array(\n            'total_modal_dasar',\n            'total_modal_ditempatkan'\n        );\n    }\n}\n\n\n--- File: 986 # views/yayasanbaru/pembubaran/_syaratRapat.php ---\n<?php\n/** @var $listSyaratRapat array list syarat rapat pembina atau gabungan */\n/** @var $attribute nama attribute (syarat_rapat_pembina atau syarat_rapat_gabungan) */\n$modelSyarat = isset($modelSyarat) ? $modelSyarat : new SyaratForm();\n$index = 0;\n?>\n\n<?php foreach($listSyaratRapat as $key => $rapat): ?>\n<tr class=\"tr_<?php echo $attribute; ?>\">\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td width=\"5px\">\n        <?php echo CHtml::activeCheckBox($modelSyarat, $attribute.\"[$index]\", array('value' => $key, 'id' => \"SyaratForm_{$attribute}_{$index}\", 'uncheckValue' => null)); ?>\n    </td>\n    <td><?php echo $rapat; ?></td>\n</tr>\n<?php $index++; ?>\n<?php endforeach; ?>\n\n--- File: 840 # views/bakumMaps/_maps.php ---\n<div class = \"col-lg-12\" id=\"maps-content\">\n    <div id=\"map-canvas\" style=\"min-height:450px\"></div>\n</div>\n<?php\n\nYii::app()->getClientScript()->registerScriptFile(\n    'https://maps.googleapis.com/maps/api/js?key=AIzaSyDHfHQfeq_shI6GkOTdtjAM-4ioan9MD8Q',\n    CClientScript::POS_END);\n// Yii::app()->getClientScript()->registerScriptFile(\n//     'https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js',\n//     CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/markerwithlabel.js',CClientScript::POS_END);\n\nYii::app()->clientScript->registerScript('_maps_jsnya', file_get_contents(Yii::app()->basePath.'/modules/sabh/views/bakumMaps/bakummaps.js'),CClientScript::POS_END);\n\n--- File: 1014 # views/yayasanbaru/penggabungan/_syaratRapat.php ---\n<?php\n/** @var $listSyaratRapat array list syarat rapat pembina atau gabungan */\n/** @var $attribute nama attribute (syarat_rapat_pembina atau syarat_rapat_gabungan) */\n$modelSyarat = isset($modelSyarat) ? $modelSyarat : new SyaratGabungForm();\n$index = 0;\n?>\n\n<?php foreach($listSyaratRapat as $key => $rapat): ?>\n<tr class=\"tr_<?php echo $attribute; ?>\">\n    <td>&nbsp;</td>\n    <td>&nbsp;</td>\n    <td width=\"5px\">\n        <?php echo CHtml::activeCheckBox($modelSyarat, $attribute.\"[$index]\", array('value' => $key, 'id' => \"SyaratGabungForm_{$attribute}_{$index}\", 'uncheckValue' => null)); ?>\n    </td>\n    <td><?php echo $rapat; ?></td>\n</tr>\n<?php $index++; ?>\n<?php endforeach; ?>\n\n--- File: 312 # controllers/yayasanbaru/PerubahanController.php ---\n<?php\nYii::import('application.modules.sabh.models.yayasanbaru.perubahan.PerubahanNamaForm');\n/**\n * Controller untuk perubahan yayasan\n */\nclass PerubahanController extends Controller\n{\n    /**\n     *\n     */\n    public function actionCariNama()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $response = array('success' => false, 'content' => '');\n            $dataPost = Yii::app()->request->getPost('PerubahanNamaForm');\n            if (!empty($dataPost)) {\n                $model = new PerubahanNamaForm();\n                $model->attributes = $dataPost;\n                if ($model->validate()) {\n                    $response['success'] = true;\n                    $response['content']['nama'] = $model->nama_yayasan_baru;\n                }\n                $content = $this->renderPartial('_namaForm', array(\n                    'modelNama' => $model,\n                ), true);\n                $response['content']['form'] = $content;\n            }\n            echo CJSON::encode($response);\n        }\n    }\n}\n\n\n--- File: 1061 # views/yayasanbaru/pratinjau/_aktaNotarisDetail.php (truncated) ---\n<div class=\"form-group clearfix\">\n    <div class=\"col-lg-2\">\n        <?php echo CHtml::activeLabelEx($model, 'nomor_akta', array(\n            'class' => 'control-label', 'style' => 'font-weight: bold;',\n        )); ?>\n    </div>\n    <div class=\"col-lg-4\">\n        <?php echo CHtml::activeTextField($model, 'nomor_akta', array(\n            'class' => 'form-control', 'disabled' => true,\n        )); ?>\n    </div>\n    <div class=\"col-lg-2\">\n        <?php echo CHtml::activeLabelEx($model, 'tanggal_akta', array(\n            'class' => 'control-label', 'style' => 'font-weight: bold;',\n        )); ?>\n... (truncated)\n\nIMPORTANT: Generate the `name` and `description` for each abstraction in **Bahasa indonesia** language. Do NOT use English for these fields.\n\nAnalyze the codebase context.\nIdentify the top 5-100 core most important abstractions to help those new to the codebase.\n\nFor each abstraction, provide:\n1. A concise `name` (value in Bahasa indonesia).\n2. A beginner-friendly `description` explaining what it is with a simple analogy, in around 100 words (value in Bahasa indonesia).\n3. A list of relevant `file_indices` (integers) using the format `idx # path/comment`.\n\nList of file indices and paths present in the context:\n- 0 # SabhModule.php\n- 1 # models/PerseroanManualForm.php\n- 2 # models/TransaksiProfilSKKMigas.php\n- 3 # models/VerifikasiPerbaikanData.php\n- 4 # models/FormCheckOrder.php\n- 5 # models/FormDataPerseroanLebur.php\n- 6 # models/HistoryOrderNameBubar.php\n- 7 # models/OrderNameHapus.php\n- 8 # models/VerifikasiPerubahanPerseroan.php\n- 9 # models/FormDataPerubahanYayasanAkta.php\n- 10 # models/FormDataPerseroanMerger.php\n- 11 # models/PerseroanPending.php\n- 12 # models/PerseroanVoucher.php\n- 13 # models/VerifikasiPerseroanDetail.php\n- 14 # models/BoMonitoringNotarisPerkumpulan.php\n- 15 # models/AksiTransaksiSabh.php\n- 16 # models/HistoryPesanNama.php\n- 17 # models/VerifikatorPerubahanPerseroan.php\n- 18 # models/PerseroanBlokir.php\n- 19 # models/DashboardFilterForm.php\n- 20 # models/PerseroanLikuidator.php\n- 21 # models/PeleburanPerseroan.php\n- 22 # models/FormDataPerseroanPerubahanStatusSyarat.php\n- 23 # models/Summary.php\n- 24 # models/FormUpdatePerseroan.php\n- 25 # models/OrderNamePerseroan.php\n- 26 # models/TransactionQuestionnaire.php\n- 27 # models/VerifikasiActive.php\n- 28 # models/PerseroanPengurus.php\n- 29 # models/LogSummarySuccess.php\n- 30 # models/BoMonitoring.php\n- 31 # models/BoMonitoringPerseroan.php\n- 32 # models/OrderName.php\n- 33 # models/FormDataPerseroanPerubahanType.php\n- 34 # models/YayasanPembubaran.php\n- 35 # models/PerseroanAktaExp.php\n- 36 # models/FormDataYayasanPendirianPending.php\n- 37 # models/VerifikasiPerubahanPerseroanDetail.php\n- 38 # models/DraftPerseroan.php\n- 39 # models/VerifikasiPerkumpulanDetail.php\n- 40 # models/RiwayatVerifikasi.php\n- 41 # models/FormDataPerseroanAkuisisiAkta.php\n- 42 # models/TransaksiPerbaikanHistory.php\n- 43 # models/BadanHukumPending.php\n- 44 # models/VerifikatorPesanNamaForm.php\n- 45 # models/PendirianPp29.php\n- 46 # models/FormDataPerseroanPemegangSaham.php\n- 47 # models/FormDataPerseroanPTPPerubahan.php\n- 48 # models/PerubahanPerseroanPersetujuanPemegangSaham.php\n- 49 # models/SocialEnterprise.php\n- 50 # models/BoMonitoringNotarisPerseroan.php\n- 51 # models/RestoreVerifikasiPerkumpulan.php\n- 52 # models/HistoryOrderNameRestore.php\n- 53 # models/BakumSetting.php\n- 54 # models/FormDataPerseroanPerubahanStatus.php\n- 55 # models/FormDataManualPerseroan.php\n- 56 # models/FormDataPerseroan.php\n- 57 # models/BoMonitoringNotaris.php\n- 58 # models/OrderNameBlokir.php\n- 59 # models/FormFilterVerifikasiPesanNama.php\n- 60 # models/FormDataManualPerkumpulan.php\n- 61 # models/BoMonitoringYayasan.php\n- 62 # models/Perseroan.php\n- 63 # models/PermohonanBerakhirnyaStatusBadanHukum.php\n- 64 # models/FormDataPerkumpulanPendirianPending.php\n- 65 # models/FormDataEditBadanHukum.php\n- 66 # models/FormDataPerseroanPendirianPending.php\n- 67 # models/BoMonitoringNotarisYayasan.php\n- 68 # models/DuplikatSK_BH.php\n- 69 # models/FormDataPerubahanYayasanSyarat.php\n- 70 # models/BadanHukumFilters.php\n- 71 # models/PerseroanPerorangan.php\n- 72 # models/VerifikasiPesanNama.php\n- 73 # models/FormDataPerseroanPerubahan.php\n- 74 # models/Match.php\n- 75 # models/SkHide.php\n- 76 # models/MasterSkSp.php\n- 77 # models/Kbli.php\n- 78 # models/BeliProfil.php\n- 79 # models/FormPermohonanPeleburan.php\n- 80 # models/LogKoreksi.php\n- 81 # models/PerbaikanModalDasar.php\n- 82 # models/FormDataPerubahanPerkumpulan.php\n- 83 # models/FormPerbaikanModalDasar.php\n- 84 # models/FormDataPerubahanPerkumpulanType.php\n- 85 # models/VerifikatorFlag.php\n- 86 # models/FormDeleteDataDouble.php\n- 87 # models/WilayahSabh.php\n- 88 # models/TransaksiPerbaikanVerifikasi.php\n- 89 # models/KriteriaBo.php\n- 90 # models/BadanHukumAktaLog.php\n- 91 # models/PermohonanPemblokiranPT.php\n- 92 # models/VerifikatorTransaksiPerseroan.php\n- 93 # models/BadanHukumCatatan.php\n- 94 # models/FormDataPerubahanYayasan.php\n- 95 # models/LogPersyaratan.php\n- 96 # models/SummaryPermohonan.php\n- 97 # models/BoMonitoringNotarisDetail.php\n- 98 # models/OrderNameBackup.php\n- 99 # models/SubAksiTransaksi.php\n- 100 # models/KbliPTP.php\n- 101 # models/PerseroanHapus.php\n- 102 # models/PerseroanKegiatan.php\n- 103 # models/LogTransaksiProfil.php\n- 104 # models/Voucher.php\n- 105 # models/FormDataPerseroanPenyesuaian.php\n- 106 # models/DuplikatSKBadanHukum.php\n- 107 # models/BadanHukumAktaHistory.php\n- 108 # models/SummaryAkta.php\n- 109 # models/FormFilterBuktiSetor.php\n- 110 # models/VerifikasiPerseroan.php\n- 111 # models/FormDataPerubahanYayasanType.php\n- 112 # models/AksiTransaksi.php\n- 113 # models/BlokirPemegangSahamSemiPermanent.php\n- 114 # models/FormDataPerseroanPerubahanStatusDetail.php\n- 115 # models/PemegangSahamBlokir.php\n- 116 # models/TransaksiBoHistory.php\n- 117 # models/MergerYayasan.php\n- 118 # models/BadanHukumDownload.php\n- 119 # models/BoMonitoringPerkumpulan.php\n- 120 # models/VerifikatorPerseroan.php\n- 121 # models/PerseroanPembubaran.php\n- 122 # models/KorektorPerseroan.php\n- 123 # models/DclUserLikuidator.php\n- 124 # models/BlokirUserProfile.php\n- 125 # models/BoMonitoringNotarisBadanHukum.php\n- 126 # models/Settings.php\n- 127 # models/BanFullname.php\n- 128 # models/LogSummary.php\n- 129 # models/Banded.php\n- 130 # models/BadanHukumHapus.php\n- 131 # models/FormPerbaikanData.php\n- 132 # models/FormDataPerkumpulan.php\n- 133 # models/FormDataManualYayasan.php\n- 134 # models/FormDataYayasan.php\n- 135 # models/TransaksiBoDetail.php\n- 136 # models/VerifikatorPerkumpulan.php\n- 137 # models/BoDetailForm.php\n- 138 # models/VerifikasiPerkumpulanActive.php\n- 139 # models/FormDataPerubahanPerkumpulanAkta.php\n- 140 # models/VerifikasiPerkumpulanTolak.php\n- 141 # models/BadanHukumBlokir.php\n- 142 # models/FormDataPenyesuaianYayasan.php\n- 143 # models/SKException.php\n- 144 # models/TransaksiBo.php\n- 145 # models/HistoryTransaksiPerkumpulan.php\n- 146 # models/UploadModalDasar.php\n- 147 # models/FormDataPerubahanYayasanDetail.php\n- 148 # models/BadanHukumManualLog.php\n- 149 # models/FormFilter.php\n- 150 # models/DashboardFilterDataForm.php\n- 151 # models/MappingTipeTransaksi.php\n- 152 # models/VerifikatorPerbaikanForm.php\n- 153 # models/HistoryFreeze.php\n- 154 # models/EditPending.php\n- 155 # models/FormDataPerseroanPerubahanSyarat.php\n- 156 # models/FormDataPerseroanPerubahanAkta.php\n- 157 # models/UploadModalDasarLog.php\n- 158 # models/BoBadanHukumForm.php\n- 159 # models/BadanHukum.php\n- 160 # models/VerifikasiOnOffPerbaikan.php\n- 161 # models/OrderDomain.php\n- 162 # models/VerifikasiPerseroanActive.php\n- 163 # models/FormDataPerseroanPenyesuaianType.php\n- 164 # models/FormUpdatePerkumpulan.php\n- 165 # models/PerpanjangOrderName.php\n- 166 # models/BadanHukumAkta.php\n- 167 # models/DuplikatSK.php\n- 168 # models/AllSkHistory.php\n- 169 # models/FormUpdateYayasan.php\n- 170 # models/FormDataPerseroanPerubahanDetail.php\n- 171 # models/BoForm.php\n- 172 # models/PerbaikanData.php\n- 173 # models/FormDataPerseroanMergerAkta.php\n- 174 # models/EditPending_BH.php\n- 175 # models/PerseroanBlokirFilter.php\n- 176 # models/VerifikatorPerkumpulanForm.php\n- 177 # models/SummaryAktaBase.php\n- 178 # models/PerseroanCatatan.php\n- 179 # models/BoPeroranganForm.php\n- 180 # models/FormDataPerseroanPerubahanTipe.php\n- 181 # models/FormDataPerubahanPerkumpulanSyarat.php\n- 182 # models/VerifikatorPerbaikan.php\n- 183 # models/BadanHukumPnri.php\n- 184 # models/FormDataPerseroanPembubaran.php\n- 185 # models/VerifikasiPerkumpulan.php\n- 186 # models/HistoryBadanHukum.php\n- 187 # models/FormInputPP29.php\n- 188 # models/FormDataPerubahanPerkumpulanDetail.php\n- 189 # models/FormDataPerseroanPenyesuaianDetail.php\n- 190 # models/perkumpulan/pembubaran/PembubaranPerkumpulan.php\n- 191 # models/yayasanbaru/KitapImptaForm.php\n- 192 # models/yayasanbaru/OrganYayasanForm.php\n- 193 # models/yayasanbaru/OrganYayasanNonAsingForm.php\n- 194 # models/yayasanbaru/AktaTransaksiForm.php\n- 195 # models/yayasanbaru/OrganYayasanAsingForm.php\n- 196 # models/yayasanbaru/FilterBaseForm.php\n- 197 # models/yayasanbaru/MonitoringPembubaran.php\n- 198 # models/yayasanbaru/TransaksiForm.php\n- 199 # models/yayasanbaru/MonitoringPenggabungan.php\n- 200 # models/yayasanbaru/pembubaran/AlasanForm.php\n- 201 # models/yayasanbaru/pembubaran/LikuidasiForm.php\n- 202 # models/yayasanbaru/pembubaran/SyaratForm.php\n- 203 # models/yayasanbaru/pembubaran/KuorumForm.php\n- 204 # models/yayasanbaru/pembubaran/PembubaranYayasan.php\n- 205 # models/yayasanbaru/pembubaran/InputForm.php\n- 206 # models/yayasanbaru/pembubaran/CariForm.php\n- 207 # models/yayasanbaru/pembubaran/KoranForm.php\n- 208 # models/yayasanbaru/penggabungan/RapatDetailForm.php\n- 209 # models/yayasanbaru/penggabungan/AktaNotarisForm.php\n- 210 # models/yayasanbaru/penggabungan/RapatForm.php\n- 211 # models/yayasanbaru/penggabungan/ItemGabungForm.php\n- 212 # models/yayasanbaru/penggabungan/PenggabunganYayasan.php\n- 213 # models/yayasanbaru/penggabungan/SyaratGabungForm.php\n- 214 # models/yayasanbaru/penggabungan/KoranGabungForm.php\n- 215 # models/yayasanbaru/penggabungan/AktaNotarisPerubahanForm.php\n- 216 # models/yayasanbaru/penggabungan/PilihGabungForm.php\n- 217 # models/yayasanbaru/penggabungan/CariGabungForm.php\n- 218 # models/yayasanbaru/penggabungan/SyaratGabungChildForm.php\n- 219 # models/yayasanbaru/penggabungan/AktaPenggabunganForm.php\n- 220 # models/yayasanbaru/penggabungan/KuorumGabungForm.php\n- 221 # models/yayasanbaru/penggabungan/AktaGabungForm.php\n- 222 # models/yayasanbaru/perubahan/TransaksiPerubahanForm.php\n- 223 # models/yayasanbaru/perubahan/PemberitahuanDataForm.php\n- 224 # models/yayasanbaru/perubahan/PerubahanNamaForm.php\n- 225 # models/yayasanbaru/perubahan/AktaPerubahanForm.php\n- 226 # models/yayasanbaru/perubahan/PemberitahuanAnggaranForm.php\n- 227 # models/yayasanbaru/perubahan/PersetujuanAnggaranForm.php\n- 228 # models/yayasanbaru/perubahan/PilihPerubahanForm.php\n- 229 # error/IError.php\n- 230 # error/YiiNotFoundError.php\n- 231 # controllers/UserLikuidatorController.php\n- 232 # controllers/PembatalanTransaksiController.php\n- 233 # controllers/BlokirYayasanController.php\n- 234 # controllers/HistoryPlainController.php\n- 235 # controllers/ExportBadanHukumController.php\n- 236 # controllers/ToolsDeleteDataDoubleController.php\n- 237 # controllers/BlokirPerkumpulanController.php\n- 238 # controllers/DashboardController.php\n- 239 # controllers/MonitoringPerseroanController.php\n- 240 # controllers/MonitoringBoController.php\n- 241 # controllers/RestoreController.php\n- 242 # controllers/TestUploadAktaController.php\n- 243 # controllers/WilayahSABHController.php\n- 244 # controllers/BoController.php\n- 245 # controllers/VerifikatorPerseroanController.php\n- 246 # controllers/UpdateMasterPerseroanController.php\n- 247 # controllers/LogPersyaratanController.php\n- 248 # controllers/CleansingController.php\n- 249 # controllers/PemegangSahamBlokirController.php\n- 250 # controllers/BadanhukumController.php\n- 251 # controllers/PenghapusanBadanHukumController.php\n- 252 # controllers/MonitoringBuktiSetorController.php\n- 253 # controllers/PerbaikanModalDasarController.php\n- 254 # controllers/PNRIController.php\n- 255 # controllers/UpdateMasterYayasanController.php\n- 256 # controllers/BlokirPerseroanController.php\n- 257 # controllers/ResendEmailController.php\n- 258 # controllers/BadanHukumPendingController.php\n- 259 # controllers/VerifikasiPerubahanPerseroanController.php\n- 260 # controllers/PendirianPp29Controller.php\n- 261 # controllers/PerbaikanDataController.php\n- 262 # controllers/MonitoringBoNotarisController.php\n- 263 # controllers/RestoreVerifikasiTolakController.php\n- 264 # controllers/BakumMapsController.php\n- 265 # controllers/PesanNamaController.php\n- 266 # controllers/BlokirPemegangSahamSemiPermanentController.php\n- 267 # controllers/RestoreAuditTrailController.php\n- 268 # controllers/UpdateMasterPerkumpulanController.php\n- 269 # controllers/UserVerifikatorController.php\n- 270 # controllers/VerifikatorPerbaikanController.php\n- 271 # controllers/PemegangSahamController.php\n- 272 # controllers/PandiController.php\n- 273 # controllers/RestoreVerifikasiController.php\n- 274 # controllers/ToolsSKController.php\n- 275 # controllers/VotingPerubahanPerseroanController.php\n- 276 # controllers/FlaggingController.php\n- 277 # controllers/BandedController.php\n- 278 # controllers/UploadAktaEmptyController.php\n- 279 # controllers/UpdateVoucherTerpakaiController.php\n- 280 # controllers/TransaksiController.php\n- 281 # controllers/ToolHapusMasterController.php\n- 282 # controllers/EditDeletePesanNamaController.php\n- 283 # controllers/GetNomorSkController.php\n- 284 # controllers/ResetStatusUserController.php\n- 285 # controllers/PublicApiBakumController.php\n- 286 # controllers/ReuploadModalDasarController.php\n- 287 # controllers/PerseroanPendingController.php\n- 288 # controllers/TestController.php\n- 289 # controllers/VerifikatorAktifPerkumpulanController.php\n- 290 # controllers/VoucherController.php\n- 291 # controllers/MatchController.php\n- 292 # controllers/UploadModalDasarController.php\n- 293 # controllers/CleansingOrganController.php\n- 294 # controllers/UploadAktaController.php\n- 295 # controllers/VerifikasiPerbaikanDataController.php\n- 296 # controllers/LogController.php\n- 297 # controllers/VerifikatorController.php\n- 298 # controllers/bumdes/TransaksiController.php\n- 299 # controllers/persero/ProfilController.php\n- 300 # controllers/persero/AkuisisiController.php\n- 301 # controllers/persero/PerbaikanSKController.php\n- 302 # controllers/persero/PembubaranController.php\n- 303 # controllers/persero/PeleburanController.php\n- 304 # controllers/persero/MergerController.php\n- 305 # controllers/yayasanbaru/KegiatanController.php\n- 306 # controllers/yayasanbaru/OrganController.php\n- 307 # controllers/yayasanbaru/PilihPerubahanController.php\n- 308 # controllers/yayasanbaru/MonitoringPenggabunganController.php\n- 309 # controllers/yayasanbaru/MonitoringPembubaranController.php\n- 310 # controllers/yayasanbaru/PenggabunganController.php\n- 311 # controllers/yayasanbaru/KedudukanController.php\n- 312 # controllers/yayasanbaru/PerubahanController.php\n- 313 # controllers/yayasanbaru/PembubaranController.php\n- 314 # controllers/yayasanbaru/YayasanBaruController.php\n- 315 # controllers/api/PermohonanBerakhirnyaStatusBadanHukumController.php\n- 316 # controllers/api/UserController.php\n- 317 # controllers/api/PdfController.php\n- 318 # controllers/api/VerifikasiPerubahanPerseroanController.php\n- 319 # controllers/api/PemblokiranController.php\n- 320 # controllers/api/PerseroanTerbatasController.php\n- 321 # controllers/api/PermohonanPemblokiranPTController.php\n- 322 # controllers/api/FileController.php\n- 323 # controllers/api/VoucherController.php\n- 324 # controllers/api/PerkumpulanController.php\n- 325 # controllers/api/BlokirAuthController.php\n- 326 # exception/InternalServerException.php\n- 327 # exception/BaseApiException.php\n- 328 # exception/IExceptionThrower.php\n- 329 # exception/APIExceptionThrower.php\n- 330 # exception/ValidationException.php\n- 331 # exception/AccessDeniedException.php\n- 332 # exception/NotFoundException.php\n- 333 # components/SabhTrait.php\n- 334 # components/JsonHelpers.php\n- 335 # components/GenerateCode.php\n- 336 # components/DashboardBakumHelper.php\n- 337 # components/PajakAPI.php\n- 338 # components/XHtml.php\n- 339 # components/LogSABH.php\n- 340 # components/NoTransaksiSABH.php\n- 341 # components/Countries.php\n- 342 # components/GridSKSP.php\n- 343 # components/DashboardHelper.php\n- 344 # components/compareName.class.php\n- 345 # components/Timer.php\n- 346 # components/UpdateStatusMaster.php\n- 347 # components/ValidasiBannedBehavior.php\n- 348 # components/PemegangSaham.php\n- 349 # components/Mail.php\n- 350 # components/DiffTransaksi.php\n- 351 # components/MyController.php\n- 352 # components/NoTransaksiEncoding.php\n- 353 # components/TemplateEmail.php\n- 354 # components/DclActiveForm.php\n- 355 # components/DashboardPerseroanHelper.php\n- 356 # components/NoSKSABH.php\n- 357 # components/DashboardYayasanHelper.php\n- 358 # components/BillingHelper.php\n- 359 # components/PerseroanMapper.php\n- 360 # components/GridSKSPYP.php\n- 361 # components/BoAPI.php\n- 362 # components/cleansing/CleansingSk.php\n- 363 # components/cleansing/CleansingOrgan.php\n- 364 # components/cleansing/CleansingModal.php\n- 365 # components/cleansing/MigrateModal.php\n- 366 # components/cleansing/DatabaseHelpers.php\n- 367 # components/widgets/DclDatepicker.php\n- 368 # components/widgets/DclPanel.php\n- 369 # components/widgets/DclFlash.php\n- 370 # components/widgets/DclModal.php\n- 371 # components/widgets/ChecklistVoucherPTP.php\n- 372 # components/widgets/DclInputPrice.php\n- 373 # components/widgets/DclSearch.php\n- 374 # components/widgets/DclNotarisPengganti.php\n- 375 # components/widgets/DclGetNotaris.php\n- 376 # components/widgets/DclSelect2.php\n- 377 # components/widgets/ChecklistVoucher.php\n- 378 # components/widgets/views/checklistVoucher/_form.php\n- 379 # components/validators/validateBo.php\n- 380 # components/validators/filterNumber.php\n- 381 # components/validators/voucherValidator.php\n- 382 # components/validators/voucherYayasan.php\n- 383 # components/behaviors/YayasanFormBehavior.php\n- 384 # components/enum/JenisTransaksiEnum.php\n- 385 # components/enum/BaseEnum.php\n- 386 # repositories/IUserRepository.php\n- 387 # repositories/DokumenPerubahanRepository.php\n- 388 # repositories/NotarisRepository.php\n- 389 # repositories/NotificationRepository.php\n- 390 # repositories/BeneficialOwnerRepository.php\n- 391 # repositories/VerifikatorPerubahanPerseroanRepository.php\n- 392 # repositories/UserRepository.php\n- 393 # repositories/VerifikasiPerubahanPerseroanRepository.php\n- 394 # repositories/MaksudTujuanRepository.php\n- 395 # repositories/perseroan/PemegangSahamRepository.php\n- 396 # repositories/perseroan/VerifikasiRepository.php\n- 397 # repositories/perseroan/RiwayatVerifikasiRepository.php\n- 398 # repositories/perseroan/TransaksiPerseroanRepository.php\n- 399 # repositories/perseroan/VerifikasiPerubahanRepository.php\n- 400 # response/IResponse.php\n- 401 # response/APIResponse.php\n- 402 # views/bo/popupCreate.php\n- 403 # views/bo/view.php\n- 404 # views/bo/_form.php\n- 405 # views/bo/_formPerorangan.php\n- 406 # views/bo/_detail.php\n- 407 # views/bo/_edit-admin.php\n- 408 # views/bo/_details.php\n- 409 # views/bo/_formButton.php\n- 410 # views/bo/_pengurus.php\n- 411 # views/bo/_create.php\n- 412 # views/bo/popupUpdate.php\n- 413 # views/bo/_disclaimer.php\n- 414 # views/bo/_formBadanHukum.php\n- 415 # views/bo/index.php\n- 416 # views/bo/monitoring/_tipeLengkap.php\n- 417 # views/bo/monitoring/_detailPerseroan.php\n- 418 # views/bo/monitoring/_detailYayasan.php\n- 419 # views/bo/monitoring/_filter.php\n- 420 # views/bo/monitoring/_pdfPerkumpulan.php\n- 421 # views/bo/monitoring/_filterKriteria.php\n- 422 # views/bo/monitoring/_countTipe.php\n- 423 # views/bo/monitoring/_tipeTidakLengkap.php\n- 424 # views/bo/monitoring/_detailPerkumpulan.php\n- 425 # views/bo/monitoring/_perkumpulan.php\n- 426 # views/bo/monitoring/_pdf.php\n- 427 # views/bo/monitoring/index.php\n- 428 # views/bo/monitoring/_pdfYayasan.php\n- 429 # views/bo/monitoring/history.php\n- 430 # views/bo/monitoring/_yayasan.php\n- 431 # views/bo/monitoring/_perseroan.php\n- 432 # views/bo/monitoring/_pdfPerseroan.php\n- 433 # views/bo/monitoring-notaris/_detailPerseroan.php\n- 434 # views/bo/monitoring-notaris/_detailYayasan.php\n- 435 # views/bo/monitoring-notaris/_filter.php\n- 436 # views/bo/monitoring-notaris/_countTipe.php\n- 437 # views/bo/monitoring-notaris/_badanHukum.php\n- 438 # views/bo/monitoring-notaris/detail.php\n- 439 # views/bo/monitoring-notaris/_detailPerkumpulan.php\n- 440 # views/bo/monitoring-notaris/_perkumpulan.php\n- 441 # views/bo/monitoring-notaris/_chartPerseroan.php\n- 442 # views/bo/monitoring-notaris/_pdf.php\n- 443 # views/bo/monitoring-notaris/_chartYayasan.php\n- 444 # views/bo/monitoring-notaris/index.php\n- 445 # views/bo/monitoring-notaris/_yayasan.php\n- 446 # views/bo/monitoring-notaris/_perseroan.php\n- 447 # views/bo/monitoring-notaris/_chartPerkumpulan.php\n- 448 # views/cleansing/listErrorData.php\n- 449 # views/cleansing/listChangeSk.php\n- 450 # views/cleansing/splitallsk.php\n- 451 # views/cleansing/reportErrorStatusSk.php\n- 452 # views/cleansing/detailHistoryCetakSk.php\n- 453 # views/cleansing/popDiff.php\n- 454 # views/cleansing/listSk.php\n- 455 # views/updateVoucherTerpakai/cetak.php\n- 456 # views/updateVoucherTerpakai/index.php\n- 457 # views/userVerifikator/form.php\n- 458 # views/bumdes/template_certificate_pemberitahuan_perubahan.php\n- 459 # views/bumdes/list-transaksi.php\n- 460 # views/bumdes/template_certificate.php\n- 461 # views/bumdes/viewQRCode_404.php\n- 462 # views/bumdes/detail.php\n- 463 # views/bumdes/viewQRCode.php\n- 464 # views/bumdes/list.php\n- 465 # views/restore/pesanNama/index.php\n- 466 # views/restore/pesanNama/history.php\n- 467 # views/restore/pesanNama/_listHapus.php\n- 468 # views/restore/pesanNama/_search.php\n- 469 # views/restore/pesanNama/_listSetuju.php\n- 470 # views/pemegangSaham/voting_status.php\n- 471 # views/components/status-workflow.php\n- 472 # views/history/company_profile.php\n- 473 # views/history/details_pending.php\n- 474 # views/history/listDokumen.php\n- 475 # views/history/_formPendiriPengurus.php\n- 476 # views/history/detail_bh.php\n- 477 # views/history/korektor_pendingbh.php\n- 478 # views/history/list_pending.php\n- 479 # views/history/_edit_data_kbli_lama.php\n- 480 # views/history/akta_exp.php\n- 481 # views/history/historydownloadprofil.php\n- 482 # views/history/detail_pending.php\n- 483 # views/history/korektor_pending.php\n- 484 # views/history/detail_transaksi.php\n- 485 # views/history/_form_edit.php\n- 486 # views/history/penyesuaian_0.php\n- 487 # views/history/searchPengurus.php\n- 488 # views/history/pesan.php\n- 489 # views/history/manual-log-bh-all.php\n- 490 # views/history/edit_penyesuaian_bh.php\n- 491 # views/history/list_korektor.php\n- 492 # views/history/list_pending_bh.php\n- 493 # views/history/list_transaksi_YP.php\n- 494 # views/history/list_perkumpulan_ditolak.php\n- 495 # views/history/manual_list.php\n- 496 # views/history/detail.php\n- 497 # views/history/detail_manual.php\n- 498 # views/history/edit_bh.php\n- 499 # views/history/viewTransaksi.php\n- 500 # views/history/list_transaksi_perk_reject.php\n- 501 # views/history/ganti_nama.php\n- 502 # views/history/list_transaksi.php\n- 503 # views/history/detaildownloadprofil.php\n- 504 # views/history/listdownloadprofil.php\n- 505 # views/history/list.php\n- 506 # views/history/_edit_data_kbli_baru.php\n- 507 # views/history/list_korektorbh.php\n- 508 # views/history/manual-log-bh.php\n- 509 # views/history/edit_perkumpulan.php\n- 510 # views/history/detail_history_transaksi.php\n- 511 # views/history/transaksi.php\n- 512 # views/blokirPerkumpulan/riwayat.php\n- 513 # views/blokirPerkumpulan/daftarPermohonan.php\n- 514 # views/blokirPerkumpulan/detail/_riwayatVerifikasi.php\n- 515 # views/blokirPerkumpulan/detail/_dokumenPersyaratan.php\n- 516 # views/blokirPerkumpulan/detail/_pemohonData.php\n- 517 # views/blokirPerkumpulan/detail/_suratJawaban.php\n- 518 # views/blokirPerkumpulan/detail/_konsepSuratJawaban.php\n- 519 # views/blokirPerkumpulan/detail/_verifikasi.php\n- 520 # views/blokirPerkumpulan/detail/_permohonanData.php\n- 521 # views/blokirPerkumpulan/detail/index.php\n- 522 # views/blokirPerkumpulan/_common/_constants.php\n- 523 # views/persero/merger/_formMerger.php\n- 524 # views/persero/merger/_formMergerSyarat.php\n- 525 # views/persero/merger/_formMergerAkta.php\n- 526 # views/persero/merger/_formMergerList.php\n- 527 # views/persero/merger/_pratinjauMergerOnly.php\n- 528 # views/persero/merger/_formMergerDetailModal.php\n- 529 # views/persero/merger/_form_notaris_pengganti.php\n- 530 # views/persero/merger/_formListPengurus.php\n- 531 # views/persero/merger/_formMergerPilih.php\n- 532 # views/persero/merger/_formMergerTipe.php\n- 533 # views/persero/profil/pdf_allpage_bakum.php\n- 534 # views/persero/profil/profil.php\n- 535 # views/persero/profil/tagihan.php\n- 536 # views/persero/profil/verifikasi.php\n- 537 # views/persero/profil/index.php\n- 538 # views/persero/profil/view_pdf.php\n- 539 # views/persero/profil/cari.php\n- 540 # views/persero/profil/view_pdf_bakum.php\n- 541 # views/persero/profil/pdf_allpage.php\n- 542 # views/persero/perbaikanSK/template.php\n- 543 # views/persero/perbaikanSK/template_pdf.php\n- 544 # views/persero/perbaikanSK/index.php\n- 545 # views/persero/pembubaran/_formPembubaranDetail.php\n- 546 # views/persero/pembubaran/_formPembubaranLikuidator.php\n- 547 # views/persero/pembubaran/expired.php\n- 548 # views/persero/pembubaran/_formPembubaranSyarat.php\n- 549 # views/persero/pembubaran/index.php\n- 550 # views/persero/pembubaran/_formListPengurus.php\n- 551 # views/persero/pembubaran/list.php\n- 552 # views/persero/pembubaran/_formPembubaran.php\n- 553 # views/persero/pembubaran/_formPembubaranAkta.php\n- 554 # views/persero/peleburan/_form_permohonan_peleburan.php\n- 555 # views/persero/peleburan/_formLeburPengisian.php\n- 556 # views/persero/peleburan/_form_peleburan.php\n- 557 # views/persero/peleburan/_form_notaris_pengganti.php\n- 558 # views/persero/peleburan/_formPersetujuanLebur.php\n- 559 # views/persero/peleburan/_form_lebur.php\n- 560 # views/persero/peleburan/index.php\n- 561 # views/persero/peleburan/_formListPengurus.php\n- 562 # views/persero/akuisisi/_formAkuisisi.php\n- 563 # views/persero/akuisisi/_formAkuisisiSyarat.php\n- 564 # views/persero/akuisisi/_formAkuisisiList.php\n- 565 # views/persero/akuisisi/_form_notaris_pengganti.php\n- 566 # views/persero/akuisisi/_formListPengurus.php\n- 567 # views/persero/akuisisi/_formAkuisisiAkta.php\n- 568 # views/persero/akuisisi/_formPengisianPerseroAkuisisiModal.php\n- 569 # views/persero/akuisisi/_formAkuisisiSyarat_old.php\n- 570 # views/resetStatusUser/index.php\n- 571 # views/perbaikanModalDasar/_formTotal.php\n- 572 # views/perbaikanModalDasar/_form.php\n- 573 # views/perbaikanModalDasar/_list.php\n- 574 # views/perbaikanModalDasar/_modal.php\n- 575 # views/perbaikanModalDasar/create.php\n- 576 # views/perbaikanModalDasar/history.php\n- 577 # views/toolsSK/_formUpdateSK.php\n- 578 # views/toolsSK/skBakum.php\n- 579 # views/toolsSK/skPerseroan.php\n- 580 # views/perkumpulan/_formPerubahanListPengurus.php\n- 581 # views/perkumpulan/cetaktagihan.php\n- 582 # views/perkumpulan/_formPerubahanSyaratPerkumpulan.php\n- 583 # views/perkumpulan/_formPerubahanListPerkumpulan.php\n- 584 # views/perkumpulan/manual.php\n- 585 # views/perkumpulan/_formPendiriPerkumpulan.php\n- 586 # views/perkumpulan/_formPersetujuanPerkumpulan.php\n- 587 # views/perkumpulan/detail_transaksi.php\n- 588 # views/perkumpulan/listordernamecompare.php\n- 589 # views/perkumpulan/_formPerubahanAktaPerkumpulan.php\n- 590 # views/perkumpulan/update_ordername_perkumpulan.php\n- 591 # views/perkumpulan/_formPendirianPerkumpulan.php\n- 592 # views/perkumpulan/manualPerubahanType.php\n- 593 # views/perkumpulan/detail_transaksi_tolak.php\n- 594 # views/perkumpulan/form_questionnaire.php\n- 595 # views/perkumpulan/listTransaksi.php\n- 596 # views/perkumpulan/_formKodeVoucher.php\n- 597 # views/perkumpulan/viewQRCode.php\n- 598 # views/perkumpulan/_konfirmasiSukses.php\n- 599 # views/perkumpulan/manualPerubahan.php\n- 600 # views/perkumpulan/_isiKabupaten.php\n- 601 # views/perkumpulan/_formPendirianPendingPerkumpulan.php\n- 602 # views/perkumpulan/viewTransaksi.php\n- 603 # views/perkumpulan/list_transaksi_ditolak.php\n- 604 # views/perkumpulan/_formPengurusPerkumpulanManual.php\n- 605 # views/perkumpulan/viewTransaksiPending.php\n- 606 # views/perkumpulan/lihatpermohonan.php\n- 607 # views/perkumpulan/_formPerubahanPerkumpulanDetail.php\n- 608 # views/perkumpulan/_formPerubahan.php\n- 609 # views/perkumpulan/previewPerkumpulan.php\n- 610 # views/perkumpulan/_formEditPerkumpulan.php\n- 611 # views/perkumpulan/listdelete.php\n- 612 # views/perkumpulan/detail_transaksi_button.php\n- 613 # views/perkumpulan/filterUploadAkta.php\n- 614 # views/perkumpulan/_formPengisianPerkumpulan.php\n- 615 # views/perkumpulan/_formPengurusPerkumpulan.php\n- 616 # views/perkumpulan/manualPerubahanDetail.php\n- 617 # views/perkumpulan/listordername.php\n- 618 # views/perkumpulan/pdf_allpage.php\n- 619 # views/perkumpulan/document/view_perkumpulan.php\n- 620 # views/preview/_preview_yayasan.php\n- 621 # views/preview/_preview_history_perkumpulan.php\n- 622 # views/preview/_preview_perkumpulan.php\n- 623 # views/preview/_rups.php\n- 624 # views/perbaikanData/detailPerbaikan.php\n- 625 # views/perbaikanData/_statusStaff.php\n- 626 # views/perbaikanData/uploadDataDiperbaiki.php\n- 627 # views/perbaikanData/listDaftarPerbaikan.php\n- 628 # views/perbaikanData/suratPernyataan.php\n- 629 # views/perbaikanData/index.php\n- 630 # views/perbaikanData/_statusKasi.php\n- 631 # views/perbaikanData/listAllPerbaikan.php\n- 632 # views/perbaikanData/_statusPemohon.php\n- 633 # views/perbaikanData/suratPermohonan.php\n- 634 # views/perbaikanData/checklistSuratPernyataan.php\n- 635 # views/restoreVerifikasiTolak/_kasi.php\n- 636 # views/restoreVerifikasiTolak/_staff.php\n- 637 # views/restoreVerifikasiTolak/_tab.php\n- 638 # views/restoreVerifikasiTolak/index.php\n- 639 # views/verifikatorAktifPerkumpulan/_form.php\n- 640 # views/verifikatorAktifPerkumpulan/monitoring_list.php\n- 641 # views/verifikatorAktifPerkumpulan/riwayat_list.php\n- 642 # views/verifikatorAktifPerkumpulan/index.php\n- 643 # views/verifikatorAktifPerkumpulan/create.php\n- 644 # views/restoreVerifikasi/historyRestore.php\n- 645 # views/restoreVerifikasi/index.php\n- 646 # views/_common/_formTemplate.php\n- 647 # views/_common/dialog.php\n- 648 # views/_common/styles.php\n- 649 # views/_common/_ckeditorAddon.php\n- 650 # views/_common/loading.php\n- 651 # views/userLikuidator/_form.php\n- 652 # views/userLikuidator/index.php\n- 653 # views/verifikatorPerbaikan/perbaikan/monitoring.php\n- 654 # views/verifikatorPerbaikan/perbaikan/_formActive.php\n- 655 # views/verifikatorPerbaikan/perbaikan/active.php\n- 656 # views/verifikatorPerbaikan/perbaikan/nonactive.php\n- 657 # views/verifikatorPerbaikan/perbaikan/_listVerifikator.php\n- 658 # views/verifikatorPerbaikan/perbaikan/index.php\n- 659 # views/verifikatorPerbaikan/perbaikan/history.php\n- 660 # views/verifikatorPerbaikan/perbaikan/_listMonitoring.php\n- 661 # views/verifikatorPerbaikan/perbaikan/_listHistory.php\n- 662 # views/verifikatorPerbaikan/perbaikan/_formNonactive.php\n- 663 # views/flagging/persero.php\n- 664 # views/flagging/badanhukum.php\n- 665 # views/flagging/hapus_transaksi.php\n- 666 # views/flagging/index.php\n- 667 # views/editDeletePesanNama/_form.php\n- 668 # views/editDeletePesanNama/index.php\n- 669 # views/editDeletePesanNama/edit.php\n- 670 # views/monitoringBuktiSetor/index.php\n- 671 # views/toolHapusMaster/index.php\n- 672 # views/pNRI/index.php\n- 673 # views/verifikatorPerseroan/verifikasi_detail.php\n- 674 # views/verifikatorPerseroan/index.php\n- 675 # views/verifikatorPerseroan/berakhirnya_status.php\n- 676 # views/pemegangSahamBlokir/listPerseroan.php\n- 677 # views/pemegangSahamBlokir/_formBlokirPemegangSaham.php\n- 678 # views/pemegangSahamBlokir/detailPerseroan.php\n- 679 # views/pemegangSahamBlokir/listBlockirOrgan.php\n- 680 # views/pemegangSahamBlokir/_itemPengurus.php\n- 681 # views/pemegangSahamBlokir/blokir.php\n- 682 # views/pemegangSahamBlokir/listPengurus.php\n- 683 # views/pemegangSahamBlokir/detailPengurus.php\n- 684 # views/transaksi/detailPerseroan.php\n- 685 # views/transaksi/list_verifikasi.php\n- 686 # views/transaksi/_formVerifikasi.php\n- 687 # views/transaksi/list.php\n- 688 # views/transaksi/_formKoreksi.php\n- 689 # views/voucher/_formVoucher.php\n- 690 # views/voucher/listVoucher.php\n- 691 # views/uploadModalDasar/listUploadBuktiSetor.php\n- 692 # views/uploadModalDasar/upload.php\n- 693 # views/updateMasterPerkumpulan/index.php\n- 694 # views/pendirianPp29/index.php\n- 695 # views/getNomorSk/get_nomor_sk.php\n- 696 # views/perseroan/_formPemegangSaham.php\n- 697 # views/perseroan/_formPengisianPerseroanModal.php\n- 698 # views/perseroan/_formPerubahanDetailKegiatanDb2.php\n- 699 # views/perseroan/_formPerubahanAkta.php\n- 700 # views/perseroan/_formPerubahanListPengurus.php\n- 701 # views/perseroan/_formPendirianPerseroan.php\n- 702 # views/perseroan/detaildelete.php\n- 703 # views/perseroan/_formPendirianPendingPerseroan.php\n- 704 # views/perseroan/_formSocialEnterpriseModal.php\n- 705 # views/perseroan/_formPerubahanAktaPTP.php\n- 706 # views/perseroan/_formSocialEnterpriseFounderModal.php\n- 707 # views/perseroan/viewTransaksi_form.php\n- 708 # views/perseroan/_formPengisianPerseroan.php\n- 709 # views/perseroan/_formblockirpassword.php\n- 710 # views/perseroan/_formPenyesuaianSyarat.php\n- 711 # views/perseroan/manual.php\n- 712 # views/perseroan/detail_transaksi.php\n- 713 # views/perseroan/suratPernyataanPerubahan.php\n- 714 # views/perseroan/_formPerubahanStatus.php\n- 715 # views/perseroan/_formDaftarPemegangSaham.php\n- 716 # views/perseroan/viewQRCode_404.php\n- 717 # views/perseroan/listordernamecompare.php\n- 718 # views/perseroan/listblockir.php\n- 719 # views/perseroan/_formPerubahanStatusDetail.php\n- 720 # views/perseroan/_formPerubahanListPengurusPTP.php\n- 721 # views/perseroan/previewPerubahanPerseroan.php\n- 722 # views/perseroan/_formPerubahanPTP.php\n- 723 # views/perseroan/_formblokir.php\n- 724 # views/perseroan/_formPenyesuaian.php\n- 725 # views/perseroan/email_block.php\n- 726 # views/perseroan/perbaikan-akta.php\n- 727 # views/perseroan/form_questionnaire.php\n- 728 # views/perseroan/_formListMaksudTujuan.php\n- 729 # views/perseroan/_isiKabErr.php\n- 730 # views/perseroan/listTransaksi.php\n- 731 # views/perseroan/_formModaldiTempatkan.php\n- 732 # views/perseroan/detail_monitoring.php\n- 733 # views/perseroan/_formPerubahanSyaratPTP.php\n- 734 # views/perseroan/_pratinjauPerubahanStatus.php\n- 735 # views/perseroan/_formPerubahanListPTP.php\n- 736 # views/perseroan/_formKodeVoucher.php\n- 737 # views/perseroan/viewQRCode.php\n- 738 # views/perseroan/_konfirmasiSukses.php\n- 739 # views/perseroan/_formPerubahanList.php\n- 740 # views/perseroan/suratPernyataan.php\n- 741 # views/perseroan/_formPenyesuaianAkta.php\n- 742 # views/perseroan/_isiKabupaten.php\n- 743 # views/perseroan/_formPersetujuanPerseroan.php\n- 744 # views/perseroan/monitoring_ordername.php\n- 745 # views/perseroan/previewPerseroan.php\n- 746 # views/perseroan/viewTransaksi.php\n- 747 # views/perseroan/_formPerubahanStatusSyarat.php\n- 748 # views/perseroan/_formPerubahanSyarat.php\n- 749 # views/perseroan/_form_notaris_pengganti.php\n- 750 # views/perseroan/_formKeberatanKreditorPembatalan.php\n- 751 # views/perseroan/daftarpt.php\n- 752 # views/perseroan/_formKeberatanKreditor.php\n- 753 # views/perseroan/riwayat_blokir.php\n- 754 # views/perseroan/_formPerubahan.php\n- 755 # views/perseroan/cetakTagihanPendirian.php\n- 756 # views/perseroan/listdelete.php\n- 757 # views/perseroan/_maksudTujuanPendirian2in1.php\n- 758 # views/perseroan/_formModalSaham.php\n- 759 # views/perseroan/detail_transaksi_button.php\n- 760 # views/perseroan/filterUploadAkta.php\n- 761 # views/perseroan/_formPenyesuaianList.php\n- 762 # views/perseroan/toolPenyesuaian.php\n- 763 # views/perseroan/manualPerubahanDetail.php\n- 764 # views/perseroan/listordername.php\n- 765 # views/perseroan/pdf_allpage.php\n- 766 # views/default/onprogress.php\n- 767 # views/default/index.php\n- 768 # views/yayasan/_formPerubahanAkta.php\n- 769 # views/yayasan/_formPerubahanListPengurus.php\n- 770 # views/yayasan/previewYayasanPenyesuaian.php\n- 771 # views/yayasan/template.php\n- 772 # views/yayasan/cetaktagihan.php\n- 773 # views/yayasan/listdisactivename.php\n- 774 # views/yayasan/manual.php\n- 775 # views/yayasan/detail_transaksi.php\n- 776 # views/yayasan/template_pdf.php\n- 777 # views/yayasan/manualMaksudTujuan.php\n- 778 # views/yayasan/listordernamecompare.php\n- 779 # views/yayasan/masteryayasan.php\n- 780 # views/yayasan/_formPersetujuanYayasan.php\n- 781 # views/yayasan/_formAktaPenyesuaian.php\n- 782 # views/yayasan/_formPengurusYayasan.php\n- 783 # views/yayasan/listButtonManual.php\n- 784 # views/yayasan/form_questionnaire.php\n- 785 # views/yayasan/masteryayasan_detail.php\n- 786 # views/yayasan/listTransaksi.php\n- 787 # views/yayasan/_formPendirianYayasan.php\n- 788 # views/yayasan/_formKodeVoucher.php\n- 789 # views/yayasan/masteryayasan_delete.php\n- 790 # views/yayasan/viewQRCode.php\n- 791 # views/yayasan/_konfirmasiSukses.php\n- 792 # views/yayasan/_formPerubahanList.php\n- 793 # views/yayasan/manualPerubahan.php\n- 794 # views/yayasan/viewTransaksi.php\n- 795 # views/yayasan/_formPerubahanSyarat.php\n- 796 # views/yayasan/viewTransaksiPending.php\n- 797 # views/yayasan/update_ordername_yayasan.php\n- 798 # views/yayasan/_formDaftarHadirRapat.php\n- 799 # views/yayasan/masteryayasan_edit.php\n- 800 # views/yayasan/lihatpermohonan.php\n- 801 # views/yayasan/_formPerubahan.php\n- 802 # views/yayasan/_formPendiriYayasan.php\n- 803 # views/yayasan/listdelete.php\n- 804 # views/yayasan/_formPendirianPendingYayasan.php\n- 805 # views/yayasan/manualPerubahanDetail.php\n- 806 # views/yayasan/_formPenyesuaianYayasan.php\n- 807 # views/yayasan/previewYayasan.php\n- 808 # views/yayasan/listordername.php\n- 809 # views/yayasan/pdf_allpage.php\n- 810 # views/yayasan/document/view_yayasan.php\n- 811 # views/template/confirm_undang3_jabatan_notaris.php\n- 812 # views/template/preview_pesanNama.php\n- 813 # views/template/loader.php\n- 814 # views/template/confirm_undang2_jabatan_notaris.php\n- 815 # views/template/alert_bkpm.php\n- 816 # views/template/confirm.php\n- 817 # views/template/confirm_submit.php\n- 818 # views/template/alert.php\n- 819 # views/template/popInfoPesanNama.php\n- 820 # views/template/confirm_undang4_jabatan_notaris.php\n- 821 # views/template/alert_before_pendirian.php\n- 822 # views/template/popupAkta.php\n- 823 # views/template/_content.php\n- 824 # views/template/confirm_submit_pratinjau.php\n- 825 # views/template/alert_close_browser.php\n- 826 # views/template/info_submit.php\n- 827 # views/perseroanPending/import_csv.php\n- 828 # views/perseroanPending/view.php\n- 829 # views/perseroanPending/_form.php\n- 830 # views/perseroanPending/update.php\n- 831 # views/perseroanPending/index.php\n- 832 # views/perseroanPending/create.php\n- 833 # views/restoreAuditTrail/restore.php\n- 834 # views/restoreAuditTrail/_form_restore.php\n- 835 # views/restoreAuditTrail/_audit_transaksi.php\n- 836 # views/restoreAuditTrail/index.php\n- 837 # views/banded/_form.php\n- 838 # views/banded/update.php\n- 839 # views/banded/index.php\n- 840 # views/bakumMaps/_maps.php\n- 841 # views/bakumMaps/index.php\n- 842 # views/bakumMaps/_search_form.php\n- 843 # views/toolsDeleteDataDouble/index.php\n- 844 # views/log/formPesanNama.php\n- 845 # views/monitoringPerseroan/_detailModalDisetorkan.php\n- 846 # views/monitoringPerseroan/_detailModalDitempatkan.php\n- 847 # views/monitoringPerseroan/_detailPengurusPemegangSaham.php\n- 848 # views/monitoringPerseroan/detail.php\n- 849 # views/monitoringPerseroan/_detailDownload.php\n- 850 # views/monitoringPerseroan/_detailMaksudTujuan.php\n- 851 # views/monitoringPerseroan/_viewDetail.php\n- 852 # views/monitoringPerseroan/index.php\n- 853 # views/monitoringPerseroan/_detailModalDasar.php\n- 854 # views/verifikasiPerubahanPerseroan/daftar.php\n- 855 # views/verifikasiPerubahanPerseroan/riwayat.php\n- 856 # views/verifikasiPerubahanPerseroan/_email_voting_template.php\n- 857 # views/verifikasiPerubahanPerseroan/_email_verifikasi_template.php\n- 858 # views/verifikasiPerubahanPerseroan/_email_template.php\n- 859 # views/verifikasiPerubahanPerseroan/_common/constants.php\n- 860 # views/verifikator/detail_transaksi.php\n- 861 # views/verifikator/_notifSetuju.php\n- 862 # views/verifikator/_notifTolak.php\n- 863 # views/verifikator/verif_transaksi.php\n- 864 # views/verifikator/verifikasiPerkumpulan.php\n- 865 # views/verifikator/daftarTransaksiVerifikasi.php\n- 866 # views/verifikator/pesanNama/monitoring.php\n- 867 # views/verifikator/pesanNama/_form.php\n- 868 # views/verifikator/pesanNama/_list.php\n- 869 # views/verifikator/pesanNama/_pMonitoring.php\n- 870 # views/verifikator/pesanNama/update.php\n- 871 # views/verifikator/pesanNama/_listVerifikator.php\n- 872 # views/verifikator/pesanNama/_formUpdate.php\n- 873 # views/verifikator/pesanNama/index.php\n- 874 # views/verifikator/pesanNama/create.php\n- 875 # views/verifikator/pesanNama/history.php\n- 876 # views/logPersyaratan/viewerCeklistPersyaratan.php\n- 877 # views/pesanNama/popSetuju.php\n- 878 # views/pesanNama/listKoreksi.php\n- 879 # views/pesanNama/listVerifikasi.php\n- 880 # views/pesanNama/popAlasan.php\n- 881 # views/badan_hukum/pesan_domain.php\n- 882 # views/badan_hukum/ajax_pesanNama.php\n- 883 # views/badan_hukum/chekpesannama.php\n- 884 # views/badan_hukum/_formUploadAkta.php\n- 885 # views/badan_hukum/successPesan.php\n- 886 # views/badan_hukum/p_success_pesan_nama.php\n- 887 # views/badan_hukum/_formUploadAktaGabung.php\n- 888 # views/badan_hukum/form-banned.php\n- 889 # views/badan_hukum/perpanjangSuccess.php\n- 890 # views/badan_hukum/pesannama_peleburan.php\n- 891 # views/badan_hukum/_formPendirianYayasan.php\n- 892 # views/badan_hukum/listDataPesanNama.php\n- 893 # views/badan_hukum/test_formUploadAkta.php\n- 894 # views/badan_hukum/perpanjang_pesannama.php\n- 895 # views/badan_hukum/perbaikan_sk.php\n- 896 # views/badan_hukum/index.php\n- 897 # views/badan_hukum/_form_upload_syarat.php\n- 898 # views/badan_hukum/list-banned.php\n- 899 # views/badan_hukum/pesannama.php\n- 900 # views/reuploadModalDasar/index2.php\n- 901 # views/reuploadModalDasar/uploadForm.php\n- 902 # views/reuploadModalDasar/index.php\n- 903 # views/cleansingOrgan/errororgan.php\n- 904 # views/cleansingOrgan/cleansing.php\n- 905 # views/cleansingOrgan/index.php\n- 906 # views/cleansingOrgan/migrateOrgan.php\n- 907 # views/blokirPerseroan/riwayat.php\n- 908 # views/blokirPerseroan/daftarPermohonan.php\n- 909 # views/blokirPerseroan/register.php\n- 910 # views/blokirPerseroan/login.php\n- 911 # views/blokirPerseroan/daftarVerifikasi.php\n- 912 # views/blokirPerseroan/detail/_verifikasiDirekturBadanUsaha.php\n- 913 # views/blokirPerseroan/detail/_riwayatVerifikasi.php\n- 914 # views/blokirPerseroan/detail/_dokumenPersyaratan.php\n- 915 # views/blokirPerseroan/detail/_pemohonData.php\n- 916 # views/blokirPerseroan/detail/_suratJawaban.php\n- 917 # views/blokirPerseroan/detail/_konsepSuratJawaban.php\n- 918 # views/blokirPerseroan/detail/_verifikasiDirekturPerdata.php\n- 919 # views/blokirPerseroan/detail/_verifikasi.php\n- 920 # views/blokirPerseroan/detail/_permohonanData.php\n- 921 # views/blokirPerseroan/detail/index.php\n- 922 # views/blokirPerseroan/detail/_verifikasiVerifikator.php\n- 923 # views/blokirPerseroan/_common/_constants.php\n- 924 # views/blokirPerseroan/pratinjau/_verifikasiDirekturBadanUsaha.php\n- 925 # views/blokirPerseroan/pratinjau/_suratTemplate.php\n- 926 # views/blokirPerseroan/pratinjau/_verifikasiDirekturPerdata.php\n- 927 # views/blokirPerseroan/pratinjau/index.php\n- 928 # views/blokirPerseroan/pratinjau/_verifikasiVerifikator.php\n- 929 # views/blokirPerseroan/create/_dataPermohonan.php\n- 930 # views/blokirPerseroan/create/_dataPerusahaan.php\n- 931 # views/blokirPerseroan/create/_dataDokumen.php\n- 932 # views/blokirPerseroan/create/index.php\n- 933 # views/blokirPerseroan/create/_dataPratinjau.php\n- 934 # views/blokirPerseroan/create/_dataPemohon.php\n- 935 # views/historyPlain/detail_transaksi.php\n- 936 # views/historyPlain/detail.php\n- 937 # views/historyPlain/viewTransaksi.php\n- 938 # views/historyPlain/list_transaksi.php\n- 939 # views/historyPlain/download.php\n- 940 # views/historyPlain/transaksi.php\n- 941 # views/verifikasiPerbaikanData/detailDonePreviewBh.php\n- 942 # views/verifikasiPerbaikanData/_maksudTujuanModal.php\n- 943 # views/verifikasiPerbaikanData/_detail_verifikasi_edit_data.php\n- 944 # views/verifikasiPerbaikanData/detailDonePreview.php\n- 945 # views/verifikasiPerbaikanData/edit_badan_hukum_perkumpulan.php\n- 946 # views/verifikasiPerbaikanData/all.php\n- 947 # views/verifikasiPerbaikanData/detail.php\n- 948 # views/verifikasiPerbaikanData/_view_compare_perkumpulan.php\n- 949 # views/verifikasiPerbaikanData/verifikasi_kasi_badan_hukum.php\n- 950 # views/verifikasiPerbaikanData/verifikasi_kasi.php\n- 951 # views/verifikasiPerbaikanData/_view_compare_yayasan.php\n- 952 # views/verifikasiPerbaikanData/verifikasi.php\n- 953 # views/verifikasiPerbaikanData/index.php\n- 954 # views/verifikasiPerbaikanData/_view_compare_data.php\n- 955 # views/verifikasiPerbaikanData/detailDone.php\n- 956 # views/layouts/company_profile.php\n- 957 # views/layouts/yayasanLayout.php\n- 958 # views/layouts/main.php\n- 959 # views/blokirYayasan/riwayat.php\n- 960 # views/blokirYayasan/daftarPermohonan.php\n- 961 # views/blokirYayasan/detail/_riwayatVerifikasi.php\n- 962 # views/blokirYayasan/detail/_dokumenPersyaratan.php\n- 963 # views/blokirYayasan/detail/_pemohonData.php\n- 964 # views/blokirYayasan/detail/_suratJawaban.php\n- 965 # views/blokirYayasan/detail/_konsepSuratJawaban.php\n- 966 # views/blokirYayasan/detail/_verifikasi.php\n- 967 # views/blokirYayasan/detail/_permohonanData.php\n- 968 # views/blokirYayasan/detail/index.php\n- 969 # views/blokirYayasan/_common/_constants.php\n- 970 # views/yayasanbaru/monitoring/detailPenggabungan.php\n- 971 # views/yayasanbaru/monitoring/_filter.php\n- 972 # views/yayasanbaru/monitoring/listPembubaran.php\n- 973 # views/yayasanbaru/monitoring/listPenggabungan.php\n- 974 # views/yayasanbaru/monitoring/detailPembubaran.php\n- 975 # views/yayasanbaru/kedudukan/_form.php\n- 976 # views/yayasanbaru/kedudukan/_kabupatenForm.php\n- 977 # views/yayasanbaru/pembubaran/_koranDetailForm.php\n- 978 # views/yayasanbaru/pembubaran/_kuorumDetailsForm.php\n- 979 # views/yayasanbaru/pembubaran/_rapatForm.php\n- 980 # views/yayasanbaru/pembubaran/likuidasi.php\n- 981 # views/yayasanbaru/pembubaran/_koranDetailsForm.php\n- 982 # views/yayasanbaru/pembubaran/input.php\n- 983 # views/yayasanbaru/pembubaran/_pratinjau.php\n- 984 # views/yayasanbaru/pembubaran/_notarisPengganti.php\n- 985 # views/yayasanbaru/pembubaran/_koranLikuidasiForm.php\n- 986 # views/yayasanbaru/pembubaran/_syaratRapat.php\n- 987 # views/yayasanbaru/pembubaran/_modalKeterangan.php\n- 988 # views/yayasanbaru/pembubaran/alasan.php\n- 989 # views/yayasanbaru/pembubaran/_aktaNotarisForm.php\n- 990 # views/yayasanbaru/pembubaran/_pengurusForm.php\n- 991 # views/yayasanbaru/pembubaran/_notarisPenggantiForm.php\n- 992 # views/yayasanbaru/pembubaran/_koranForm.php\n- 993 # views/yayasanbaru/pembubaran/syarat.php\n- 994 # views/yayasanbaru/pembubaran/_kuorumRapatForm.php\n- 995 # views/yayasanbaru/pembubaran/_kuorumSetujuForm.php\n- 996 # views/yayasanbaru/pembubaran/cari.php\n- 997 # views/yayasanbaru/pembubaran/_pratinjauDetails.php\n- 998 # views/yayasanbaru/pembubaran/_disclaimerForm.php\n- 999 # views/yayasanbaru/pembubaran/_persyaratanForm.php\n- 1000 # views/yayasanbaru/pembubaran/_skForm.php\n- 1001 # views/yayasanbaru/pembubaran/_kuorumDetailForm.php\n- 1002 # views/yayasanbaru/domisili/_form.php\n- 1003 # views/yayasanbaru/penggabungan/_perhatianDetails.php\n- 1004 # views/yayasanbaru/penggabungan/_aktaPerubahanForm.php\n- 1005 # views/yayasanbaru/penggabungan/_aktaSatuChild.php\n- 1006 # views/yayasanbaru/penggabungan/_koranDetailForm.php\n- 1007 # views/yayasanbaru/penggabungan/_kuorumDetailsForm.php\n- 1008 # views/yayasanbaru/penggabungan/_rapatDetailForm.php\n- 1009 # views/yayasanbaru/penggabungan/inputPerubahan.php\n- 1010 # views/yayasanbaru/penggabungan/_jenisPerubahanForm.php\n- 1011 # views/yayasanbaru/penggabungan/_koranDetailsForm.php\n- 1012 # views/yayasanbaru/penggabungan/_pratinjau.php\n- 1013 # views/yayasanbaru/penggabungan/pilih.php\n- 1014 # views/yayasanbaru/penggabungan/_syaratRapat.php\n- 1015 # views/yayasanbaru/penggabungan/_rapatDetailsForm.php\n- 1016 # views/yayasanbaru/penggabungan/_modalKeterangan.php\n- 1017 # views/yayasanbaru/penggabungan/_listYayasan.php\n- 1018 # views/yayasanbaru/penggabungan/rapat.php\n- 1019 # views/yayasanbaru/penggabungan/akta.php\n- 1020 # views/yayasanbaru/penggabungan/_voucherForm.php\n- 1021 # views/yayasanbaru/penggabungan/_persyaratanChildForm.php\n- 1022 # views/yayasanbaru/penggabungan/_rapatKuorumForm.php\n- 1023 # views/yayasanbaru/penggabungan/_notarisPenggantiForm.php\n- 1024 # views/yayasanbaru/penggabungan/_koranForm.php\n- 1025 # views/yayasanbaru/penggabungan/_aktaForm.php\n- 1026 # views/yayasanbaru/penggabungan/_aktaBanyakChild.php\n- 1027 # views/yayasanbaru/penggabungan/syarat.php\n- 1028 # views/yayasanbaru/penggabungan/_perhatian.php\n- 1029 # views/yayasanbaru/penggabungan/_cariForm.php\n- 1030 # views/yayasanbaru/penggabungan/_kuorumSetujuForm.php\n- 1031 # views/yayasanbaru/penggabungan/cari.php\n- 1032 # views/yayasanbaru/penggabungan/_syaratRapatChild.php\n- 1033 # views/yayasanbaru/penggabungan/_stickerYayasan.php\n- 1034 # views/yayasanbaru/penggabungan/_pratinjauDetails.php\n- 1035 # views/yayasanbaru/penggabungan/_persyaratanChildDetail.php\n- 1036 # views/yayasanbaru/penggabungan/_persyaratanForm.php\n- 1037 # views/yayasanbaru/penggabungan/_voucherPerubahan.php\n- 1038 # views/yayasanbaru/penggabungan/pilihPerubahan.php\n- 1039 # views/yayasanbaru/penggabungan/_kuorumDetailForm.php\n- 1040 # views/yayasanbaru/perubahan/_aktaDetailForm.php\n- 1041 # views/yayasanbaru/perubahan/_infoPerubahan.php\n- 1042 # views/yayasanbaru/perubahan/_listOrganForm.php\n- 1043 # views/yayasanbaru/perubahan/_organDetailForm.php\n- 1044 # views/yayasanbaru/perubahan/_syaratDokumen.php\n- 1045 # views/yayasanbaru/perubahan/_dataForm.php\n- 1046 # views/yayasanbaru/perubahan/input.php\n- 1047 # views/yayasanbaru/perubahan/pilih.php\n- 1048 # views/yayasanbaru/perubahan/_organForm.php\n- 1049 # views/yayasanbaru/perubahan/_notarisPenggantiForm.php\n- 1050 # views/yayasanbaru/perubahan/_namaForm.php\n- 1051 # views/yayasanbaru/perubahan/_aktaForm.php\n- 1052 # views/yayasanbaru/perubahan/_jenisTransaksiForm.php\n- 1053 # views/yayasanbaru/perubahan/_organDetailsForm.php\n- 1054 # views/yayasanbaru/pratinjau/_aktaNotaris.php\n- 1055 # views/yayasanbaru/pratinjau/_kedudukan.php\n- 1056 # views/yayasanbaru/pratinjau/_kegiatan.php\n- 1057 # views/yayasanbaru/pratinjau/_pendiri.php\n- 1058 # views/yayasanbaru/pratinjau/_domisili.php\n- 1059 # views/yayasanbaru/pratinjau/_organ.php\n- 1060 # views/yayasanbaru/pratinjau/_jenisTransaksi.php\n- 1061 # views/yayasanbaru/pratinjau/_aktaNotarisDetail.php\n- 1062 # views/yayasanbaru/pratinjau/_data.php\n- 1063 # views/yayasanbaru/pratinjau/pembubaran/_alasan.php\n- 1064 # views/yayasanbaru/pratinjau/penggabungan/_listYayasan.php\n- 1065 # views/yayasanbaru/pilihPerubahan/_listAngkatKembaliForm.php\n- 1066 # views/yayasanbaru/pilihPerubahan/_listOrganForm.php\n- 1067 # views/yayasanbaru/pilihPerubahan/_pemberitahuanData.php\n- 1068 # views/yayasanbaru/pilihPerubahan/_persetujuanAnggaran.php\n- 1069 # views/yayasanbaru/pilihPerubahan/_syaratAlamatForm.php\n- 1070 # views/yayasanbaru/pilihPerubahan/_syaratKedudukanForm.php\n- 1071 # views/yayasanbaru/pilihPerubahan/_pemberitahuanAnggaran.php\n- 1072 # views/yayasanbaru/pilihPerubahan/_syaratNamaForm.php\n- 1073 # views/yayasanbaru/organ/_negaraForm.php\n- 1074 # views/yayasanbaru/organ/_form.php\n- 1075 # views/yayasanbaru/organ/_pendiri.php\n- 1076 # views/yayasanbaru/organ/_kabupatenForm.php\n- 1077 # views/yayasanbaru/organ/_kitapForm.php\n- 1078 # views/yayasanbaru/organ/popup.php\n- 1079 # views/yayasanbaru/organ/_jabatanForm.php\n- 1080 # views/yayasanbaru/organ/_domisiliForm.php\n- 1081 # views/yayasanbaru/organ/_isDiIndonesiaForm.php\n- 1082 # views/yayasanbaru/organ/_organ.php\n- 1083 # views/yayasanbaru/organ/_ijinForm.php\n- 1084 # views/yayasanbaru/kegiatan/_lainnyaForm.php\n- 1085 # views/yayasanbaru/kegiatan/_form.php\n- 1086 # views/badanHukumPending/view.php\n- 1087 # views/badanHukumPending/_form.php\n- 1088 # views/badanHukumPending/update.php\n- 1089 # views/badanHukumPending/index.php\n- 1090 # views/badanHukumPending/create.php\n- 1091 # views/badanHukumPending/importcsv.php\n- 1092 # views/dashboard/_viewGridRangeDatePerseroan.php\n- 1093 # views/dashboard/_viewGridYayasan.php\n- 1094 # views/dashboard/_fieldKabupatenForm.php\n- 1095 # views/dashboard/_searchForm.php\n- 1096 # views/dashboard/_viewGridPerkumpulan.php\n- 1097 # views/dashboard/_viewGridRangeDateYayasan.php\n- 1098 # views/dashboard/_collapsibleColumn.php\n- 1099 # views/dashboard/index.php\n- 1100 # views/dashboard/_viewGridRangeDatePerkumpulan.php\n- 1101 # views/dashboard/_dropDownlistCategoryForm.php\n- 1102 # views/dashboard/_viewGridPerseroan.php\n- 1103 # views/blokirPemegangSahamSemiPermanent/_itemPengurus.php\n- 1104 # views/blokirPemegangSahamSemiPermanent/listBlokirPemegangSaham.php\n- 1105 # views/blokirPemegangSahamSemiPermanent/index.php\n- 1106 # views/blokirPemegangSahamSemiPermanent/listPengurus.php\n- 1107 # views/resendEmail/voucher.php\n- 1108 # views/resendEmail/beliProfil.php\n- 1109 # views/votingPerubahanPerseroan/index.php\n- 1110 # views/votingPerubahanPerseroan/_common/constants.php\n- 1111 # views/penghapusanBadanHukum/daftarPermohonan.php\n- 1112 # views/penghapusanBadanHukum/permohonan/_formPermohonanPenghapusan.php\n- 1113 # views/penghapusanBadanHukum/permohonan/_formPengajuanPenghapusan.php\n- 1114 # views/penghapusanBadanHukum/permohonan/index.php\n- 1115 # views/penghapusanBadanHukum/modal/_modalPratinjau.php\n- 1116 # views/penghapusanBadanHukum/modal/_modalConfirmation.php\n- 1117 # views/badanhukum/detail_bh.php\n- 1118 # views/badanhukum/_formFilter.php\n- 1119 # views/badanhukum/_formblockirpassword.php\n- 1120 # views/badanhukum/toolDeleteMaster.php\n- 1121 # views/badanhukum/nonActive.php\n- 1122 # views/badanhukum/email_block.php\n- 1123 # views/badanhukum/verifikasi_ordername.php\n- 1124 # views/badanhukum/_formEmailBodySetuju.php\n- 1125 # views/badanhukum/listblokir.php\n- 1126 # views/badanhukum/_formMasterBH.php\n- 1127 # views/badanhukum/daftarbh.php\n- 1128 # views/badanhukum/_formEmailBody.php\n- 1129 # views/badanhukum/_formFilterVerifikasi.php\n- 1130 # views/badanhukum/viewTransaksiYayasan.php\n- 1131 # views/badanhukum/_formblokirbh.php\n- 1132 # views/badanhukum/_pdfMonitoring.php\n- 1133 # views/badanhukum/riwayat_blokir.php\n- 1134 # views/badanhukum/list.php\n- 1135 # views/badanhukum/viewTransaksiPerkumpulan.php\n- 1136 # views/badanhukum/_formAddOrder.php\n- 1137 # views/badanhukum/listordername.php\n- 1138 # views/updateMasterYayasan/index.php\n- 1139 # views/match/_form.php\n- 1140 # views/match/update.php\n- 1141 # views/match/index.php\n- 1142 # views/match/create.php\n- 1143 # views/updateMasterPerseroan/index.php\n- 1144 # dto/RegisterUserDto.php\n- 1145 # dto/CreatePermohonanPemblokiranPTDto.php\n- 1146 # dto/EmailDto.php\n- 1147 # dto/GetPerseroanDto.php\n- 1148 # dto/CreatePermohonanBerakhirnyaStatusBadanHukumDto.php\n- 1149 # enums/FileType.php\n- 1150 # enums/JenisKewarganegaraan.php\n- 1151 # enums/JenisLayananPermohonan.php\n- 1152 # enums/JenisPemegangSaham.php\n- 1153 # enums/KategoriPermohonan.php\n- 1154 # enums/StatusPemohon.php\n- 1155 # mappers/DashboardMapper.php\n- 1156 # mappers/DYayasanProvinsiMapper.php\n- 1157 # mappers/DPerseroanKabupatenMapper.php\n- 1158 # mappers/DBakumRangeDateMapper.php\n- 1159 # mappers/DYayasanRangeDateProvinsiMapper.php\n- 1160 # mappers/DPerseroanRangeDateMapper.php\n- 1161 # mappers/DPerseroanProvinsiMapper.php\n- 1162 # mappers/DYayasanRangeDateMapper.php\n- 1163 # mappers/DYayasanRangeDateKabupatenMapper.php\n- 1164 # mappers/IbakumDashboard.php\n- 1165 # mappers/DBakumProvinsiMapper.php\n- 1166 # mappers/DBakumRangeDateKabupatenMapper.php\n- 1167 # mappers/DBakumRangeDateProvinsiMapper.php\n- 1168 # mappers/DPerseroanRangeDateProvinsiMapper.php\n- 1169 # mappers/DBakumKabupatenMapper.php\n- 1170 # mappers/DYayasanKabupatenMapper.php\n- 1171 # mappers/DPerseroanRangeDateKabupatenMapper.php\n- 1172 # utils/ArrayHelper.php\n- 1173 # utils/RequestContext.php\n- 1174 # services/DashboardYayasanService.php\n- 1175 # services/DashboardBakumService.php\n- 1176 # services/DashboardPerseroanService.php\n- 1177 # services/perseroan/VerifikasiPerubahanPerseroanService.php\n- 1178 # services/perseroan/VerifikatorPerubahanPerseroanService.php\n- 1179 # services/perseroan/PemegangSahamService.php\n- 1180 # services/perseroan/DokumenPerubahanService.php\n- 1181 # services/perseroan/PerseroanService.php\n- 1182 # services/api/IPermohonanPemblokiranPTService.php\n- 1183 # services/api/IPemblokiranTokenService.php\n- 1184 # services/api/EmailService.php\n- 1185 # services/api/PdfService.php\n- 1186 # services/api/IFileService.php\n- 1187 # services/api/IPerkumpulanService.php\n- 1188 # services/api/PemblokiranProxyService.php\n- 1189 # services/api/PemblokiranTokenService.php\n- 1190 # services/api/BlokirUserProfileService.php\n- 1191 # services/api/BlokirAuthService.php\n- 1192 # services/api/DCUserService.php\n- 1193 # services/api/IEmailService.php\n- 1194 # services/api/FileService.php\n- 1195 # services/api/IBlokirAuthService.php\n- 1196 # services/api/IDCUserService.php\n- 1197 # services/api/IPermohonanBerakhirnyaStatusBadanHukumService.php\n- 1198 # services/api/PermohonanPemblokiranPTService.php\n- 1199 # services/api/EmailQueueService.php\n- 1200 # services/api/IBlokirAuthUserService.php\n- 1201 # services/api/IBlokirUserProfileService.php\n- 1202 # services/api/impl/PermohonanBerakhirnyaStatusBadanHukumService.php\n- 1203 # services/api/impl/FileService.php\n- 1204 # services/api/impl/PerkumpulanService.php\n\nFormat the output as a YAML list of dictionaries:\n\n```yaml\n- name: |\n    Query Processing (value in Bahasa indonesia)\n  description: |\n    Explains what the abstraction does.\n    It's like a central dispatcher routing requests. (value in Bahasa indonesia)\n  file_indices:\n    - 0 # path/to/file1.py\n    - 3 # path/to/related.py\n- name: |\n    Query Optimization (value in Bahasa indonesia)\n  description: |\n    Another core concept, similar to a blueprint for objects. (value in Bahasa indonesia)\n  file_indices:\n    - 5 # path/to/another.js\n# ... up to 100 abstractions\n```": "- name: |\n    Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n  description: |\n    Bayangkan SABH seperti mal besar yang menaungi banyak toko layanan: pesan nama, verifikasi, pemblokiran, hingga laporan. \u201cMal\u201d-nya adalah modul SABH yang menata rapi lorong (controller), gudang (model), dan etalase (view). Setiap fitur berjalan mengikuti pola MVC milik Yii, sehingga alur data dan tampilan mudah ditelusuri. Bagi pendatang baru, memahami modul ini ibarat memegang peta mal: Anda tahu pintu masuknya, ke mana bertanya, dan di rak mana suatu layanan tersedia. Modul ini juga punya standar respons API, penanganan error, dan utilitas bersama agar semua \u201ctoko\u201d konsisten melayani.\n  file_indices:\n    - 0 # SabhModule.php\n    - 329 # exception/APIExceptionThrower.php\n    - 401 # response/APIResponse.php\n    - 351 # components/MyController.php\n\n- name: |\n    Pola MVC Yii: Controller, Model, dan View\n  description: |\n    Pikirkan aplikasi seperti pertunjukan teater. Controller adalah sutradara (mengatur adegan dan alur), Model adalah naskah dan data pemain (isi cerita), sedangkan View adalah panggung dan dekorasi (tampilan). Di SABH, controller menerima permintaan (web atau API), meminta data melalui model, lalu merender view. Pola ini membuat kode mudah dibaca, diuji, dan dirawat. Bagi pemula, fokuslah mencari \u201cController\u201d untuk memahami pintu masuk fitur, \u201cModel\u201d untuk tahu data apa yang dipakai, dan \u201cView\u201d untuk mengubah tampilan ke pengguna.\n  file_indices:\n    - 238 # controllers/DashboardController.php\n    - 250 # controllers/BadanhukumController.php\n    - 244 # controllers/BoController.php\n    - 321 # controllers/api/PermohonanPemblokiranPTController.php\n    - 322 # controllers/api/FileController.php\n    - 401 # response/APIResponse.php\n\n- name: |\n    Layanan Perseroan Terbatas (PT)\n  description: |\n    Fitur PT ibarat loket layanan khusus perusahaan: cek, perubahan, pembubaran, merger, akuisisi, hingga pemblokiran. Controller mengatur alur layanan, model menyimpan detail perseroan dan transaksi, sedangkan view menampilkan formulir, pratinjau, dan riwayat. Ada juga API untuk pencarian cepat dan verifikasi. Bagi pemula, mulai dari controller PT untuk melihat alur lalu telusuri model Perseroan dan tampilan terkait. Pola kerja ini membantu menjaga konsistensi proses bisnis antarfitur, seperti loket tunggal yang menyediakan banyak kebutuhan perusahaan.\n  file_indices:\n    - 299 # controllers/persero/ProfilController.php\n    - 302 # controllers/persero/PembubaranController.php\n    - 320 # controllers/api/PerseroanTerbatasController.php\n    - 318 # controllers/api/VerifikasiPerubahanPerseroanController.php\n    - 62 # models/Perseroan.php\n    - 721 # views/perseroan/previewPerubahanPerseroan.php\n\n- name: |\n    Layanan Yayasan\n  description: |\n    Layaknya loket layanan bagi yayasan, modul ini mengelola pendirian, perubahan, pembubaran, penggabungan, hingga monitoring. Controller mengarahkan proses, model menyimpan struktur data (akta, pengurus, koran, kuorum), dan view menyajikan formulir serta pratinjau ringkas. Alur berjenjang (wizard) membantu pemohon melewati setiap tahap dengan jelas. Bagi pemula, mulai dari controller yayasanbaru (perubahan, pembubaran, penggabungan), lihat model form per langkah, kemudian telaah view untuk memahami urutan input dan validasi.\n  file_indices:\n    - 312 # controllers/yayasanbaru/PerubahanController.php\n    - 313 # controllers/yayasanbaru/PembubaranController.php\n    - 310 # controllers/yayasanbaru/PenggabunganController.php\n    - 134 # models/FormDataYayasan.php\n    - 204 # models/yayasanbaru/pembubaran/PembubaranYayasan.php\n    - 807 # views/yayasan/previewYayasan.php\n\n- name: |\n    Layanan Perkumpulan\n  description: |\n    Fitur ini seperti pusat layanan organisasi perkumpulan: pendirian, perubahan, verifikasi, hingga proses khusus seperti penghapusan. Controller menjadi pengarah kegiatan, model menyimpan data badan hukum, dan view menampilkan proses bertahap yang mudah diikuti. Tersedia juga endpoint API untuk validasi dan integrasi internal. Bagi pemula, susuri alur di PerkumpulanController (API) maupun halaman UI, pahami model BadanHukum dan TransaksiPerkumpulan, lalu lihat view untuk alur pengguna.\n  file_indices:\n    - 324 # controllers/api/PerkumpulanController.php\n    - 237 # controllers/BlokirPerkumpulanController.php\n    - 159 # models/BadanHukum.php\n    - 190 # models/perkumpulan/pembubaran/PembubaranPerkumpulan.php\n    - 595 # views/perkumpulan/listTransaksi.php\n\n- name: |\n    Alur Pesan Nama (Name Reservation)\n  description: |\n    Bayangkan mendaftarkan \u201cmerek nama\u201d sebelum mendirikan badan hukum. Alur Pesan Nama memeriksa kesediaan nama, menyimpan pemesanan (dengan masa berlaku), dan memantau status. Tersedia UI dan API publik untuk cek dan simpan (dengan API key). Model OrderName dan turunannya memegang data, controller mengatur logika, sedangkan view menyajikan formulir dan daftar. Cocok sebagai titik awal memahami core flow SABH karena menyentuh validasi, billing voucher, dan monitoring.\n  file_indices:\n    - 265 # controllers/PesanNamaController.php\n    - 285 # controllers/PublicApiBakumController.php\n    - 32 # models/OrderName.php\n    - 25 # models/OrderNamePerseroan.php\n    - 892 # views/badan_hukum/listDataPesanNama.php\n    - 899 # views/badan_hukum/pesannama.php\n\n- name: |\n    Verifikasi Perubahan Perseroan (Workflow dan Voting)\n  description: |\n    Ini seperti loket berlapis untuk memeriksa perubahan data PT: verifikator, direktur BU, hingga jenderal. Ada riwayat, tahap status, dan bahkan voting pemegang saham via tautan aman. Layer service dan repository memisahkan logika bisnis dan akses data, sehingga mudah dirawat. Endpoint API menyediakan daftar, riwayat, pratinjau, hingga aksi approve/reject/revisi. Bagi pemula, pelajari controller API dan service-nya untuk melihat desain workflow modern berbasis status.\n  file_indices:\n    - 318 # controllers/api/VerifikasiPerubahanPerseroanController.php\n    - 1177 # services/perseroan/VerifikasiPerubahanPerseroanService.php\n    - 391 # repositories/VerifikatorPerubahanPerseroanRepository.php\n    - 398 # repositories/perseroan/TransaksiPerseroanRepository.php\n    - 1109 # views/votingPerubahanPerseroan/index.php\n    - 854 # views/verifikasiPerubahanPerseroan/daftar.php\n\n- name: |\n    Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n  description: |\n    Anggap ini seperti fitur \u201ckartu akses\u201d digital untuk entitas. Ketika terjadi masalah hukum atau sengketa, akses bisa diblokir sementara; setelah diverifikasi, dapat dibuka kembali. Alur mencakup pendaftaran permohonan, upload dokumen, verifikasi bertahap, dan pembuatan surat jawaban. UI disusun per domain (PT/Yayasan/Perkumpulan). Ada integrasi ke backend Go via proxy dan token. Bagi pemula, telusuri modul ini untuk melihat contoh integrasi lintas layanan dengan standar keamanan.\n  file_indices:\n    - 921 # views/blokirPerseroan/detail/index.php\n    - 968 # views/blokirYayasan/detail/index.php\n    - 521 # views/blokirPerkumpulan/detail/index.php\n    - 319 # controllers/api/PemblokiranController.php\n    - 1188 # services/api/PemblokiranProxyService.php\n    - 1189 # services/api/PemblokiranTokenService.php\n    - 1191 # services/api/BlokirAuthService.php\n\n- name: |\n    Permohonan Pemblokiran PT (Endpoint & DTO)\n  description: |\n    Fitur ini adalah jalur cepat pengajuan blokir untuk PT. Ibarat mengisi formulir digital lengkap (jenis layanan, kategori, identitas pemohon, dan tautan dokumen), sistem akan memvalidasi dan menyimpan via DTO yang jelas. Layanan memusatkan validasi, logging, dan simpan ke database. Cocok untuk memahami pola \u201cPOST JSON -> DTO -> Service -> Model -> OK\u201d. \n  file_indices:\n    - 321 # controllers/api/PermohonanPemblokiranPTController.php\n    - 1198 # services/api/PermohonanPemblokiranPTService.php\n    - 1145 # dto/CreatePermohonanPemblokiranPTDto.php\n    - 91 # models/PermohonanPemblokiranPT.php\n\n- name: |\n    Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n  description: |\n    Seperti layanan administrasi untuk \u201cmenutup buku\u201d badan hukum. Pemohon mengisi data akta pembubaran, pengumuman koran, dan kelengkapan lain. Controller API menerima data JSON, service menyimpan aman ke database, dan UI memandu tahapan. Alur ini menekankan validasi data dan jejak audit. Bagi pemula, lihat bagaimana pola DTO + Service menstandarkan pemrosesan agar mudah diintegrasi dan diaudit.\n  file_indices:\n    - 315 # controllers/api/PermohonanBerakhirnyaStatusBadanHukumController.php\n    - 1202 # services/api/impl/PermohonanBerakhirnyaStatusBadanHukumService.php\n    - 1148 # dto/CreatePermohonanBerakhirnyaStatusBadanHukumDto.php\n    - 63 # models/PermohonanBerakhirnyaStatusBadanHukum.php\n    - 1114 # views/penghapusanBadanHukum/permohonan/index.php\n\n- name: |\n    Proxy Backend Go & Token Kriptografi\n  description: |\n    Ini seperti \u201ckurir terpercaya\u201d yang mengantar surat ke backend Go. Setiap permintaan disertai token terenkripsi (AES-256-CBC + HMAC) berisi klaim user. Proxy menyederhanakan GET/POST/PUT/DELETE dan menangani error HTTP dengan rapi. Dengan cara ini, aplikasi PHP tetap ramping, sementara proses berat ditangani layanan Go. Pemula akan paham bagaimana keamanan, header, dan timeout disatukan dalam library proxy yang rapi.\n  file_indices:\n    - 1188 # services/api/PemblokiranProxyService.php\n    - 1189 # services/api/PemblokiranTokenService.php\n    - 325 # controllers/api/BlokirAuthController.php\n    - 319 # controllers/api/PemblokiranController.php\n\n- name: |\n    Upload File Terstandar (PDF) untuk Layanan\n  description: |\n    Bayangkan loket satu pintu untuk upload dokumen. FileController memeriksa metode, error upload, dan parameter tipe file. FileService mengelola direktori tujuan (berdasarkan jenis), memvalidasi ukuran/tipe (PDF saja), memberi nama unik, lalu menyimpan. Ada enum tipe file agar konsisten. Pemula belajar pola \u201ccontroller tipis + service kuat\u201d untuk upload aman dan mudah dilacak.\n  file_indices:\n    - 322 # controllers/api/FileController.php\n    - 1186 # services/api/IFileService.php\n    - 1194 # services/api/FileService.php\n    - 1203 # services/api/impl/FileService.php\n    - 1149 # enums/FileType.php\n\n- name: |\n    Generator PDF via Gotenberg (HTML ke PDF)\n  description: |\n    Fitur ini seperti mesin pencetak surat: Anda kirim HTML dan opsi, sistem mengubahnya menjadi PDF siap unduh. PdfService menyiapkan form-data (dengan file HTML sementara), memanggil Gotenberg, dan mengembalikan file atau base64. Controller API menyediakan dua mode: hasil JSON atau langsung tampil inline. Pemula akan melihat integrasi layanan eksternal yang andal dan pola penanganan berkas sementara yang aman.\n  file_indices:\n    - 317 # controllers/api/PdfController.php\n    - 1185 # services/api/PdfService.php\n\n- name: |\n    Standar Respons API & Penanganan Error\n  description: |\n    Seperti bahasa baku pelayanan: semua API merespons dalam format JSON konsisten dengan kode status, pesan, dan data. Jika terjadi kesalahan, APIExceptionThrower memudahkan mengirim 400/401/403/404/405/409/422/500/503 dengan rapi. Ini membuat integrasi pihak ketiga nyaman karena struktur respons dapat diprediksi. Pemula cukup pakai APIResponse::ok atau ExceptionThrower di tiap controller.\n  file_indices:\n    - 401 # response/APIResponse.php\n    - 329 # exception/APIExceptionThrower.php\n    - 327 # exception/BaseApiException.php\n    - 330 # exception/ValidationException.php\n    - 332 # exception/NotFoundException.php\n    - 326 # exception/InternalServerException.php\n\n- name: |\n    Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n  description: |\n    Anggap ini papan skor nasional. Mapper mengemas query lintas tabel transaksi per tahun (union) dan filter wilayah/tanggal, lalu service menyajikan ke UI Highcharts. Dengan pola ini, data PT/Yayasan/Perkumpulan bisa dipotong per provinsi/kabupaten atau rentang tanggal. Pemula akan belajar layer data khusus laporan (mapper) agar controller tetap bersih dan query mudah dirawat.\n  file_indices:\n    - 1155 # mappers/DashboardMapper.php\n    - 1160 # mappers/DPerseroanRangeDateMapper.php\n    - 1162 # mappers/DYayasanRangeDateMapper.php\n    - 1165 # mappers/DBakumProvinsiMapper.php\n    - 1175 # services/DashboardBakumService.php\n    - 1099 # views/dashboard/index.php\n\n- name: |\n    Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n  description: |\n    BO ibarat mencatat \u201cpemilik sebenarnya\u201d di balik badan hukum. Modul ini menyediakan formulir, kriteria, validasi, dan monitoring per notaris. Ada integrasi ke layanan BO eksternal, plus panel pratinjau dan riwayat. Struktur form yang rinci memandu input kompleks (perorangan/badan hukum). Pemula disarankan eksplorasi BoController, form-model (BoForm, BoDetailForm), dan BoAPI untuk melihat desain domain yang lengkap.\n  file_indices:\n    - 244 # controllers/BoController.php\n    - 171 # models/BoForm.php\n    - 137 # models/BoDetailForm.php\n    - 361 # components/BoAPI.php\n    - 415 # views/bo/index.php\n    - 427 # views/bo/monitoring/index.php\n\n- name: |\n    Monitoring Notaris & BO (Laporan dan Grafik)\n  description: |\n    Seperti papan kendali bagi notaris: melihat jumlah entitas dengan/ tanpa BO, grafik periodik, dan rincian per badan hukum. Template PDF siap cetak tersedia. Data diambil via model monitoring dan dirender ke view laporan. Pola ini memisahkan data (model), penyajian (view), dan navigasi (controller) agar mudah dikembangkan.\n  file_indices:\n    - 262 # controllers/MonitoringBoNotarisController.php\n    - 125 # models/BoMonitoringNotarisBadanHukum.php\n    - 444 # views/bo/monitoring-notaris/index.php\n    - 436 # views/bo/monitoring-notaris/_countTipe.php\n    - 432 # views/bo/monitoring/_pdfPerseroan.php\n\n- name: |\n    Cleansing Data (Skema, Organ, Modal)\n  description: |\n    Ibarat gudang arsip yang dibereskan: cleansing menormalisasi, memecah, dan memindahkan data lama ke struktur baru. Ada daftar log, tombol eksekusi, dan laporan perbedaan. Komponen DatabaseHelpers mempermudah query builder, cek/membuat tabel, dan batch insert. Bagi pemula, modul ini menunjukkan cara menulis utilitas data yang rapi dan reusable.\n  file_indices:\n    - 248 # controllers/CleansingController.php\n    - 293 # controllers/CleansingOrganController.php\n    - 366 # components/cleansing/DatabaseHelpers.php\n    - 905 # views/cleansingOrgan/index.php\n\n- name: |\n    Sistem Voucher & Billing\n  description: |\n    Voucher ibarat \u201ctiket\u201d untuk mengakses layanan tertentu (pesan nama, perbaikan, dsb). Ada pembuatan, daftar, validasi penggunaan, hingga integrasi ke SIMPONI. Controller mengelola UI dan API menyediakan endpoint status. Pemula dapat melihat bagaimana kode memadukan bisnis voucher, keamanan (validasi), dan keterhubungan ke proses lain (pesan nama).\n  file_indices:\n    - 290 # controllers/VoucherController.php\n    - 323 # controllers/api/VoucherController.php\n    - 104 # models/Voucher.php\n    - 358 # components/BillingHelper.php\n    - 690 # views/voucher/listVoucher.php\n\n- name: |\n    Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n  description: |\n    Fitur ini seperti pintu ke Direktorat Jenderal Pajak. Sistem mengambil token, memeriksa NPWP, dan mengirim data registrasi. Ada logging terstruktur untuk jejak audit. Kode menangani timeout, header, dan error dengan teliti. Pemula akan belajar integrasi aman ke layanan pemerintah eksternal dengan otentikasi dan format data yang ketat.\n  file_indices:\n    - 337 # components/PajakAPI.php\n    - 53 # models/BakumSetting.php\n    - 339 # components/LogSABH.php\n\n- name: |\n    Peta Badan Hukum (Google Maps)\n  description: |\n    Seperti peta interaktif untuk melihat sebaran badan hukum per wilayah. Pengguna memilih filter, sistem memuat marker dengan label jumlah, dan grid detail dapat diunduh. Kode memanfaatkan Google Maps API dan helper marker. Cocok untuk memahami integrasi frontend JS eksternal di dalam view Yii.\n  file_indices:\n    - 264 # controllers/BakumMapsController.php\n    - 841 # views/bakumMaps/index.php\n    - 840 # views/bakumMaps/_maps.php\n\n- name: |\n    Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n  description: |\n    Alur ini ibarat dua babak: pengajuan penghapusan (validasi entitas & persyaratan) dan permohonan detail (akta, rapat, daftar koran). UI memakai Alpine.js untuk state-step dan penyimpanan sessionStorage, lalu panggil endpoint API untuk membuat transaksi dan upload akta. Kode PerkumpulanService menerjemahkan form ke transaksi operasional. Pemula akan melihat contoh alur multi-step modern terpadu ke backend.\n  file_indices:\n    - 251 # controllers/PenghapusanBadanHukumController.php\n    - 324 # controllers/api/PerkumpulanController.php\n    - 1204 # services/api/impl/PerkumpulanService.php\n    - 1114 # views/penghapusanBadanHukum/permohonan/index.php\n\n- name: |\n    Voting Pemegang Saham (Link Token)\n  description: |\n    Sistem mengirim tautan ber-token ke pemegang saham untuk menyetujui/menolak perubahan. Seperti formulir persetujuan elektronik yang aman dan bermasa aktif. API men-decode token, mengecek masa berlaku, menampilkan perubahan \u201csemula\u201d vs \u201cmenjadi\u201d, dan menyimpan suara. Alur ini menunjukkan implementasi e-voting sederhana namun aman.\n  file_indices:\n    - 275 # controllers/VotingPerubahanPerseroanController.php\n    - 318 # controllers/api/VerifikasiPerubahanPerseroanController.php\n    - 1109 # views/votingPerubahanPerseroan/index.php\n    - 48 # models/PerubahanPerseroanPersetujuanPemegangSaham.php\n\n- name: |\n    Email Service & Antrian Pengiriman\n  description: |\n    Daripada mengirim email langsung (rawan timeout), sistem mengantrikan ke layanan Go khusus email. EmailQueueService membangun multipart/form-data, menyertakan lampiran, dan menangani error HTTP atau cURL. Ini seperti menyerahkan paket ke kurir khusus agar pengiriman andal dan tidak mengganggu proses utama. Cocok sebagai contoh decoupling proses berat.\n  file_indices:\n    - 1199 # services/api/EmailQueueService.php\n    - 1184 # services/api/EmailService.php\n    - 349 # components/Mail.php\n\n- name: |\n    Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n  description: |\n    Seperti kotak perkakas yang selalu dibawa. RequestContext mempermudah baca metode/JSON body/parameter, ArrayHelper menyaring dan mengambil nilai aman dari array, LogSABH mencatat ke file runtime. Dengan utilitas ini, controller lebih bersih dan aman. Pemula sebaiknya membiasakan memakai helper daripada menulis ulang fungsi serupa.\n  file_indices:\n    - 1173 # utils/RequestContext.php\n    - 1172 # utils/ArrayHelper.php\n    - 339 # components/LogSABH.php\n\n- name: |\n    Reupload & Monitoring Bukti Setor Modal Dasar\n  description: |\n    Fitur ini menangani unggah ulang bukti setor dan monitoringnya. Ada validasi tahun tabel transaksi, grid filter dengan datepicker, serta unduh excel. Pola yang digunakan: controller ringan, view interaktif, serta model khusus (UploadModalDasar/Log) untuk jejak. Pemula dapat melihat bagaimana batch data keuangan ditata agar mudah ditelusuri.\n  file_indices:\n    - 286 # controllers/ReuploadModalDasarController.php\n    - 146 # models/UploadModalDasar.php\n    - 157 # models/UploadModalDasarLog.php\n    - 670 # views/monitoringBuktiSetor/index.php\n    - 902 # views/reuploadModalDasar/index.php\n\n- name: |\n    Standar Token Auth untuk Bridging User\n  description: |\n    Untuk menghubungkan identitas pengguna antar layanan, sistem menyediakan DCUserService (lookup user) dan layanan auth pihak blokir. Token disusun, lalu backend lain mengembalikan profil. Ini seperti kartu identitas tunggal di ekosistem yang berbeda. Pemula belajar memisahkan domain \u201cuser management\u201d dari domain layanan bisnis.\n  file_indices:\n    - 316 # controllers/api/UserController.php\n    - 1192 # services/api/DCUserService.php\n    - 1191 # services/api/BlokirAuthService.php\n    - 1200 # services/api/IBlokirAuthUserService.php\n\n- name: |\n    Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n  description: |\n    Mapper adalah \u201cjuru masak\u201d yang menyiapkan data dari dapur database menjadi sajian siap konsumsi (join, union, group-by). Berbeda dari ActiveRecord umum, mapper fokus pada laporan dan agregasi lintas-tabel-tahunan. Pemula akan memahami kapan perlu membuat layer SQL khusus, agar query kompleks tidak mengotori controller atau model domain.\n  file_indices:\n    - 1158 # mappers/DBakumRangeDateMapper.php\n    - 1160 # mappers/DPerseroanRangeDateMapper.php\n    - 1162 # mappers/DYayasanRangeDateMapper.php\n    - 1165 # mappers/DBakumProvinsiMapper.php\n    - 1164 # mappers/IbakumDashboard.php\n\n- name: |\n    Pusat Pemetaan Enums & Konstanta Bisnis\n  description: |\n    Seperti kamus istilah, enums menstandarkan nilai bisnis: jenis layanan permohonan, kategori permohonan, kewarganegaraan, pemegang saham, sampai tipe file. Daripada string bebas, developer memakai konstanta agar validasi dan UI konsisten. Ini mengurangi typo dan memudahkan refactor.\n  file_indices:\n    - 1151 # enums/JenisLayananPermohonan.php\n    - 1153 # enums/KategoriPermohonan.php\n    - 1150 # enums/JenisKewarganegaraan.php\n    - 1152 # enums/JenisPemegangSaham.php\n    - 1149 # enums/FileType.php\n    - 385 # components/enum/BaseEnum.php\n\n- name: |\n    Standar Controller API (Tipis, Aman, Konsisten)\n  description: |\n    Controller API di SABH cenderung \u201ctipis\u201d: cek metode, baca JSON body, validasi via DTO/service, lalu balas dengan APIResponse. Error ditangani ExceptionThrower. Pola ini membuat endpoint mudah ditambah tanpa menambah utang teknis. Pemula bisa meniru kerangka ini untuk fitur baru: kecil, fokus, dan berulang.\n  file_indices:\n    - 321 # controllers/api/PermohonanPemblokiranPTController.php\n    - 317 # controllers/api/PdfController.php\n    - 322 # controllers/api/FileController.php\n    - 315 # controllers/api/PermohonanBerakhirnyaStatusBadanHukumController.php\n\n- name: |\n    Monitoring & Laporan Transaksi Perseroan\n  description: |\n    Fitur ini menampilkan grafik dan tabel detail transaksi (pendirian/perubahan) dengan filter harian, bulanan, tahunan. Mapper khusus menghitung agregat dan mengembalikan data siap chart. Tampilan dilengkapi aksi unduh, detail maksud/tujuan, dan resume modal. Cocok untuk memahami integrasi SQL-agregasi, Highcharts, dan grid interaktif.\n  file_indices:\n    - 239 # controllers/MonitoringPerseroanController.php\n    - 359 # components/PerseroanMapper.php\n    - 852 # views/monitoringPerseroan/index.php\n    - 849 # views/monitoringPerseroan/_detailDownload.php\n\n- name: |\n    Alur Upload Akta & Hubungan ke Transaksi\n  description: |\n    Upload akta adalah simpul penting: sesudah tersimpan, sistem mendorong aktivasi proses lain (misal, aktivasi Dukcapil atau notifikasi). Kode menyiapkan log upload, validasi transaksi, dan commit/rollback aman. Pemula dapat melihat bagaimana event pasca-upload dipakai menggerakkan proses bisnis lintas modul.\n  file_indices:\n    - 294 # controllers/UploadAktaController.php\n    - 90 # models/BadanHukumAktaLog.php\n    - 166 # models/BadanHukumAkta.php\n    - 324 # controllers/api/PerkumpulanController.php\n\n- name: |\n    UI Komponen & Widget (Dcl*)\n  description: |\n    Komponen UI custom (DclPanel, DclModal, DclDatepicker, dsb) membantu menyajikan formulir dan dialog konsisten. Seperti komponen LEGO, developer dapat menyusun layar cepat dengan gaya seragam. Ini mengurangi duplikasi dan mempermudah perubahan tema global.\n  file_indices:\n    - 368 # components/widgets/DclPanel.php\n    - 370 # components/widgets/DclModal.php\n    - 367 # components/widgets/DclDatepicker.php\n    - 813 # views/template/loader.php\n\n- name: |\n    Public API Bakum (Akses Mitra)\n  description: |\n    Endpoint publik dengan header API-KEY memungkinkan mitra memeriksa atau menyimpan Pesan Nama dari luar sistem. Ada validasi JSON, cek voucher, dan query khusus. Ini contoh bagaimana membuka sebagian layanan ke ekosistem luas dengan keamanan dasar (secret token di database).\n  file_indices:\n    - 285 # controllers/PublicApiBakumController.php\n    - 53 # models/BakumSetting.php\n\n- name: |\n    Peta Status & Riwayat Verifikasi\n  description: |\n    Setiap transaksi memiliki status perjalanan (menunggu, ditolak, disetujui) dan riwayat siapa \u201cmenyentuh\u201d kapan. Repositori RiwayatVerifikasi memusatkan simpan/ambil riwayat, sedangkan view menampilkan garis waktu yang mudah dipahami. Ini seperti buku log digital untuk transparansi proses.\n  file_indices:\n    - 397 # repositories/perseroan/RiwayatVerifikasiRepository.php\n    - 40 # models/RiwayatVerifikasi.php\n    - 913 # views/blokirPerseroan/detail/_riwayatVerifikasi.php\n    - 961 # views/blokirYayasan/detail/_riwayatVerifikasi.php\n    - 514 # views/blokirPerkumpulan/detail/_riwayatVerifikasi.php\n\n- name: |\n    Validasi & Filter Data (Validator Khusus)\n  description: |\n    Selain validator Yii bawaan, SABH punya validator kustom: filterNumber (membersihkan angka), voucherYayasan (cek voucher dan mapping), validateBo (validasi form BO). Ini seperti penjaga gerbang yang memastikan data masuk selalu rapi dan benar. Taruh validator di rules() model agar setiap masukan konsisten.\n  file_indices:\n    - 380 # components/validators/filterNumber.php\n    - 382 # components/validators/voucherYayasan.php\n    - 379 # components/validators/validateBo.php\n\n- name: |\n    Komunikasi Email & Template Surat\n  description: |\n    SABH menyiapkan template email (notifikasi, blokir, dsb.) serta \u201csurat jawaban\u201d dalam UI pemblokiran. Ini seperti kantor sekretariat yang siap mengirimkan surat resmi berbasis data yang telah diverifikasi. Template memisahkan konten dari logika sehingga mudah disesuaikan tampilan atau bahasa.\n  file_indices:\n    - 725 # views/perseroan/email_block.php\n    - 1122 # views/badanhukum/email_block.php\n    - 916 # views/blokirPerseroan/detail/_suratJawaban.php\n    - 964 # views/blokirYayasan/detail/_suratJawaban.php\n    - 517 # views/blokirPerkumpulan/detail/_suratJawaban.php\n\n- name: |\n    Pencarian & Profil Perusahaan (Profil PT)\n  description: |\n    Pengguna dapat mencari profil PT dan membeli profil perusahaan. Ini seperti katalog perusahaan dengan ringkasan alamat, provinsi/kabupaten, dan tagihan terkait. Kode menunjukkan pola pencarian CActiveRecord + pagination + tampilan ringkas yang siap dikembangkan ke fitur komersial.\n  file_indices:\n    - 299 # controllers/persero/ProfilController.php\n    - 537 # views/persero/profil/index.php\n    - 533 # views/persero/profil/pdf_allpage_bakum.php\n\n- name: |\n    Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n  description: |\n    Banyak proses memerlukan penomoran, penggabungan data multi tahun, atau transformasi hasil query. Komponen NoTransaksiSABH/NoSKSABH (penomoran) dan DashboardHelper (utilitas agregasi) menyatukan praktik domain. Ini membuat logika berulang tidak tersebar acak.\n  file_indices:\n    - 340 # components/NoTransaksiSABH.php\n    - 356 # components/NoSKSABH.php\n    - 343 # components/DashboardHelper.php\n\n- name: |\n    Desain DTO (Data Transfer Object)\n  description: |\n    DTO bertindak seperti \u201cform kontrak\u201d antar layer/layanan. Misalnya CreatePermohonanPemblokiranPTDto atau CreatePermohonanBerakhirnyaStatusBadanHukumDto memastikan struktur data, validasi, dan transformasi konsisten. Dengan DTO, controller mudah dibaca dan service aman terhadap perubahan struktur.\n  file_indices:\n    - 1145 # dto/CreatePermohonanPemblokiranPTDto.php\n    - 1148 # dto/CreatePermohonanBerakhirnyaStatusBadanHukumDto.php\n    - 1147 # dto/GetPerseroanDto.php\n\n- name: |\n    Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n  description: |\n    Seperti kamus padanan, tabel mapping menyambung tipe dan jenis transaksi agar antar modul/billing saling memahami istilah. Ini mengurangi hardcode di banyak tempat, memudahkan penyesuaian kebijakan tanpa mengubah logika inti.\n  file_indices:\n    - 151 # models/MappingTipeTransaksi.php\n\n- name: |\n    Integrasi Frontend Modern (Alpine.js untuk Wizard)\n  description: |\n    Beberapa UI memakai Alpine.js untuk state manajemen ringan (multi-step form, modal, preview). Ini membuat form panjang terasa natural, dengan validasi inline dan simpan state sementara (sessionStorage). Cocok untuk melihat bagaimana Yii (PHP) dipadukan dengan frontend reaktif tanpa framework berat.\n  file_indices:\n    - 1114 # views/penghapusanBadanHukum/permohonan/index.php\n    - 932 # views/blokirPerseroan/create/index.php\n    - 927 # views/blokirPerseroan/pratinjau/index.php\n\n- name: |\n    Standar Logging & Audit (History & LogSABH)\n  description: |\n    Aplikasi menyimpan jejak perubahan dan aktivitas penting (history transaksi, log BO, log pajak). Ini seperti CCTV sistem: memudahkan audit, pelacakan bug, dan kepatuhan. Ada model history khusus dan logger file-based untuk kebutuhan integrasi eksternal.\n  file_indices:\n    - 116 # models/TransaksiBoHistory.php\n    - 128 # models/LogSummary.php\n    - 339 # components/LogSABH.php\n    - 510 # views/history/detail_history_transaksi.php\n\n- name: |\n    Peta Status Permohonan (Konstanta Status)\n  description: |\n    Konstanta status (MENUNGGU_KONSEPTOR, DITOLAK_VERIFIKATOR, dsb.) menjaga keseragaman antar layar dan API. Seperti rambu jalan, semua pihak membaca status yang sama. Ini memudahkan filter, label, dan kontrol hak akses per tahap.\n  file_indices:\n    - 859 # views/verifikasiPerubahanPerseroan/_common/constants.php\n    - 1110 # views/votingPerubahanPerseroan/_common/constants.php", "\nBased on the following abstractions and relevant code snippets from the project `sabh-openai-bahasa`:\n\nList of Abstraction Indices and Names (Names might be in Bahasa indonesia):\n0 # Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\n1 # Pola MVC Yii: Controller, Model, dan View\n\n2 # Layanan Perseroan Terbatas (PT)\n\n3 # Layanan Yayasan\n\n4 # Layanan Perkumpulan\n\n5 # Alur Pesan Nama (Name Reservation)\n\n6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n\n7 # Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n\n8 # Permohonan Pemblokiran PT (Endpoint & DTO)\n\n9 # Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n\n10 # Proxy Backend Go & Token Kriptografi\n\n11 # Upload File Terstandar (PDF) untuk Layanan\n\n12 # Generator PDF via Gotenberg (HTML ke PDF)\n\n13 # Standar Respons API & Penanganan Error\n\n14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n\n15 # Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n\n16 # Monitoring Notaris & BO (Laporan dan Grafik)\n\n17 # Cleansing Data (Skema, Organ, Modal)\n\n18 # Sistem Voucher & Billing\n\n19 # Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n\n20 # Peta Badan Hukum (Google Maps)\n\n21 # Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n\n22 # Voting Pemegang Saham (Link Token)\n\n23 # Email Service & Antrian Pengiriman\n\n24 # Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n\n25 # Reupload & Monitoring Bukti Setor Modal Dasar\n\n26 # Standar Token Auth untuk Bridging User\n\n27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n\n28 # Pusat Pemetaan Enums & Konstanta Bisnis\n\n29 # Standar Controller API (Tipis, Aman, Konsisten)\n\n30 # Monitoring & Laporan Transaksi Perseroan\n\n31 # Alur Upload Akta & Hubungan ke Transaksi\n\n32 # UI Komponen & Widget (Dcl*)\n\n33 # Public API Bakum (Akses Mitra)\n\n34 # Peta Status & Riwayat Verifikasi\n\n35 # Validasi & Filter Data (Validator Khusus)\n\n36 # Komunikasi Email & Template Surat\n\n37 # Pencarian & Profil Perusahaan (Profil PT)\n\n38 # Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n\n39 # Desain DTO (Data Transfer Object)\n\n40 # Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n\n41 # Integrasi Frontend Modern (Alpine.js untuk Wizard)\n\n42 # Standar Logging & Audit (History & LogSABH)\n\n43 # Peta Status Permohonan (Konstanta Status)\n\n\nContext (Abstractions, Descriptions, Code):\nIdentified Abstractions:\\n- Index 0: Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n (Relevant file indices: [0, 329, 351, 401])\\n  Description: Bayangkan SABH seperti mal besar yang menaungi banyak toko layanan: pesan nama, verifikasi, pemblokiran, hingga laporan. \u201cMal\u201d-nya adalah modul SABH yang menata rapi lorong (controller), gudang (model), dan etalase (view). Setiap fitur berjalan mengikuti pola MVC milik Yii, sehingga alur data dan tampilan mudah ditelusuri. Bagi pendatang baru, memahami modul ini ibarat memegang peta mal: Anda tahu pintu masuknya, ke mana bertanya, dan di rak mana suatu layanan tersedia. Modul ini juga punya standar respons API, penanganan error, dan utilitas bersama agar semua \u201ctoko\u201d konsisten melayani.\n\\n- Index 1: Pola MVC Yii: Controller, Model, dan View\n (Relevant file indices: [238, 244, 250, 321, 322, 401])\\n  Description: Pikirkan aplikasi seperti pertunjukan teater. Controller adalah sutradara (mengatur adegan dan alur), Model adalah naskah dan data pemain (isi cerita), sedangkan View adalah panggung dan dekorasi (tampilan). Di SABH, controller menerima permintaan (web atau API), meminta data melalui model, lalu merender view. Pola ini membuat kode mudah dibaca, diuji, dan dirawat. Bagi pemula, fokuslah mencari \u201cController\u201d untuk memahami pintu masuk fitur, \u201cModel\u201d untuk tahu data apa yang dipakai, dan \u201cView\u201d untuk mengubah tampilan ke pengguna.\n\\n- Index 2: Layanan Perseroan Terbatas (PT)\n (Relevant file indices: [62, 299, 302, 318, 320, 721])\\n  Description: Fitur PT ibarat loket layanan khusus perusahaan: cek, perubahan, pembubaran, merger, akuisisi, hingga pemblokiran. Controller mengatur alur layanan, model menyimpan detail perseroan dan transaksi, sedangkan view menampilkan formulir, pratinjau, dan riwayat. Ada juga API untuk pencarian cepat dan verifikasi. Bagi pemula, mulai dari controller PT untuk melihat alur lalu telusuri model Perseroan dan tampilan terkait. Pola kerja ini membantu menjaga konsistensi proses bisnis antarfitur, seperti loket tunggal yang menyediakan banyak kebutuhan perusahaan.\n\\n- Index 3: Layanan Yayasan\n (Relevant file indices: [134, 204, 310, 312, 313, 807])\\n  Description: Layaknya loket layanan bagi yayasan, modul ini mengelola pendirian, perubahan, pembubaran, penggabungan, hingga monitoring. Controller mengarahkan proses, model menyimpan struktur data (akta, pengurus, koran, kuorum), dan view menyajikan formulir serta pratinjau ringkas. Alur berjenjang (wizard) membantu pemohon melewati setiap tahap dengan jelas. Bagi pemula, mulai dari controller yayasanbaru (perubahan, pembubaran, penggabungan), lihat model form per langkah, kemudian telaah view untuk memahami urutan input dan validasi.\n\\n- Index 4: Layanan Perkumpulan\n (Relevant file indices: [159, 190, 237, 324, 595])\\n  Description: Fitur ini seperti pusat layanan organisasi perkumpulan: pendirian, perubahan, verifikasi, hingga proses khusus seperti penghapusan. Controller menjadi pengarah kegiatan, model menyimpan data badan hukum, dan view menampilkan proses bertahap yang mudah diikuti. Tersedia juga endpoint API untuk validasi dan integrasi internal. Bagi pemula, susuri alur di PerkumpulanController (API) maupun halaman UI, pahami model BadanHukum dan TransaksiPerkumpulan, lalu lihat view untuk alur pengguna.\n\\n- Index 5: Alur Pesan Nama (Name Reservation)\n (Relevant file indices: [25, 32, 265, 285, 892, 899])\\n  Description: Bayangkan mendaftarkan \u201cmerek nama\u201d sebelum mendirikan badan hukum. Alur Pesan Nama memeriksa kesediaan nama, menyimpan pemesanan (dengan masa berlaku), dan memantau status. Tersedia UI dan API publik untuk cek dan simpan (dengan API key). Model OrderName dan turunannya memegang data, controller mengatur logika, sedangkan view menyajikan formulir dan daftar. Cocok sebagai titik awal memahami core flow SABH karena menyentuh validasi, billing voucher, dan monitoring.\n\\n- Index 6: Verifikasi Perubahan Perseroan (Workflow dan Voting)\n (Relevant file indices: [318, 391, 398, 854, 1109, 1177])\\n  Description: Ini seperti loket berlapis untuk memeriksa perubahan data PT: verifikator, direktur BU, hingga jenderal. Ada riwayat, tahap status, dan bahkan voting pemegang saham via tautan aman. Layer service dan repository memisahkan logika bisnis dan akses data, sehingga mudah dirawat. Endpoint API menyediakan daftar, riwayat, pratinjau, hingga aksi approve/reject/revisi. Bagi pemula, pelajari controller API dan service-nya untuk melihat desain workflow modern berbasis status.\n\\n- Index 7: Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n (Relevant file indices: [319, 521, 921, 968, 1188, 1189, 1191])\\n  Description: Anggap ini seperti fitur \u201ckartu akses\u201d digital untuk entitas. Ketika terjadi masalah hukum atau sengketa, akses bisa diblokir sementara; setelah diverifikasi, dapat dibuka kembali. Alur mencakup pendaftaran permohonan, upload dokumen, verifikasi bertahap, dan pembuatan surat jawaban. UI disusun per domain (PT/Yayasan/Perkumpulan). Ada integrasi ke backend Go via proxy dan token. Bagi pemula, telusuri modul ini untuk melihat contoh integrasi lintas layanan dengan standar keamanan.\n\\n- Index 8: Permohonan Pemblokiran PT (Endpoint & DTO)\n (Relevant file indices: [91, 321, 1145, 1198])\\n  Description: Fitur ini adalah jalur cepat pengajuan blokir untuk PT. Ibarat mengisi formulir digital lengkap (jenis layanan, kategori, identitas pemohon, dan tautan dokumen), sistem akan memvalidasi dan menyimpan via DTO yang jelas. Layanan memusatkan validasi, logging, dan simpan ke database. Cocok untuk memahami pola \u201cPOST JSON -> DTO -> Service -> Model -> OK\u201d. \n\\n- Index 9: Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n (Relevant file indices: [63, 315, 1114, 1148, 1202])\\n  Description: Seperti layanan administrasi untuk \u201cmenutup buku\u201d badan hukum. Pemohon mengisi data akta pembubaran, pengumuman koran, dan kelengkapan lain. Controller API menerima data JSON, service menyimpan aman ke database, dan UI memandu tahapan. Alur ini menekankan validasi data dan jejak audit. Bagi pemula, lihat bagaimana pola DTO + Service menstandarkan pemrosesan agar mudah diintegrasi dan diaudit.\n\\n- Index 10: Proxy Backend Go & Token Kriptografi\n (Relevant file indices: [319, 325, 1188, 1189])\\n  Description: Ini seperti \u201ckurir terpercaya\u201d yang mengantar surat ke backend Go. Setiap permintaan disertai token terenkripsi (AES-256-CBC + HMAC) berisi klaim user. Proxy menyederhanakan GET/POST/PUT/DELETE dan menangani error HTTP dengan rapi. Dengan cara ini, aplikasi PHP tetap ramping, sementara proses berat ditangani layanan Go. Pemula akan paham bagaimana keamanan, header, dan timeout disatukan dalam library proxy yang rapi.\n\\n- Index 11: Upload File Terstandar (PDF) untuk Layanan\n (Relevant file indices: [322, 1149, 1186, 1194, 1203])\\n  Description: Bayangkan loket satu pintu untuk upload dokumen. FileController memeriksa metode, error upload, dan parameter tipe file. FileService mengelola direktori tujuan (berdasarkan jenis), memvalidasi ukuran/tipe (PDF saja), memberi nama unik, lalu menyimpan. Ada enum tipe file agar konsisten. Pemula belajar pola \u201ccontroller tipis + service kuat\u201d untuk upload aman dan mudah dilacak.\n\\n- Index 12: Generator PDF via Gotenberg (HTML ke PDF)\n (Relevant file indices: [317, 1185])\\n  Description: Fitur ini seperti mesin pencetak surat: Anda kirim HTML dan opsi, sistem mengubahnya menjadi PDF siap unduh. PdfService menyiapkan form-data (dengan file HTML sementara), memanggil Gotenberg, dan mengembalikan file atau base64. Controller API menyediakan dua mode: hasil JSON atau langsung tampil inline. Pemula akan melihat integrasi layanan eksternal yang andal dan pola penanganan berkas sementara yang aman.\n\\n- Index 13: Standar Respons API & Penanganan Error\n (Relevant file indices: [326, 327, 329, 330, 332, 401])\\n  Description: Seperti bahasa baku pelayanan: semua API merespons dalam format JSON konsisten dengan kode status, pesan, dan data. Jika terjadi kesalahan, APIExceptionThrower memudahkan mengirim 400/401/403/404/405/409/422/500/503 dengan rapi. Ini membuat integrasi pihak ketiga nyaman karena struktur respons dapat diprediksi. Pemula cukup pakai APIResponse::ok atau ExceptionThrower di tiap controller.\n\\n- Index 14: Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n (Relevant file indices: [1099, 1155, 1160, 1162, 1165, 1175])\\n  Description: Anggap ini papan skor nasional. Mapper mengemas query lintas tabel transaksi per tahun (union) dan filter wilayah/tanggal, lalu service menyajikan ke UI Highcharts. Dengan pola ini, data PT/Yayasan/Perkumpulan bisa dipotong per provinsi/kabupaten atau rentang tanggal. Pemula akan belajar layer data khusus laporan (mapper) agar controller tetap bersih dan query mudah dirawat.\n\\n- Index 15: Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n (Relevant file indices: [137, 171, 244, 361, 415, 427])\\n  Description: BO ibarat mencatat \u201cpemilik sebenarnya\u201d di balik badan hukum. Modul ini menyediakan formulir, kriteria, validasi, dan monitoring per notaris. Ada integrasi ke layanan BO eksternal, plus panel pratinjau dan riwayat. Struktur form yang rinci memandu input kompleks (perorangan/badan hukum). Pemula disarankan eksplorasi BoController, form-model (BoForm, BoDetailForm), dan BoAPI untuk melihat desain domain yang lengkap.\n\\n- Index 16: Monitoring Notaris & BO (Laporan dan Grafik)\n (Relevant file indices: [125, 262, 432, 436, 444])\\n  Description: Seperti papan kendali bagi notaris: melihat jumlah entitas dengan/ tanpa BO, grafik periodik, dan rincian per badan hukum. Template PDF siap cetak tersedia. Data diambil via model monitoring dan dirender ke view laporan. Pola ini memisahkan data (model), penyajian (view), dan navigasi (controller) agar mudah dikembangkan.\n\\n- Index 17: Cleansing Data (Skema, Organ, Modal)\n (Relevant file indices: [248, 293, 366, 905])\\n  Description: Ibarat gudang arsip yang dibereskan: cleansing menormalisasi, memecah, dan memindahkan data lama ke struktur baru. Ada daftar log, tombol eksekusi, dan laporan perbedaan. Komponen DatabaseHelpers mempermudah query builder, cek/membuat tabel, dan batch insert. Bagi pemula, modul ini menunjukkan cara menulis utilitas data yang rapi dan reusable.\n\\n- Index 18: Sistem Voucher & Billing\n (Relevant file indices: [104, 290, 323, 358, 690])\\n  Description: Voucher ibarat \u201ctiket\u201d untuk mengakses layanan tertentu (pesan nama, perbaikan, dsb). Ada pembuatan, daftar, validasi penggunaan, hingga integrasi ke SIMPONI. Controller mengelola UI dan API menyediakan endpoint status. Pemula dapat melihat bagaimana kode memadukan bisnis voucher, keamanan (validasi), dan keterhubungan ke proses lain (pesan nama).\n\\n- Index 19: Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n (Relevant file indices: [53, 337, 339])\\n  Description: Fitur ini seperti pintu ke Direktorat Jenderal Pajak. Sistem mengambil token, memeriksa NPWP, dan mengirim data registrasi. Ada logging terstruktur untuk jejak audit. Kode menangani timeout, header, dan error dengan teliti. Pemula akan belajar integrasi aman ke layanan pemerintah eksternal dengan otentikasi dan format data yang ketat.\n\\n- Index 20: Peta Badan Hukum (Google Maps)\n (Relevant file indices: [264, 840, 841])\\n  Description: Seperti peta interaktif untuk melihat sebaran badan hukum per wilayah. Pengguna memilih filter, sistem memuat marker dengan label jumlah, dan grid detail dapat diunduh. Kode memanfaatkan Google Maps API dan helper marker. Cocok untuk memahami integrasi frontend JS eksternal di dalam view Yii.\n\\n- Index 21: Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n (Relevant file indices: [251, 324, 1114, 1204])\\n  Description: Alur ini ibarat dua babak: pengajuan penghapusan (validasi entitas & persyaratan) dan permohonan detail (akta, rapat, daftar koran). UI memakai Alpine.js untuk state-step dan penyimpanan sessionStorage, lalu panggil endpoint API untuk membuat transaksi dan upload akta. Kode PerkumpulanService menerjemahkan form ke transaksi operasional. Pemula akan melihat contoh alur multi-step modern terpadu ke backend.\n\\n- Index 22: Voting Pemegang Saham (Link Token)\n (Relevant file indices: [48, 275, 318, 1109])\\n  Description: Sistem mengirim tautan ber-token ke pemegang saham untuk menyetujui/menolak perubahan. Seperti formulir persetujuan elektronik yang aman dan bermasa aktif. API men-decode token, mengecek masa berlaku, menampilkan perubahan \u201csemula\u201d vs \u201cmenjadi\u201d, dan menyimpan suara. Alur ini menunjukkan implementasi e-voting sederhana namun aman.\n\\n- Index 23: Email Service & Antrian Pengiriman\n (Relevant file indices: [349, 1184, 1199])\\n  Description: Daripada mengirim email langsung (rawan timeout), sistem mengantrikan ke layanan Go khusus email. EmailQueueService membangun multipart/form-data, menyertakan lampiran, dan menangani error HTTP atau cURL. Ini seperti menyerahkan paket ke kurir khusus agar pengiriman andal dan tidak mengganggu proses utama. Cocok sebagai contoh decoupling proses berat.\n\\n- Index 24: Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n (Relevant file indices: [339, 1172, 1173])\\n  Description: Seperti kotak perkakas yang selalu dibawa. RequestContext mempermudah baca metode/JSON body/parameter, ArrayHelper menyaring dan mengambil nilai aman dari array, LogSABH mencatat ke file runtime. Dengan utilitas ini, controller lebih bersih dan aman. Pemula sebaiknya membiasakan memakai helper daripada menulis ulang fungsi serupa.\n\\n- Index 25: Reupload & Monitoring Bukti Setor Modal Dasar\n (Relevant file indices: [146, 157, 286, 670, 902])\\n  Description: Fitur ini menangani unggah ulang bukti setor dan monitoringnya. Ada validasi tahun tabel transaksi, grid filter dengan datepicker, serta unduh excel. Pola yang digunakan: controller ringan, view interaktif, serta model khusus (UploadModalDasar/Log) untuk jejak. Pemula dapat melihat bagaimana batch data keuangan ditata agar mudah ditelusuri.\n\\n- Index 26: Standar Token Auth untuk Bridging User\n (Relevant file indices: [316, 1191, 1192, 1200])\\n  Description: Untuk menghubungkan identitas pengguna antar layanan, sistem menyediakan DCUserService (lookup user) dan layanan auth pihak blokir. Token disusun, lalu backend lain mengembalikan profil. Ini seperti kartu identitas tunggal di ekosistem yang berbeda. Pemula belajar memisahkan domain \u201cuser management\u201d dari domain layanan bisnis.\n\\n- Index 27: Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n (Relevant file indices: [1158, 1160, 1162, 1164, 1165])\\n  Description: Mapper adalah \u201cjuru masak\u201d yang menyiapkan data dari dapur database menjadi sajian siap konsumsi (join, union, group-by). Berbeda dari ActiveRecord umum, mapper fokus pada laporan dan agregasi lintas-tabel-tahunan. Pemula akan memahami kapan perlu membuat layer SQL khusus, agar query kompleks tidak mengotori controller atau model domain.\n\\n- Index 28: Pusat Pemetaan Enums & Konstanta Bisnis\n (Relevant file indices: [385, 1149, 1150, 1151, 1152, 1153])\\n  Description: Seperti kamus istilah, enums menstandarkan nilai bisnis: jenis layanan permohonan, kategori permohonan, kewarganegaraan, pemegang saham, sampai tipe file. Daripada string bebas, developer memakai konstanta agar validasi dan UI konsisten. Ini mengurangi typo dan memudahkan refactor.\n\\n- Index 29: Standar Controller API (Tipis, Aman, Konsisten)\n (Relevant file indices: [315, 317, 321, 322])\\n  Description: Controller API di SABH cenderung \u201ctipis\u201d: cek metode, baca JSON body, validasi via DTO/service, lalu balas dengan APIResponse. Error ditangani ExceptionThrower. Pola ini membuat endpoint mudah ditambah tanpa menambah utang teknis. Pemula bisa meniru kerangka ini untuk fitur baru: kecil, fokus, dan berulang.\n\\n- Index 30: Monitoring & Laporan Transaksi Perseroan\n (Relevant file indices: [239, 359, 849, 852])\\n  Description: Fitur ini menampilkan grafik dan tabel detail transaksi (pendirian/perubahan) dengan filter harian, bulanan, tahunan. Mapper khusus menghitung agregat dan mengembalikan data siap chart. Tampilan dilengkapi aksi unduh, detail maksud/tujuan, dan resume modal. Cocok untuk memahami integrasi SQL-agregasi, Highcharts, dan grid interaktif.\n\\n- Index 31: Alur Upload Akta & Hubungan ke Transaksi\n (Relevant file indices: [90, 166, 294, 324])\\n  Description: Upload akta adalah simpul penting: sesudah tersimpan, sistem mendorong aktivasi proses lain (misal, aktivasi Dukcapil atau notifikasi). Kode menyiapkan log upload, validasi transaksi, dan commit/rollback aman. Pemula dapat melihat bagaimana event pasca-upload dipakai menggerakkan proses bisnis lintas modul.\n\\n- Index 32: UI Komponen & Widget (Dcl*)\n (Relevant file indices: [367, 368, 370, 813])\\n  Description: Komponen UI custom (DclPanel, DclModal, DclDatepicker, dsb) membantu menyajikan formulir dan dialog konsisten. Seperti komponen LEGO, developer dapat menyusun layar cepat dengan gaya seragam. Ini mengurangi duplikasi dan mempermudah perubahan tema global.\n\\n- Index 33: Public API Bakum (Akses Mitra)\n (Relevant file indices: [53, 285])\\n  Description: Endpoint publik dengan header API-KEY memungkinkan mitra memeriksa atau menyimpan Pesan Nama dari luar sistem. Ada validasi JSON, cek voucher, dan query khusus. Ini contoh bagaimana membuka sebagian layanan ke ekosistem luas dengan keamanan dasar (secret token di database).\n\\n- Index 34: Peta Status & Riwayat Verifikasi\n (Relevant file indices: [40, 397, 514, 913, 961])\\n  Description: Setiap transaksi memiliki status perjalanan (menunggu, ditolak, disetujui) dan riwayat siapa \u201cmenyentuh\u201d kapan. Repositori RiwayatVerifikasi memusatkan simpan/ambil riwayat, sedangkan view menampilkan garis waktu yang mudah dipahami. Ini seperti buku log digital untuk transparansi proses.\n\\n- Index 35: Validasi & Filter Data (Validator Khusus)\n (Relevant file indices: [379, 380, 382])\\n  Description: Selain validator Yii bawaan, SABH punya validator kustom: filterNumber (membersihkan angka), voucherYayasan (cek voucher dan mapping), validateBo (validasi form BO). Ini seperti penjaga gerbang yang memastikan data masuk selalu rapi dan benar. Taruh validator di rules() model agar setiap masukan konsisten.\n\\n- Index 36: Komunikasi Email & Template Surat\n (Relevant file indices: [517, 725, 916, 964, 1122])\\n  Description: SABH menyiapkan template email (notifikasi, blokir, dsb.) serta \u201csurat jawaban\u201d dalam UI pemblokiran. Ini seperti kantor sekretariat yang siap mengirimkan surat resmi berbasis data yang telah diverifikasi. Template memisahkan konten dari logika sehingga mudah disesuaikan tampilan atau bahasa.\n\\n- Index 37: Pencarian & Profil Perusahaan (Profil PT)\n (Relevant file indices: [299, 533, 537])\\n  Description: Pengguna dapat mencari profil PT dan membeli profil perusahaan. Ini seperti katalog perusahaan dengan ringkasan alamat, provinsi/kabupaten, dan tagihan terkait. Kode menunjukkan pola pencarian CActiveRecord + pagination + tampilan ringkas yang siap dikembangkan ke fitur komersial.\n\\n- Index 38: Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n (Relevant file indices: [340, 343, 356])\\n  Description: Banyak proses memerlukan penomoran, penggabungan data multi tahun, atau transformasi hasil query. Komponen NoTransaksiSABH/NoSKSABH (penomoran) dan DashboardHelper (utilitas agregasi) menyatukan praktik domain. Ini membuat logika berulang tidak tersebar acak.\n\\n- Index 39: Desain DTO (Data Transfer Object)\n (Relevant file indices: [1145, 1147, 1148])\\n  Description: DTO bertindak seperti \u201cform kontrak\u201d antar layer/layanan. Misalnya CreatePermohonanPemblokiranPTDto atau CreatePermohonanBerakhirnyaStatusBadanHukumDto memastikan struktur data, validasi, dan transformasi konsisten. Dengan DTO, controller mudah dibaca dan service aman terhadap perubahan struktur.\n\\n- Index 40: Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n (Relevant file indices: [151])\\n  Description: Seperti kamus padanan, tabel mapping menyambung tipe dan jenis transaksi agar antar modul/billing saling memahami istilah. Ini mengurangi hardcode di banyak tempat, memudahkan penyesuaian kebijakan tanpa mengubah logika inti.\n\\n- Index 41: Integrasi Frontend Modern (Alpine.js untuk Wizard)\n (Relevant file indices: [927, 932, 1114])\\n  Description: Beberapa UI memakai Alpine.js untuk state manajemen ringan (multi-step form, modal, preview). Ini membuat form panjang terasa natural, dengan validasi inline dan simpan state sementara (sessionStorage). Cocok untuk melihat bagaimana Yii (PHP) dipadukan dengan frontend reaktif tanpa framework berat.\n\\n- Index 42: Standar Logging & Audit (History & LogSABH)\n (Relevant file indices: [116, 128, 339, 510])\\n  Description: Aplikasi menyimpan jejak perubahan dan aktivitas penting (history transaksi, log BO, log pajak). Ini seperti CCTV sistem: memudahkan audit, pelacakan bug, dan kepatuhan. Ada model history khusus dan logger file-based untuk kebutuhan integrasi eksternal.\n\\n- Index 43: Peta Status Permohonan (Konstanta Status)\n (Relevant file indices: [859, 1110])\\n  Description: Konstanta status (MENUNGGU_KONSEPTOR, DITOLAK_VERIFIKATOR, dsb.) menjaga keseragaman antar layar dan API. Seperti rambu jalan, semua pihak membaca status yang sama. Ini memudahkan filter, label, dan kontrol hak akses per tahap.\n\\n\\nRelevant File Snippets (Referenced by Index and Path):\\n--- File: 1186 # services/api/IFileService.php ---\n<?php\n\ninterface IFileService\n{\n    public function createFile($fileType, $file);\n}\n\n--- File: 1200 # services/api/IBlokirAuthUserService.php ---\n<?php\n\n\n\ninterface IBlokirAuthUserService\n{\n    public function getBlokirAuthUser($user_id);\n}\n\n--- File: 327 # exception/BaseApiException.php ---\n<?php\n\nclass BaseApiException extends Exception {\n    protected $statusCode;\n\n    public function __construct($message, $statusCode) {\n        parent::__construct($message);\n        $this->statusCode = $statusCode;\n    }\n\n    public function getStatusCode() {\n        return $this->statusCode;\n    }\n}\n\n\n--- File: 1184 # services/api/EmailService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.EmailDto');\nYii::import('application.modules.sabh.services.api.IEmailService');\n\nclass EmailService implements IEmailService {\n \n    public function sendEmail(EmailDto $emailDto) {\n\n    }\n\n    public function sendEmailWithAttachments(EmailDto $emailDto, $attachments) {\n\n    }\n}\n\n--- File: 316 # controllers/api/UserController.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.DCUserService');\n\nclass UserController extends Controller\n{\n    private $dcUserService;\n\n    public function init()\n    {\n        parent::init();\n        $this->dcUserService = new DCUserService();\n    }\n    \n    public function actionUsernameAvailable($username)\n    {\n        if (RequestContext::isMethod(\"GET\")) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $user = $this->dcUserService->findByName($username);\n\n        if ($user) {\n            APIResponse::ok(['available' => false]);\n        }\n\n        APIResponse::ok(['available' => true]);\n    }\n\n    public function actionEmailAvailable($email)\n    {\n        if (RequestContext::isMethod(\"GET\")) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $user = $this->dcUserService->findByEmail($email);\n\n        if ($user) {\n            APIResponse::ok(['available' => false]);\n        }\n\n        APIResponse::ok(['available' => true]);\n    }\n}\n\n--- File: 1191 # services/api/BlokirAuthService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IBlokirAuthUserService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.services.api.PemblokiranProxyService');\n\nclass BlokirAuthService implements IBlokirAuthUserService\n{\n    private $exceptionThrower;\n    private $pemblokiranProxyService; \n    private $authEndpoint;\n\n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->pemblokiranProxyService = new PemblokiranProxyService();\n        $this->authEndpoint = isset(Yii::app()->params['pemblokiran']['auth_endpoint']) \n            ? Yii::app()->params['pemblokiran']['auth_endpoint'] \n            : 'http://localhost:8080/auth';\n    }\n\n    public function getBlokirAuthUser($user_id)\n    {\n        $response = $this->pemblokiranProxyService->get($this->authEndpoint, $user_id);\n\n        if (!!$response && $response['data']) {\n            return $response['data'];\n        }\n        \n        dd($response);\n        $this->exceptionThrower->throwUnauthorized('Unauthorized');\n    }\n}\n\n--- File: 323 # controllers/api/VoucherController.php ---\n<?php\n\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nClass VoucherController extends Controller {\n    \n    private $exceptionThrower;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function actionCheckValidity() {\n        header('Content-Type: application/json');\n        echo CJSON::encode([\n            \"status\" => \"valid\",\n        ]);\n        return;\n        if (!(Yii::app()->request->getRequestType() == 'GET')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // Id produk PT: 001001\n        // Tipe transaksi voucher pemblokiran (hardcoded): 001011019\n\n        $tipe_transaksi = Yii::app()->request->getParam('tipe_transaksi');\n        $id_produk = Yii::app()->request->getParam('id_produk');\n        $voucher = Yii::app()->request->getParam('voucher');\n        $id_mapping = Yii::app()->request->getParam('id_mapping');\n        \n        $result = BillingSimponi::model()->cekKodeVoucher($voucher, $id_produk, $tipe_transaksi, $id_mapping);\n\n        $response = [\n            \"status\" => $result == null ? \"valid\" : $result,\n        ];\n\n        header('Content-Type: application/json');\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n}\n\n\n--- File: 320 # controllers/api/PerseroanTerbatasController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nClass PerseroanTerbatasController extends Controller {\n\n    private $exceptionThrower;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function actionIndex() {\n        if (!(Yii::app()->request->getRequestType() == 'GET')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $response = [\n            \"data\" => []\n        ];\n\n        // 1. Fetch data from Perseroan model\n        $nama = Yii::app()->request->getParam('nama');\n        $limit = (int) Yii::app()->request->getParam('limit', 10);\n\n        $criteria = new CDbCriteria;\n        $criteria->condition = 'nama_perseroan LIKE :nama';\n        $criteria->params = array(':nama' => '%' . $nama . '%');\n        $criteria->limit = $limit;\n        $criteria->order = 'nama_perseroan ASC';\n\n        $perseroanList = Perseroan::model()->findAll($criteria);\n\n        // 2. Fetch data from OssServices \n        // TODO: Return NIB\n        if ($perseroanList) {\n            // Convert to array format for OssServices\n            $listData = array();\n            foreach ($perseroanList as $perseroan) {\n                $listData[] = $perseroan->attributes;\n            }\n            \n            // Use OssServices to generate standardized data\n            $oss = new OssServices('OSS013', '35a2b952273953a652529b7281a8d55f');\n            $response[\"data\"] = $oss->generateListDataPT($listData);\n        }\n\n        header('Content-Type: application/json');\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n}\n\n\n--- File: 321 # controllers/api/PermohonanPemblokiranPTController.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanPemblokiranPTDto');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.ArrayHelper');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.PermohonanPemblokiranPTService');\n\nclass PermohonanPemblokiranPTController extends Controller\n{\n    private $exceptionThrower;\n    private $permohonanPemblokiranPTService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->permohonanPemblokiranPTService = new PermohonanPemblokiranPTService();\n    }\n\n    public function actionCreate()\n    {\n        // 1. Throw if method is not POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Get the JSON body\n        try {\n            $body = RequestContext::getJsonBody();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 3. Convert the data into DTO\n        $createPermohonanPemblokiranPT = CreatePermohonanPemblokiranPTDto::fromArray($body);\n\n        // 4. Validate the DTO\n        try {\n            $createPermohonanPemblokiranPT->isValid();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 5. Create the Permohonan Pemblokiran PT\n        try {\n            $this->permohonanPemblokiranPTService->createPermohonanPemblokiranPT($createPermohonanPemblokiranPT);\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwInternalServerError($e->getMessage());\n        }\n\n        APIResponse::ok();\n    }\n}\n\n\n--- File: 1192 # services/api/DCUserService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IDCUserService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass DCUserService implements IDCUserService\n{\n    private $exceptionThrower;\n\n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function findByName($name)\n    {\n        return DclUser::model()->findByAttributes(['name' => $name]);\n    }\n\n    public function findByEmail($email)\n    {\n        return DclUser::model()->findByAttributes(['email' => $email]);\n    }\n\n    public function findByNameAndEmail($name, $email)\n    {\n        return DclUser::model()->findByAttributes(['name' => $name, 'email' => $email]);\n    }\n\n\n    public function createUser(RegisterUserDto $dto)\n    {\n        $model = new DclUser('create');\n        $model->name = $dto->username;\n        $model->email = $dto->email;\n        $model->status = 1;\n        $model->pass = $this->generatePassword($dto->username);\n        $model->passconf = $model->pass;\n\n        if (!$model->save()) {\n            $this->exceptionThrower->throwInternalServerError('Failed to save to database');\n        }\n\n        return $model;\n    }\n\n\n    private function generatePassword($username)\n    {\n        // Ensure at least 12 characters, mix username, random chars, and numbers\n        $random = bin2hex(random_bytes(4)); // 8 random hex chars\n        $shuffled = str_shuffle($username);\n        $base = substr($shuffled, 0, 4);\n        $specials = '!@#$%^&*';\n        $special = $specials[random_int(0, strlen($specials) - 1)];\n        $password = $base . $random . $special;\n        // Ensure minimum length 12\n        if (strlen($password) < 12) {\n            $password .= bin2hex(random_bytes(2));\n        }\n        return $password;\n    }\n}\n\n\n--- File: 401 # response/APIResponse.php ---\n<?php\n\nYii::import('application.modules.sabh.response.IResponse');\n\n/**\n * API Response Implementation\n * \n * Concrete implementation of IResponse interface for API controllers.\n * Provides consistent JSON response handling with proper headers.\n */\nclass APIResponse implements IResponse\n{\n    \n    /**\n     * Send a success response\n     * \n     * @param string $message The success message\n     * @return void\n     */\n    private static function send($success, $message, $data = null, $status = 200) \n    {\n        $response = array(\n            'success' => $success,\n            'message' => $message,\n            'data' => $data,\n            'status' => $status\n        );\n\n        // Map status code to text\n        $statusText = array(\n            200 => 'Success',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            500 => 'Internal Server Error'\n        );\n        \n        $text = isset($statusText[$status]) ? $statusText[$status] : 'Error';\n        \n        // Set headers\n        header($_SERVER['SERVER_PROTOCOL'] . \" $status $text\");\n        header('Content-Type: application/json; charset=utf-8');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With');\n        \n        // Send JSON response\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n\n    public static function ok($data = null, $message = 'Success')\n    {\n        self::send(true, $message, $data, 200);\n    }\n\n    /**\n     * Send an error response\n     * \n     * @param string $message The error message\n     * @param int $status HTTP status code\n     * @param mixed $data Optional error data\n     * @return void\n     */\n    public static function error($message, $status = 500, $data = null)\n    {\n        self::send(false, $message, $data, $status);\n    }\n}\n\n\n--- File: 315 # controllers/api/PermohonanBerakhirnyaStatusBadanHukumController.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanBerakhirnyaStatusBadanHukumDto');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.impl.PermohonanBerakhirnyaStatusBadanHukumService');\n\nclass PermohonanBerakhirnyaStatusBadanHukumController extends Controller\n{\n    private $exceptionThrower;\n    private $permohonanBerakhirnyaStatusBadanHukumService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->permohonanBerakhirnyaStatusBadanHukumService = new PermohonanBerakhirnyaStatusBadanHukumService();\n    }\n\n    public function actionCreate()\n    {\n        // 1. Validate that request method is POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Get the JSON body\n        try {\n            $body = RequestContext::getJsonBody();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 3. Convert the data into DTO\n        $createPermohonanBerakhirnyaStatusBadanHukum = CreatePermohonanBerakhirnyaStatusBadanHukumDto::fromArray($body);\n\n        // 4. Validate the DTO\n        try {\n            $createPermohonanBerakhirnyaStatusBadanHukum->isValid();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 5. Process the request using service\n        try {\n            $result = $this->permohonanBerakhirnyaStatusBadanHukumService->createPermohonanBerakhirnyaStatusBadanHukum($createPermohonanBerakhirnyaStatusBadanHukum);\n            APIResponse::ok();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n    }\n}\n\n\n--- File: 1189 # services/api/PemblokiranTokenService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IPemblokiranTokenService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass PemblokiranTokenService\n{\n    private $exceptionThrower;\n    private $secretKey;\n    \n    public function __construct()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->secretKey = isset(Yii::app()->params['pemblokiran']['secret_key']) \n            ? Yii::app()->params['pemblokiran']['secret_key'] \n            : 'your-32-character-secret-key-here!!';\n        $this->ensureKeyLength();\n    }\n\n    /**\n     * Generate an encrypted auth token for pemblokiran backend\n     * @param int $userId User ID\n     * @return string Base64 encoded encrypted token\n     * @throws Exception if encryption fails\n     */\n    public function generateAuthToken($userId)\n    {\n\n        $claims = [\n            'user_id' => (int)$userId,\n            'source' => 'PHP',\n        ];\n        \n        $jsonData = json_encode($claims, JSON_UNESCAPED_SLASHES);\n        \n        $iv = openssl_random_pseudo_bytes(16);\n        \n        $ciphertext = openssl_encrypt(\n            $jsonData,\n            'aes-256-cbc',\n            $this->secretKey,\n            OPENSSL_RAW_DATA,\n            $iv\n        );\n        \n        if ($ciphertext === false) {\n            $this->exceptionThrower->throwInternalServerError('Token encryption failed: ' . openssl_error_string());\n        }\n        \n        $hmac = hash_hmac('sha256', $iv . $ciphertext, $this->secretKey, true);\n        \n        $encrypted = $iv . $ciphertext . $hmac;\n        \n        return base64_encode($encrypted);\n    }\n\n    /**\n     * Ensure the secret key is exactly 32 bytes\n     */\n    private function ensureKeyLength()\n    {\n        if (strlen($this->secretKey) < 32) {\n            $this->secretKey = str_pad($this->secretKey, 32, \"\\0\");\n        } elseif (strlen($this->secretKey) > 32) {\n            $this->secretKey = substr($this->secretKey, 0, 32);\n        }\n    }\n} \n\n--- File: 1198 # services/api/PermohonanPemblokiranPTService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IPermohonanPemblokiranPTService');\nYii::import('application.modules.sabh.dto.CreatePermohonanPemblokiranPTDto');\nYii::import('application.modules.sabh.models.PermohonanPemblokiranPT');\n\nclass PermohonanPemblokiranPTService implements IPermohonanPemblokiranPTService\n{\n    public function createPermohonanPemblokiranPT(CreatePermohonanPemblokiranPTDto $dto)\n    {\n        try {\n            // 1. Create model from DTO\n            $model = PermohonanPemblokiranPT::createFromDto($dto);\n            \n            // 2. Validate the model\n            if (!$model->validate()) {\n                $errors = $model->getErrors();\n                $errorMessages = [];\n                foreach ($errors as $attribute => $attributeErrors) {\n                    $errorMessages[] = $attribute . ': ' . implode(', ', $attributeErrors);\n                }\n                throw new Exception('Validation failed: ' . implode('; ', $errorMessages));\n            }\n            \n            // 3. Save the model to database\n            if (!$model->save()) {\n                $errors = $model->getErrors();\n                $errorMessages = [];\n                foreach ($errors as $attribute => $attributeErrors) {\n                    $errorMessages[] = $attribute . ': ' . implode(', ', $attributeErrors);\n                }\n                throw new Exception('Failed to save to database: ' . implode('; ', $errorMessages));\n            }\n            \n            // 4. Log successful creation\n            Yii::log(\n                'Permohonan Pemblokiran PT created successfully. ID: ' . $model->id . \n                ', PT: ' . $dto->nama_perseroan_terbatas . \n                ', Pemohon: ' . $dto->nama_pemohon,\n                'info',\n                'application.modules.sabh.services.api.PermohonanPemblokiranPTService'\n            );\n            \n            return true;\n        } catch (Exception $e) {\n            // Log the error\n            Yii::log(\n                'Failed to create Permohonan Pemblokiran PT. Error: ' . $e->getMessage() . \n                ', PT: ' . $dto->nama_perseroan_terbatas . \n                ', Pemohon: ' . $dto->nama_pemohon,\n                'error',\n                'application.modules.sabh.services.api.PermohonanPemblokiranPTService'\n            );\n            \n            // Re-throw the exception for the controller to handle\n            throw $e;\n        }\n    }\n}\n\n--- File: 1202 # services/api/impl/PermohonanBerakhirnyaStatusBadanHukumService.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanBerakhirnyaStatusBadanHukumDto');\nYii::import('application.modules.sabh.services.api.IPermohonanBerakhirnyaStatusBadanHukumService');\nYii::import('application.modules.sabh.models.PermohonanBerakhirnyaStatusBadanHukum');\nYii::import('application.modules.billing.models.BillingSimponi');\n\nclass PermohonanBerakhirnyaStatusBadanHukumService implements IPermohonanBerakhirnyaStatusBadanHukumService\n{\n    public function createPermohonanBerakhirnyaStatusBadanHukum(CreatePermohonanBerakhirnyaStatusBadanHukumDto $dto)\n    {\n        // Save the data to the database\n        $model = new PermohonanBerakhirnyaStatusBadanHukum();\n        $model->nomor_voucher = $dto->nomorVoucher;\n        $model->nomor_akta_pembubaran = $dto->nomorAktaPembubaran;\n        $model->tanggal_akta_pembubaran = $dto->tanggalAktaPembubaran;\n        $model->url_akta_pembubaran = $dto->urlAktaPembubaran;\n        $model->tanggal_rapat = $dto->tanggalRapat;\n        $model->tanggal_cetak_pengumuman_surat_kabar = $dto->tanggalCetakPengumumanSuratKabar;\n        $model->nomor_pengumuman_surat_kabar = $dto->nomorPengumumanSuratKabar;\n        $model->notaris_pengganti = $dto->notarisPengganti ? 1 : 0;\n        $model->jumlah_kehadiran_rapat_anggota = $dto->jumlahKehadiranRapatAnggota;\n        $model->tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi = $dto->tanggalCetakPengumumanSuratKabarHasilLikuidasi;\n        $model->nomor_pengumuman_surat_kabar_hasil_likuidasi = $dto->nomorPengumumanSuratKabarHasilLikuidasi;\n        $model->sisa_kekayaan_saat_ini = $dto->sisaKekayaanSaatIni;\n        $model->created = date('Y-m-d H:i:s');\n        $model->updated = date('Y-m-d H:i:s');\n        \n        if (!$model->save()) {\n            throw new Exception(\"Gagal menyimpan permohonan berakhirnya status badan hukum\");\n        }\n    }\n} \n\n--- File: 325 # controllers/api/BlokirAuthController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.services.api.PemblokiranTokenService');\n\nclass BlokirAuthController extends Controller\n{\n    private $pemblokiranTokenService;\n    private $exceptionThrower;\n\n    public function init()\n    {\n        parent::init();\n        $this->pemblokiranTokenService = new PemblokiranTokenService();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n    public function actionMe()\n    {\n        // if (Yii::app()->user->isGuest) {\n        //     $this->exceptionThrower->throwUnauthorized();\n        // }\n\n        // if (!RequestContext::isMethod('GET')) {\n        //     $this->exceptionThrower->throwMethodNotAllowed();\n        // }\n\n        // $userId = Yii::app()->user->id;\n        // $user = DclUser::model()->findByPk($userId);\n\n        // $profile = $this->blokirUserProfileService->getBlokirUserProfile($userId);\n\n        // if (!$profile) {\n        //     $this->exceptionThrower->throwNotFound();\n        // }\n\n        // if (!$user) {\n        //     $this->exceptionThrower->throwNotFound();\n        // }\n\n        // $data = [\n        //     'user_id' => $user->user_id,\n        //     'username' => $user->name,\n        //     'email' => $user->email,\n        //     'nama' => $profile->nama,\n        //     'jenis_kewarganegaraan' => $profile->jenis_kewarganegaraan,\n        //     'nomor_identitas' => $profile->nomor_identitas,\n        //     'no_telepon' => $profile->no_telepon,\n        //     'alamat' => $profile->alamat,\n        // ];\n\n        // $response = [\n        //     'success' => true,\n        //     'message' => 'Current user info',\n        //     'data' => $data,\n        // ];\n\n        // header('Content-Type: application/json');\n        // echo CJSON::encode($response);\n        // Yii::app()->end();\n    }\n\n    public function actionTest()\n    {\n        // // Generate token using the dedicated service\n        // $token = $this->pemblokiranTokenService->generateAuthToken($user['user_id']);\n\n        // $response = [\n        //     'success' => true,\n        //     'message' => 'Pemblokiran backend auth token generated',\n        //     'data' => [\n        //         'token' => $token,\n        //         'user' => $user,\n        //     ],\n        // ];\n\n        // header('Content-Type: application/json');\n        // echo json_encode($response, JSON_UNESCAPED_SLASHES);\n        // Yii::app()->end();\n    }\n\n\n}\n\n\n--- File: 366 # components/cleansing/DatabaseHelpers.php ---\n<?php\n\n/**\n * @author Josep\n * 15 Ahustus 2016\n * Database Helpers (Query Builder)\n*/\nclass DatabaseHelpers\n{\n    /**\n     * Get Data Using Query Buider\n     * @param   string  $tableName\n     * @param   array   $condition [\n     *  [\n     *      'key' =>\n     *      'operator' =>\n     *      'value' =>\n     *\n     *  ],\n     * ]\n     * @param   string  $select\n     * @param   int     $limit\n     * @param   int     $offset\n     */\n    public static function getData($tableName, $condition=array(), $select='*', $limit=0, $offset=0)\n    {\n        $db = Yii::app()->dbBadanHukum->createCommand();\n        $data = $db->from($tableName);\n        $data->select($select);\n        if (!empty($condition) && is_array($condition)) {\n            $count = 0;\n            foreach ($condition as $kCondition => $vCondition) {\n                extract($vCondition);\n                if (!empty($key) && !empty($value)) {\n                    $operator = !empty($operator) ? $operator : '=';\n                    $param = $key.$count;\n                    $data->andWhere(\n                        \"$key $operator :$param\",\n                        [\":$param\"=>$value]\n                    );\n                    $count++;\n                }\n            }\n        }\n\n        if (!empty($limit)) {\n            $data->limit($limit);\n        }\n\n        if (!empty($offset)) {\n            $data->offset($offset);\n        }\n\n        return $data->queryAll();\n    }\n\n    /**\n     * Check Table Exist\n     * @param   string  $tableName  table name will check\n     * @param   string    $create   if !empty, will create new table using this value as template\n     */\n    public static function checkTableExist($tableName, $create='')\n    {\n        $sqlCheckTable = \"SHOW TABLES LIKE '$tableName'\";\n        $checkTable = Yii::app()->dbBadanHukum->createCommand($sqlCheckTable)->queryScalar();\n        if (!empty($create) && is_string($create)) {\n            if (empty($checkTable)) {\n                return self::cloneTable($tableName, $create);\n            }\n        }\n        return $checkTable;\n    }\n\n    public static function cloneTable($newName, $oldName)\n    {\n        if (!empty($newName)\n            && !empty($oldName)\n            && is_string($newName)\n            && is_string($oldName)\n        ) {\n            $q = \"create table $newName like $oldName\";\n            if (Yii::app()->dbBadanHukum->createCommand($q)->query()) {\n                return $newName;\n            }\n        }\n    }\n\n    public static function batchInsert($db, $tableName, $attr)\n    {\n        $key = $value = [];\n        foreach ($attr[0] as $kKey => $vKey) {\n            $key[] = $kKey;\n        }\n        foreach ($attr as $kValue => $vValue) {\n            $value[] = \"'\".implode(\"','\", $vValue).\"'\";\n        }\n        $key = \"(\".implode(',', $key).\")\";\n        $value = \"(\".implode(\"),(\", $value).\")\";\n        $query = \"INSERT INTO $tableName $key VALUES $value;\";\n        return $db->createCommand($query)->execute();\n    }\n}\n\n\n--- File: 319 # controllers/api/PemblokiranController.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.PemblokiranProxyService');\nYii::import('application.modules.sabh.services.api.BlokirAuthService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.utils.RequestContext');\n\nclass PemblokiranController extends Controller\n{\n    private $proxyService;\n    private $exceptionThrower;\n\n    public function init()\n    {\n        parent::init();\n        $this->proxyService = new PemblokiranProxyService();\n        $this->exceptionThrower = new APIExceptionThrower();\n    }\n\n\n\n    /**\n     * Generic proxy method for custom endpoints\n     * Handles URLs like: /sabh/pemblokiran/api/blocked, /sabh/pemblokiran/api/users, etc.\n     */\n    public function actionIndex()\n    {\n        $pathInfo = Yii::app()->request->pathInfo;\n        \n        $parts = explode('/', $pathInfo);\n        $pemblokiranIndex = array_search('pemblokiran', $parts);\n        \n        if ($pemblokiranIndex !== false && isset($parts[$pemblokiranIndex + 1])) {\n            $endpointParts = array_slice($parts, $pemblokiranIndex + 1);\n            $endpoint = '/' . implode('/', $endpointParts);\n        } else {\n            $endpoint = '/';\n        }\n        \n        $queryString = $_SERVER['QUERY_STRING'];\n        if (!empty($queryString)) {\n            parse_str($queryString, $queryParams);\n            unset($queryParams['r']);\n            \n            if (!empty($queryParams)) {\n                $cleanQueryString = http_build_query($queryParams);\n                $endpoint .= '?' . $cleanQueryString;\n            }\n        }\n\n        $method = $_SERVER['REQUEST_METHOD'];\n        $body = null;\n\n        if (in_array($method, ['POST', 'PUT'])) {\n            try {\n                $body = RequestContext::getJsonBody();\n            } catch (Exception $e) {\n                $this->exceptionThrower->throwBadRequest($e->getMessage());\n            }\n        }\n\n        $user_id = Yii::app()->user->id;\n\n        try {\n            switch ($method) {\n                case 'GET':\n                    $response = $this->proxyService->get($endpoint, $user_id);\n                    break;\n                case 'POST':\n                    $response = $this->proxyService->post($endpoint, $body, $user_id);\n                    break;\n                case 'PUT':\n                    $response = $this->proxyService->put($endpoint, $body, $user_id);\n                    break;\n                case 'DELETE':\n                    $response = $this->proxyService->delete($endpoint, $user_id);\n                    break;\n                default:\n                    $this->exceptionThrower->throwMethodNotAllowed();\n            }\n\n            $this->sendJsonResponse($response);\n        } catch (Exception $e) {\n            $this->handleProxyError($e);\n        }\n    }\n\n    /**\n     * Handle proxy service errors and forward them to client\n     */\n    private function handleProxyError($exception)\n    {\n        $statusCode = method_exists($exception, 'getCode') && $exception->getCode() > 0 ? $exception->getCode() : 500;\n        http_response_code($statusCode);\n\n        header('Content-Type: application/json');\n        echo $exception->getMessage();\n        Yii::app()->end();\n    }\n\n    /**\n     * Send JSON response to client\n     */\n    private function sendJsonResponse($data)\n    {\n        header('Content-Type: application/json');\n        echo json_encode($data, JSON_UNESCAPED_SLASHES);\n        Yii::app()->end();\n    }\n} \n\n--- File: 322 # controllers/api/FileController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.FileService');\nYii::import('application.modules.sabh.enums.FileType');\n\nclass FileController extends Controller\n{\n    private $exceptionThrower;\n    private $fileService;\n    \n    public function init()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->fileService = new FileService();\n    }\n    \n    public function actionIndex()\n    {\n        // 1. Throw if method is not POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Set upload limits for large files\n        set_time_limit(0);\n        @ini_set('memory_limit', '-1');\n        @ini_set('upload_max_size', '10M');\n        @ini_set('post_max_size', '10M');\n\n        // 3. Check if file was uploaded\n        if (!isset($_FILES['file'])) {\n            $this->exceptionThrower->throwBadRequest('Tidak ada file yang diupload');\n        }\n\n        if ($_FILES['file']['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$_FILES['file']['error']]) ? $errorMessages[$_FILES['file']['error']] : 'Error upload tidak diketahui';\n            $this->exceptionThrower->throwBadRequest('Error upload: ' . $errorMessage);\n        }\n\n        // 4. Get and validate file type from query parameters\n        $fileType = Yii::app()->request->getQuery('file_type');\n        \n        if (empty($fileType)) {\n            $this->exceptionThrower->throwBadRequest('Parameter file_type wajib diisi');\n        }\n        \n        if (!FileType::isValid($fileType)) {\n            $this->exceptionThrower->throwBadRequest('Tipe file tidak valid. Tipe yang diizinkan: ' . implode(', ', FileType::getAllTypes()));\n        }\n        \n        // 5. Process file upload\n        try {\n            $uploadedFile = $_FILES['file'];\n            \n            $fileInfo = $this->fileService->createFile($fileType, $uploadedFile);\n            \n            // Log successful upload\n            Yii::log(\n                'File berhasil diupload: ' . $fileInfo['original_name'] . \n                ' -> ' . $fileInfo['file_path'] . \n                ' (Ukuran: ' . $fileInfo['file_size'] . ' bytes)',\n                'info',\n                'application.modules.sabh.controllers.api.FileController'\n            );\n            \n            APIResponse::ok($fileInfo, 'File berhasil diupload');\n        } catch (Exception $e) {\n            // Log upload error\n            Yii::log(\n                'Upload file gagal: ' . $e->getMessage() . \n                ' (File: ' . (isset($uploadedFile['name']) ? $uploadedFile['name'] : 'tidak diketahui') . ')',\n                'error',\n                'application.modules.sabh.controllers.api.FileController'\n            );\n            \n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n    }\n}\n\n\n--- File: 361 # components/BoAPI.php ---\n<?php \n\nClass BoAPI {\n\n    const PERSEROAN = 1;\n    const YAYASAN = 2;\n    const PERKUMPULAN = 3;\n    const PERSEORANGAN = 7;\n\n    private static $jenis_korporasi = [\n        \"perseroan\" => self::PERSEROAN,\n        \"yayasan\" => self::YAYASAN,\n        \"perkumpulan\" => self::PERKUMPULAN,\n        \"ptp\" => self::PERSEORANGAN,\n    ];\n\n    private static $salt = 'D0c0Sp@rtan2019';\n\n    public static function generate_sign()\n    {\n        $now = time();\n        $setengah_jam = (int)floor($now / 30 / 60);\n        $t = 'candrabeqx' . $setengah_jam . 'docotel';\n        $x = crypt($t, \"$2y$10$\" . substr(md5($t),0,22));\n\n        return $x;\n    }\n\n    public static function getData($id_bakum, $nama, $base, $save_log = 1)\n    {\n        $url = BakumSetting::model()->findByAttributes([\n            'name' => 'api_bo',\n        ]);\n\n        // $url = $url ? $url->value . \"/data-bo/get-data?sign=\" . self::generate_sign() : null;\n        $url = $url ? $url->value . \"/data-bo/get-data\" : null;\n\n        if ($url) {\n            $post = [\n                'id_master_sumber' => $id_bakum,\n                'nama_korporasi' => $nama,\n                'jenis_korporasi' => static::$jenis_korporasi[$base],\n                'save_log' => $save_log,\n            ];\n\n            $hash = hash('sha512', static::$salt . $post['id_master_sumber'] . $post['nama_korporasi'] . $post['jenis_korporasi']);\n            $result = self::_curl($url, $post, $hash);\n\n            if ($data = json_decode($result, true)) {\n                if (!empty($data['status'])) {\n                    return $data['data'];\n                }\n            }\n        }\n\n        return false;\n    }\n\n    public static function _curl($url, $data, $hash)\n    {\n        $header = [\n            'Token: ' . $hash,\n        ];\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $data);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $result = curl_exec($ch);\n        curl_close($ch);\n\n        return $result;\n    }\n\n    public static function assignKriteria($base, $kriteria)\n    {\n        $result = [];\n        foreach ($kriteria as $kri) {\n            $kriteria_bo = KriteriaBo::model()->findByAttributes(['kode_BO' => $kri['kode'], 'base' => $base]);\n            if ($kriteria_bo) {\n                $result[] = $kriteria_bo->kode;\n            }\n        }\n\n        return $result;\n    }\n\n    public static function getKelurahan($id_wil)\n    {\n        if ($id_wil) {\n            if ($wilayah_sabh = WilayahSabh::model()->findByAttributes(['ID_WIL' => $id_wil])) {\n                return $wilayah_sabh->WSID;\n            }\n        }\n\n        return null;\n    }\n\n    public static function cekData($id_bakum, $nama, $base)\n    {\n        $data = self::getData($id_bakum, $nama, $base, 0);\n\n        if (!empty($data['data_bo'])) {\n            return true;\n        }\n\n        return false;\n    }\n}\n\n\n--- File: 1199 # services/api/EmailQueueService.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.components.LogSABH');\n\n/**\n * Service for queueing emails to be sent by external email service\n * This service sends emails to a Go backend that handles actual email sending\n * to avoid PHP timeouts and ensure reliable delivery\n */\nclass EmailQueueService {\n    private $emailServiceUrl;\n    private static $DEFAULT_FROM_EMAIL = 'noreply@ahu.go.id';\n    \n    public function __construct() {\n        $this->emailServiceUrl = isset(Yii::app()->params['email_service_url']) \n            ? Yii::app()->params['email_service_url']\n            : 'http://192.168.46.116:8080';\n    }\n\n    /**\n     * Queue an email to be sent\n     * @param string $to Recipient email address\n     * @param string $subject Email subject\n     * @param string $body Email body\n     * @param array $attachments Array of attachments [['path' => string, 'name' => string, 'type' => string]]\n     * @param string|null $from Sender email address (optional)\n     * @return bool True if email was queued successfully\n     */\n    public function queueEmail($to, $subject, $body, $attachments = [], $from = null)\n    {\n        $url = $this->emailServiceUrl . '/api/v1/emails/send';\n        $ch = curl_init($url);\n        \n        $boundary = uniqid();\n        $data = '';\n        \n        // Add required fields\n        $fields = [\n            'from' => $from ? $from : self::$DEFAULT_FROM_EMAIL,\n            'to' => $to,\n            'subject' => $subject,\n            'body' => $body\n        ];\n        \n        foreach ($fields as $name => $content) {\n            $data .= \"--{$boundary}\\r\\n\"\n                . \"Content-Disposition: form-data; name=\\\"{$name}\\\"\\r\\n\\r\\n\"\n                . \"{$content}\\r\\n\";\n        }\n        \n        // Add attachments\n        foreach ($attachments as $attachment) {\n            if (isset($attachment['path']) && file_exists($attachment['path'])) {\n                $filename = isset($attachment['name']) ? $attachment['name'] : basename($attachment['path']);\n                $content = file_get_contents($attachment['path']);\n                $data .= \"--{$boundary}\\r\\n\"\n                    . \"Content-Disposition: form-data; name=\\\"attachments\\\"; filename=\\\"{$filename}\\\"\\r\\n\"\n                    . \"Content-Type: \" . (isset($attachment['type']) ? $attachment['type'] : 'application/octet-stream') . \"\\r\\n\\r\\n\"\n                    . $content . \"\\r\\n\";\n            }\n        }\n        \n        $data .= \"--{$boundary}--\\r\\n\";\n        \n        $headers = [\n            \"Content-Type: multipart/form-data; boundary={$boundary}\",\n            'Content-Length: ' . strlen($data)\n        ];\n        \n        curl_setopt_array($ch, [\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_POST => true,\n            CURLOPT_POSTFIELDS => $data,\n            CURLOPT_HTTPHEADER => $headers,\n            CURLOPT_TIMEOUT => 30,\n            CURLOPT_CONNECTTIMEOUT => 10,\n            CURLOPT_VERBOSE => false,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_SSL_VERIFYHOST => false\n        ]);\n        \n        // Execute request\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        \n        curl_close($ch);\n        \n        // Handle cURL errors\n        if ($error) {\n            LogSABH::insert(__FILE__, \"Failed to connect to email service: $error\");\n            return false;\n        }\n        \n        // Handle HTTP errors\n        if ($httpCode >= 400) {\n            $decodedResponse = json_decode($response, true);\n            $message = is_array($decodedResponse) && isset($decodedResponse['message']) \n                ? $decodedResponse['message'] \n                : 'Unknown error from email service';\n            \n            LogSABH::insert(__FILE__, \"Email service error ($httpCode): $message\");\n            return false;\n        }\n        \n        return true;\n    }\n}\n\n\n--- File: 1204 # services/api/impl/PerkumpulanService.php ---\n<?php\n\nYii::import('application.modules.sabh.models.BadanHukum');\nYii::import('application.modules.sabh.models.TransaksiPerkumpulan');\nYii::import('application.modules.sabh.models.perkumpulan.pembubaran.PembubaranPerkumpulan');\nYii::import('application.modules.sabh.services.api.IPerkumpulanService');\n\nclass PerkumpulanService implements IPerkumpulanService\n{\n    private $perkumpulan;\n    private $transaksiPerkumpulan;\n    private $pembubaranPerkumpulan;\n\n    public function __construct()\n    {\n        $this->perkumpulan = new BadanHukum();\n        $this->transaksiPerkumpulan = new TransaksiPerkumpulan();\n        $this->pembubaranPerkumpulan = new PembubaranPerkumpulan();\n    }\n\n    public function findByNamaAndNomorSkAndNamaNotarisTerakhir($nama, $nomorSk, $namaNotaris)\n    {\n        $criteria = new CDbCriteria;\n        $criteria->condition = '\n            nama LIKE :nama AND \n            nomor_sk = :nomor_sk AND \n            nama_notaris = :nama_notaris AND\n            base = \"perkumpulan\"\n        ';\n        $criteria->params = array(\n            ':nama' => $nama, \n            ':nomor_sk' => $nomorSk, \n            ':nama_notaris' => $namaNotaris\n        );\n\n        $perkumpulan = $this->perkumpulan->find($criteria);\n\n        return $perkumpulan;\n    }\n\n    public function findById($id)\n    {\n        $criteria = new CDbCriteria;\n        $criteria->condition = '\n            badan_hukum_id = :id AND\n            base = \"perkumpulan\"\n        ';\n        $criteria->params = array(':id' => $id);\n\n        $perkumpulan = $this->perkumpulan->find($criteria);\n\n        return $perkumpulan;\n    }\n\n    public function submitFormmPenghapusan(\n        $formDataPengajuanPenghapusan,\n        $formDataPermohonanPenghapusan,\n        $badan_hukum_id\n    ){\n        // this logic is directly adapted from yayasanbaru/PembubaranController.php function actionTambah() \n        $badan_hukum = $this->findById($badan_hukum_id);\n        $this->pembubaranPerkumpulan->assignFromBadanHukum($this->transaksiPerkumpulan, $badan_hukum);\n\n        $this->transaksiPerkumpulan->id_notaris = Yii::app()->user->profilid;\n        $this->transaksiPerkumpulan->kekayaan_awal = $formDataPermohonanPenghapusan['sisaKekayaan'];\n        $this->transaksiPerkumpulan->nomor_akta = $formDataPermohonanPenghapusan['nomorAkta'];\n        $this->transaksiPerkumpulan->tgl_akta = $formDataPermohonanPenghapusan['tanggalAkta'];\n        // skip the verificator\n        $this->transaksiPerkumpulan->flag_upload = null;\n\n        $this->transaksiPerkumpulan->jenis_perubahan = PembubaranPerkumpulan::DASAR_PEMBUBARAN;\n        $this->transaksiPerkumpulan->jenis_transaksi = 'pembubaran';\n        \n        $this->transaksiPerkumpulan->tipe_perubahan = $formDataPengajuanPenghapusan['alasanBerakhir'];\n        $this->transaksiPerkumpulan->tanggal_rups = $formDataPermohonanPenghapusan['tanggalRapat'];\n        $this->transaksiPerkumpulan->koran = $formDataPermohonanPenghapusan['letterList'];\n\n        // $this->transaksiPerkumpulan->koran_likuidasi = $formDataPermohonanPenghapusan['likuidasiList']; // this field is not exist inside tbl_transaksi_perkumpulan_2025\n        $this->transaksiPerkumpulan->kehadiran_rups = $formDataPermohonanPenghapusan['jumlahKuorum'];\n        // $this->transaksiPerkumpulan->steps = $formDataPermohonanPenghapusan['jumlahKuorum'];\n\n        $createTransaksi = $this->transaksiPerkumpulan->createPembubaran($formDataPermohonanPenghapusan['notarisPengganti']);\n        return $createTransaksi;\n    }\n\n}\n\n--- File: 1188 # services/api/PemblokiranProxyService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.PemblokiranTokenService');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\n\nclass PemblokiranProxyService\n{\n    private $pemblokiranTokenService;\n    private $exceptionThrower;\n    private $goBackendUrl;\n    private $timeout;\n    private $sslVerify;\n    \n    public function __construct()\n    {\n        $this->pemblokiranTokenService = new PemblokiranTokenService();\n        $this->exceptionThrower = new APIExceptionThrower();\n\n        $this->goBackendUrl = isset(Yii::app()->params['pemblokiran']['backend_url']) \n            ? Yii::app()->params['pemblokiran']['backend_url'] \n            : 'http://localhost:8080';\n        $this->timeout = isset(Yii::app()->params['pemblokiran']['timeout']) \n            ? Yii::app()->params['pemblokiran']['timeout'] \n            : 30;\n        $this->sslVerify = isset(Yii::app()->params['pemblokiran']['ssl_verify']) \n            ? Yii::app()->params['pemblokiran']['ssl_verify'] \n            : false;\n    }\n    \n    /**\n     * Make a GET request to the Go backend\n     */\n    public function get($endpoint, $userId = null)\n    {\n        return $this->makeRequest('GET', $endpoint, null, $userId);\n    }\n    \n    /**\n     * Make a POST request to the Go backend\n     */\n    public function post($endpoint, $data = null, $userId = null)\n    {\n        return $this->makeRequest('POST', $endpoint, $data, $userId);\n    }\n    \n    /**\n     * Make a PUT request to the Go backend\n     */\n    public function put($endpoint, $data = null, $userId = null)\n    {\n        return $this->makeRequest('PUT', $endpoint, $data, $userId);\n    }\n    \n    /**\n     * Make a DELETE request to the Go backend\n     */\n    public function delete($endpoint, $userId = null)\n    {\n        return $this->makeRequest('DELETE', $endpoint, null, $userId);\n    }\n    \n    /**\n     * Generic method to make HTTP requests to Go backend\n     */\n    private function makeRequest($method, $endpoint, $data = null, $userId = null)\n    {\n        $url = rtrim($this->goBackendUrl, '/') . '/' . ltrim($endpoint, '/');\n\n        $ch = curl_init();\n\n        curl_setopt_array($ch, [\n            CURLOPT_URL => $url,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_TIMEOUT => $this->timeout,\n            CURLOPT_CUSTOMREQUEST => $method,\n            CURLOPT_HTTPHEADER => $this->buildHeaders($userId),\n            CURLOPT_SSL_VERIFYPEER => $this->sslVerify,\n            CURLOPT_FOLLOWLOCATION => true,\n        ]);\n\n        if (in_array($method, ['POST', 'PUT']) && $data !== null) {\n            curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));\n        }\n\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        \n        curl_close($ch);\n\n        if ($error) {\n            $this->exceptionThrower->throwInternalServerError('Failed to connect to pemblokiran backend: ' . $error);\n        }\n\n        $decodedResponse = json_decode($response, true);\n\n        if ($httpCode >= 400) {\n            $this->handleHttpError($httpCode, $decodedResponse);\n        }\n        \n        return $decodedResponse;\n    }\n    \n    /**\n     * Build HTTP headers including authentication\n     */\n    private function buildHeaders($userId = null)\n    {\n        $headers = [\n            'Content-Type: application/json',\n            'Accept: application/json',\n        ];\n\n        if ($userId !== null) {\n            $token = $this->pemblokiranTokenService->generateAuthToken($userId);\n            $headers[] = 'X-PHP-Auth: ' . $token;\n        }\n        \n        return $headers;\n    }\n    \n    /**\n     * Handle HTTP errors from Go backend\n     */\n    private function handleHttpError($httpCode, $response)\n    {\n        $responseJson = is_string($response) ? $response : json_encode($response);\n        \n        throw new CHttpException($httpCode, $responseJson);\n    }\n} \n\n--- File: 317 # controllers/api/PdfController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.PdfService');\n\nclass PdfController extends Controller\n{\n    private $exceptionThrower;\n    private $pdfService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->pdfService = new PdfService();\n    }\n\n    public function actionGenerate()\n    {\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $body = RequestContext::getJsonBody();\n        \n        if (!isset($body['content']) || empty(trim($body['content']))) {\n            $this->exceptionThrower->throwBadRequest('Content is required');\n        }\n\n        $htmlContent = $body['content'];\n        $options = isset($body['options']) ? $body['options'] : [];\n\n        $defaultOptions = [\n            'paperWidth' => '8.27',\n            'paperHeight' => '11.7',\n            'marginTop' => '1',\n            'marginBottom' => '1',\n            'marginLeft' => '1',\n            'marginRight' => '1',\n            'landscape' => false\n        ];\n\n        $pdfOptions = array_merge($defaultOptions, $options);\n\n        try {\n            $result = $this->pdfService->generatePdfFromHtml($htmlContent, $pdfOptions);\n            APIResponse::ok($result, 'PDF generated successfully');\n        } catch (Exception $e) {\n            Yii::log('PDF generation error: ' . $e->getMessage(), CLogger::LEVEL_ERROR, 'pdf');\n            $this->exceptionThrower->throwInternalServerError('Failed to generate PDF: ' . $e->getMessage());\n        }\n    }\n    \n    public function actionGenerateAndServe()\n    {\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $htmlContent = isset($_POST['content']) ? $_POST['content'] : null;\n\n        if (!$htmlContent || empty(trim($htmlContent))) {\n            header('HTTP/1.1 400 Bad Request');\n            header('Content-Type: application/json');\n            echo json_encode(['error' => 'Content is required']);\n            Yii::app()->end();\n        }\n\n        $defaultOptions = [\n            'paperWidth' => '8.27',\n            'paperHeight' => '11.7',\n            'marginTop' => '1',\n            'marginBottom' => '1',\n            'marginLeft' => '1',\n            'marginRight' => '1',\n            'landscape' => false\n        ];\n\n        try {\n            $result = $this->pdfService->generatePdfFromHtml($htmlContent, $defaultOptions);\n            \n            $filename = 'surat_jawaban_' . date('Y-m-d_H-i-s') . '.pdf';\n            \n            header('Content-Type: application/pdf');\n            header('Content-Disposition: inline; filename=\"' . $filename . '\"');\n            header('Content-Length: ' . $result['size']);\n            header('Cache-Control: no-cache, must-revalidate');\n            header('Pragma: no-cache');\n            \n            readfile($result['filepath']);\n            \n            if (file_exists($result['filepath'])) {\n                unlink($result['filepath']);\n            }\n            \n            Yii::app()->end();\n            \n        } catch (Exception $e) {\n            Yii::log('PDF generation error: ' . $e->getMessage(), CLogger::LEVEL_ERROR, 'pdf');\n            header('HTTP/1.1 500 Internal Server Error');\n            header('Content-Type: application/json');\n            echo json_encode(['error' => $e->getMessage()]);\n            Yii::app()->end();\n        }\n    }\n    \n    public function actionHealth()\n    {\n        if (!RequestContext::isMethod('GET')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        try {\n            $health = $this->pdfService->checkHealth();\n            APIResponse::ok($health, 'Gotenberg service status');\n        } catch (Exception $e) {\n            Yii::log('Gotenberg health check failed: ' . $e->getMessage(), CLogger::LEVEL_ERROR, 'pdf');\n            $this->exceptionThrower->throwServiceUnavailable('Gotenberg service unavailable');\n        }\n    }\n} \n\n--- File: 1194 # services/api/FileService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IFileService');\n\nclass FileService implements IFileService\n{\n    private function getUploadDir($fileType) {\n        $folderMapping = [\n            'PEMBLOKIRAN' => 'sabh/pemblokiran',\n            'PEMBUKAAN_BLOKIR' => 'sabh/pembukaan_blokir'\n        ];\n        \n        return isset($folderMapping[$fileType]) ? $folderMapping[$fileType] : 'sabh/lainnya';\n    }\n\n    public function createFile($fileType, $file)\n    {\n        // 1. Validate input parameters\n        if (empty($fileType) || empty($file)) {\n            throw new Exception('Nama folder dan file wajib diisi');\n        }\n\n        // 2. Create upload directory\n        $folderName = $this->getUploadDir($fileType);\n        $uploadDir = Yii::getPathOfAlias('webroot') . '/uploads/' . $folderName . '/';\n        if (!file_exists($uploadDir)) {\n            if (!mkdir($uploadDir, 0755, true)) {\n                throw new Exception('Gagal membuat direktori upload');\n            }\n        }\n\n        // 3. Validate file upload\n        if (!isset($file['tmp_name']) || !is_uploaded_file($file['tmp_name'])) {\n            throw new Exception('Upload file tidak valid - file tidak diupload dengan benar');\n        }\n\n        // 4. Check for upload errors\n        if (isset($file['error']) && $file['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$file['error']]) ? $errorMessages[$file['error']] : 'Error upload tidak diketahui';\n            throw new Exception('Error upload: ' . $errorMessage);\n        }\n\n        // 5. Validate file size (10MB limit)\n        $maxSize = 10 * 1024 * 1024; // 10MB in bytes\n        if (intval($file['size']) > $maxSize) {\n            throw new Exception('Ukuran file melebihi batas maksimal 10MB');\n        }\n\n        if (intval($file['size']) <= 0) {\n            throw new Exception('Ukuran file tidak valid atau kosong');\n        }\n\n        // 6. Validate file type\n        $finfo = finfo_open(FILEINFO_MIME_TYPE);\n        $mimeType = finfo_file($finfo, $file['tmp_name']);\n        finfo_close($finfo);\n\n        // Allow PDF and common image formats\n        $allowedMimeTypes = [\n            'application/pdf',\n        ];\n\n        if (!in_array($mimeType, $allowedMimeTypes)) {\n            throw new Exception('Tipe file tidak diizinkan. Tipe yang diizinkan: PDF');\n        }\n\n        // 7. Generate unique filename\n        $timestamp = time();\n        $originalName = isset($file['name']) ? $file['name'] : '';\n        $extension = pathinfo($originalName, PATHINFO_EXTENSION);\n        $extension = strtolower($extension);\n        \n        // Ensure proper extension based on mime type\n        if ($mimeType === 'application/pdf' && $extension !== 'pdf') {\n            $extension = 'pdf';\n        }\n\n        $uniqueName = $timestamp . '_' . md5($originalName . $timestamp . rand()) . '.' . $extension;\n        $filePath = $uploadDir . $uniqueName;\n\n        // 8. Move uploaded file\n        if (!move_uploaded_file($file['tmp_name'], $filePath)) {\n            throw new Exception('Gagal menyimpan file yang diupload ke server');\n        }\n\n        // 9. Verify file was actually saved\n        if (!file_exists($filePath)) {\n            throw new Exception('File tidak tersimpan dengan benar');\n        }\n\n        // 10. Return file information\n        return [\n            'original_name' => $originalName,\n            'file_name' => $uniqueName,\n            'file_path' => '/uploads/' . $folderName . '/' . $uniqueName,\n            'file_size' => $file['size'],\n            'file_type' => $mimeType,\n            'file_extension' => $extension,\n            'uploaded_at' => date('Y-m-d H:i:s'),\n            'folder_name' => $folderName\n        ];\n    }\n}\n\n--- File: 1203 # services/api/impl/FileService.php ---\n<?php\n\nYii::import('application.modules.sabh.services.api.IFileService');\n\nclass FileService implements IFileService\n{\n    private function getUploadDir($fileType) {\n        $folderMapping = [\n            'PEMBLOKIRAN' => 'sabh/pemblokiran',\n            'PEMBUKAAN_BLOKIR' => 'sabh/pembukaan_blokir',\n            'PERMOHONAN_BERAKHIR' => 'sabh/permohonan_berakhir',\n        ];\n        \n        return isset($folderMapping[$fileType]) ? $folderMapping[$fileType] : 'sabh/lainnya';\n    }\n\n    public function createFile($fileType, $file)\n    {\n        // 1. Validate input parameters\n        if (empty($fileType) || empty($file)) {\n            throw new Exception('Nama folder dan file wajib diisi');\n        }\n\n        // 2. Create upload directory\n        $folderName = $this->getUploadDir($fileType);\n        $uploadDir = Yii::getPathOfAlias('webroot') . '/uploads/' . $folderName . '/';\n        if (!file_exists($uploadDir)) {\n            if (!mkdir($uploadDir, 0755, true)) {\n                throw new Exception('Gagal membuat direktori upload');\n            }\n        }\n\n        // 3. Validate file upload\n        if (!isset($file['tmp_name']) || !is_uploaded_file($file['tmp_name'])) {\n            throw new Exception('Upload file tidak valid - file tidak diupload dengan benar');\n        }\n\n        // 4. Check for upload errors\n        if (isset($file['error']) && $file['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$file['error']]) ? $errorMessages[$file['error']] : 'Error upload tidak diketahui';\n            throw new Exception('Error upload: ' . $errorMessage);\n        }\n\n        // 5. Validate file size (10MB limit)\n        $maxSize = 10 * 1024 * 1024; // 10MB in bytes\n        if (intval($file['size']) > $maxSize) {\n            throw new Exception('Ukuran file melebihi batas maksimal 10MB');\n        }\n\n        if (intval($file['size']) <= 0) {\n            throw new Exception('Ukuran file tidak valid atau kosong');\n        }\n\n        // 6. Validate file type\n        $finfo = finfo_open(FILEINFO_MIME_TYPE);\n        $mimeType = finfo_file($finfo, $file['tmp_name']);\n        finfo_close($finfo);\n\n        // Allow PDF and common image formats\n        $allowedMimeTypes = [\n            'application/pdf',\n        ];\n\n        if (!in_array($mimeType, $allowedMimeTypes)) {\n            throw new Exception('Tipe file tidak diizinkan. Tipe yang diizinkan: PDF');\n        }\n\n        // 7. Generate unique filename\n        $timestamp = time();\n        $originalName = isset($file['name']) ? $file['name'] : '';\n        $extension = pathinfo($originalName, PATHINFO_EXTENSION);\n        $extension = strtolower($extension);\n        \n        // Ensure proper extension based on mime type\n        if ($mimeType === 'application/pdf' && $extension !== 'pdf') {\n            $extension = 'pdf';\n        }\n\n        $uniqueName = $timestamp . '_' . md5($originalName . $timestamp . rand()) . '.' . $extension;\n        $filePath = $uploadDir . $uniqueName;\n\n        // 8. Move uploaded file\n        if (!move_uploaded_file($file['tmp_name'], $filePath)) {\n            throw new Exception('Gagal menyimpan file yang diupload ke server');\n        }\n\n        // 9. Verify file was actually saved\n        if (!file_exists($filePath)) {\n            throw new Exception('File tidak tersimpan dengan benar');\n        }\n\n        // 10. Return file information\n        return [\n            'original_name' => $originalName,\n            'file_name' => $uniqueName,\n            'file_path' => '/uploads/' . $folderName . '/' . $uniqueName,\n            'file_size' => $file['size'],\n            'file_type' => $mimeType,\n            'file_extension' => $extension,\n            'uploaded_at' => date('Y-m-d H:i:s'),\n            'folder_name' => $folderName\n        ];\n    }\n}\n\n--- File: 1185 # services/api/PdfService.php ---\n<?php\n\nclass PdfService\n{\n    private $gotenbergBaseUrl;\n    private $timeout;\n    \n    public function __construct()\n    {\n        $this->gotenbergBaseUrl = isset(Yii::app()->params['gotenberg']['baseUrl']) \n            ? Yii::app()->params['gotenberg']['baseUrl'] \n            : 'http://gotenberg:3000';\n        $this->timeout = isset(Yii::app()->params['gotenberg']['timeout']) \n            ? Yii::app()->params['gotenberg']['timeout'] \n            : 30;\n    }\n\n    public function generatePdfFromHtml($htmlContent, $options = [])\n    {\n        $formData = $this->prepareFormData($htmlContent, $options);\n        $response = $this->makeGotenbergRequest('/forms/chromium/convert/html', $formData);\n        \n        if ($response === false) {\n            throw new Exception('Gagal menghubungi Gotenberg service');\n        }\n        \n        $filename = 'generated_' . uniqid() . '.pdf';\n        $filepath = sys_get_temp_dir() . DIRECTORY_SEPARATOR . $filename;\n        \n        if (file_put_contents($filepath, $response) === false) {\n            throw new Exception('Gagal menyimpan file PDF');\n        }\n        \n        return [\n            'filename' => $filename,\n            'filepath' => $filepath,\n            'size' => filesize($filepath),\n            'content_base64' => base64_encode($response),\n            'mime_type' => 'application/pdf'\n        ];\n    }\n\n    public function checkHealth()\n    {\n        $healthUrl = rtrim($this->gotenbergBaseUrl, '/') . '/health';\n        \n        $ch = curl_init();\n        curl_setopt_array($ch, [\n            CURLOPT_URL => $healthUrl,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_TIMEOUT => 10,\n            CURLOPT_CONNECTTIMEOUT => 5,\n            CURLOPT_HTTPHEADER => ['Accept: application/json']\n        ]);\n        \n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        curl_close($ch);\n        \n        if ($response === false || !empty($error)) {\n            throw new Exception('Tidak dapat menghubungi Gotenberg service: ' . $error);\n        }\n        \n        return [\n            'status' => $httpCode === 200 ? 'healthy' : 'unhealthy',\n            'http_code' => $httpCode,\n            'response' => $response,\n            'service_url' => $this->gotenbergBaseUrl\n        ];\n    }\n\n    private function prepareFormData($htmlContent, $options)\n    {\n        $formData = [\n            'files' => [\n                'index.html' => $htmlContent\n            ]\n        ];\n        \n        if (isset($options['paperWidth'])) {\n            $formData['paperWidth'] = $options['paperWidth'];\n        }\n        if (isset($options['paperHeight'])) {\n            $formData['paperHeight'] = $options['paperHeight'];\n        }\n        if (isset($options['marginTop'])) {\n            $formData['marginTop'] = $options['marginTop'];\n        }\n        if (isset($options['marginBottom'])) {\n            $formData['marginBottom'] = $options['marginBottom'];\n        }\n        if (isset($options['marginLeft'])) {\n            $formData['marginLeft'] = $options['marginLeft'];\n        }\n        if (isset($options['marginRight'])) {\n            $formData['marginRight'] = $options['marginRight'];\n        }\n        if (isset($options['landscape'])) {\n            $formData['landscape'] = $options['landscape'] ? 'true' : 'false';\n        }\n        \n        return $formData;\n    }\n\n    private function makeGotenbergRequest($endpoint, $formData)\n    {\n        $url = rtrim($this->gotenbergBaseUrl, '/') . $endpoint;\n        $ch = curl_init();\n\n        $postFields = [];\n        $tmpFiles = [];\n\n        // \u2705 Create real temp files (like FormData in Node.js)\n        if (isset($formData['files'])) {\n            foreach ($formData['files'] as $filename => $content) {\n                $tmpPath = tempnam(sys_get_temp_dir(), 'gotenberg_') . '.html';\n                file_put_contents($tmpPath, $content);\n                $postFields['files'] = new CURLFile($tmpPath, 'text/html', $filename);\n                $tmpFiles[] = $tmpPath;\n            }\n        }\n\n        foreach ($formData as $key => $value) {\n            if ($key !== 'files') {\n                $postFields[$key] = $value;\n            }\n        }\n\n        curl_setopt_array($ch, [\n            CURLOPT_URL => $url,\n            CURLOPT_POST => true,\n            CURLOPT_POSTFIELDS => $postFields,\n            CURLOPT_RETURNTRANSFER => true,\n            CURLOPT_TIMEOUT => $this->timeout,\n            CURLOPT_CONNECTTIMEOUT => 10,\n            CURLOPT_HTTPHEADER => [\n                'Accept: application/pdf'\n            ]\n        ]);\n\n        $response = curl_exec($ch);\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        $error = curl_error($ch);\n        curl_close($ch);\n\n        // cleanup temp files\n        foreach ($tmpFiles as $f) {\n            if (file_exists($f)) unlink($f);\n        }\n\n        if ($response === false || !empty($error)) {\n            throw new Exception(\"Gotenberg request failed: $error (URL: $url)\");\n        }\n\n        if ($httpCode !== 200) {\n            throw new Exception(\"Gotenberg returned HTTP $httpCode: \" . substr($response, 0, 500));\n        }\n\n        return $response;\n    }\n}\n\n\n--- File: 385 # components/enum/BaseEnum.php ---\n<?php\n\nclass BaseEnum\n{\n    const PERSEROAN = 'perseroan';\n    const YAYASAN = 'yayasan';\n    const PERKUMPULAN = 'perkumpulan';\n\n    const PERSEROAN_SWASTA_NASIONAL = 'swasta_nasional';\n    const PERSEROAN_PMDN_FASILITAS = 'pmdn_fasilitas';\n    const PERSEROAN_PMDN_NON_FASILITAS = 'pmdn_non_fasilitas';\n    const PERSEROAN_BUMN = 'bumn';\n    const PERSEROAN_BUMD = 'bumd';\n    const PERSEROAN_PMA = 'pma';\n\n    const YAYASAN_PERORANGAN = 'perorangan';\n    const YAYASAN_BADAN_HUKUM = 'badan_hukum';\n\n    const YAYASAN_NASIONAL = 'nasional';\n    const YAYASAN_ASING = 'asing';\n\n    const VIEW_GRID_PERSEROAN = '_viewGridPerseroan';\n    const VIEW_GRID_YAYASAN = '_viewGridYayasan';\n    const VIEW_GRID_PERKUMPULAN = '_viewGridPerkumpulan';\n    const VIEW_GRID_RANGE_DATE_PERSEROAN = '_viewGridRangeDatePerseroan';\n    const VIEW_GRID_RANGE_DATE_YAYASAN = '_viewGridRangeDateYayasan';\n    const VIEW_GRID_RANGE_DATE_PERKUMPULAN = '_viewGridRangeDatePerkumpulan';\n\n    // MULAI JENIS TRANSAKSI\n    const JENIS_PENDIRIAN    = 'pendirian';\n    const JENIS_PEMBUBARAN   = 'pembubaran';\n    const JENIS_PENYESUAIAN  = 'penyesuaian';\n    const JENIS_PERUBAHAN    = 'perubahan';\n    const JENIS_PENGGABUNGAN = 'penggabungan';\n    // SELESAI JENIS TRANSAKSI\n    \n\n    public static function getListBase($method = 'ucfirst')\n    {\n        return array(\n            self::PERSEROAN=>$method(self::PERSEROAN),\n            self::YAYASAN=>$method(self::YAYASAN),\n            self::PERKUMPULAN=>$method(self::PERKUMPULAN)\n        );\n    }\n\n    public static function getListMaksudTujuan($method = 'ucfirst')\n    {\n        return array(\n            self::PERSEROAN => $method(self::PERSEROAN),\n            self::YAYASAN_PERORANGAN => $method(self::YAYASAN_PERORANGAN),\n        );\n    }\n\n    public static function getListJenisPerseroan($method = 'strtoupper')\n    {\n        return array(\n            self::PERSEROAN_SWASTA_NASIONAL => $method(str_replace('_', ' ', self::PERSEROAN_SWASTA_NASIONAL)),\n            self::PERSEROAN_PMDN_FASILITAS =>$method(str_replace('_', ' ', self::PERSEROAN_PMDN_FASILITAS)),\n            self::PERSEROAN_PMDN_NON_FASILITAS => $method(str_replace('_', ' ', self::PERSEROAN_PMDN_NON_FASILITAS)),\n            self::PERSEROAN_BUMN => $method(str_replace('_', ' ', self::PERSEROAN_BUMN)),\n            self::PERSEROAN_BUMD => $method(str_replace('_', ' ', self::PERSEROAN_BUMD)),\n            self::PERSEROAN_PMA => $method(str_replace('_', ' ', self::PERSEROAN_PMA)),\n        );\n    }\n\n    public static function getListJenisYayasan($method = 'ucwords')\n    {\n        return array(\n            self::YAYASAN_PERORANGAN => $method(self::YAYASAN_PERORANGAN),\n            self::YAYASAN_BADAN_HUKUM => $method(str_replace('_', ' ', self::YAYASAN_BADAN_HUKUM))\n        );\n    }\n\n    public static function getListJenisTransaksiYayasan($method = 'ucwords')\n    {\n        return array(\n            self::YAYASAN_NASIONAL => $method(self::YAYASAN_NASIONAL),\n            self::YAYASAN_ASING => $method(self::YAYASAN_ASING)\n        );\n    }\n\n    public static function changeFormatJenisYayasan(&$jenis)\n    {\n        $arrInDb = array(\n            self::YAYASAN_PERORANGAN => self::YAYASAN_PERORANGAN,\n            self::YAYASAN_BADAN_HUKUM => ucwords(str_replace('_', ' ', self::YAYASAN_BADAN_HUKUM)),\n        );\n        $jenis = $arrInDb[$jenis];\n    }\n\n    public static function getListJenis($tipe = 'perseroan')\n    {\n        $perseroan = array(\n            TransaksiPerseroan::$id_aksi_transaksi_pendirian => 'Pendirian',\n            TransaksiPerseroan::$id_aksi_transaksi_perubahan => 'Perubahan',\n            TransaksiPerseroan::$id_aksi_transaksi_pembubaran => 'Pembubaran',\n            TransaksiPerseroan::$id_aksi_transaksi_marger => 'Penggabungan',\n            TransaksiPerseroan::$penyesuaian => 'Penyesuaian',\n        );\n\n        $yayasan = array(\n            2 => 'Pendirian',\n            3 => 'Perubahan',\n            28 => 'Pembubaran',\n            29 => 'Penggabungan',\n        );\n\n        $perkumpulan = array(\n            TransaksiPerkumpulan::model()->id_aksi_transaksi_pendirian => ucwords(self::JENIS_PENDIRIAN),\n            TransaksiPerkumpulan::model()->id_aksi_transaksi_perubahan => ucwords(self::JENIS_PERUBAHAN),\n        );\n\n        return isset($$tipe) ? $$tipe : array();\n    }\n}\n\n\n--- File: 329 # exception/APIExceptionThrower.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.IExceptionThrower');\n\n/**\n * API Exception Thrower Implementation\n * \n * Concrete implementation of IExceptionThrower interface for API controllers.\n * Provides consistent HTTP exception handling with JSON responses.\n */\nclass APIExceptionThrower implements IExceptionThrower\n{\n    /**\n     * Throws a 400 Bad Request exception\n     * \n     * @param string $message The error message\n     * @param array $errors Optional validation errors\n     * @return void\n     */\n    public function throwBadRequest($message = 'Bad Request', $errors = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => 400\n        ];\n        \n        if (!empty($errors)) {\n            $response['errors'] = $errors;\n        }\n        \n        $this->sendJsonResponse($response, 400);\n    }\n    \n    /**\n     * Throws a 401 Unauthorized exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwUnauthorized($message = 'Unauthorized')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 401\n        ], 401);\n    }\n    \n    /**\n     * Throws a 403 Forbidden exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwForbidden($message = 'Forbidden')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 403\n        ], 403);\n    }\n    \n    /**\n     * Throws a 404 Not Found exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwNotFound($message = 'Not Found')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 404\n        ], 404);\n    }\n    \n    /**\n     * Throws a 405 Method Not Allowed exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwMethodNotAllowed($message = 'Method Not Allowed')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 405\n        ], 405);\n    }\n    \n    /**\n     * Throws a 409 Conflict exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwConflict($message = 'Conflict')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 409\n        ], 409);\n    }\n    \n    /**\n     * Throws a 422 Unprocessable Entity exception\n     * \n     * @param string $message The error message\n     * @param array $errors Validation errors\n     * @return void\n     */\n    public function throwUnprocessableEntity($message = 'Unprocessable Entity', $errors = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => 422\n        ];\n        \n        if (!empty($errors)) {\n            $response['errors'] = $errors;\n        }\n        \n        $this->sendJsonResponse($response, 422);\n    }\n    \n    /**\n     * Throws a 500 Internal Server Error exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwInternalServerError($message = 'Internal Server Error')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 500\n        ], 500);\n    }\n    \n    /**\n     * Throws a 503 Service Unavailable exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwServiceUnavailable($message = 'Service Unavailable')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 503\n        ], 503);\n    }\n    \n    /**\n     * Throws a custom HTTP exception\n     * \n     * @param int $statusCode The HTTP status code\n     * @param string $message The error message\n     * @param array $data Additional data to include in response\n     * @return void\n     */\n    public function throwHttpException($statusCode, $message, $data = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => $statusCode\n        ];\n        \n        if (!empty($data)) {\n            $response['data'] = $data;\n        }\n        \n        $this->sendJsonResponse($response, $statusCode);\n    }\n    \n    /**\n     * Sends JSON response with proper headers\n     * \n     * @param array $data Response data\n     * @param int $statusCode HTTP status code\n     * @return void\n     */\n    private function sendJsonResponse($data, $statusCode)\n    {\n        $statusText = $this->getStatusText($statusCode);\n        \n        header($_SERVER['SERVER_PROTOCOL'] . \" {$statusCode} {$statusText}\");\n        header('Content-Type: application/json');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization');\n        \n        echo CJSON::encode($data);\n        Yii::app()->end();\n    }\n    \n    /**\n     * Gets HTTP status text for status code\n     * \n     * @param int $statusCode HTTP status code\n     * @return string Status text\n     */\n    private function getStatusText($statusCode)\n    {\n        $statusTexts = [\n            200 => 'OK',\n            201 => 'Created',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            405 => 'Method Not Allowed',\n            409 => 'Conflict',\n            422 => 'Unprocessable Entity',\n            500 => 'Internal Server Error',\n            503 => 'Service Unavailable'\n        ];\n        \n        return isset($statusTexts[$statusCode]) ? $statusTexts[$statusCode] : 'Unknown';\n    }\n}\n\n\n--- File: 324 # controllers/api/PerkumpulanController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.services.api.impl.PerkumpulanService');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.response.APIResponse');\n\nClass PerkumpulanController extends Controller {\n\n    private $exceptionThrower;\n    private $perkumpulanService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->perkumpulanService = new PerkumpulanService();\n    }\n\n\n    public function actionValidatePerkumpulan() {\n        if (!RequestContext::isMethod('POST')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $body = RequestContext::getJsonBody();\n\n        $nama = $body['nama'];\n        $nomor_sk = $body['nomor_sk'];\n        $notaris_terakhir = $body['notaris_terakhir'];\n\n        if (empty($nama)) {\n            return $this->exceptionThrower->throwBadRequest(\"'nama' wajib diisi\");\n        }\n\n        if (empty($nomor_sk)) {\n            return $this->exceptionThrower->throwBadRequest(\"'nomor_sk' wajib diisi\");\n        }\n\n        if (empty($notaris_terakhir)) {\n            return $this->exceptionThrower->throwBadRequest(\"'notaris_terakhir' wajib diisi\");\n        }\n\n        $perkumpulan = $this->perkumpulanService->findByNamaAndNomorSkAndNamaNotarisTerakhir($nama, $nomor_sk, $notaris_terakhir);\n\n        if (!$perkumpulan) {\n            return $this->exceptionThrower->throwNotFound('Perkumpulan tidak ditemukan');\n        }\n\n        $pembina = $perkumpulan->pembina;\n        $pengawas = $perkumpulan->pengawas;\n        $pengurus = $perkumpulan->pengurus;\n        $pendiri = $perkumpulan->pendiri;\n\n        $dataPembina = json_decode($pembina, true);\n        $dataPengawas = json_decode($pengawas, true);\n        $dataPengurus = json_decode($pengurus, true);\n        $dataPendiri = json_decode($pendiri, true);\n\n        $listGabungan = [];\n\n        $datasets = array(\n            !empty($dataPembina['data']) ? $dataPembina['data'] : array(),\n            !empty($dataPengawas['data']) ? $dataPengawas['data'] : array(),\n            !empty($dataPengurus['data']) ? $dataPengurus['data'] : array(),\n            !empty($dataPendiri['data']) ? $dataPendiri['data'] : array(),\n        );\n\n        foreach ($datasets as $dataset) {\n            if (!empty($dataset)) {\n                // Keep only rows with both fields non-empty\n                $filtered = array_filter($dataset, function ($row) {\n                    return !empty($row['jabatan_pengurus']) && !empty($row['nama_pengurus']);\n                });\n                if (!empty($filtered)) {\n                    $listGabungan = array_merge($listGabungan, $filtered);\n                }\n            }\n        }\n\n        // to copy UI display take _pengurusForm.php\n        APIResponse::ok([\n            'data' => $perkumpulan,\n            'listAnggota' => $listGabungan,\n        ]);\n    }\n\n\n    public function actionGetPerkumpulan() {\n        if (!RequestContext::isMethod('GET')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $id = RequestContext::getQuery('id');\n\n        $perkumpulan = $this->perkumpulanService->findById($id);\n\n        if (!$perkumpulan) {\n            return $this->exceptionThrower->throwNotFound('Perkumpulan tidak ditemukan');\n        }\n\n        APIResponse::ok($perkumpulan->attributes);\n    }\n\n    public function actionPembubaranPerkumpulan(){\n        if(!RequestContext::isMethod('POST')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $body = RequestContext::getJsonBody();\n\n        $formDataPengajuanPenghapusan = $body['formDataPengajuanPenghapusan'];\n        $formDataPermohonanPenghapusan = $body['formDataPermohonanPenghapusan'];\n        $badan_hukum_id = $body['badan_hukum_id'];\n\n        // create transaction\n        $createTransaction = $this->perkumpulanService->submitFormmPenghapusan(\n            $formDataPengajuanPenghapusan,\n            $formDataPermohonanPenghapusan,\n            $badan_hukum_id\n        );\n\n        APIResponse::ok([\n            'newTransaction' => $createTransaction\n        ]);\n    }\n\n    public function actionUploadAktaPerkumpulan(){\n        if (!RequestContext::isMethod('POST')) {\n            return $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        $nomor_transaksi = RequestContext::getQuery('no');\n        $id = RequestContext::getQuery('id');\n\n        // Get the file from the request\n        $file = $_FILES['tmp_file'];\n\n        if ($file['error'] != UPLOAD_ERR_OK) {\n            return $this->exceptionThrower->throwMethodNotAllowed('File upload error');\n        }\n\n        // Check if the file is uploaded and valid\n        $year = '20' . substr($nomor_transaksi, 2, 2);\n        $checkYear = SabhHelpers::cekTahun($year);\n        if (empty($checkYear)) {\n            $year = date(\"Y\");\n        }\n\n        // create badan hukum akta log\n        // extracted logic from controllers/UploadAktaController.php formUpload()\n        // di staging bisa\n        $badanHukumAktaLog = BadanHukumAktaLog::model()->handleUploadAkta($file, $nomor_transaksi, true, $data_post, false);\n        $transaksi = TransaksiPerkumpulan::model()->find('nomor_transaksi=:no_trans AND id_badan_hukum=:id_badan_hukum AND id_notaris=:id_notaris AND status_transaksi=0',\n        array(\n            ':no_trans' => $nomor_transaksi,\n            ':id_badan_hukum'=>$id,\n            ':id_notaris'=>Yii::app()->user->profilid\n            )\n        );\n        $model = new BadanHukumAkta('simpan', $year);\n        $model->scenario = 'simpan';\n        $model->attributes=$data_post;\n        $model->base = 'perkumpulan';\n        $model->nomor_transaksi = $nomor_transaksi;\n        $trans = Yii::app()->dbBadanHukum->beginTransaction();\n        $akta = $model->saveAkta($model);\n        if($akta){\n            $trans->commit();\n        }else{\n            $trans->rollback();\n        }\n\n        // extracted logic from YayasanController function actionDetailTransaksi($id)\n        $bh = BadanHukum::model()->findByPk((int) $id);\n        TransaksiYayasan::model()->conditionPushPerubahan($transaksi, $bh);\n        TransaksiYayasan::model()->sendActivationDukcapil($nomor_transaksi);\n\n        APIResponse::ok([\n            'message' => 'File uploaded successfully',\n            'file' => $file,\n            'badanHukum' => $badanHukumAktaLog,\n            'bakumAkta' => $model,\n            'transaksi' => $transaksi,\n            'datapost' => $data_post\n        ]);\n    }\n\n}\n\n\n--- File: 318 # controllers/api/VerifikasiPerubahanPerseroanController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.BaseApiException');\nYii::import('application.modules.sabh.exception.ValidationException');\nYii::import('application.modules.sabh.exception.AccessDeniedException');\nYii::import('application.modules.sabh.exception.NotFoundException');\nYii::import('application.modules.sabh.services.perseroan.VerifikasiPerubahanPerseroanService');\nYii::import('application.modules.sabh.services.perseroan.PemegangSahamService');\nYii::import('application.modules.sabh.repositories.perseroan.TransaksiPerseroanRepository');\nYii::import('application.modules.sabh.repositories.perseroan.RiwayatVerifikasiRepository');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.response.APIResponse');\n\nclass VerifikasiPerubahanPerseroanController extends Controller {\n\n    private $service;\n    private $pemegangSahamService;\n    \n    public function init() {    \n        parent::init();\n        $this->service = new VerifikasiPerubahanPerseroanService();\n        $this->pemegangSahamService = new PemegangSahamService();\n    }\n\n    /**\n     * Preview a document file\n     * @param string $path Base64 encoded file path\n     */\n    public function actionPreviewDokumen($path) {\n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $decodedPath = base64_decode($path);\n            $fullPath = Yii::getPathOfAlias('webroot') . $decodedPath;\n\n            if (!file_exists($fullPath)) {\n                throw new NotFoundException('File tidak ditemukan');\n            }\n\n            $ext = strtolower(pathinfo($fullPath, PATHINFO_EXTENSION));\n            \n            $contentType = 'application/octet-stream';\n            if ($ext === 'pdf') {\n                $contentType = 'application/pdf';\n            } else if (in_array($ext, ['doc', 'docx'])) {\n                $contentType = 'application/msword';\n            }\n\n            header('Content-Type: ' . $contentType);\n            header('Content-Disposition: inline; filename=\"' . basename($fullPath) . '\"');\n            header('Content-Length: ' . filesize($fullPath));\n            header('Cache-Control: must-revalidate');\n            header('Pragma: public');\n            header('Expires: 0');\n\n            readfile($fullPath);\n            exit;\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());  \n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Download a document file\n     * @param string $path Base64 encoded file path\n     */\n    public function actionDownloadDokumen($path) {\n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $decodedPath = base64_decode($path);\n            $fullPath = Yii::getPathOfAlias('webroot') . $decodedPath;\n\n            if (!file_exists($fullPath)) {\n                throw new NotFoundException('File tidak ditemukan');\n            }\n\n            $ext = strtolower(pathinfo($fullPath, PATHINFO_EXTENSION));\n            \n            $contentType = 'application/octet-stream';\n            if ($ext === 'pdf') {\n                $contentType = 'application/pdf';\n            } else if (in_array($ext, ['doc', 'docx'])) {\n                $contentType = 'application/msword';\n            }\n\n            header('Content-Type: ' . $contentType);\n            header('Content-Disposition: attachment; filename=\"' . basename($fullPath) . '\"');\n            header('Content-Length: ' . filesize($fullPath));\n            header('Cache-Control: must-revalidate');\n            header('Pragma: public');\n            header('Expires: 0');\n\n            readfile($fullPath);\n            exit;\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Lists all verification requests\n     * @return void\n     */\n    public function actionDaftar() {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            $result = $this->service->getDaftarPerubahan($input);\n            \n            $response = array(\n                'data' => $result['data'],\n                'pagination' => array(\n                    'total_records' => (int)$result['pagination']['total_records'],\n                    'total_pages' => (int)$result['pagination']['total_pages'],\n                    'current_page' => (int)$result['pagination']['current_page'],\n                    'limit' => (int)$result['pagination']['limit']\n                )\n            );\n            \n            APIResponse::ok($response, 'Success');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Shows verification history\n     */\n    public function actionRiwayat() {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (!isset($input['page']) || !isset($input['limit'])) {\n                throw new ValidationException(\"'page' and 'limit' are required\");\n            }\n\n            $result = $this->service->getRiwayatPerubahan($input);\n            APIResponse::ok($result, 'Success');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Shows detailed preview of a Perseroan change request\n     * @param string $id The transaction ID\n     */\n    public function actionPratinjau($id) {\n        \n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            if (empty($id)) {\n                throw new ValidationException(\"ID verifikasi wajib diisi\");\n            }\n\n            $result = $this->service->getPratinjauPerubahan($id);\n            \n            if (!$result) {\n                throw new NotFoundException('Data tidak ditemukan');\n            }\n\n            APIResponse::ok($result, 'Success');\n    \n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Get voting details for a transaction\n     * @param string $token Base64 encoded token containing transaction ID and email\n     */\n    public function actionVoteDetail($token) {\n        if (!RequestContext::isMethod('GET')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            if (empty($token)) {\n                throw new ValidationException(\"Token is required\");\n            }\n\n            $decodedToken = base64_decode($token);\n            if ($decodedToken === false) {\n                throw new ValidationException('Token format tidak valid.');\n            }\n\n            // Token format: nomor_transaksi|email\n            list($nomorTransaksi, $email) = explode('|', $decodedToken);\n            \n            if (empty($nomorTransaksi) || empty($email)) {\n                throw new ValidationException('Token tidak lengkap.');\n            }\n\n            // Get transaction data\n            $transaction = TransaksiPerseroan::model()->findByAttributes([\n                'nomor_transaksi' => $nomorTransaksi\n            ]);\n            if (!$transaction) {\n                throw new NotFoundException('Data transaksi tidak ditemukan.');\n            }\n\n            // Get persetujuan data\n            $persetujuan = PerubahanPerseroanPersetujuanPemegangSaham::model()->findByAttributes([\n                'nomor_transaksi' => $nomorTransaksi,\n                'email_ps' => $email\n            ]);\n\n            if (!$persetujuan) {\n                throw new NotFoundException('Data persetujuan tidak ditemukan.');\n            }\n\n            // Check if voting period has expired\n            if ($persetujuan->isTokenExpired()) {\n                throw new ValidationException('Link persetujuan telah kedaluwarsa.');\n            }\n\n            $result = $this->service->getPratinjauPerubahanByTransaction($nomorTransaksi);\n            // Add voting status to response\n            $result['voting_status'] = array(\n                'has_voted' => $persetujuan->status != PerubahanPerseroanPersetujuanPemegangSaham::STATUS_MENUNGGU,\n                'vote_result' => $persetujuan->status == PerubahanPerseroanPersetujuanPemegangSaham::STATUS_DISETUJUI ? 1 : \n                               ($persetujuan->status == PerubahanPerseroanPersetujuanPemegangSaham::STATUS_DITOLAK ? 2 : null),\n                'vote_catatan' => $persetujuan->alasan_penolakan,\n                'vote_date' => $persetujuan->tanggal_response,\n                'is_expired' => $persetujuan->isTokenExpired()\n            );\n\n            APIResponse::ok($result, 'Success');\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Approve a verification request\n     * @param string $id Verification ID\n     */\n    public function actionApprove($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            $catatan = isset($input['catatan']) ? $input['catatan'] : '';\n\n            $result = $this->service->approveVerifikasi($id, $catatan);\n            APIResponse::ok($result, 'Verifikasi berhasil disetujui');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Reject a verification request\n     * @param string $id Verification ID\n     */\n    public function actionReject($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (!isset($input['catatan']) || empty($input['catatan'])) {\n                throw new ValidationException('Catatan penolakan wajib diisi');\n            }\n\n            $result = $this->service->rejectVerifikasi($id, $input['catatan']);\n            APIResponse::ok($result, 'Verifikasi berhasil ditolak');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Request revision for a verification request\n     * @param string $id Verification ID\n     */\n    public function actionRevise($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (!isset($input['catatan']) || empty($input['catatan'])) {\n                throw new ValidationException('Catatan perbaikan wajib diisi');\n            }\n\n            $result = $this->service->reviseVerifikasi($id, $input['catatan']);\n            APIResponse::ok($result, 'Verifikasi dikembalikan untuk perbaikan');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Handle shareholder vote submission\n     * @param string $token Base64 encoded token containing transaction ID and email\n     */\n    /**\n     * Submit revision response for a verification request\n     * @param string $id Verification ID\n     */\n    public function actionSubmitRevision($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $result = $this->service->submitRevision($id, '');\n            APIResponse::ok($result, 'Perbaikan berhasil disubmit');\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Restore a verification request back to MENUNGGU_KATIMJA status\n     * @param string $id Verification ID\n     */\n    public function actionRestore($id) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            $catatan = isset($input['catatan']) ? $input['catatan'] : '';\n\n            $result = $this->service->restoreVerifikasi($id, $catatan);\n            APIResponse::ok($result, 'Verifikasi berhasil dikembalikan ke Katimja');\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    public function actionVote($token) {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            if (empty($token)) {\n                throw new ValidationException(\"Token is required\");\n            }\n\n            $decodedToken = base64_decode($token);\n            if ($decodedToken === false) {\n                throw new ValidationException('Token format tidak valid.');\n            }\n\n            // Token format: nomor_transaksi|email\n            list($nomorTransaksi, $email) = explode('|', $decodedToken);\n            \n            if (empty($nomorTransaksi) || empty($email)) {\n                throw new ValidationException('Token tidak lengkap.');\n            }\n\n            $input = RequestContext::getJsonBody();\n            if (!isset($input['vote'])) {\n                throw new ValidationException('Vote is required');\n            }\n\n            if ($input['vote'] === false && empty($input['catatan'])) {\n                throw new ValidationException('Catatan penolakan wajib diisi');\n            }\n\n            $catatan = isset($input['catatan']) ? $input['catatan'] : '';\n            \n            // Get persetujuan data\n            $persetujuan = PerubahanPerseroanPersetujuanPemegangSaham::model()->findByAttributes([\n                'nomor_transaksi' => $nomorTransaksi,\n                'email_ps' => $email\n            ]);\n\n            if (!$persetujuan) {\n                throw new NotFoundException('Data persetujuan tidak ditemukan.');\n            }\n\n            // Check if voting period has expired\n            if ($persetujuan->isTokenExpired()) {\n                throw new ValidationException('Link persetujuan telah kedaluwarsa.');\n            }\n\n            // Process the vote using PemegangSahamService\n            $pemegangSahamService = new PemegangSahamService();\n            $voteData = array(\n                'vote' => $input['vote'] ? '1' : '2',\n                'alasan_penolakan' => $catatan\n            );\n            \n            $result = $pemegangSahamService->processVote($persetujuan->token, $voteData);\n            \n            if ($result['status'] === 'success') {\n                APIResponse::ok(array('success' => true), 'Vote berhasil disimpan');\n            } else {\n                throw new ValidationException('Gagal menyimpan vote');\n            }\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n\n    /**\n     * Trigger PS notification for a transaction\n     * POST /sabh/api/verifikasiPerubahanPerseroan/triggerPSNotification\n     */\n    public function actionTriggerPSNotification() {\n        if (!RequestContext::isMethod('POST')) {\n            APIResponse::error('Method not allowed', 405);\n            return;\n        }\n\n        try {\n            $input = RequestContext::getJsonBody();\n            \n            if (empty($input['nomor_transaksi'])) {\n                throw new ValidationException('Nomor transaksi wajib diisi');\n            }\n\n            $nomorTransaksi = $input['nomor_transaksi'];\n            $idPerseroan = $input['id_perseroan'] ? $input['id_perseroan'] : null;\n            \n            if (empty($idPerseroan)) {\n                throw new ValidationException('ID Perseroan wajib diisi');\n            }\n            \n            // Trigger PS notification using the initialized service\n            $result = $this->pemegangSahamService->triggerNotificationAfterAktaUpload($nomorTransaksi, $idPerseroan);\n            \n            if ($result) {\n                APIResponse::ok([\n                    'success' => true,\n                    'nomor_transaksi' => $nomorTransaksi,\n                    'id_perseroan' => $idPerseroan\n                ], 'PS notification berhasil dikirim');\n            } else {\n                throw new ValidationException('Gagal mengirim notifikasi PS');\n            }\n\n        } catch (BaseApiException $e) {\n            APIResponse::error($e->getMessage(), $e->getStatusCode());\n        } catch (Exception $e) {\n            APIResponse::error($e->getMessage(), 500);\n        }\n    }\n}\n\n--- File: 337 # components/PajakAPI.php ---\n<?php\nClass PajakAPI {\n\n    public static function getToken($no_transaksi = null) {\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'token_djp',\n        ]);\n\n        if($setting) {\n            $token = json_decode($setting->value, true);\n            if(isset($token['token']) && isset($token['expired'])) {\n                if($token['expired'] > time()) {\n                    return $token['token'];\n                }\n            }\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['no_transaksi'] = $no_transaksi;\n        $logs['type'] = 'GETTOKEN';\n        $logs['ip_address'] = 'AHU >> DJP';\n\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'cid_djp',\n        ]);\n        $client_id = $setting->value;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'username_djp',\n        ]);\n        $username = $setting->value;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'pass_djp',\n        ]);\n        $password = $setting->value;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'client_sec',\n        ]);\n        $client_sec = $setting->value;\n\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n        $url = $setting->value.\"/auth/oauth/token\";\n        $logs['service_uri'] = $url;\n\n        $header = [\n            'Authorization: Basic '.base64_encode($client_id.':'.$client_sec),\n        ];\n\n        $post_fields = [\n            'grant_type' => 'password',\n            'client_id' => $client_id,\n            'username' => $username,\n            'password' => $password,\n        ];\n\n        $post = http_build_query($post_fields);\n        $logs['request'] = $post;\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $error = curl_error($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        if($token = CHtml::value($rs, 'access_token', null)) {\n            $logs['is_error'] = 0;\n            BakumSetting::model()->updateDataSetting('token_djp', json_encode([\n                'token' => $token,\n                'expired' => CHtml::value($rs, 'expires_in', 0) + time(),\n            ]));\n        }\n        $logs['additional_data'] = compact('header', 'post_fields', 'error');\n\n        LogHelpers::saveLogDjp($logs);\n        return $token;\n    }\n\n    public static function getWilayahDJP($kd_wil = 0, $jns_wil = 0) {\n        $token = self::getToken();\n\n        if(is_null($token)) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'DATAWILAYAH';\n\n\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n\n        $url = $setting->value.\"/api/getWilayah\";\n        $logs['service_uri'] = $url;\n\n        $post = [\n            'kdWil' => $kd_wil,\n            'jnsWil' => $jns_wil,\n        ];\n        $post = json_encode($post);\n        $logs['request'] = $post;\n\n        $header = [\n            \"Authorization: bearer \".$token,\n            \"Content-Type: application/json\"\n        ];\n        $logs['additional_data'] = compact('header');\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        $data = [];\n        if(CHtml::value($rs, 'kdStatus', null) == 1) {\n            $logs['is_error'] = 0;\n            $data = CHtml::value($rs, 'message', []);\n        }\n\n        LogHelpers::saveLogDjp($logs);\n        return $data;\n    }\n\n    public static function checkNpwp($npwp) {\n        $token = self::getToken();\n\n        if(is_null($token)) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'CHECKNPWP';\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n        $url = $setting->value.\"/api/getwpbynpwp/\".$npwp;\n        $logs['service_uri'] = $url;\n        $logs['request'] = $npwp;\n\n        $header = [\n            \"Authorization: bearer \".$token,\n        ];\n        $logs['additional_data'] = compact('header');\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        if (curl_getinfo($ch)['http_code'] != 200) {\n            return \"ERRDJP\";\n        }\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        if(CHtml::value($rs, 'message.npwp', null)) {\n            $logs['is_error'] = 0;\n        }\n\n        LogHelpers::saveLogDjp($logs);\n        return $rs;\n    }\n\n    public static function getTokenKswp() {\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'kswp_djp',\n        ]);\n\n        if (empty($setting)) {\n            return false;\n        }\n\n        $kswp_djp = json_decode($setting->value, true);\n\n        if (empty($kswp_djp['url']) || empty($kswp_djp['user']) || empty($kswp_djp['pass'])) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'GETTOKENKSWP';\n        $logs['ip_address'] = 'AHU >> DJP';\n\n        $url = $kswp_djp['url'] . \"/djp/token\";\n        $logs['service_uri'] = $url;\n\n        $post_fields = [\n            'user' => $kswp_djp['user'],\n            'pwd' => $kswp_djp['pass'],\n        ];\n\n        $post = http_build_query($post_fields);\n        $logs['request'] = $post;\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 5);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $error = curl_error($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n        $status = CHtml::value($rs, 'status', null);\n        $token = null;\n        if ($status == 200) {\n            if ($token = CHtml::value($rs, 'message', null)) {\n                $logs['is_error'] = 0;\n                // BakumSetting::model()->updateDataSetting('token_kswp', $token);\n            }\n        }\n        $logs['additional_data'] = compact('post_fields', 'error');\n\n        // comment dulu\n        LogHelpers::saveLogDjp($logs);\n        return $token;\n    }\n\n    public static function checkNpwpPerseroan($npwp, $kdizin, $counter = 1) {\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'kswp_djp',\n        ]);\n\n        if (empty($setting)) {\n            return false;\n        }\n\n        $kswp_djp = json_decode($setting->value, true);\n\n        if (empty($kswp_djp['url'])) {\n            return false;\n        }\n\n        // $token = BakumSetting::model()->findByAttributes([\n        //     'name' => 'token_kswp',\n        // ]);\n\n        // $token = Chtml::value($token, 'value', null);\n\n        // if (empty($token)) {\n        //     if (!($token = self::getTokenKswp())) {\n        //         return false;\n        //     }\n        // }\n\n        $token = self::getTokenKswp();\n\n        $url = $kswp_djp['url'] . \"/djp/kswp\";\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'CHECKNPWPPERSEROAN';\n        $logs['service_uri'] = $url;\n\n        $post_fields = [\n            'npwp' => $npwp,\n            'kdizin' => $kdizin,\n        ];\n\n        $post = http_build_query($post_fields);\n        $logs['request'] = $post;\n\n        $header = [\n            \"Authorization: \" . $token,\n        ];\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $error = curl_error($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        if (curl_getinfo($ch)['http_code'] == 0) {\n            return \"ERRKSWP\";\n        }\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n\n        if ($msg_status = Chtml::value($rs, 'message.status', null)) {\n            $logs['is_error'] = 0;\n        } else { // coba login\n            if ($status = Chtml::value($rs, 'status', null)) {\n                if (\n                    ($status == 400 || $status == 406) && // respon error token tidak valid/kadaluarsa\n                    $counter <= 1                         // set max jumlah rekursif function\n                ) {\n                    $token = self::getTokenKswp();\n                    if (!empty($token)) {\n                        $counter++;\n                        return self::checkNpwpPerseroan($npwp, $kdizin, $counter);\n                    }\n                }\n            }\n        }\n\n        $logs['additional_data'] = compact('header', 'post_fields', 'error');\n\n        LogHelpers::saveLogDjp($logs);\n        return $rs;\n    }\n\n    public static function sendDataDJP($nomor) {\n        $token = self::getToken($nomor);\n\n        if(is_null($token)) {\n            return false;\n        }\n\n        $logs = [];\n        $logs['is_error'] = 1;\n        $logs['type'] = 'SENDDATA';\n        $logs['no_transaksi'] = $nomor;\n\n        $post_fields = static::prepareData($nomor);\n        $post = json_encode($post_fields);\n        $logs['request'] = $post_fields;\n        $setting = BakumSetting::model()->findByAttributes([\n            'name' => 'url_djp',\n        ]);\n        $url = $setting->value.\"/api/submitReg\";\n        $logs['service_uri'] = $url;\n\n        $header = [\n            \"Authorization: bearer \".$token,\n            \"Content-Type: application/json\",\n        ];\n\n        $logs['additional_data'] = compact('header');\n\n        $ch = curl_init();\n        curl_setopt($ch, CURLOPT_URL, $url);\n        curl_setopt($ch, CURLOPT_POST, true);\n        curl_setopt($ch, CURLOPT_POSTFIELDS, $post);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 20);\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        $start_req_time = microtime(true);\n        $result = curl_exec($ch);\n        $logs['execution_time'] = sprintf('%.3f', microtime(true) - $start_req_time) . 's';\n        $logs['response'] = $result;\n        curl_close($ch);\n\n        $rs = json_decode($result, true);\n        if(CHtml::value($rs, 'message.npwp', null)) {\n            $logs['is_error'] = 0;\n        }\n\n        LogHelpers::saveLogDjp($logs);\n        return $result;\n    }\n\n    public static function prepareData($nomor) {\n        /*$model = TransaksiPerseroan::model()->findByAttributes([\n            'nomor_transaksi' => $nomor,\n        ]);*/\n        $tahun = \"20\".substr($nomor, 2, 2);\n\n        $model = Yii::app()->dbBadanHukum->createCommand()\n                  ->select('*')\n                  ->from('tbl_transaksi_perseroan_'.$tahun)                  \n                  ->where(\"nomor_transaksi = \".$nomor)\n                  ->queryRow();\n\n        $model = (object)$model; \n        \n        $kegiatan = json_decode($model->kegiatan,true);\n        $kegiatan = end($kegiatan);\n        $klu = CHtml::value($kegiatan, 'id', \"\");\n        $jenisUsaha = CHtml::value($kegiatan, 'tujuan', [\"-\"]);\n        $jenisUsaha = end($jenisUsaha);\n\n        $jenis_perseroan = CHtml::value($model, 'jenis_perseroan', \"\") == \"PMA\" ? \"1\" : \"2\";\n\n        $kode_kelurahan = Chtml::value($model, 'kelurahan');\n        $kode_kecamatan = Chtml::value($model, 'kecamatan_id_perseroan');\n        $kode_kabupaten = Chtml::value($model, 'kabupaten_id_perseroan');\n        $kode_provinsi = Chtml::value($model, 'provinsi_id_perseroan');\n\n        if(!empty($kode_kelurahan)){\n            if(!is_numeric($kode_kelurahan)) {            \n                $kd_wil_persero = Wilayah::getCodewWilByName($kode_kelurahan, $kode_kecamatan);\n                $kelurahan_persero = $kode_kelurahan;\n                $kecamatan_persero = Wilayah::getNameById($kode_kecamatan);\n                $kabupaten_persero = Wilayah::getNameById($kode_kabupaten);\n                $provinsi_persero = Wilayah::getNameById($kode_provinsi);\n                $kd_pos_persero = \"\";\n            } else {\n                $kd_wil_persero = \"-\";\n                $kelurahan_persero = \"-\";\n                $kecamatan_persero = \"-\";\n                $kabupaten_persero = \"-\";\n                $provinsi_persero = \"-\";\n                $kd_pos_persero = '-';\n            }\n        }\n\n\n        /*if(!is_numeric($kode_kelurahan)) {\n            $kode_kelurahan = Chtml::value($model, 'kelurahan_id_perseroan', '-');\n        }\n        if($wilayah = WilayahSabh::model()->findByAttributes(['WSID' => $kode_kelurahan])) {\n            $kelurahan_persero = $wilayah->NM_KELURAHAN;\n            $kecamatan_persero = $wilayah->NM_KECAMATAN;\n            $kabupaten_persero = $wilayah->NM_DATI2;\n            $provinsi_persero = $wilayah->NM_DATI1;\n            $kd_pos_persero = $wilayah->KD_POS ? : \"-\";\n            $kd_wil_persero = $wilayah->KD_WIL ? : \"-\";\n        } else {\n            $kelurahan_persero = '-';\n            $kecamatan_persero = '-';\n            $kabupaten_persero = '-';\n            $provinsi_persero = '-';\n            $kd_pos_persero = '-';\n            $kd_wil_persero = '-';\n        }*/\n\n        $decode = TransaksiPerseroan::parse_akta($model);\n        $decode = reset($decode);\n        $noAkta = Chtml::value($model, 'nomor_akta_perseroan') ? :  $decode->nomor_akta;\n        $tglAkta = Chtml::value($model, 'tgl_akta_perseroan') ? :  $decode->tanggal_akta;\n        $tglAkta = date('d-m-Y', strtotime($tglAkta));\n        $bln_awal = CHtml::value($model, 'tahun_buku');\n        $bln_awal = date('m', strtotime($bln_awal));\n        $awal = intval($bln_awal);\n        $bln_akhir = str_pad($awal > 1 ? $awal - 1 : 12, 2, '0', STR_PAD_LEFT);\n\n        $pemegangs = Perseroan::json_decode_($model->pemegang_saham);\n        $dataPengurus = [];\n        if (is_array($pemegangs)) {\n            $already_penanggung = false;\n            foreach ($pemegangs as $v) {\n                if (isset($v->data[0])) {\n                    $pemegang = $v->data[0];\n                    if(Chtml::value($pemegang, 'jenis_pemegang_saham', '-') == \"Perorangan\") {\n                        $kode_kelurahan = Chtml::value($pemegang, 'kelurahan', '-');\n                        if($wilayah = WilayahSabh::model()->findByAttributes(['WSID' => $kode_kelurahan])) {\n                            $kelurahan = $wilayah->NM_KELURAHAN;\n                            $kecamatan = $wilayah->NM_KECAMATAN;\n                            $kabupaten = $wilayah->NM_DATI2;\n                            $provinsi = $wilayah->NM_DATI1;\n                            $kd_pos = $wilayah->KD_POS ? : \"-\";\n                            $kd_wil = $wilayah->KD_WIL ? : \"-\";\n                        } else {\n                            $kelurahan = '-';\n                            $kecamatan = '-';\n                            $kabupaten = '-';\n                            $provinsi = '-';\n                            $kd_pos = '-';\n                            $kd_wil = '-';\n                        }\n                        $kecamatanPj = Chtml::value($pemegang, 'kecamatan_dewan', '-');\n                        $dati2Pj = Chtml::value($pemegang, 'kabupaten_dewan', '-');\n                        $dati1Pj = Chtml::value($pemegang, 'provinsi_dewan', '-');\n\n                        $is_penanggung = (Chtml::value($pemegang, 'penanggungJawab') == \"penanggung jawab\" || Chtml::value($pemegang, 'penanggung_jawab') == \"1\") && !$already_penanggung;\n                        if($is_penanggung) {\n                            $already_penanggung = true;\n                        }\n\n                        $is_dirkom = Chtml::value($pemegang, 'direksi', '-') == \"direksi atau komisaris\";\n                        if($is_dirkom) {\n                            $dataPengurus[] = [\n                                'statusPj' => $is_penanggung ? \"0\" : \"1\",\n                                'namaPj' => Chtml::value($pemegang, 'nama_badan_hukum'),\n                                'jabatanPj' => \"2\",\n                                'kdNegaraPj' => Chtml::value($pemegang, 'is_asing') == \"0\" ? \"ID\" : \"AS\",\n                                'nomorIdPj' => Chtml::value($pemegang, 'nik') ? : (Chtml::value($pemegang, 'passport', '-') ? : \"-\"),\n                                'npwpPj' => Chtml::value($pemegang, 'NPWP', \"\") ? : \"\",\n                                'alamatPj' => Chtml::value($pemegang, 'alamat_lengkap_dewan', '-') ? : \"-\",\n                                'rtPj' => Chtml::value($pemegang, 'rt_dewan', '') ? : \"\",\n                                'rwPj' => Chtml::value($pemegang, 'rw_dewan', '') ? : \"\",\n                                'kelurahanPj' => $kelurahan,\n                                'kecamatanPj' => $kecamatan,\n                                'dati2Pj' => $kabupaten,\n                                'dati1Pj' => $provinsi,\n                                'kodePosPj' => $kd_pos,\n                                'kodeWilayahPj' => $kd_wil,\n                                'nomorTeleponPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'nomorHpPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'emailPj' => Chtml::value($pemegang, 'email', '-') ? : \"-\",\n                                'nomorKitasPj' => Chtml::value($pemegang, 'kitas', '-') ? : \"-\",\n                                'modalPj' => \"\",\n                                'ketJabPj' => Chtml::value($pemegang, 'jabatan', \"\"),\n                            ];\n                            if($is_penanggung) {\n                                $is_penanggung = false;\n                            }\n                        }\n\n                        $is_pemsaham = Chtml::value($pemegang, 'pemegangSaham', '-') == \"pemegang saham\";\n                        if($is_pemsaham) {\n                            $dataPengurus[] = [\n                                'statusPj' => $is_penanggung ? \"0\" : \"1\",\n                                'namaPj' => Chtml::value($pemegang, 'nama_badan_hukum'),\n                                'jabatanPj' => \"1\",\n                                'kdNegaraPj' => Chtml::value($pemegang, 'is_asing') == \"0\" ? \"ID\" : \"AS\",\n                                'nomorIdPj' => Chtml::value($pemegang, 'nik') ? : (Chtml::value($pemegang, 'passport', '-') ? : \"-\"),\n                                'npwpPj' => Chtml::value($pemegang, 'NPWP', \"\") ? : \"\",\n                                'alamatPj' => Chtml::value($pemegang, 'alamat_lengkap_dewan', '-') ? : \"-\",\n                                'rtPj' => Chtml::value($pemegang, 'rt_dewan', '') ? : \"\",\n                                'rwPj' => Chtml::value($pemegang, 'rw_dewan', '') ? : \"\",\n                                'kelurahanPj' => $kelurahan,\n                                'kecamatanPj' => $kecamatan,\n                                'dati2Pj' => $kabupaten,\n                                'dati1Pj' => $provinsi,\n                                'kodePosPj' => $kd_pos,\n                                'kodeWilayahPj' => $kd_wil,\n                                'nomorTeleponPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'nomorHpPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'emailPj' => Chtml::value($pemegang, 'email', '-') ? : \"-\",\n                                'nomorKitasPj' => Chtml::value($pemegang, 'kitas', '-') ? : \"-\",\n                                'modalPj' => Chtml::value($pemegang, 'total_harga_saham_yang_dipegang', '-') ? : \"-\",\n                                'ketJabPj' => Chtml::value($pemegang, 'jabatan'),\n                            ];\n                        }\n                        if(!$is_dirkom && !$is_pemsaham) {\n                            $dataPengurus[] = [\n                                'statusPj' => (Chtml::value($pemegang, 'penanggungJawab') == \"penanggung jawab\" || Chtml::value($pemegang, 'penanggung_jawab') == \"1\") ? \"0\" : \"2\",\n                                'namaPj' => Chtml::value($pemegang, 'nama_badan_hukum'),\n                                'jabatanPj' => \"2\",\n                                'kdNegaraPj' => Chtml::value($pemegang, 'is_asing') == \"0\" ? \"ID\" : \"AS\",\n                                'nomorIdPj' => Chtml::value($pemegang, 'nik') ? : (Chtml::value($pemegang, 'passport', '-') ? : \"-\"),\n                                'npwpPj' => Chtml::value($pemegang, 'NPWP', \"\") ? : \"\",\n                                'alamatPj' => Chtml::value($pemegang, 'alamat_lengkap_dewan', '-') ? : \"-\",\n                                'rtPj' => Chtml::value($pemegang, 'rt_dewan', '') ? : \"\",\n                                'rwPj' => Chtml::value($pemegang, 'rw_dewan', '') ? : \"\",\n                                'kelurahanPj' => $kelurahan,\n                                'kecamatanPj' => $kecamatan,\n                                'dati2Pj' => $kabupaten,\n                                'dati1Pj' => $provinsi,\n                                'kodePosPj' => $kd_pos,\n                                'kodeWilayahPj' => $kd_wil,\n                                'nomorTeleponPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'nomorHpPj' => Chtml::value($pemegang, 'no_telepon_dewan', '-') ? : \"-\",\n                                'emailPj' => Chtml::value($pemegang, 'email', '-') ? : \"-\",\n                                'nomorKitasPj' => Chtml::value($pemegang, 'kitas', '-') ? : \"-\",\n                                'modalPj' => Chtml::value($pemegang, 'total_harga_saham_yang_dipegang', '-') ? : \"-\",\n                                'ketJabPj' => Chtml::value($pemegang, 'jabatan', \"\"),\n                            ];\n                        }\n                    }\n                }\n            }\n        }\n        $val = Helpers::GetLastSK($model->id_notaris);\n        if(!empty($val[2])) {\n            $aktTmp = $val[2];\n        } else {\n            $aktTmp = Chtml::value($model, 'NotarisNg.nama_kabupaten_penempatan', '-');\n        }\n        $alamat = substr($model->alamat_perseroan, 0, 100);\n        return [\n            'userIdNotaris' => $model->id_notaris,\n            'nomorTransaksi' => $nomor,\n            'nomorSkPengesahan' => $model->nomor_sk,\n            'namaPerseroan' => $model->nama_perseroan,\n            'jenisPemodalan' => $jenis_perseroan,\n            'alamat' => $alamat,\n            \"rt\" => $model->rt_perseroan ? : \"\",\n            \"rw\" => $model->rw_perseroan ? : \"\",\n            \"nomorFax\" => \"-\",\n            'kodeWilayah' => $kd_wil_persero,\n            'nomorTelepon' => $model->nomor_telepon_perseroan,\n            'email' => $model->email_perseroan,\n            'aktaTmp' => $aktTmp,\n            'aktaTgl' => $tglAkta,\n            'nomorAkta' => $noAkta,\n            'namaNotaris' => $model->nama_notaris,\n            'thBukuAwal' => $bln_awal,\n            'thBukuAkhir' => $bln_akhir,\n            'jenisUsaha' => $jenisUsaha,\n            'klu' => $klu,\n            'dataPengurus' => $dataPengurus,\n        ];\n    }\n\n    public static function prepareDataTest($data) {\n        return [\n            'userIdNotaris' => \"312\",\n            'nomorTransaksi' => \"2012738124784\",\n            'nomorSkPengesahan' => \"AHU-AH.03.03-00050\",\n            'namaPerseroan' => \"MAJU KEMANA PONDOK\",\n            'jenisPemodalan' => \"1\",\n            'alamat' => \"JL PEMUDA\",\n            \"rt\" => \"02\",\n            \"rw\" => \"003\",\n            \"nomorFax\" => \"-\",\n            'kodeWilayah' => \"3171041004\",\n            'nomorTelepon' => \"0856384573845\",\n            'email' => \"audris@docotel.com\",\n            'aktaTmp' => \"-\",\n            'aktaTgl' => \"01-01-1997\",\n            'nomorAkta' => '09/02',\n            'namaNotaris' => \"sabh\",\n            'thBukuAwal' => \"1\",\n            'thBukuAkhir' => \"12\",\n            'jenisUsaha' => \"usaha x\",\n            'klu' => \"45101\",\n            'dataPengurus' => [\n                [\n                    'statusPj' => \"0\",\n                    'namaPj' => \"pj1\",\n                    'jabatanPj' => \"2\",\n                    'kdNegaraPj' => \"ID\",\n                    'nomorIdPj' => \"23410591\",\n                    'npwpPj' => \"168268944542000\",\n                    'alamatPj' => \"jl semenu\",\n                    'rtPj' => \"21\",\n                    'rwPj' => \"22\",\n                    'kelurahanPj' => \"Jurang Mangu\",\n                    'kecamatanPj' => \"Pondok Aren\",\n                    'dati2Pj' => \"Tangsel\",\n                    'dati1Pj' => \"Banten\",\n                    'kodePosPj' => \"62115\",\n                    'kodeWilayahPj' => \"1226090001\",\n                    'nomorTeleponPj' => \"084567765432\",\n                    'nomorHpPj' => \"084567765432\",\n                    'emailPj' => \"audris@gmial.com\",\n                    'nomorKitasPj' => \"-\",\n                    'modalPj' => \"3000000\",\n                    'ketJabPj' => \"Komisaris\",\n                ],\n                [\n                    'statusPj' => \"1\",\n                    'namaPj' => \"psj1\",\n                    'jabatanPj' => \"2\",\n                    'kdNegaraPj' => \"ID\",\n                    'nomorIdPj' => \"23410591\",\n                    'npwpPj' => \"168268944542000\",\n                    'alamatPj' => \"jl semenu\",\n                    'rtPj' => \"21\",\n                    'rwPj' => \"22\",\n                    'kelurahanPj' => \"Jurang Mangu\",\n                    'kecamatanPj' => \"Pondok Aren\",\n                    'dati2Pj' => \"Tangsel\",\n                    'dati1Pj' => \"Banten\",\n                    'kodePosPj' => \"62115\",\n                    'kodeWilayahPj' => \"1226090001\",\n                    'nomorTeleponPj' => \"084567765432\",\n                    'nomorHpPj' => \"084567765432\",\n                    'emailPj' => \"audris@gmial.com\",\n                    'nomorKitasPj' => \"-\",\n                    'modalPj' => \"3000000\",\n                    'ketJabPj' => \"Komisaris\",\n                ],\n                [\n                    'statusPj' => \"1\",\n                    'namaPj' => \"pjx1\",\n                    'jabatanPj' => \"1\",\n                    'kdNegaraPj' => \"AS\",\n                    'nomorIdPj' => \"23410591\",\n                    'npwpPj' => \"\",\n                    'alamatPj' => \"jl semenu\",\n                    'rtPj' => \"21\",\n                    'rwPj' => \"22\",\n                    'kelurahanPj' => \"Jurang Mangu\",\n                    'kecamatanPj' => \"Pondok Aren\",\n                    'dati2Pj' => \"Tangsel\",\n                    'dati1Pj' => \"Banten\",\n                    'kodePosPj' => \"62115\",\n                    'kodeWilayahPj' => \"1226090001\",\n                    'nomorTeleponPj' => \"084567765432\",\n                    'nomorHpPj' => \"084567765432\",\n                    'emailPj' => \"audris@gmial.com\",\n                    'nomorKitasPj' => \"9049049245\",\n                    'modalPj' => \"3000000\",\n                    'ketJabPj' => \"Komisaris\",\n                ],\n            ]\n        ];\n    }\n}\n\n?>\n\n\n--- File: 285 # controllers/PublicApiBakumController.php ---\n<?php\n\nclass PublicApiBakumController extends Controller {\n\n    /**\n     * Validate Secret Key from X-SECRET-TOKEN header against ahu_setting\n     */\n    private function validateSecretKey($secretKey) {\n        try {\n            $db = Yii::app()->db;\n            \n            $cfg = $db->createCommand()\n                ->select('value')\n                ->from('ahu_setting')\n                ->where('name=:nm', [':nm' => 'api_bakum_secret_token'])\n                ->queryRow();\n            $expectedSecret = isset($cfg['value']) ? trim($cfg['value']) : null;         \n            return !empty($expectedSecret) && $secretKey == $expectedSecret;\n        } catch (Exception $e) {\n            return false;\n        }\n    }\n\n    /**\n     * Parse JSON body payload\n     */\n    private function getJsonPayload() {\n        $input = file_get_contents('php://input');\n        $data = json_decode($input, true);\n        \n        if (json_last_error() !== JSON_ERROR_NONE) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid JSON payload: ' . json_last_error_msg(),\n                'data' => []\n            ], 400);\n            return false;\n        }\n        \n        return $data;\n    }\n\n    /**\n     * Send JSON response\n     */\n    private function sendResponse($data, $status = 200) {\n        header('Content-Type: application/json');\n        http_response_code($status);\n        echo CJSON::encode($data);\n        Yii::app()->end();\n    }\n\n    /**\n     * Check Yayasan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaYayasanCheck\n     */\n    public function actionPesanNamaYayasanCheck() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['novoucher'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter novoucher required',\n                'data' => []\n            ], 400);\n            return;\n        }\n        \n        $id = 'yayasan';\n        $novoucher = $jsonData['novoucher'];\n        \n        try {\n            $OrderName = new OrderName;\n            $OrderName->base = $id;\n            $OrderName->no_voucher = $novoucher;\n            \n            $criteria = new CDbCriteria;\n            $criteria->condition = 'no_voucher = :voucher AND base = :base AND is_active = 1';\n            $criteria->params = array(':voucher' => $novoucher, ':base' => $id);\n            $criteria->order = 'tgl_pesan DESC';\n            \n            $reservations = OrderName::model()->findAll($criteria);\n            \n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => $reservation->is_active ? 'active' : 'inactive'\n                ];\n            }\n            \n            $this->sendResponse([\n                'success' => true,\n                'message' => 'Data pesan nama yayasan berhasil ditemukan',\n                'data' => $data\n            ]);\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Save Yayasan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaYayasan\n     */\n    public function actionPesanNamaYayasan() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        // Validate required fields\n        $requiredFields = ['novoucher', 'nama', 'nama_singkat', 'nama_pemohon', 'email_pemohon', 'telepon_pemohon'];\n        foreach ($requiredFields as $field) {\n            if (!isset($jsonData[$field]) || empty($jsonData[$field])) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => \"Parameter $field required\",\n                    'data' => []\n                ], 400);\n                return;\n            }\n        }\n        \n        // Copy exact logic from BaseController->savepesannama for yayasan\n        $id = 'yayasan';\n        \n        if (Yii::app()->user->isGuest)\n            $profile = FALSE;\n        else {\n            if (in_array('cs-sabh-cikini', Yii::app()->user->group)) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal pesan nama ' . strtoupper($id),\n                    'data' => []\n                ], 403);\n                return;\n            }\n            $profile = MsNotarisProfile::model()->findByPk(Yii::app()->user->profilid);\n        }\n        $isnotaris = !empty(Yii::app()->user->profilid) ? true : false;\n        $isgabung = false;\n        // Handle regular POST requests for API (removed AJAX check)\n        if (true) {\n            $jenis_perseroan = '';\n            $OrderMode = new OrderName;\n            $OrderMode->base = $base = $id;\n            $OrderMode->is_proses = 0; // Set default value\n\n            // Cek voucher gabung apakah sudah sampai pesan nama\n            $cekgabung = BillingModalDasar::model()->cekGabung($jsonData['novoucher']);\n            if (!empty($cekgabung)) {\n                if ($cekgabung->is_gabung == 1 && $cekgabung->proses > 0) {\n                    $this->sendResponse([\n                        'success' => false,\n                        'message' => 'Gagal pesan nama ' . strtoupper($id),\n                        'data' => []\n                    ], 400);\n                    return;\n                }\n            }\n\n            $OrderMode->nama = $nama = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama'])));\n            $OrderMode->nama_singkat = $nama_singkat = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama_singkat'])));\n            $OrderMode->tgl_pesan = $tanggalPesan = date('Y-m-d H:i:s');\n            $OrderMode->tgl_exp_pesan = $tanggalExp = date('Y-m-d H:i:s', strtotime('+60 days'));\n            \n            $OrderMode->kegiatan = $kegiatan = !empty($jsonData['kegiatan_mbg']) && !!$jsonData['kegiatan_mbg'] ? 'Makan Bergizi Gratis' : '';\n            $OrderMode->kode_wilayah = $kodeWilayah = !empty($jsonData['kode_wilayah']) ? $jsonData['kode_wilayah'] : '';\n            $OrderMode->nama_wilayah = $namaWilayah = !empty($jsonData['nama_wilayah']) ? $jsonData['nama_wilayah'] : '';\n\n            if (!$OrderMode->no_voucher) {\n                $OrderMode->no_voucher = $voucher = $jsonData['novoucher'];\n            }\n            $OrderMode->id_notaris = $profile ? $profile->ID_NOTARIS : '';\n            $nama_pemohon = $telepon_pemohon = $email_pemohon = \"\";\n\n            if(!empty($jsonData['OrderName']['nama_pemohon']))\n                $nama_pemohon = $jsonData['OrderName']['nama_pemohon'];\n            if(!empty($jsonData['OrderName']['telepon_pemohon']))\n                $telepon_pemohon = $jsonData['OrderName']['telepon_pemohon'];\n            if(!empty($jsonData['OrderName']['email_pemohon']))\n                $email_pemohon = $jsonData['OrderName']['email_pemohon'];\n            \n            //post order domain\n            if(!empty($jsonData['OrderDomain']['nama_domain'])){\n                $arr_domain  = explode(',',$jsonData['OrderDomain']['nama_domain']);\n            }\n            $nama_domain = isset($arr_domain) ? $arr_domain : '';\n            $harga = !empty($jsonData['OrderDomain']['harga']) ? $jsonData['OrderDomain']['harga'] : '';\n            if(!empty($jsonData['OrderDomain']['nama_base']))\n                $nama_base = $jsonData['OrderDomain']['nama_base'];\n            $nama_base = isset($nama_base) ? $nama_base : '';\n\n            $OrderMode->nama_pemohon = $nama_pemohon = $profile ? $profile->NAMA_LENGKAP : (isset($jsonData['nama_pemohon']) ? $jsonData['nama_pemohon'] : $nama_pemohon);\n            $OrderMode->telepon_pemohon = $telepon_pemohon = !empty($profile->NO_HP) ? $profile->NO_HP : (isset($jsonData['telepon_pemohon']) ? $jsonData['telepon_pemohon'] : $telepon_pemohon);\n            $OrderMode->email_pemohon = $email_pemohon = $profile ? $profile->EMAIL : (isset($jsonData['email_pemohon']) ? $jsonData['email_pemohon'] : $email_pemohon);\n\n            $OrderMode->base = $base = $id;\n            $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name WHERE nama=:nama AND base=:base AND is_active = 1')\n                ->bindValue(':nama', $OrderMode->nama)\n                ->bindValue(':base', $OrderMode->base)\n                ->queryScalar();\n\n            if(!empty($cekOrderActive)){\n                // Name already reserved\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Nama yayasan sudah dipesan',\n                    'data' => [\n                        'nama' => $nama,\n                        'error_type' => 'name_already_reserved'\n                    ]\n                ], 409);\n                return;\n            }\n            \n            $simpanorder = $OrderMode->savePesanNama($nama_domain,$nama_base,$harga);\n\n            if (!empty($simpanorder)) {\n                $no_pesan = $OrderMode->id_pesan;\n\n                //cek jenis voucher,jika gabung berarti bisa lanut pendirian langsung\n                $cekgabung = BillingModalDasar::model()->cekGabung($OrderMode->no_voucher);\n                if(!empty($cekgabung)){\n                    if($cekgabung->is_gabung == 1 && $cekgabung->proses < 2) {\n                        $isgabung = true;\n                    }\n                }\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Pesan nama yayasan berhasil',\n                    'data' => [\n                        'id_pesan' => $no_pesan,\n                        'nama' => $nama,\n                        'nama_singkat' => $nama_singkat,\n                        'tanggal_pesan' => $tanggalPesan,\n                        'tanggal_exp' => $tanggalExp,\n                        'is_gabung' => $isgabung\n                    ]\n                ]);\n            } else {\n                \n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal menyimpan pesan nama yayasan',\n                    'data' => []\n                ], 500);\n            }\n        }\n    }\n\n    /**\n     * Check Perkumpulan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulanCheck\n     */\n    public function actionPesanNamaPerkumpulanCheck() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['novoucher'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter novoucher required',\n                'data' => []\n            ], 400);\n            return;\n        }\n        \n        $id = 'perkumpulan';\n        $novoucher = $jsonData['novoucher'];\n        \n        try {\n            $OrderName = new OrderName;\n            $OrderName->base = $id;\n            $OrderName->no_voucher = $novoucher;\n            \n            $criteria = new CDbCriteria;\n            $criteria->condition = 'no_voucher = :voucher AND base = :base AND is_active = 1';\n            $criteria->params = array(':voucher' => $novoucher, ':base' => $id);\n            $criteria->order = 'tgl_pesan DESC';\n            \n            $reservations = OrderName::model()->findAll($criteria);\n            \n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => $reservation->is_active ? 'active' : 'inactive'\n                ];\n            }\n            \n            $this->sendResponse([\n                'success' => true,\n                'message' => 'Data pesan nama perkumpulan berhasil ditemukan',\n                'data' => $data\n            ]);\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Save Perkumpulan Name Reservation\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulan\n     */\n    public function actionPesanNamaPerkumpulan() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        // Validate required fields\n        $requiredFields = ['novoucher', 'nama', 'nama_singkat', 'nama_pemohon', 'email_pemohon', 'telepon_pemohon'];\n        foreach ($requiredFields as $field) {\n            if (!isset($jsonData[$field]) || empty($jsonData[$field])) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => \"Parameter $field required\",\n                    'data' => []\n                ], 400);\n                return;\n            }\n        }\n        \n        // Copy exact logic from BaseController->savepesannama for perkumpulan\n        $id = 'perkumpulan';\n        \n        if (Yii::app()->user->isGuest)\n            $profile = FALSE;\n        else {\n            if (in_array('cs-sabh-cikini', Yii::app()->user->group)) {\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal pesan nama ' . strtoupper($id),\n                    'data' => []\n                ], 403);\n                return;\n            }\n            $profile = MsNotarisProfile::model()->findByPk(Yii::app()->user->profilid);\n        }\n        $isnotaris = !empty(Yii::app()->user->profilid) ? true : false;\n        $isgabung = false;\n        // Handle regular POST requests for API (removed AJAX check)\n        if (true) {\n            $jenis_perseroan = '';\n            $OrderMode = new OrderName;\n            $OrderMode->base = $base = $id;\n            $OrderMode->is_proses = 0; // Set default value\n\n            // Cek voucher gabung apakah sudah sampai pesan nama\n            $cekgabung = BillingModalDasar::model()->cekGabung($jsonData['novoucher']);\n            if (!empty($cekgabung)) {\n                if ($cekgabung->is_gabung == 1 && $cekgabung->proses > 0) {\n                    $this->sendResponse([\n                        'success' => false,\n                        'message' => 'Gagal pesan nama ' . strtoupper($id),\n                        'data' => []\n                    ], 400);\n                    return;\n                }\n            }\n\n            $OrderMode->nama = $nama = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama'])));\n            $OrderMode->nama_singkat = $nama_singkat = preg_replace('/\\s+/', ' ',strtoupper(trim($jsonData['nama_singkat'])));\n            $OrderMode->tgl_pesan = $tanggalPesan = date('Y-m-d H:i:s');\n            $OrderMode->tgl_exp_pesan = $tanggalExp = date('Y-m-d H:i:s', strtotime('+60 days'));\n            \n            $OrderMode->kegiatan = $kegiatan = !empty($jsonData['kegiatan_mbg']) && !!$jsonData['kegiatan_mbg'] ? 'Makan Bergizi Gratis' : '';\n            $OrderMode->kode_wilayah = $kodeWilayah = !empty($jsonData['kode_wilayah']) ? $jsonData['kode_wilayah'] : '';\n            $OrderMode->nama_wilayah = $namaWilayah = !empty($jsonData['nama_wilayah']) ? $jsonData['nama_wilayah'] : '';\n\n            if (!$OrderMode->no_voucher) {\n                $OrderMode->no_voucher = $voucher = $jsonData['novoucher'];\n            }\n            $OrderMode->id_notaris = $profile ? $profile->ID_NOTARIS : '';\n            $nama_pemohon = $telepon_pemohon = $email_pemohon = \"\";\n\n            if(!empty($jsonData['OrderName']['nama_pemohon']))\n                $nama_pemohon = $jsonData['OrderName']['nama_pemohon'];\n            if(!empty($jsonData['OrderName']['telepon_pemohon']))\n                $telepon_pemohon = $jsonData['OrderName']['telepon_pemohon'];\n            if(!empty($jsonData['OrderName']['email_pemohon']))\n                $email_pemohon = $jsonData['OrderName']['email_pemohon'];\n            \n            //post order domain\n            if(!empty($jsonData['OrderDomain']['nama_domain'])){\n                $arr_domain  = explode(',',$jsonData['OrderDomain']['nama_domain']);\n            }\n            $nama_domain = isset($arr_domain) ? $arr_domain : '';\n            $harga = !empty($jsonData['OrderDomain']['harga']) ? $jsonData['OrderDomain']['harga'] : '';\n            if(!empty($jsonData['OrderDomain']['nama_base']))\n                $nama_base = $jsonData['OrderDomain']['nama_base'];\n            $nama_base = isset($nama_base) ? $nama_base : '';\n\n            $OrderMode->nama_pemohon = $nama_pemohon = $profile ? $profile->NAMA_LENGKAP : (isset($jsonData['nama_pemohon']) ? $jsonData['nama_pemohon'] : $nama_pemohon);\n            $OrderMode->telepon_pemohon = $telepon_pemohon = !empty($profile->NO_HP) ? $profile->NO_HP : (isset($jsonData['telepon_pemohon']) ? $jsonData['telepon_pemohon'] : $telepon_pemohon);\n            $OrderMode->email_pemohon = $email_pemohon = $profile ? $profile->EMAIL : (isset($jsonData['email_pemohon']) ? $jsonData['email_pemohon'] : $email_pemohon);\n\n            $OrderMode->base = $base = $id;\n            $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name WHERE nama=:nama AND base=:base AND is_active = 1')\n                ->bindValue(':nama', $OrderMode->nama)\n                ->bindValue(':base', $OrderMode->base)\n                ->queryScalar();\n\n            if(!empty($cekOrderActive)){\n                // Name already reserved\n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Nama perkumpulan sudah dipesan',\n                    'data' => [\n                        'nama' => $nama,\n                        'error_type' => 'name_already_reserved'\n                    ]\n                ], 409);\n                return;\n            }\n            \n            $simpanorder = $OrderMode->savePesanNama($nama_domain,$nama_base,$harga);\n\n            if (!empty($simpanorder)) {\n                $no_pesan = $OrderMode->id_pesan;\n\n                //cek jenis voucher,jika gabung berarti bisa lanut pendirian langsung\n                $cekgabung = BillingModalDasar::model()->cekGabung($OrderMode->no_voucher);\n                if(!empty($cekgabung)){\n                    if($cekgabung->is_gabung == 1 && $cekgabung->proses < 2) {\n                        $isgabung = true;\n                    }\n                }\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Pesan nama perkumpulan berhasil',\n                    'data' => [\n                        'id_pesan' => $no_pesan,\n                        'nama' => $nama,\n                        'nama_singkat' => $nama_singkat,\n                        'tanggal_pesan' => $tanggalPesan,\n                        'tanggal_exp' => $tanggalExp,\n                        'is_gabung' => $isgabung\n                    ]\n                ]);\n            } else {\n                \n                $this->sendResponse([\n                    'success' => false,\n                    'message' => 'Gagal menyimpan pesan nama perkumpulan',\n                    'data' => []\n                ], 500);\n            }\n        }\n    }\n\n    /**\n     * Check Reserved Names (General)\n     * Endpoint: /publicApiBakum/checkNamaReservation\n     */\n    public function actionCheckNamaReservation() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n        \n        // Get entity type from parameter (yayasan/perkumpulan/perseroan)\n        $entity_type = isset($jsonData['entity_type']) ? $jsonData['entity_type'] : null;\n        $nama = isset($jsonData['nama']) ? $jsonData['nama'] : null;\n        \n        if (!$nama) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter nama required',\n                'data' => []\n            ], 400);\n            return;\n        }\n        \n        if (!$entity_type) {\n            $entity_type = 'yayasan'; // default\n        }\n        \n        try {\n            if ($entity_type == 'perseroan') {\n                $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name_perseroan WHERE nama=:nama AND is_active = 1')\n                    ->bindValue(':nama', strtoupper(trim($nama)))\n                    ->queryScalar();\n            } else {\n                $cekOrderActive = Yii::app()->dbBadanHukum->createCommand('SELECT nama FROM tbl_order_name WHERE nama=:nama AND base=:base AND is_active = 1')\n                    ->bindValue(':nama', strtoupper(trim($nama)))\n                    ->bindValue(':base', $entity_type)\n                    ->queryScalar();\n            }\n            \n            $this->sendResponse([\n                'success' => true,\n                'message' => 'success',\n                'data' => [\n                    'nama' => $nama,\n                    'entity_type' => $entity_type,\n                    'is_reserved' => !empty($cekOrderActive),\n                    'message' => !empty($cekOrderActive) ? 'Nama sudah dipesan' : 'Nama tersedia'\n                ]\n            ]);\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Copy of listPesanNama method from BaseController\n     */\n    private function listPesanNama($id, $voucher, $idNotaris = false, $dataPost='', $model=null)\n    {\n        if ($id == 'perseroan') {\n            $OrderName = new OrderNamePerseroan;\n        } else {\n            $OrderName = new OrderName;\n            $OrderName->base = $id;\n        }\n\n        if (Yii::app()->user->isGuest) {\n            $OrderName->id_notaris = null;\n        }\n\n        if ($voucher) {\n            if ($id == 'perkumpulan') {\n                $OrderName->id_pesan = $voucher;\n            } else {\n                $OrderName->no_voucher = $voucher;\n            }\n        } else {\n            $OrderName->id_notaris = $idNotaris;\n\n            if ($dataPost) {\n                if ($id == 'perkumpulan') {\n                    $OrderName->id_pesan = $dataPost;\n                } else {\n                    $OrderName->no_voucher = $dataPost;\n                }\n            }\n        }\n\n        $this->render('/badan_hukum/listDataPesanNama', array(\n            'OrderName' => $OrderName,\n            'id' => $id,\n            'idNotaris' => $idNotaris,\n            'dataPost' => $dataPost,\n            'model' => $model,\n        ));\n\n        return;\n    }\n\n    /**\n     * Check Yayasan Name Reservation by Keyword (Similarity Search)\n     * Endpoint: /publicApiBakum/pesanNamaYayasanCheckByKeyword\n     */\n    public function actionPesanNamaYayasanCheckByKeyword() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['keyword']) || empty($jsonData['keyword'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter keyword required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $keyword = trim($jsonData['keyword']);\n        $base = 'yayasan';\n\n        try {\n            $keyword = strtoupper(trim($keyword));\n            $arr = preg_split('/\\s/', $keyword, -1, PREG_SPLIT_NO_EMPTY);\n\n            if (!empty($arr)) {\n                $q = [];\n                foreach ($arr as $value) {\n                    $q[] = \"nama LIKE '%\" . addslashes($value) . \"%'\";\n                }\n                $whereClause = '(' . implode(' AND ', $q) . ') AND base = :base AND is_active = 1';\n                \n\n                $criteria = new CDbCriteria;\n                $criteria->condition = $whereClause;\n                $criteria->params = [':base' => $base];\n                $criteria->order = 'tgl_pesan DESC';\n\n                $reservations = OrderName::model()->findAll($criteria);\n                \n\n                // Convert to array format for checkSimilarity\n                $data = [];\n                foreach ($reservations as $reservation) {\n                    $data[] = [\n                        'id_pesan' => $reservation->id_pesan,\n                        'nama' => $reservation->nama,\n                        'nama_singkat' => $reservation->nama_singkat,\n                        'tgl_pesan' => $reservation->tgl_pesan,\n                        'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                        'nama_pemohon' => $reservation->nama_pemohon,\n                        'email_pemohon' => $reservation->email_pemohon,\n                        'telepon_pemohon' => $reservation->telepon_pemohon,\n                        'kegiatan' => $reservation->kegiatan,\n                        'kode_wilayah' => $reservation->kode_wilayah,\n                        'nama_wilayah' => $reservation->nama_wilayah,\n                        'status' => $reservation->is_active ? 'active' : 'inactive'\n                    ];\n                }\n\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => count($data) . ' data pesan nama yayasan ditemukan',\n                    'data' => $data\n                ]);\n            } else {\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Tidak ada data ditemukan',\n                    'data' => []\n                ]);\n            }\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Check Yayasan Name Reservation by Email\n     * Endpoint: /publicApiBakum/pesanNamaYayasanCheckByEmail\n     */\n    public function actionPesanNamaYayasanCheckByEmail() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['email_pemohon']) || empty($jsonData['email_pemohon'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter email_pemohon required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $email = trim($jsonData['email_pemohon']);\n        $base = 'yayasan';\n\n        try {\n            $criteria = new CDbCriteria;\n            $criteria->condition = 'email_pemohon = :email AND base = :base';\n            $criteria->params = [':email' => $email, ':base' => $base];\n            $criteria->order = 'tgl_pesan DESC';\n\n            $reservations = OrderName::model()->findAll($criteria);\n\n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'nama_pemohon' => $reservation->nama_pemohon,\n                    'email_pemohon' => $reservation->email_pemohon,\n                    'telepon_pemohon' => $reservation->telepon_pemohon,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => 'active'\n                ];\n            }\n\n            $this->sendResponse([\n                'success' => true,\n                'message' => count($data) . ' data pesan nama yayasan ditemukan untuk email ' . $email,\n                'data' => $data\n            ]);\n\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Check Perkumpulan Name Reservation by Keyword (Similarity Search)\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulanCheckByKeyword\n     */\n    public function actionPesanNamaPerkumpulanCheckByKeyword() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['keyword']) || empty($jsonData['keyword'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter keyword required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $keyword = trim($jsonData['keyword']);\n        $base = 'perkumpulan';\n\n        try {\n            $keyword = strtoupper(trim($keyword));\n            $arr = preg_split('/\\s/', $keyword, -1, PREG_SPLIT_NO_EMPTY);\n\n            if (!empty($arr)) {\n                $q = [];\n                foreach ($arr as $value) {\n                    $q[] = \"nama LIKE '%\" . addslashes($value) . \"%'\";\n                }\n                $whereClause = '(' . implode(' AND ', $q) . ') AND base = :base AND is_active = 1';\n\n                $criteria = new CDbCriteria;\n                $criteria->condition = $whereClause;\n                $criteria->params = [':base' => $base];\n                $criteria->order = 'tgl_pesan DESC';\n\n                $reservations = OrderName::model()->findAll($criteria);\n\n                // Convert to array format for checkSimilarity\n                $data = [];\n                foreach ($reservations as $reservation) {\n                    $data[] = [\n                        'id_pesan' => $reservation->id_pesan,\n                        'nama' => $reservation->nama,\n                        'nama_singkat' => $reservation->nama_singkat,\n                        'tgl_pesan' => $reservation->tgl_pesan,\n                        'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                        'nama_pemohon' => $reservation->nama_pemohon,\n                        'email_pemohon' => $reservation->email_pemohon,\n                        'telepon_pemohon' => $reservation->telepon_pemohon,\n                        'kegiatan' => $reservation->kegiatan,\n                        'kode_wilayah' => $reservation->kode_wilayah,\n                        'nama_wilayah' => $reservation->nama_wilayah,\n                        'status' => $reservation->is_active ? 'active' : 'inactive'\n                    ];\n                }\n\n\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => count($data) . ' data pesan nama perkumpulan ditemukan',\n                    'data' => $data\n                ]);\n            } else {\n                $this->sendResponse([\n                    'success' => true,\n                    'message' => 'Tidak ada data ditemukan',\n                    'data' => []\n                ]);\n            }\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n\n    /**\n     * Check Perkumpulan Name Reservation by Email\n     * Endpoint: /publicApiBakum/pesanNamaPerkumpulanCheckByEmail\n     */\n    public function actionPesanNamaPerkumpulanCheckByEmail() {\n        if (!Yii::app()->request->isPostRequest) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Method not allowed. Use POST method.',\n                'data' => []\n            ], 405);\n            return;\n        }\n\n        $secretKey = isset($_SERVER['HTTP_API_KEY']) ? $_SERVER['HTTP_API_KEY'] : null;\n        if (!$this->validateSecretKey($secretKey)) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Invalid or missing API key in API-KEY header',\n                'data' => []\n            ], 401);\n            return;\n        }\n\n        $jsonData = $this->getJsonPayload();\n        if ($jsonData === false) {\n            return;\n        }\n\n        if (!isset($jsonData['email_pemohon']) || empty($jsonData['email_pemohon'])) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Parameter email_pemohon required',\n                'data' => []\n            ], 400);\n            return;\n        }\n\n        $email = trim($jsonData['email_pemohon']);\n        $base = 'perkumpulan';\n\n        try {\n            $criteria = new CDbCriteria;\n            $criteria->condition = 'email_pemohon = :email AND base = :base';\n            $criteria->params = [':email' => $email, ':base' => $base];\n            $criteria->order = 'tgl_pesan DESC';\n\n            $reservations = OrderName::model()->findAll($criteria);\n\n            $data = [];\n            foreach ($reservations as $reservation) {\n                $data[] = [\n                    'id_pesan' => $reservation->id_pesan,\n                    'nama' => $reservation->nama,\n                    'nama_singkat' => $reservation->nama_singkat,\n                    'tgl_pesan' => $reservation->tgl_pesan,\n                    'tgl_exp_pesan' => $reservation->tgl_exp_pesan,\n                    'nama_pemohon' => $reservation->nama_pemohon,\n                    'email_pemohon' => $reservation->email_pemohon,\n                    'telepon_pemohon' => $reservation->telepon_pemohon,\n                    'kegiatan' => $reservation->kegiatan,\n                    'kode_wilayah' => $reservation->kode_wilayah,\n                    'nama_wilayah' => $reservation->nama_wilayah,\n                    'status' => 'active'\n                ];\n            }\n\n            $this->sendResponse([\n                'success' => true,\n                'message' => count($data) . ' data pesan nama perkumpulan ditemukan untuk email ' . $email,\n                'data' => $data\n            ]);\n\n        } catch (Exception $e) {\n            $this->sendResponse([\n                'success' => false,\n                'message' => 'Database error: ' . $e->getMessage(),\n                'data' => []\n            ], 500);\n        }\n    }\n}\n\n--- File: 330 # exception/ValidationException.php ---\n<?php\n\nclass ValidationException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 400);\n    }\n}\n\n\n--- File: 326 # exception/InternalServerException.php ---\n<?php\n\nclass InternalServerException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 500);\n    }\n}\n\n\n--- File: 332 # exception/NotFoundException.php ---\n<?php\n\nclass NotFoundException extends BaseApiException {\n    public function __construct($message) {\n        parent::__construct($message, 404);\n    }\n}\n\n\n--- File: 380 # components/validators/filterNumber.php ---\n<?php\n\n/**\n *\n * @since 2017-04-20\n */\nclass filterNumber extends CValidator\n{\n    /**\n     * @inheritdoc\n     */\n    public function validateAttribute($object, $attribute)\n    {\n        $value = preg_replace(\"/[^0-9]/\",\"\", $object->$attribute);\n        $object->$attribute = $value;\n    }\n}\n\n\n--- File: 849 # views/monitoringPerseroan/_detailDownload.php ---\n<?php /* @var $model TransaksiPerseroan */ ?>\n\n<?php if(strlen($model->nomor_transaksi) === 16 || strlen($model->nomor_transaksi) === 17): ?>\n    <?php echo TransaksiPerseroan::model()->getSKTransaksi($model, true); ?>\n<?php else: ?>\n    <i>data migrasi</i>\n<?php endif; ?>\n\n--- File: 1147 # dto/GetPerseroanDto.php ---\n<?php\n\nclass GetPerseroanDto {\n    public $nama;\n    public $npwp;\n    public $nib;\n    public $alamat;\n\n    public function __construct($nama, $npwp, $nib, $alamat) {\n        $this->nama = $nama;\n        $this->npwp = $npwp;\n        $this->nib = $nib;\n        $this->alamat = $alamat;\n    }\n}\n\n\n--- File: 251 # controllers/PenghapusanBadanHukumController.php ---\n<?php\n\nclass PenghapusanBadanHukumController extends Controller\n{\n\n    // unused UI\n    // public function actionDaftarPermohonan()\n    // {\n    //     $this->render('daftarPermohonan');\n    // }\n\n    public function actionForm()\n    {\n        if (!Yii::app()->user->isGuest) {\n            $this->render('permohonan/index');\n            exit();\n        }\n        throw new CHttpException(404, 'The requested page does not exist.');\n    }\n}\n\n\n--- File: 1149 # enums/FileType.php ---\n<?php\n\nclass FileType\n{\n    const PEMBLOKIRAN = 'PEMBLOKIRAN';\n    const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n\n\n    public static function getAllTypes()\n    {\n        return [\n            self::PEMBLOKIRAN,\n            self::PEMBUKAAN_BLOKIR\n        ];\n    }\n\n    public static function isValid($fileType)\n    {\n        return in_array($fileType, self::getAllTypes());\n    }\n} \n\n--- File: 397 # repositories/perseroan/RiwayatVerifikasiRepository.php ---\n<?php\n\nYii::import('application.modules.sabh.models.RiwayatVerifikasi');\n\nclass RiwayatVerifikasiRepository {\n    \n    public function findAllByTransaksi($transactionId) {\n        return RiwayatVerifikasi::model()->findAll([\n            'condition' => 'id_transaksi = :id',\n            'params' => [':id' => $transactionId],\n            'order' => 'created_date DESC'\n        ]);\n    }\n\n    public function save($data) {\n        $model = new RiwayatVerifikasi();\n        $model->attributes = $data;\n        return $model->save();\n    }\n}\n\n--- File: 379 # components/validators/validateBo.php ---\n<?php\n\n/**\n *\n */\nclass validateBo extends CValidator\n{\n    /**\n     * @inheritdoc\n     */\n    public function validateAttribute($object, $attribute)\n    {\n        if (\n            $object->$attribute !== null &&\n            $object->$attribute instanceof BoForm &&\n            $object->$attribute->pernyataan == 1 &&\n            $object->$attribute->disclaimer == 1 &&\n            $object->$attribute->disclaimer2 == 1\n        ) {\n            if (!$object->$attribute->validate()) {\n                $this->addError($object, $attribute, 'Gagal validasi data BO.');\n            }\n        }\n    }\n}\n\n\n--- File: 436 # views/bo/monitoring-notaris/_countTipe.php ---\n<div class=\"row\">\n    <?php foreach($countTipe as $key => $countTipeItem): ?>\n        <div class=\"col-md-4\">\n            <div class=\"col-md-6\">\n                <?php $this->renderPartial('/bo/monitoring/_tipeTidakLengkap', array('countTipe' => $countTipeItem)); ?>\n            </div>\n            <div class=\"col-md-6\">\n                <?php $this->renderPartial('/bo/monitoring/_tipeLengkap', array('countTipe' => $countTipeItem)); ?>\n            </div>\n        </div>\n    <?php endforeach; ?>\n</div>\n\n--- File: 339 # components/LogSABH.php ---\n<?php\nclass LogSABH{\n    static public function insert($directory=\"\", $content=\"\"){\n        $path = getcwd() . '/protected/runtime/application.log.sabh.' . date('mY') . '.txt';        \n        $f = @fopen($path,\"rb\");            \n        $message = \"IN : \".$directory.\"\\n\";        \n        $message .= \"[\".date('d M Y H:i:s').\"] : \" . $content . \"\\n\\n\";        \n        $message .= @fread($f,8192);\n        $f = @fopen($path,\"wb\");\n        @fwrite($f, $message);\n        @fclose($f);      \n        return false;\n    }\n}\n?>\n\n\n--- File: 1150 # enums/JenisKewarganegaraan.php ---\n<?php\n\nclass JenisKewarganegaraan {\n    const WNI = 'WNI';\n    const WNA = 'WNA';\n    \n    public static function values() {\n        return array(\n            self::WNI,\n            self::WNA\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'WNI' => self::WNI,\n            'WNA' => self::WNA\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 351 # components/MyController.php ---\n<?php\nclass MyController extends CController{\n\t //public $layout = '//layouts/column1';\n\t public $layout = 'null';\n\n    /**\n     * @var array context menu items. This property will be assigned to {@link CMenu::items}.\n     */\n    public $menu = array();\n\n    /**\n     * @var array the breadcrumbs of the current page. The value of this property will\n     * be assigned to {@link CBreadcrumbs::links}. Please refer to {@link CBreadcrumbs::links}\n     * for more details on how to specify this property.\n     */\n    /*\n     * \n      array(\n      'Sample post'=>array('post/view', 'id'=>12),\n      'Edit',\n      )\n     */\n    public $breadcrumbs = array();\n}\n\n\n--- File: 859 # views/verifikasiPerubahanPerseroan/_common/constants.php ---\n<script>\nconst STATUS_PERMOHONAN_TEXT = {\n    'MENUNGGU_KONSEPTOR': 'Menunggu Konseptor',\n    'MENUNGGU_VERIFIKATOR': 'Menunggu Verifikator',\n    'MENUNGGU_DIREKTUR_BU': 'Menunggu Direktur BU',\n    'MENUNGGU_JENDERAL': 'Menunggu Jenderal',\n    'DITOLAK_KONSEPTOR': 'Ditolak Konseptor',\n    'DITOLAK_VERIFIKATOR': 'Ditolak Verifikator',\n    'DITOLAK_DIREKTUR_BU': 'Ditolak Direktur BU',\n    'DITOLAK_JENDERAL': 'Ditolak Jenderal',\n    'SELESAI': 'Selesai'\n};\n</script>\n\n--- File: 1110 # views/votingPerubahanPerseroan/_common/constants.php ---\n<script>\nconst STATUS_PERMOHONAN_TEXT = {\n    'MENUNGGU_KONSEPTOR': 'Menunggu Konseptor',\n    'MENUNGGU_VERIFIKATOR': 'Menunggu Verifikator',\n    'MENUNGGU_DIREKTUR_BU': 'Menunggu Direktur BU',\n    'MENUNGGU_JENDERAL': 'Menunggu Jenderal',\n    'DITOLAK_KONSEPTOR': 'Ditolak Konseptor',\n    'DITOLAK_VERIFIKATOR': 'Ditolak Verifikator',\n    'DITOLAK_DIREKTUR_BU': 'Ditolak Direktur BU',\n    'DITOLAK_JENDERAL': 'Ditolak Jenderal',\n    'SELESAI': 'Selesai'\n};\n</script>\n\n\n--- File: 382 # components/validators/voucherYayasan.php ---\n<?php\n\n/**\n *\n */\nclass voucherYayasan extends voucherValidator\n{\n    /**\n     * @inheritdoc\n     */\n    public function validateAttribute($object, $attribute)\n    {\n        if (empty($this->aksi) || empty($this->default_tipe_transaksi)) {\n            throw new CException('Property aksi atau default_tipe_transaksi tidak diset.');\n        }\n        if (!empty($object->$attribute)) {\n            $this->kode_voucher = $object->$attribute;\n            $this->id_produk = 50;\n            $this->default_id_mapping = 3;\n            $this->base = 'yayasan';\n            $billing = $this->getBillingByMapping();\n            if (!empty($billing)) {\n                $this->addError($object, $attribute, $this->getKeterangan($billing));\n            }\n        }\n    }\n}\n\n--- File: 1153 # enums/KategoriPermohonan.php ---\n<?php\n\nclass KategoriPermohonan {\n    const SELURUHNYA = 'SELURUHNYA';\n    const SEBAGIAN = 'SEBAGIAN';\n    \n    public static function values() {\n        return array(\n            self::SELURUHNYA,\n            self::SEBAGIAN\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'SELURUHNYA' => self::SELURUHNYA,\n            'SEBAGIAN' => self::SEBAGIAN\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 1152 # enums/JenisPemegangSaham.php ---\n<?php\n\nclass JenisPemegangSaham {\n    const PERORANGAN = 'PERORANGAN';\n    const BADAN_HUKUM = 'BADAN_HUKUM';\n    \n    public static function values() {\n        return array(\n            self::PERORANGAN,\n            self::BADAN_HUKUM\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'PERORANGAN' => self::PERORANGAN,\n            'BADAN_HUKUM' => self::BADAN_HUKUM\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 116 # models/TransaksiBoHistory.php ---\n<?php\n\nclass TransaksiBoHistory extends CActiveRecord\n{\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return 'tbl_transaksi_bo_history';\n    }\n\n    public function behaviors()\n    {\n        return array(\n            'LoggableBehavior' => array(\n                'class' => 'application.models.LoggableBehavior',\n            )\n        );\n    }\n\n    public function beforeSave()\n    {\n        if ($this->isNewRecord) {\n            $this->created_date = date('Y-m-d H:i:s');\n            $this->created_by = Yii::app()->user->id;\n        }\n        return parent::beforeSave();\n    }\n}\n\n\n--- File: 1155 # mappers/DashboardMapper.php ---\n<?php\n\nclass DashboardMapper extends MapperBase\n{\n    /**\n     * count total row data\n     * @param string $strSql\n     */\n    public function countDetailTransaction($sqlData, $paramBind)\n    {\n        $sql = 'SELECT COUNT(*) FROM (' . $sqlData . ') as count_alias';\n        return $this->execSqlQueryScalar('dbBadanHukum', $sql, $paramBind);\n    }\n\n    public function buildQueryStringSearch($sqlData, $strWhere = null)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select(array('*'));\n        $cmd->from('('.$sqlData.') AS select_search');\n        if ($strWhere !== null) {\n            $cmd->where($strWhere, array());\n        }\n        return $cmd->getText();\n    }\n}\n\n\n--- File: 725 # views/perseroan/email_block.php ---\n<h3>\n    TELAH DIBLOCK\n</h3>\n\n<table>\n    <tr>\n        <td>Badan Hukum Atas Nama</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->nama ?></td>\n    </tr>\n    <tr>\n        <td>Tertanggal</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->blokir_date ?></td>\n    </tr>\n    <tr>\n        <td>Password Untuk Unblock</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->password_match ?></td>\n    </tr>\n</table>\n\n<p>Dengan Keterangan Sebagai Berikut:</p>\n<p><?php echo $model->keterangan ?></p>\n\n--- File: 1122 # views/badanhukum/email_block.php ---\n<h3>\n    TELAH DIBLOCK\n</h3>\n\n<table>\n    <tr>\n        <td>Badan Hukum Atas Nama</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->nama ?></td>\n    </tr>\n    <tr>\n        <td>Tertanggal</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->blokir_date ?></td>\n    </tr>\n    <tr>\n        <td>Password Untuk Unblock</td>\n        <td width=\"20\"></td>\n        <td>:</td>\n        <td><?php echo $model->password_match ?></td>\n    </tr>\n</table>\n\n<p>Dengan Keterangan Sebagai Berikut:</p>\n<p><?php echo $model->keterangan ?></p>\n\n--- File: 432 # views/bo/monitoring/_pdfPerseroan.php ---\n<?php foreach($datas as $key => $data): ?>\n    <tr class=\"tr-<?= BoMonitoring::getRowCssClass($data); ?>\">\n        <td class=\"td\"><?= ($key+1) ?></td>\n        <td class=\"td\"><?= $data['nama_perseroan'] ?></td>\n        <td class=\"td\"><?= $data['nomor_sk'] ?></td>\n        <td class=\"td\"><?= $data['nama_notaris'] ?></td>\n        <td class=\"td\"><?= $data['kedudukan_notaris'] ?></td>\n        <td class=\"td\"><?= $data['jenis_perseroan'] ?></td>\n        <td class=\"td\"><?= $data['provinsi_nama_perseroan'] ?></td>\n        <td class=\"td\"><?= $data['kabupaten_nama_perseroan'] ?></td>\n    </tr>\n<?php endforeach; ?>\n\n--- File: 813 # views/template/loader.php ---\n<style>\n\t.loading{\n\t\tposition: fixed;\n\t\ttop:40%;\n\t\tleft: 40%;\n\t\t/*background: orange !important;*/\n\t\twidth: 500px;\n\t\tcolor:#000;\n\t\theight: 100px;\n\t\topacity: 0.5;\n\t\tfont-size: 15px;\n\t\ttext-align:center;\n\t\tdisplay: none;\n\t\tz-index: 9999;\n\t}\n</style>\n<div id=\"loading\" class=\"loading\" style=\"display:none;\">\n    <img src=\"<?php echo Yii::app()->request->baseUrl; ?>/images/icon-loading.png\" /><!--position: absolute;left:0;bottom:0;-->\n    <br>\n    <span style=\"line-height:35px;height: 60px;width: 100%;\">\n        Mohon menunggu. Sistem sedang memprosess..\n    </span>\n    <div style=\"padding-bottom: 5px;\">&nbsp;</div>\n</div>\n\n\n--- File: 510 # views/history/detail_history_transaksi.php ---\n<div class=\"row\">\n    <div class=\"col-md-12\">\n        <?php if($transaksi): ?>\n            <?php echo $this->renderPartial('/preview/_preview_history_perkumpulan', [\n                    'model' => $transaksi,\n                    'bo' => $bo,\n                    'flagdownload' => !empty($flag) ? true : false,\n                ], true); ?>\n        <?php else: ?>\n            <section class=\"panel\">\n                <header class=\"panel-heading\">\n                    Data Tidak Ditemukan\n                </header>\n                <div class=\"panel-body text-center\">\n                    <div class=\"alert alert-info\">\n                        <p>data yang anda cari tidak ada di history transaksi</p>\n                        <?php echo CHtml::link('Kembali', array('listPerkumpulanDitolak'), ['class' => 'btn btn-danger']); ?>\n                    </div>\n                </div>\n            </section>\n        <?php endif;?>\n    </div>\n</div>\n\n\n\n--- File: 1151 # enums/JenisLayananPermohonan.php ---\n<?php\n\nclass JenisLayananPermohonan {\n    const PEMBLOKIRAN = 'PEMBLOKIRAN';\n    const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n    \n    public static function values() {\n        return array(\n            self::PEMBLOKIRAN,\n            self::PEMBUKAAN_BLOKIR\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'PEMBLOKIRAN' => self::PEMBLOKIRAN,\n            'PEMBUKAAN_BLOKIR' => self::PEMBUKAAN_BLOKIR\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n}\n\n\n--- File: 290 # controllers/VoucherController.php ---\n<?php\nClass VoucherController extends Controller{\n\t\n\tpublic function actionCreate(){\n\t\t//echo strlen('20906817877133355828831');exit;\n\t\t$model = New Voucher;\n\t\tif(isset($_POST['Voucher'])){\n\t\t\t$model->attributes = $_POST['Voucher'];\n\t\t\t$model->no_transaksi=\"0\";\n\t\t\tif($model->save()){\n\t\t\t\tYii::app()->user->setFlash('success','Nomor Voucher #'.$_POST['Voucher']['no_voucher'].' telah berhasil disimpan');\n\t\t\t\t$this->redirect(array('voucher/listvoucher'));\n\t\t\t\t\n\t\t\t}\n\t\t}\n\t\t$this->render('_formVoucher',array('model'=>$model));\n\t}\n\t\n\tpublic function actionListvoucher(){\n\t\t$model = New Voucher(\"search\");\n\t\t$model -> limitRow = 20;\n\t\t$model->unsetAttributes();\n\t\tif(isset($_GET['Voucher'])){\n\t\t\t$model->attributes = $_GET['Voucher'];\n\t\t}\n\t\t$this->render('listVoucher',array('model'=>$model));\n\t}\n\t\n}\n\n\n--- File: 840 # views/bakumMaps/_maps.php ---\n<div class = \"col-lg-12\" id=\"maps-content\">\n    <div id=\"map-canvas\" style=\"min-height:450px\"></div>\n</div>\n<?php\n\nYii::app()->getClientScript()->registerScriptFile(\n    'https://maps.googleapis.com/maps/api/js?key=AIzaSyDHfHQfeq_shI6GkOTdtjAM-4ioan9MD8Q',\n    CClientScript::POS_END);\n// Yii::app()->getClientScript()->registerScriptFile(\n//     'https://cdnjs.cloudflare.com/ajax/libs/js-marker-clusterer/1.0.0/markerclusterer.js',\n//     CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/markerwithlabel.js',CClientScript::POS_END);\n\nYii::app()->clientScript->registerScript('_maps_jsnya', file_get_contents(Yii::app()->basePath.'/modules/sabh/views/bakumMaps/bakummaps.js'),CClientScript::POS_END);\n\n--- File: 312 # controllers/yayasanbaru/PerubahanController.php ---\n<?php\nYii::import('application.modules.sabh.models.yayasanbaru.perubahan.PerubahanNamaForm');\n/**\n * Controller untuk perubahan yayasan\n */\nclass PerubahanController extends Controller\n{\n    /**\n     *\n     */\n    public function actionCariNama()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $response = array('success' => false, 'content' => '');\n            $dataPost = Yii::app()->request->getPost('PerubahanNamaForm');\n            if (!empty($dataPost)) {\n                $model = new PerubahanNamaForm();\n                $model->attributes = $dataPost;\n                if ($model->validate()) {\n                    $response['success'] = true;\n                    $response['content']['nama'] = $model->nama_yayasan_baru;\n                }\n                $content = $this->renderPartial('_namaForm', array(\n                    'modelNama' => $model,\n                ), true);\n                $response['content']['form'] = $content;\n            }\n            echo CJSON::encode($response);\n        }\n    }\n}\n\n\n--- File: 841 # views/bakumMaps/index.php ---\n <style type=\"text/css\">\n   .labels {\n     color: red;\n     background-color: white;\n     font-family: \"Lucida Grande\", \"Arial\", sans-serif;\n     font-size: 12px;\n     font-weight: bold;\n     text-align: center;\n     width: 45px;\n     border: 2px solid black;\n     white-space: nowrap;\n   }\n </style>\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>Badan Hukum Maps</legend>\n                    <div class=\"row\">\n                        <?php $this->renderPartial('_search_form',get_defined_vars()); ?>\n                    </div>\n                    <div class=\"row\">\n                         <div class=\"panel-body\">\n                            <?php $this->renderPartial('_maps',get_defined_vars()); ?>\n                        </div>\n                    </div>\n                    <div>\n                         <div id=\"div-grid\"></div>\n                    </div>\n            </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n\n\n--- File: 237 # controllers/BlokirPerkumpulanController.php ---\n\n<?php\n\nYii::import('application.modules.sabh.services.api.BlokirAuthService');\n\nclass BlokirPerkumpulanController extends Controller\n{\n    private $blokirAuthService;\n\n    public function init()\n    {\n        parent::init();\n        $this->blokirAuthService = new BlokirAuthService();\n    }\n\n    public function actionDaftarPermohonan()\n    {\n        $user = $this->blokirAuthService->getBlokirAuthUser(Yii::app()->user->id);\n        \n        $this->render('daftarPermohonan', ['user' => $user]);\n    }\n\n    public function actionDetail($id)\n    {\n        $user = $this->blokirAuthService->getBlokirAuthUser(Yii::app()->user->id);\n        \n        $this->render('detail/index', ['id' => $id, 'user' => $user]);\n    }\n    \n    public function actionRiwayat()\n    {\n        $user = $this->blokirAuthService->getBlokirAuthUser(Yii::app()->user->id);\n        \n        $this->render('riwayat', ['user' => $user]);\n    }\n}\n\n\n--- File: 1164 # mappers/IbakumDashboard.php ---\n<?php\n\ninterface IbakumDashboard {\n\n    public function findAllDataRangeDateKabupaten($kategori, $tanggalAwal, $tanggalAkhir, $provinsiId, $kabupatenId);\n    public function findAllDataRangeDateProvinsi($kategori, $tanggalAwal, $tanggalAkhir, $provinsiId);\n    public function findAllDataRangeDate($kategori, $tanggalAwal, $tanggalAkhir);\n    public function findAllDataKabupaten($kategori, $provinsiId, $kabupatenId);\n    public function findAllDataProvinsi($kategori, $provinsiId);\n    public function findAllCountDataRangeDateKabupaten($tanggalAwal, $tanggalAkhir, $provinsiId, $kabupatenId, $kategori = null);\n    public function findAllCountDataRangeDateProvinsi($tanggalAwal, $tanggalAkhir, $provinsiId, $kategori = null);\n    public function findAllCountDataRangeDate($tanggalAwal, $tanggalAkhir, $kategori = null);\n    public function findAllCountDataKabupaten($provinsiId, $kabupatenId, $kategori = null);\n    public function findAllCountDataProvinsi($provinsiId, $kategori = null);\n\n}\n\n--- File: 0 # SabhModule.php ---\n<?php\n\nclass SabhModule extends CWebModule\n{\n\tpublic function init()\n\t{\n\t\t// this method is called when the module is being created\n\t\t// you may place code here to customize the module or the application\n\n\t\t// import the module-level models and components\n\t\t$this->setImport(array(\n            'sabh.models.*',\n            'sabh.models.WilayahSabh',\n\t\t\t'sabh.components.*',\n            'sabh.components.enum.*',\n            'sabh.components.widgets.*',\n            'sabh.components.validators.*',\n            'sabh.controllers.*',\n            'sabh.services.*',\n            'sabh.mappers.*',\n            'billing.models.*',\n            'billing.components.*',\n            //'application.modules.notariat_baru.models.*',\n            'application.modules.notariat_baru.models.NotarisNg',\n            'application.modules.notariat_baru.models.TransaksiNotaris',\n            'application.modules.notariat_baru.components.*',\n        ));\n\t}\n\n\tpublic function beforeControllerAction($controller, $action)\n\t{\n\t\tif(parent::beforeControllerAction($controller, $action))\n\t\t{\n\t\t\t// this method is called before any module controller action is performed\n\t\t\t// you may place customized code here\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n}\n\n\n--- File: 128 # models/LogSummary.php ---\n<?php\n\n/**\n * This is the model class for table \"{{log_summary}}\".\n *\n */\nclass LogSummary extends CActiveRecord\n{\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return AksiTransaksi the static model class\n     */\n    public static function model($className=__CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{log_summary}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        return array(\n            array('base, id_transaksi, nomor_transaksi, nama, tanggal_sk, message, tipe, tahun, jenis_data, status', 'safe'),\n        );\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function beforeSave()\n    {\n        if ($this->isNewRecord) {\n            $this->created_date = new CDbExpression('NOW()');\n        }\n        return parent::beforeSave();\n    }\n\n    /**\n     * Insert log summary\n     */\n    public static function insertLog(array $attributes)\n    {\n        $model = new LogSummary();\n        $model->attributes = $attributes;\n        $model->save();\n    }\n}\n\n\n--- File: 358 # components/BillingHelper.php ---\n<?php\n\n/**\n * BillingHelper class\n * Helper class for billing-related operations\n */\nclass BillingHelper\n{\n    /**\n     * Melakukan unflag voucher \n     * Handle kasus dimana voucher sudah dalam status TERPAKAI=0\n     * \n     * @param string $kode_pembayaran\n     * @param int $id_produk\n     * @param string $tipe_transaksi\n     * @param int $id_mapping\n     * @return mixed\n     */\n    public static function unflagVoucherSafe($kode_pembayaran, $id_produk, $tipe_transaksi, $id_mapping)\n    {\n        // Mencoba logic seperti existing\n        $result = BillingSimponi::model()->updateTidakTerpakaiMapping($kode_pembayaran, $id_produk, $tipe_transaksi, $id_mapping);\n        \n        // Jika tidak kosong, return seperti existing\n        if (!empty($result)) {\n            return $result;\n        }\n        \n        // Query database untuk memeriksa status voucher saat ini\n        $billingDetail = BillingSimponi::model()->getDetailByKode($kode_pembayaran);\n        \n        // Jika tidak ada data billing, return fail\n        if (empty($billingDetail)) {\n            return null;\n        }\n        \n        // Periksa apakah voucher sudah TERPAKAI=0\n        if ($billingDetail['TERPAKAI'] == 0 && $billingDetail['FLAG_PEMBAYARAN'] == 1) {\n            // Voucher sudah tidak terpakai, return success\n            return true;\n        }\n        \n        // Jika masih TERPAKAI=1 atau ada masalah lain, return fail\n        return null;\n    }\n}\n\n--- File: 286 # controllers/ReuploadModalDasarController.php ---\n<?php\n/*\n * 2018-03-05, Axel\n * Controller for reupload modal dasar\n */\n\nclass ReuploadModalDasarController extends Controller\n{\n\tpublic function actionIndex()\n\t{\n\t\t$model = new UploadModalDasarLog;\n        if (Yii::app()->request->getPost('UploadModalDasarLog')) {\n            $post = Yii::app()->request->getPost('UploadModalDasarLog');\n            $tipBuktiSetor = Yii::app()->request->getPost('tipe_bukti_setor');\n            if (!empty($post['id'])) {\n                $upload = UploadModalDasar::model()->reuploadModal($post['id'], $tipBuktiSetor);\n                if ($upload) {\n                \tYii::app()->user->setFlash('global-flash-success', 'Modal data berhasil diubah.');\n                    return $this->redirect('/sabh/reuploadModalDasar');\n                } else {\n                    exit;\n                }\n            }\n        } else {\n        \t$model = new UploadModalDasar;\n        \treturn $this->render('index', ['model' => $model]);\n        }\n        if (!empty($_FILES)) {\n            $this->uploadModal($_FILES, $modelPerseroan);\n        }\n\t}\n\n\tpublic function actionCheckExist()\n\t{\n\t\t$model = new UploadModalDasar();\n\t\t$post_data = Yii::app()->request->getPost('nomor');\n\t\t$model2 = $model->find('nomor_transaksi=:no', [':no' => $post_data]);\n\n\t\t$model3 = new UploadModalDasarLog();\n\t\treturn $this->renderPartial('uploadForm', ['model' => $model3, 'model2' => $model2]);\n\t}\n}\n\n\n--- File: 40 # models/RiwayatVerifikasi.php ---\n<?php\n\nclass RiwayatVerifikasi extends CActiveRecord {\n    public $id;\n    public $id_transaksi;\n    public $stage;\n    public $status;\n    public $catatan;\n    public $verifikator_name;\n    public $created_date;\n\n    public static function model($className = __CLASS__) {\n        return parent::model($className);\n    }\n\n    public function tableName() {\n        return 'riwayat_verifikasi';\n    }\n\n    public function rules() {\n        return array(\n            array('id_transaksi, stage, status', 'required'),\n            array('id_transaksi', 'numerical', 'integerOnly' => true),\n            array('stage', 'in', 'range' => array('KONSEPTOR', 'VERIFIKATOR', 'DIREKTUR_BU', 'JENDERAL')),\n            array('status', 'in', 'range' => array('DITERIMA', 'DITOLAK')),\n            array('catatan, verifikator_name', 'safe'),\n            array('created_date', 'default', 'value' => new CDbExpression('NOW()'), 'setOnEmpty' => false, 'on' => 'insert'),\n        );\n    }\n\n    public function relations() {\n        return array(\n            'transaksi' => array(self::BELONGS_TO, 'TransaksiPerseroan', 'id_transaksi'),\n        );\n    }\n\n    public function attributeLabels() {\n        return array(\n            'id' => 'ID',\n            'id_transaksi' => 'ID Transaksi',\n            'stage' => 'Tahap',\n            'status' => 'Status',\n            'catatan' => 'Catatan',\n            'verifikator_name' => 'Nama Verifikator',\n            'created_date' => 'Tanggal Dibuat',\n        );\n    }\n}\n\n\n--- File: 367 # components/widgets/DclDatepicker.php ---\n<?php\n\n/**\n * Widget datepicker\n * \n */\nclass DclDatepicker extends CInputWidget\n{\n    /**\n     * @var array client options\n     */\n    public $clientOptions = array();\n\n    /**\n     * Initializes the widget.\n     * This method registers all needed client scripts and renders\n     * the autocomplete input.\n     */\n    public function init()\n    {\n        list($name,$id)=$this->resolveNameID();\n        if(isset($this->htmlOptions['id']))\n            $id=$this->htmlOptions['id'];\n        else\n            $this->htmlOptions['id']=$id;\n        if(isset($this->htmlOptions['name']))\n            $name=$this->htmlOptions['name'];\n\n        $this->registerClientScript();\n\n        if($this->hasModel()) {\n            $field = 'activeTextField';\n            echo CHtml::$field($this->model,$this->attribute,$this->htmlOptions);\n        } else {\n            $field = 'textField';\n            echo CHtml::$field($name,$this->value,$this->htmlOptions);\n        }\n    }\n\n    /**\n     * Registers the needed CSS and JavaScript.\n     */\n    public function registerClientScript()\n    {\n        $id = $this->htmlOptions['id'];\n        $defaultOptions = array(\n            'changeMonth' => true,\n            'changeYear' => true,\n            'dateFormat' => 'dd-mm-yy',\n            'yearRange' => '1980',\n        );\n        $options = array_merge($defaultOptions, $this->clientOptions);\n        $data = CJavaScript::encode($options);\n        $cs = Yii::app()->getClientScript();\n        $cs->registerScript(\n            'getNotaris#'.$id,\n            \"jQuery(\\\"#{$id}\\\").datepicker($data);\"\n        );\n    }\n}\n\n\n--- File: 902 # views/reuploadModalDasar/index.php ---\n<?php Yii::app()->clientScript->registerScript('index', file_get_contents(Yii::app()->basePath.'/modules/sabh/views/reuploadModalDasar/check.js'), CClientScript::POS_END); ?>\n<?php Yii::app()->clientScript->registerScript('_scriptUploadAkta', file_get_contents(Yii::app()->basePath.'/modules/sabh/views/reuploadModalDasar/upload.js'), CClientScript::POS_END); ?>\n\n<style>\n#nomor-check-ok {\n\tcolor: green;\n}\n\n#nomor-check-fail {\n\tcolor: red;\n}\n</style>\n<div class=\"row\">\n\t<div class=\"col-lg-12\">\n\t\t<section class=\"panel\">\n\t\t\t<header class='panel-heading'>\n\t\t\t\t<h3>Reupload Modal Dasar</h3>\n\t\t\t</header>\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<?php if(Yii::app()->user->hasFlash('global-flash-success')): ?>\n\t\t\t\t\t<div class=\"alert alert-success\">\n\t\t\t\t\t\t<?php echo Yii::app()->user->getFlash('global-flash-success'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif;?>\n\t\t\t\t<?php if(Yii::app()->user->hasFlash('global-flash-danger')): ?>\n\t\t\t\t\t<div class=\"alert alert-danger\">\n\t\t\t\t\t\t<?php echo Yii::app()->user->getFlash('global-flash-danger'); ?>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif;?>\n\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t<?= CHtml::label('Nomor Transakasi', 'nomor_input', ['class' => 'control-label']); ?>\n\t\t\t\t\t<?= CHtml::textField('nomor_input', '', ['class' => 'form-control', 'id' => 'nomor-check-box']); ?>\n\t\t\t\t\t<span class=\"help-block\" id=\"nomor-check\"></span>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"hasil-cari\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</div>\n\n\n\n--- File: 514 # views/blokirPerkumpulan/detail/_riwayatVerifikasi.php ---\n<div x-data=\"riwayatVerifikasi()\">\n    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n        Riwayat Verifikasi\n    </div>\n    <div class=\"form-content\">\n        <div x-show=\"!verifikasiRiwayat || verifikasiRiwayat.length === 0\" class=\"p-4 border border-gray-300 text-gray-500 italic text-center\">\n            Belum ada riwayat verifikasi\n        </div>\n        <div x-show=\"verifikasiRiwayat && verifikasiRiwayat.length > 0\">\n            <table class=\"table table-hover table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Telah Diverifikasi Oleh</th>\n                        <th>Status Verifikasi</th>\n                        <th>Catatan Verifikasi</th>\n                        <th>Tanggal Verifikasi</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <template x-for=\"item in verifikasiRiwayat\">\n                        <tr>\n                            <td x-text=\"item.nama\"></td>\n                            <td x-text=\"item.status\"></td>\n                            <td x-text=\"item.catatan\"></td>\n                            <td x-text=\"formatDate(item.tanggal)\"></td>\n                        </tr>\n                    </template>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n<script>\n    function riwayatVerifikasi() {\n        return {\n            get $parent() {\n                return Alpine.$data(document.getElementById('data-pratinjau'))\n            },\n\n            verifikasiRiwayat: [],\n\n            init() {\n                this.$watch('$parent.viewData', () => {\n                    this.loadDataFromParent();\n\n                });\n            },\n\n            formatDate(date) {\n                return new Date(date).toLocaleDateString('id-ID', {\n                    day: '2-digit',\n                    month: '2-digit',\n                    year: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                });\n            },\n\n            loadDataFromParent() {\n                this.verifikasiRiwayat = this.$parent.viewData.riwayatVerifikasi;\n            },\n        }\n    }\n</script>\n\n--- File: 913 # views/blokirPerseroan/detail/_riwayatVerifikasi.php ---\n<div x-data=\"riwayatVerifikasi()\">\n    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n        Riwayat Verifikasi\n    </div>\n    <div class=\"form-content\">\n        <div x-show=\"!verifikasiRiwayat || verifikasiRiwayat.length === 0\" class=\"p-4 border border-gray-300 text-gray-500 italic text-center\">\n            Belum ada riwayat verifikasi\n        </div>\n        <div x-show=\"verifikasiRiwayat && verifikasiRiwayat.length > 0\">\n            <table class=\"table table-hover table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Telah Diverifikasi Oleh</th>\n                        <th>Status Verifikasi</th>\n                        <th>Catatan Verifikasi</th>\n                        <th>Tanggal Verifikasi</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <template x-for=\"item in verifikasiRiwayat\">\n                        <tr>\n                            <td x-text=\"item.nama\"></td>\n                            <td x-text=\"item.status\"></td>\n                            <td x-text=\"item.catatan\"></td>\n                            <td x-text=\"formatDate(item.tanggal)\"></td>\n                        </tr>\n                    </template>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n<script>\n    function riwayatVerifikasi() {\n        return {\n            get $parent() {\n                return Alpine.$data(document.getElementById('data-pratinjau'))\n            },\n\n            verifikasiRiwayat: [],\n\n            init() {\n                this.$watch('$parent.viewData', () => {\n                    this.loadDataFromParent();\n\n                });\n            },\n\n            formatDate(date) {\n                return new Date(date).toLocaleDateString('id-ID', {\n                    day: '2-digit',\n                    month: '2-digit',\n                    year: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                });\n            },\n\n            loadDataFromParent() {\n                this.verifikasiRiwayat = this.$parent.viewData.riwayatVerifikasi;\n            },\n        }\n    }\n</script>\n\n--- File: 690 # views/voucher/listVoucher.php ---\n<div class=\"row\">\n\t<div class=\"col-lg-12\">\n\t\t<section class=\"panel\">\n\t\t\t\n\t\t\t<div class=\"panel-body\">\n\t\t\t\t<center>\n\t\t\t\t\t<h3> DAFTAR DATA VUCHER </h3>\n\t\t\t\t</center>\n\t\t\t\t<br/>\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t<h4><?php echo CHtml::link('Tambah Data Voucher',array('create'));?></h4>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<?php\n\t\t\t\t\t\t    foreach(Yii::app()->user->getFlashes() as $key => $message) {\n\t\t\t\t\t\t        echo '<div style=\"margin-top: 18px;background:#E6EFC2;color:#264409;border-color:#C6D880;height:30px;padding:5px 15px 15px 15px;\">' . $message . \"</div>\";\n\t\t\t\t\t\t    }\n\t\t\t\t\t\t?>   \n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t<?php $this->widget('zii.widgets.grid.CGridView', array(\n\t\t\t\t\t    'id'=>'Voucher-grid',\n\t\t\t\t\t    'dataProvider'=>$model->search(),\n\t\t\t\t\t    'filter'=>$model,\n\t\t\t\t\t    \n\t\t\t\t\t    'itemsCssClass'=>'table table-striped table-hover table-bordered dataTable',\n\t\t\t\t\t    'columns'=>array(\n\t\t\t\t\t        array('name'=>'no_voucher',\n\t\t\t\t\t\t\t\t'header'=>'Nomor Voucher',\n\t\t\t\t\t\t\t\t'value'=>'$data->no_voucher',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t        array(\n\t\t\t\t\t\t\t\t'name'=>'tgl_pembayaran',\n\t\t\t\t\t\t\t\t'header'=>'Tanggal Pembayaran',\n\t\t\t\t\t\t\t\t'value'=>'$data->tanggal_pembayaran_list',\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tarray(\n\t\t\t\t\t\t\t\t'name'=>'terpakai',\n\t\t\t\t\t\t\t\t'header'=>'Status',\n\t\t\t\t\t\t\t\t'type'=>'HTML',\n\t\t\t\t\t\t\t\t'filter'=>CHtml::dropDownList('Voucher[terpakai]',$model->terpakai,array('1'=>'TERPAKAI','0'=>'TERSEDIA'),array('empty'=>'All')),\n\t\t\t\t\t\t\t\t'value'=>'$data->terpakai==1 ? \"<font color=red>TERPAKAI</font>\" : \"<font color=green>TERSEDIA</font>\"',\n\t\t\t\t\t\t\t),\t\t\t\t\t       \n\t\t\t\t\t    ),\n\t\t\t\t\t)); ?>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t</div>\n</div>\n\n--- File: 349 # components/Mail.php ---\n<?php\nClass Mail{\n\t\n\tstatic public function send($type,$data){\n\t\tif($type=='pesannama'){\n\t\t\t$subject ='Info DITJEN AHU Online';\n\t\t\t$messageEmail = TemplateEmail::sendEmail($data);\n\t\t}\n\t\tif($type=='notifordername'){\n\t\t\t$subject ='INFO KADALUARSA PESAN NAMA DARI DIREKTORAT JENDERAL AHU '.strtoupper($data['id']);\n\t\t\t$messageEmail = TemplateEmail::sendAlertExpOrderName($data);\n\t\t}\n\t\t\n\t\tif($type=='sendNotifPerpanjang'){\n\t\t\t$subject ='INFO PERPANJANGAN PESAN NAMA DARI DIREKTORAT JENDERAL AHU '.strtoupper($data['id']);\n\t\t\t$messageEmail = TemplateEmail::sendNotifPerpanjang($data);\n\t\t}\n\t\t\n\t\tif($type=='verifikasi'){\n\t\t\t$subject ='INFO VERIFIKASI PENDIRIAN BADAN HUKUM DARI DIREKTORAT JENDERAL AHU '.strtoupper($data['id']);\n\t\t\t$messageEmail = TemplateEmail::emailVerifikasi($data);\n\t\t}\n\t\t\n\t\tif($type=='perubahan'){\n\t\t\t$subject ='INFO PERUBAHAN BADAN HUKUM DARI DIREKTORAT JENDERAL AHU '.strtoupper($data['id']);\n\t\t\t$messageEmail = TemplateEmail::emailPerubahan($data);\n\t\t}\n\t\t\n\t\tif($type=='koreksi'){\n\t\t\t$subject ='INFO KOREKSI PENDIRIAN BADAN HUKUM DARI DIREKTORAT JENDERAL AHU '.strtoupper($data['id']);\n\t\t\t$messageEmail = TemplateEmail::emailKoreksi($data);\n\t\t}\n\t\t\n\t\tif($type=='berakhirnya'){\n\t\t\t$subject ='INFO BERAKHIRNYA STATUS BADAN HUKUM DARI DIREKTORAT JENDERAL AHU '.strtoupper($data['id']);\n\t\t\t$messageEmail = TemplateEmail::emailBerakhirnya($data);\n\t\t}\n\t\t\n\t\tHelpers::sendMails($data['email_to'],$subject,$messageEmail);\n\t\t// Helpers::sendMails($data['email_to'],$subject,$messageEmail);\n\t\t\n\t}\n\t\n}\n\n\n--- File: 961 # views/blokirYayasan/detail/_riwayatVerifikasi.php ---\n<div x-data=\"riwayatVerifikasi()\">\n    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n        Riwayat Verifikasi\n    </div>\n    <div class=\"form-content\">\n        <div x-show=\"!verifikasiRiwayat || verifikasiRiwayat.length === 0\" class=\"p-4 border border-gray-300 text-gray-500 italic text-center\">\n            Belum ada riwayat verifikasi\n        </div>\n        <div x-show=\"verifikasiRiwayat && verifikasiRiwayat.length > 0\">\n            <table class=\"table table-hover table-striped table-bordered\">\n                <thead>\n                    <tr>\n                        <th>Telah Diverifikasi Oleh</th>\n                        <th>Status Verifikasi</th>\n                        <th>Catatan Verifikasi</th>\n                        <th>Tanggal Verifikasi</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <template x-for=\"item in verifikasiRiwayat\">\n                        <tr>\n                            <td x-text=\"item.nama\"></td>\n                            <td x-text=\"item.status\"></td>\n                            <td x-text=\"item.catatan\"></td>\n                            <td x-text=\"formatDate(item.tanggal)\"></td>\n                        </tr>\n                    </template>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>\n\n\n<script>\n    function riwayatVerifikasi() {\n        return {\n            get $parent() {\n                return Alpine.$data(document.getElementById('data-pratinjau'))\n            },\n\n            verifikasiRiwayat: [],\n\n            init() {\n                this.$watch('$parent.viewData', () => {\n                    this.loadDataFromParent();\n\n                });\n            },\n\n            formatDate(date) {\n                return new Date(date).toLocaleDateString('id-ID', {\n                    day: '2-digit',\n                    month: '2-digit',\n                    year: 'numeric',\n                    hour: '2-digit',\n                    minute: '2-digit'\n                });\n            },\n\n            loadDataFromParent() {\n                console.log({\n                    x: this.$parent.riwayatVerifikasi\n                });\n                this.verifikasiRiwayat = this.$parent.viewData.riwayatVerifikasi;\n            },\n        }\n    }\n</script>\n\n--- File: 275 # controllers/VotingPerubahanPerseroanController.php ---\n<?php\n\nYii::import('application.modules.sabh.services.perseroan.VerifikasiPerubahanPerseroanService');\n\nclass VotingPerubahanPerseroanController extends Controller {\n    private $service;\n    \n    public function init() {\n        parent::init();\n        $this->service = new VerifikasiPerubahanPerseroanService();\n        \n        // Set layout for public page\n    }\n\n    /**\n     * Menampilkan halaman voting perubahan perseroan\n     * @param string $token Base64 encoded token containing transaction number and email\n     */\n    public function actionIndex($token) {\n        $this->layout = '//layouts/voting_perubahan_perseroan';\n        if (empty($token)) {\n            throw new CHttpException(400, 'Token wajib diisi');\n        }\n\n        // Decode token\n        $decodedToken = base64_decode($token);\n        if ($decodedToken === false) {\n            throw new CHttpException(400, 'Token format tidak valid');\n        }\n\n        // Token format: nomor_transaksi|email\n        list($nomorTransaksi, $email) = explode('|', $decodedToken);\n        if (empty($nomorTransaksi) || empty($email)) {\n            throw new CHttpException(400, 'Token tidak lengkap');\n        }\n\n        // Get transaction data\n        $transaction = TransaksiPerseroan::model()->findByAttributes([\n            'nomor_transaksi' => $nomorTransaksi\n        ]);\n        if (!$transaction) {\n            throw new CHttpException(404, 'Data transaksi tidak ditemukan');\n        }\n\n        // Get persetujuan data\n        $persetujuan = PerubahanPerseroanPersetujuanPemegangSaham::model()->findByAttributes([\n            'nomor_transaksi' => $nomorTransaksi,\n            'email_ps' => $email\n        ]);\n\n        if (!$persetujuan) {\n            throw new CHttpException(404, 'Data persetujuan tidak ditemukan');\n        }\n\n        // Check if voting period has expired\n        if ($persetujuan->isTokenExpired()) {\n            throw new CHttpException(400, 'Link persetujuan telah kedaluwarsa');\n        }\n\n        $this->render('index', [\n            'token' => $token,\n            'transaction' => $transaction,\n            'persetujuan' => $persetujuan\n        ]);\n    }\n}\n\n\n--- File: 293 # controllers/CleansingOrganController.php ---\n<?php\n\n/**\n * @author Josep\n * 11 Ahustus 2016\n * Cleansing Modal Perseoan (Modal dasar, modal ditempatkan, pemegang saham)\n */\nYii::import(\"application.modules.sabh.components.cleansing.*\");\n\nClass CleansingOrganController extends Controller\n{\n    public $dataMonth = [\n        '' => '-- All --',\n        '1' => 'Januari',\n        '2' => 'Febuari',\n        '3' => 'Maret',\n        '4' => 'April',\n        '5' => 'Mei',\n        '6' => 'Juni',\n        '7' => 'Juli',\n        '8' => 'Agustus',\n        '9' => 'September',\n        '10' => 'Oktober',\n        '11' => 'November',\n        '12' => 'Desember',\n    ];\n\n    /**\n     * List Cleansing Modal Perseroan\n    */\n    public function actionIndex()\n    {\n        $model = New LogCleansingOrgan('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        if($gets = Yii::app()->request->getQuery(get_class($model))) {\n            $model->attributes = $gets;\n        }\n        return $this->render('index', get_defined_vars());\n    }\n\n    /**\n     * Clenasing Organ/Pengurus yayasan perkumpulan\n     * - Clean Json (Remove Tabs)\n     * - Remove error character\n     */\n    public function actionCleansing()\n    {\n        $year = $month = $nomorTransaksi = $base = '';\n        if ($post = Yii::app()->request->getPost('cleansingOrgan')) {\n            if (is_array($post))\n                extract($post);\n            $organ = new CleansingOrgan($base, $year, $month, $nomorTransaksi);\n            $cleansing = $organ->cleansing();\n            Yii::app()->user->setFlash('error', \"Cleansing Success, {$cleansing} Data!\");\n        }\n        return $this->render('cleansing', get_defined_vars());\n    }\n\n    /**\n     * Migrate JSON to new Database\n     */\n    public function actionMigrate()\n    {\n        $year = $month = '';\n        if ($post = Yii::app()->request->getPost('migrateModal')) {\n            if (is_array($post))\n                extract($post);\n\n            $migrate = new MigrateModal($year, $month);\n            $migrate->migrate();\n        }\n        return $this->render('migrateModal', get_defined_vars());\n    }\n\n}\n\n\n--- File: 398 # repositories/perseroan/TransaksiPerseroanRepository.php ---\n<?php\n\nYii::import('application.modules.sabh.models.TransaksiPerseroan');\n\nclass TransaksiPerseroanRepository {\n    \n    public function findAll($criteria) {\n        return TransaksiPerseroan::model()->findAll($criteria);\n    }\n\n    public function count($criteria) {\n        return TransaksiPerseroan::model()->count($criteria);\n    }\n\n    public function findByPk($id) {\n        return TransaksiPerseroan::model()->findByPk($id);\n    }\n\n    public function findByNomorTransaksi($nomor_transaksi) {\n        if (empty($nomor_transaksi)) {\n            return null;\n        }\n\n        $year = '20' . substr($nomor_transaksi, 2, 2);\n        $sql = \"SELECT * FROM AHU_BADAN_HUKUM.tbl_transaksi_perseroan_{$year} WHERE nomor_transaksi = :nomor\";\n        \n        $row = Yii::app()->dbBadanHukum->createCommand($sql)\n            ->bindParam(':nomor', $nomor_transaksi, PDO::PARAM_STR)\n            ->queryRow();\n            \n        if (!$row) {\n            return null;\n        }   \n        \n        return TransaksiPerseroan::model($year)->populateRecord($row);\n    }\n\n    public function buildCriteria($filters, $pagination) {\n        $criteria = new CDbCriteria();\n        $criteria->limit = $pagination['limit'];\n        $criteria->offset = $pagination['offset'];\n        $criteria->order = 'created_date DESC';\n\n        // Add filters if provided\n        if (!empty($filters['nomor_transaksi'])) {\n            $criteria->addSearchCondition('nomor_transaksi', $filters['nomor_transaksi']);\n        }\n        if (!empty($filters['nama_perseroan'])) {\n            $criteria->addSearchCondition('nama_perseroan', $filters['nama_perseroan']);\n        }\n        if (!empty($filters['kode_voucher'])) {\n            $criteria->addSearchCondition('kode_voucher', $filters['kode_voucher']);\n        }\n        if (!empty($filters['tipe_perubahan'])) {\n            $criteria->addCondition('(tipe_perubahan LIKE :tipe OR jenis_perubahan LIKE :jenis)');\n            $criteria->params[':tipe'] = '%' . $filters['tipe_perubahan'] . '%';\n            $criteria->params[':jenis'] = '%' . $filters['tipe_perubahan'] . '%';\n        }\n        if (!empty($filters['created_date'])) {\n            $criteria->addCondition(\"DATE(created_date) = :tanggal\");\n            $criteria->params[':tanggal'] = $filters['created_date'];\n        }\n        if (!empty($filters['status_transaksi'])) {\n            $criteria->addCondition('status_transaksi = :status');\n            $criteria->params[':status'] = $filters['status_transaksi'];\n        }\n\n        return $criteria;\n    }\n}\n\n--- File: 368 # components/widgets/DclPanel.php ---\n<?php\n\n/**\n * Widget to create html panel fieldset\n *\n * @since 2017-04-08\n */\nclass DclPanel extends CWidget\n{\n    /**\n     * @var string\n     */\n    public $title;\n\n    /**\n     * @var string\n     */\n    public $legend;\n\n    /**\n     * @var string col div panel\n     */\n    public $classDiv = 'col-lg-12';\n\n    /**\n     * @boolean\n     */\n    public $enableRow = true;\n\n    /**\n     * @var array\n     */\n    public $htmlLinks=array();\n\n    /**\n     * @inheritdoc\n     */\n    public function init()\n    {\n        $this->title = (is_string($this->title) && !empty($this->title)) ? $this->title : '';\n        echo $this->openPanel($this->title);\n        echo $this->renderHtmlLinks();\n        if (is_string($this->legend) && !empty($this->legend)) {\n            $this->openFieldset($this->legend);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function run()\n    {\n        if (is_string($this->legend) && !empty($this->legend)) {\n            $this->closeFieldset();\n        }\n        echo $this->closePanel($this->title);\n    }\n\n    /**\n     * @return string\n     */\n    private function openPanel($title)\n    {\n        $open = '';\n        if ($this->enableRow) {\n            $open .= CHtml::openTag('div', array('class' => 'row'));\n        }\n        $open .= CHtml::openTag('div', array('class' => $this->classDiv));\n        $open .= CHtml::openTag('section', array('class' => 'panel'));\n        $open .= CHtml::openTag('div', array('class' => 'panel-body'));\n        if (!empty($title)) {\n            $titleTag = CHtml::tag('center', array(), $title);\n            $open .= $titleTag;\n        }\n        return $open;\n    }\n\n    /**\n     * @return string\n     */\n    private function closePanel($title)\n    {\n        $close = '';\n        $close .= CHtml::closeTag('div');\n        $close .= CHtml::closeTag('section');\n        $close .= CHtml::closeTag('div');\n        if ($this->enableRow) {\n            $close .= CHtml::closeTag('div');\n        }\n        return $close;\n    }\n\n    /**\n     * @return void\n     */\n    private function openFieldset($legend)\n    {\n        echo CHtml::openTag('fieldset', array('class'=>'fieldset'));\n        echo CHtml::tag('legend', array(), $legend);\n    }\n\n    /**\n     * @return void\n     */\n    private function closeFieldset()\n    {\n        echo CHtml::closeTag('fieldset');\n    }\n\n    /**\n     *\n     */\n    private function renderHtmlLinks()\n    {\n        if (!empty($this->htmlLinks)) {\n            foreach ($this->htmlLinks as $key => $value) {\n                echo $value;\n            }\n        }\n    }\n}\n\n\n--- File: 670 # views/monitoringBuktiSetor/index.php ---\n<?php /* @var $this MonitorigBuktiSetorController */ ?>\n<?php /* @var $model CSqlDataProvider */ ?>\n<?php /* @var $formFilter FormFilterBuktiSetor */ ?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n            <fieldset class=\"fieldset\">\n                <legend>Monitoring Bukti Setor Perseroan</legend>\n                <div style=\"float: right;\">\n                <?php echo CHtml::link('Download to Excel', array('downloadExcel'), array('class'=>'btn btn-primary')) ?>\n                </div>\n                <div class=\"clearfix\"></div>\n            <?php\n\n            $this->widget('zii.widgets.grid.CGridView', array(\n                'id' => 'grid-detail',\n                'dataProvider' => $model,\n                'ajaxUpdate' => true, //false if you want to reload entire page (useful if sorting has an effect to other widgets)\n                'filter' => $formFilter, \n                'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                'columns' => array(\n                    array(\n                        'header' => 'No.',\n                        'value' => '$this->grid->dataProvider->pagination->currentPage * \n                        $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                    ),\n                    array(\n                        'header' => 'Perseroan',\n                        'name' => 'nama_perseroan',\n                    ),\n                    array(\n                        'header' => 'Notaris Pendirian',\n                        'name' => 'nama_notaris_pendirian',\n                        'value' => 'FormFilterBuktiSetor::getNamaNotaris($data[\"notaris_pendirian\"])'\n                    ),\n                    array(\n                        'header' => 'Notaris Upload',\n                        'name' => 'nama_notaris',\n                        'value' => 'FormFilterBuktiSetor::getUploadedName($data[\"notaris_upload\"])',\n                        'filter' => false\n                    ),\n                    array(\n                        'header' => 'Tanggal Upload',\n                        'name' => 'tanggal_upload',\n                        'filter' => CHtml::activeTextField($formFilter, 'tanggal_upload', array('class'=>'datepicker'))\n                    ),\n                    array(\n                        'header' => 'File',\n                        'type' => 'raw',\n                        'value' => 'CHtml::link(\"Downlod Bukti Setor\", $data[\"upload\"], array(\"target\"=>\"_blank\"))',\n                    )\n                ),\n            ));\n        ?>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php \n$Tanggal = EnumAhu::DATE_EFFECTIVE_PP29;\n    Yii::app()->clientScript->registerScript('grid-js',\n        '\n        $(document).on(\"focus\", \".datepicker\", function(){\n            $(this).datepicker({\n                dateFormat : \"dd-mm-yy\",\n                changeMonth : true,\n                changeYear : true,\n                maxDate: new Date(),\n                minDate: new Date(\"'.$Tanggal.'\")\n            });\n        });\n        ',\n        CClientScript::POS_END);\n?>\n\n--- File: 1099 # views/dashboard/index.php ---\n<?php /* @var $this DashboardController */ ?>\n<?php /* @var $model DashboardFilterForm */ ?>\n<?php /* @var $listProvinsi Array */ ?>\n<?php /* @var $listKabupaten Array */ ?>\n<?php /* @var $listReport Array */ ?>\n<?php /* @var $listKategori Array */ ?>\n<?php /* @var $tipe */ ?>\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/css/select2.min.css\" rel=\"stylesheet\" />\n<?php\nYii::app()->clientScript->registerCss('css-dashbord-baum','\n');\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend><?php echo CHtml::encode($report['title']); ?></legend>\n                    <?php $this->renderPartial('_searchForm', array(\n                        'tipe' => $tipe,\n                        'report' => $report,\n                        'model'=>$model,\n                        'listProvinsi'=>$listProvinsi,\n                        'listKabupaten'=>$listKabupaten\n                    )); ?>\n                    <div id=\"div-graph\"></div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<div class=\"row\" id=\"div-detail\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend><?php echo 'Detail' ?></legend>\n                    <div id=\"div-category\">\n                        <?php $this->renderPartial('_dropDownlistCategoryForm', get_defined_vars()); ?>\n                    </div>\n                    <div class=\"row form-group\" id=\"div-column\">\n                        <?php if (isset($tampil_kolom)):\n                            echo $tampil_kolom;    \n                        endif ?>\n                    </div>\n                    <h3 id=\"data-info\"></h3>\n                    <div id=\"div-grid\"></div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts-data.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts-drilldown.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile(Yii::app()->baseUrl . '/themes/flatlab/assets/js/new-highcharts-exporting.js', CClientScript::POS_END);\nYii::app()->clientScript->registerScript('js-dashbord-bakum',\n    file_get_contents( __DIR__ . '/index.js'),\n    CClientScript::POS_END);\n?>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.6-rc.0/js/select2.min.js\"></script>\n\n\n--- File: 905 # views/cleansingOrgan/index.php ---\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <center>\n                    <h3>Log Cleansing Organ</h3>\n                </center>\n                <div class=\"clearfix\"></div><br/>\n                <?php if(Yii::app()->user->hasFlash('error')):?>\n                    <div class=\"alert alert-block alert-danger fade in hidden-print\" style=\"padding:20px 50px; margin-top: 10 !important;\">\n                        <h4 style=\"color: red; font-weight: 700;\">\n                            <?php echo Yii::app()->user->getFlash('error'); ?>\n                        </h4>\n                    </div>\n                <?php endif; ?>\n                <?php echo CHtml::link('Cleansing',\n                    ['cleansing'],\n                    ['class' => 'btn btn-primary']); ?>\n                <?php // echo CHtml::link('Migrate To Database',\n                    // ['migrateOrgan'],\n                    // ['class' => 'btn btn-primary']); ?>\n                <div class=\"clearfix\"></div><br />\n                <div class=\"panel-body\">\n                    <?php $this->widget('zii.widgets.grid.CGridView', array(\n                        'id'=>'cleansing-organ-grid',\n                        'dataProvider'=>$model->search(),\n                        'filter'=>$model,\n                        'afterAjaxUpdate'=>\"function(){jQuery('.date').datepicker({\n                                'dateFormat':'yy-mm-dd',\n                                'changeYear': true,\n                                'changeMonth':true,\n                                'showAnim':'slideDown',\n                                'yearRange':'2000:+nn'\n                        })}\",\n                        'itemsCssClass'=>'table table-striped table-hover table-bordered dataTable',\n                        'columns'=>array(\n                            'nomor_transaksi',\n                            'base',\n                            'organ',\n                            array(\n                                'name' => 'created_date',\n                                'value' => 'Helpers::getDateTimeFormatId($data->created_date)',\n                                'filter' => $this->widget('zii.widgets.jui.CJuiDatePicker', array(\n                                    'model' => $model,\n                                    'attribute' => 'created_date',\n                                    'options' => array(\n                                      'dateFormat' => 'yy-mm-dd',\n                                      'changeYear' => true,\n                                      'changeMonth' => true,\n                                      'showAnim' => 'slideDown',\n                                      'yearRange' => '2000:+nn',\n                                      'width' => '17em',\n                                    ),\n                                    'htmlOptions' => array(\n                                        'class' => 'date',\n                                    ),\n                                ), true),\n                            ),\n                            array(\n                                'header'=>'Created by',\n                                'name'=>'created_by',\n                                'type'=>'HTML',\n                                'filter'=>'',\n                                'value'=>'User::model()->getUsernameByid($data->created_by)' //'$data->created_by'\n                            ),\n                            array(\n                                'filter' => false,\n                                'header'=>'',\n                                'value'=>'$data->getDetailButton($data)',\n                                'type'=>'RAW',\n                            ),\n                        ),\n                    ));\n                    ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n<?php\n$this->renderPartial('/cleansing/popDiff', get_defined_vars());\nYii::app()->clientScript->registerScript('cleansing-modal', '\nshowDiff(\".show-diff\", \"Difference\");\n' );\n\n\n--- File: 264 # controllers/BakumMapsController.php ---\n<?php\n\n/**\n* Base Controller Maps Bakum\n* @since 22 september 2016\n*/\n// use sabh\\service\\DashboardBakumService;\n\nclass BakumMapsController extends Controller\n{\n\n    protected $model_mapper;\n\n    /**\n     * @return string\n     */\n    public function actionIndex()\n    {\n        $jenis = array('perseroan'=>'Perseroan','perkumpulan' => 'Perkumpulan','yayasan' => 'Yayasan');\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        return $this->render('index',get_defined_vars());\n    }\n\n    /**\n     * @param Provinsi = id_provinsi\n     * @param Kabupaten = id_kabupaten\n     * @return list bakum\n     */\n    public function actiongetDataMaps()\n    {\n        $data_maps = \"\";\n        $provinsi = Yii::app()->request->getParam('provinsi');\n        $jenis_bakum = Yii::app()->request->getParam('jenis');\n        $tanggal_awal = Yii::app()->request->getParam('tanggal_awal');\n        $tanggal_akhir = Yii::app()->request->getParam('tanggal_akhir');\n        $model = new DashboardBakumService;\n        if (!empty($tanggal_awal) && !empty($tanggal_akhir)) {\n            $tanggal_awal = $tanggal_awal !== '' ? date('Y-m-d', strtotime($tanggal_awal)) : '';\n            $tanggal_akhir = $tanggal_akhir !== '' ? date('Y-m-d', strtotime($tanggal_akhir)) : '';\n            $data_maps = $model->findAllCountDataRangeDateProvinsi($tanggal_awal,$tanggal_akhir,$provinsi,$jenis_bakum);\n        } elseif (!empty($provinsi) && !empty($jenis_bakum)) {\n            $data_maps = $model->findAllCountDataProvinsi($provinsi,$jenis_bakum);\n        }\n        if (count($data_maps) == 2 && isset($data_maps['data']) && is_array($data_maps['data'])) {\n            $listKabupaten =\n                Wilayah::model()->findAll(\n                    array(\n                        'condition' => 'PARENT_ID =:parent_id AND TINGKAT_WILAYAH =:tingkat_wilayah ',\n                        'order' => 'WILAYAH_ID',\n                        'params' => array(':parent_id' => $provinsi, ':tingkat_wilayah'=> 2)));\n            $listLat = CHtml::listData($listKabupaten, 'WILAYAH_ID', 'LAT');\n            $listLon = CHtml::listData($listKabupaten, 'WILAYAH_ID', 'LON');\n            foreach ($data_maps['data'] as $key => $maps) {\n                if (isset($data_maps['data'][$key]['kabupaten_id']) && isset($listLat[$data_maps['data'][$key]['kabupaten_id']])) {\n                    $data_maps['data'][$key]['lat'] = $listLat[$data_maps['data'][$key]['kabupaten_id']];\n                    $data_maps['data'][$key]['lon'] = $listLon[$data_maps['data'][$key]['kabupaten_id']];\n                }\n            }\n        }\n        DashboardBakumHelper::jsonReturn($data_maps);\n    }\n\n}\n\n--- File: 391 # repositories/VerifikatorPerubahanPerseroanRepository.php ---\n<?php\n\nYii::import('application.modules.sabh.models.VerifikatorPerubahanPerseroan');\n\nclass VerifikatorPerubahanPerseroanRepository\n{\n    /**\n     * Find active verifikator by user ID\n     * @param string $userId User ID to find\n     * @return VerifikatorPerubahanPerseroan|null Verifikator model or null if not found\n     */\n    public function findActiveByUserId($userId)\n    {\n        return VerifikatorPerubahanPerseroan::model()->findByAttributes([\n            'user_id' => $userId,\n            'is_active' => 1\n        ]);\n    }\n\n    /**\n     * Find next active verifikator by level\n     * @param int $level Current verifikator level\n     * @return VerifikatorPerubahanPerseroan|null Next active verifikator or null if not found\n     */\n    public function findNextActiveByLevel($level)\n    {\n        $nextLevel = $level + 1;\n        if ($nextLevel > 3) {\n            return null;\n        }\n\n        return VerifikatorPerubahanPerseroan::model()->findByAttributes([\n            'level_verifikator' => $nextLevel,\n            'is_active' => 1\n        ]);\n    }\n\n    /**\n     * Find next verifikator for round-robin assignment\n     * @param int $level Verifikator level to find\n     * @return VerifikatorPerubahanPerseroan|null Verifikator model or null if none found\n     */\n    /**\n     * Find next available verifikator for round-robin assignment\n     * @param int $level Verifikator level to find\n     * @return VerifikatorPerubahanPerseroan|null Verifikator model or null if none found\n     */\n    public function findNextAvailableByLevel($level)\n    {\n        return VerifikatorPerubahanPerseroan::model()->find([\n            'condition' => 'level_verifikator = :level AND is_active = 1',\n            'params' => [':level' => $level],\n            'order' => 'ISNULL(last_assigned_at) DESC, last_assigned_at ASC'\n        ]);\n    }\n\n    /**\n     * Update verifikator's last assignment time\n     * @param VerifikatorPerubahanPerseroan $verifikator Verifikator to update\n     * @throws ValidationException If verifikator is invalid\n     * @return bool True if update successful\n     */\n    public function updateLastAssignedAt($verifikator)\n    {\n        if (!$verifikator || !$verifikator->id) {\n            throw new ValidationException('Verifikator tidak valid.');\n        }\n\n        $verifikator->last_assigned_at = new CDbExpression('NOW()');\n        if (!$verifikator->save(false, ['last_assigned_at'])) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Reset last_assigned_at for all verifikators of a level\n     * @param int $level Level to reset\n     */\n    public function resetRoundRobin($level)\n    {\n        VerifikatorPerubahanPerseroan::model()->updateAll(\n            ['last_assigned_at' => null],\n            'level_verifikator = :level',\n            [':level' => $level]\n        );\n    }\n}\n\n--- File: 427 # views/bo/monitoring/index.php ---\n<?php\n\n/** @var $this MonitoringBoController **/\n/** @var $model BoMonitoringPerseroan , yayasan, perkumpulan **/\n/** @var $data CArrayDataProvider **/\n/** @var $countTipe array **/\n/** @var $chart array **/\n?>\n\n<style type=\"text/css\">\n    .kh_ca::before{\n        content: \"- \";\n    }\n    .kh_ca{\n        white-space: nowrap;\n        display: block;\n    }\n    .kh_ca:not(:last-child){\n        padding-bottom: .3em;\n    }\n    .pop_up_info{\n        border-radius:4px;\n        font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        padding:10px;\n        font-size:16px;\n        position:absolute;\n        background-color:#58C9F3;\n        color:#fff;\n    }\n    .table>tbody>tr.warning>td,\n    .table>tbody>tr.warning>th,\n    .table>tbody>tr>td.warning,\n    .table>tbody>tr>th.warning,\n    .table>tfoot>tr.warning>td,\n    .table>tfoot>tr.warning>th,\n    .table>tfoot>tr>td.warning,\n    .table>tfoot>tr>th.warning,\n    .table>thead>tr.warning>td,\n    .table>thead>tr.warning>th,\n    .table>thead>tr>td.warning,\n    .table>thead>tr>th.warning {\n        background-color: #f8d347 ;\n    }\n\n    .table-hover>tbody>tr.warning:hover>td,\n    .table-hover>tbody>tr.warning:hover>th,\n    .table-hover>tbody>tr>td.warning:hover,\n    .table-hover>tbody>tr>th.warning:hover {\n        background-color: #f8d347 ;\n    }\n\n    .yell {\n        background-color: #f8d347;\n    }\n\n    .green {\n        background-color: #00c853;\n    }\n\n    .symbol {\n        cursor: pointer;\n    }\n\n    .grey {\n        -webkit-filter: grayscale(50%); /* Safari 6.0 - 9.0 */\n        filter: grayscale(50%);\n    }\n</style>\n<?php if($model instanceof BoMonitoringPerseroan): ?>\n    <?php $this->renderPartial('/bo/monitoring/_perseroan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php elseif($model instanceof BoMonitoringYayasan): ?>\n    <?php $this->renderPartial('/bo/monitoring/_yayasan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php else: ?>\n    <?php $this->renderPartial('/bo/monitoring/_perkumpulan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php endif; ?>\n\n<div id=\"overlay\" \n     class=\"ui-widget-overlay overlay\" \n     style=\"display:none; position:fixed; top: 0; left: 0; bottom:0; right:0; z-index: 1001;\">\n</div>\n<?php $this->renderPartial('/template/loader'); ?>\n\n--- File: 537 # views/persero/profil/index.php ---\n<div class='mimik_tabel' style='height: 100%;'>\n\t<div>\n\t\t<div style='padding-bottom: 5%;'>\n\t\t\t<?php\n\t\t\t$form = $this->beginWidget('CActiveForm', array(\n\t\t\t\t'id' => 'admin-ubah-form',\n\t\t\t\t'method' => 'get',\n\t\t\t\t'action' => '/sabh/persero/profil/cari',\n\t\t\t\t'enableClientValidation' => true,\n\t\t\t\t'clientOptions' => array(\n\t\t\t\t\t'validateOnSubmit' => true,\n\t\t\t\t)\n\t\t\t));\n\t\t\t?>\n\t\t\t<div id='kotak_kuning'>\n\t\t\t\t<div class='input'>\n\t\t\t\t\t<?= CHtml::textField('nama_perseroan', '', array('placeholder' => 'Cari Profil Perusahaan di Indonesia', 'class' => 'form-control')); ?>\n\t\t\t\t\t<i class='button'></i>\n\t\t\t\t</div>\n\t\t\t<?php $this->endWidget(); ?>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n<?php if(isset($data)): ?>\n\t<section class=\"panel\">\n\t\t<div class=\"panel-body\">\n\t\t\t<fieldset class=\"fieldset\">\n\t\t\t\t<legend>Hasil Pencarian</legend>\n\t\t\t\t<?php if(is_object($data)): ?>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tNama Perseroan\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->nama_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tAlamat Perseroan\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->alamat_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tKabupaten\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->kabupaten_nama_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-3 control-label\">\n\t\t\t\t\t\t\tProvinsi\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-lg-9\">\n\t\t\t\t\t\t\t<?= $data->provinsi_nama_perseroan ?>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"col-lg-3 labelatas\"></div>\n\t\t\t\t\t<div class=\"col-lg-9 labelatas\">\n\t\t\t\t\t\t<?= CHtml::button('Beli Profil Perusahaan', array('class' => 'btn btn-primary', 'id' => 'beli_profile_lengkap')); ?>\n\t\t\t\t\t</div>\n\t\t\t\t<?php else: ?>\n\t\t\t\t\t<div class=\"form-group clearfix\">\n\t\t\t\t\t\t<div class=\"col-lg-12\">\n\t\t\t\t\t\t\tData tidak ditemukan.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t<?php endif; ?>\n\t\t\t</fieldset>\n\t\t</div>\n\t</section>\n<?php endif;\n\nfunction ambilData(&$obj, $key){\n\tif(!isset($obj->$key))\n\t\treturn '';\n\treturn $obj->$key;\n}\nfunction tampilkan_rapih($jmlh, $curr){\n\treturn (strtolower($curr) === 'rupiah' ? 'Rp.' : strtoupper($curr)) . ' ' . (empty($jmlh) ? '0' : number_format(floatval($jmlh), 0, ',', '.'));\n}\nYii::app()->clientScript->registerScript('_formUmumCompanyProfile', str_replace('$baseurl', Yii::app()->getBaseUrl(true), file_get_contents( __DIR__ . '/company_profile.js')));\n\n\n--- File: 444 # views/bo/monitoring-notaris/index.php ---\n<?php\n\n/** @var $this MonitoringBoNotarisController **/\n/** @var $model BoMonitoringNotarisBadanHukum, perseroan , yayasan, perkumpulan **/\n/** @var $data CArrayDataProvider **/\n/** @var $countTipe array **/\n/** @var $chart array **/\n?>\n\n<style type=\"text/css\">\n    .kh_ca::before{\n        content: \"- \";\n    }\n    .kh_ca{\n        white-space: nowrap;\n        display: block;\n    }\n    .kh_ca:not(:last-child){\n        padding-bottom: .3em;\n    }\n    .pop_up_info{\n        border-radius:4px;\n        font-family:\"Helvetica Neue\",Helvetica,Arial,sans-serif;\n        padding:10px;\n        font-size:16px;\n        position:absolute;\n        background-color:#58C9F3;\n        color:#fff;\n    }\n    .table>tbody>tr.warning>td,\n    .table>tbody>tr.warning>th,\n    .table>tbody>tr>td.warning,\n    .table>tbody>tr>th.warning,\n    .table>tfoot>tr.warning>td,\n    .table>tfoot>tr.warning>th,\n    .table>tfoot>tr>td.warning,\n    .table>tfoot>tr>th.warning,\n    .table>thead>tr.warning>td,\n    .table>thead>tr.warning>th,\n    .table>thead>tr>td.warning,\n    .table>thead>tr>th.warning {\n        background-color: #f8d347 ;\n    }\n\n    .table-hover>tbody>tr.warning:hover>td,\n    .table-hover>tbody>tr.warning:hover>th,\n    .table-hover>tbody>tr>td.warning:hover,\n    .table-hover>tbody>tr>th.warning:hover {\n        background-color: #f8d347 ;\n    }\n\n    .yell {\n        background-color: #f8d347;\n    }\n\n    .green {\n        background-color: #00c853;\n    }\n\n    .symbol {\n        cursor: pointer;\n    }\n\n    .grey {\n        -webkit-filter: grayscale(50%); /* Safari 6.0 - 9.0 */\n        filter: grayscale(50%);\n    }\n</style>\n<?php if($model instanceof BoMonitoringNotarisPerseroan): ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_perseroan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php elseif($model instanceof BoMonitoringNotarisYayasan): ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_yayasan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php elseif($model instanceof BoMonitoringNotarisPerkumpulan): ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_perkumpulan', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php else: ?>\n    <?php $this->renderPartial('/bo/monitoring-notaris/_badanHukum', array(\n        'model' => $model,\n        'data' => $data,\n        'countTipe' => $countTipe,\n        'chart' => $chart\n    )); ?>\n<?php endif; ?>\n\n<div id=\"overlay\" \n     class=\"ui-widget-overlay overlay\" \n     style=\"display:none; position:fixed; top: 0; left: 0; bottom:0; right:0; z-index: 1001;\">\n</div>\n<?php $this->renderPartial('/template/loader'); ?>\n\n--- File: 53 # models/BakumSetting.php ---\n<?php\n\n/**\n * This is the model class for table \"{{bakum_setting}}\".\n *\n * The followings are the available columns in table '{{bakum_setting}}':\n * @property integer $id\n * @property string $name\n * @property string $value\n * @property string $desc\n */\nclass BakumSetting extends CActiveRecord\n{\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return BakumSetting the static model class\n     */\n    public static function model($className=__CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{bakum_setting}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('name', 'length', 'max'=>200),\n            array('desc', 'safe'),\n            // The following rule is used by search().\n            // Please remove those attributes that should not be searched.\n            array('id, name, value, desc', 'safe', 'on'=>'search'),\n        );\n    }\n\n    /**\n     * @return array relational rules.\n     */\n    public function relations()\n    {\n        // NOTE: you may need to adjust the relation name and the related\n        // class name for the relations automatically generated below.\n        return array(\n        );\n    }\n\n    /**\n     * @return array customized attribute labels (name=>label)\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'id' => 'ID',\n            'name' => 'Name',\n            'value' => 'Value',\n            'desc' => 'Desc',\n        );\n    }\n\n    /**\n     * Retrieves a list of models based on the current search/filter conditions.\n     * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n     */\n    public function search()\n    {\n        // Warning: Please modify the following code to remove attributes that\n        // should not be searched.\n\n        $criteria=new CDbCriteria;\n\n        $criteria->compare('id',$this->id);\n        $criteria->compare('name',$this->name,true);\n        $criteria->compare('value',$this->value,true);\n        $criteria->compare('desc',$this->desc,true);\n\n        return new CActiveDataProvider($this, array(\n            'criteria'=>$criteria,\n        ));\n    }\n\n    /**\n     * Get value in setting by name\n     * @param   array   $param  [name1, name2, name3, ]\n     * @return  array   [name1 => value of name1, name2 => value of name2, ]\n     */\n    public function getDataSetting($param)\n    {\n        if (!empty($param) && is_array($param)) {\n            $where = \"'\".implode(\"','\", $param).\"'\";\n            $model = self::model()->findAll(\"name in ($where)\");\n            if (!empty($model)) {\n                $result = [];\n                foreach ($model as $kModel => $vModel) {\n                    if (in_array($vModel->name, $param)) {\n                        $result[$vModel->name] = $vModel->value;\n                    }\n                }\n                return $result;\n            }\n        }\n    }\n\n    public function updateDataSetting($name, $value)\n    {\n        $model = self::model()->find('name=:name', [':name' => $name]);\n        if (!empty($model)) {\n            $model->value = $value;\n            if ($model->saveAttributes(['value'])) {\n                return $model;\n            }\n        }\n    }\n}\n\n\n--- File: 248 # controllers/CleansingController.php ---\n<?php\n\n/**\n * @author Josep\n * 11 Ahustus 2016\n * Cleansing Data badan hukum\n * - Cleansing modal (Modal dasar, modal ditempatkan, pemegang saham)\n */\nYii::import(\"application.modules.sabh.components.cleansing.*\");\n\nClass CleansingController extends Controller\n{\n    public $dataMonth = [\n        '' => '-- All --',\n        '1' => 'Januari',\n        '2' => 'Febuari',\n        '3' => 'Maret',\n        '4' => 'April',\n        '5' => 'Mei',\n        '6' => 'Juni',\n        '7' => 'Juli',\n        '8' => 'Agustus',\n        '9' => 'September',\n        '10' => 'Oktober',\n        '11' => 'November',\n        '12' => 'Desember',\n    ];\n\n    /**\n     * Get All Change SK\n     * SELECT nomor_transaksi, nomor_sk, COUNT(nomor_transaksi) total_cetak_sk FROM `__all_sk_history` WHERE `nomor_transaksi` LIKE '401%' AND (`nomor_sk` IS NOT NULL OR nomor_sk != '') GROUP BY `nomor_transaksi` HAVING COUNT(DISTINCT nomor_sk) > 1;\n     */\n    public function actionListSk($base='')\n    {\n        $db = Yii::app()->dbBadanHukum;\n        $no = '';\n        switch (strtolower($base)) {\n            case 'perseroan':\n                $no = '401%';\n                break;\n            case 'perkumpulan':\n                $no = '601%';\n                break;\n            case 'yayasan':\n                $no = '501%';\n                break;\n        }\n        $model = New AllSkHistory('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        if (!empty($no)) {\n            $model->dbCriteria->addCondition('`nomor_transaksi` LIKE :no');\n            $model->dbCriteria->params[':no'] = $no;\n            $model->dbCriteria->addCondition('(`nomor_sk` IS NOT NULL OR nomor_sk != \\'\\')');\n            $model->dbCriteria->having = 'COUNT(DISTINCT nomor_sk) > 1';\n        }\n        $model->dbCriteria->group = 'nomor_transaksi';\n        if($gets = Yii::app()->request->getQuery(get_class($model))) {\n            $model->attributes = $gets;\n        }\n        $title = empty($no) ? 'History Cetak Sk' : 'List Error SK';\n        $urlBack = '/sabh/cleansing/listChangeSk';\n        return $this->render('listSk', get_defined_vars());\n    }\n\n    public function actionDetailHistoryCetakSk($no)\n    {\n        $data = AllSkHistory::model()->getListHistory($no);\n        $model = [];\n        foreach ($data['data'] as $kData => $vData) {\n            $param = implode(\",\", $vData);\n            $db = Yii::app()->dbBadanHukum;\n            $_model = $db->createCommand()\n                ->from($kData)\n                ->where(\"id in ($param)\")\n                ->queryAll();\n            $model = array_merge($model, $_model);\n        }\n        return $this->render('detailHistoryCetakSk', get_defined_vars());\n    }\n\n    /**\n     * Show Detail from tbl_sk_exception\n     */\n    public function actionReportErrorStatusSk($base='perseroan')\n    {\n        $model = New SKException('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        if (!empty($base)) {\n            $model->dbCriteria->addCondition('`base` LIKE :base');\n            $model->dbCriteria->params[':base'] = $base;\n        }\n        if($gets = Yii::app()->request->getQuery(get_class($model))) {\n            $model->attributes = $gets;\n        }\n        return $this->render('reportErrorStatusSk', get_defined_vars());\n    }\n\n\n}\n\n\n--- File: 204 # models/yayasanbaru/pembubaran/PembubaranYayasan.php ---\n<?php\n\n/**\n * Model form untuk membantu proses tambah transaksi\n * pembubaran yayasan\n *\n */\nclass PembubaranYayasan extends CFormModel\n{\n    const DASAR_PEMBUBARAN = 'Dasar Pembubaran';\n\n    /**\n     * array attribute transaksi yayasan yang value nya harus nol\n     * saat pertama kali\n     */\n    public static $attributeZeroValues = array(\n        'status_transaksi', 'status_billing', 'jumlah_billing',\n        'flag', 'count_sk', 'flag_upload', 'perbaikan'\n    );\n\n    /**\n     * array attribute transaksi yayasan yang value nya harus null\n     * saat pertama kali\n     */\n    public static $attributeNullValues = array(\n        'id_notaris', 'nama_notaris', 'id_notaris_pengganti', 'virtual_account', 'nomor_akta', 'tgl_akta',\n        'daftar_no_akta', 'daftar_tgl_akta', 'nomor_wasiat', 'nama_pemberi_wasiat', 'nama_notaris_pemberi_wasiat',\n        'kedudukan_notaris_wasiat', 'tahun', 'nomor_daftar', 'tanggal_pembayaran'\n    );\n\n    /**\n     * array attribute transaksi (key) yayasan yang nama nya beda dengan attribute master (value)\n     * tapi memiliki maksud atau nilai yang sama\n     * contoh : 'id_badan_hukum' => 'badan_hukum_id' dimana 'id_badan_hukum' attribute di transaksi\n     * 'badan_hukum_id' attribute di master, keduanya memiliki nilai yang sama\n     */\n    public static $attributeDiffName = array(\n        'id_badan_hukum' => 'badan_hukum_id', 'parent_nomor_transaksi' => 'no_transaksi', 'nama_yayasan' => 'nama',\n        'npwp_yayasan' => 'npwp', 'alamat_yayasan' => 'alamat', 'rt_yayasan' => 'rt', 'rw_yayasan' => 'rw',\n        'provinsi_id_yayasan'=>'provinsi_id', 'provinsi_nama_yayasan' => 'provinsi_nama',\n        'kabupaten_id_yayasan' => 'kabupaten_id', 'kabupaten_nama_yayasan' => 'kabupaten_nama',\n        'kecamatan_id_yayasan' => 'kecamatan_id', 'kecamatan_nama_yayasan' => 'kecamatan_nama',\n        'kelurahan_yayasan' => 'kelurahan', 'kodepos_yayasan' => 'kodepos', 'nomor_telepon_yayasan' => 'telephone'\n    );\n\n    /**\n     * @param array $arrBadanHukum\n     * @return void update value attribute parent TransaksiYayasan\n     */\n    public function assignFromBadanHukum(TransaksiYayasan &$model, $arrBadanHukum)\n    {\n        foreach ($model->attributes as $key => $value) {\n            if (isset($arrBadanHukum[$key])) {\n                $model->$key = $arrBadanHukum[$key];\n            }\n            if (in_array($key, static::$attributeZeroValues)) {\n                $model->$key = 0;\n            }\n            if (in_array($key, static::$attributeNullValues)) {\n                $model->$key = null;\n            }\n            if (isset(static::$attributeDiffName[$key])) {\n                $model->$key = $arrBadanHukum[static::$attributeDiffName[$key]];\n            }\n            if ($model->$key === '') {\n                $model->$key = null;\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    public static function getSteps(array $cari, array $syarat, array $input, array $likuidasi)\n    {\n        $result = array();\n        $result['cari'] = CariForm::steps($cari);\n        $result['syarat'] = SyaratForm::steps($syarat);\n        $result['input'] = InputForm::steps($input);\n        $result['likuidasi'] = LikuidasiForm::steps($likuidasi);\n        return $result;\n    }\n}\n\n\n--- File: 190 # models/perkumpulan/pembubaran/PembubaranPerkumpulan.php ---\n<?php\n\n/**\n * Model form untuk membantu proses tambah transaksi\n * pembubaran Perkumpulan\n *\n */\nclass PembubaranPerkumpulan extends CFormModel\n{\n    const DASAR_PEMBUBARAN = 'Dasar Pembubaran';\n\n    /**\n     * array attribute transaksi Perkumpulan yang value nya harus nol\n     * saat pertama kali\n     */\n    public static $attributeZeroValues = array(\n        'status_transaksi', 'status_billing', 'jumlah_billing',\n        'flag', 'count_sk', 'flag_upload', 'perbaikan'\n    );\n\n    /**\n     * array attribute transaksi Perkumpulan yang value nya harus null\n     * saat pertama kali\n     */\n    public static $attributeNullValues = array(\n        'id_notaris', 'nama_notaris', 'id_notaris_pengganti', 'virtual_account', 'nomor_akta', 'tgl_akta',\n        'daftar_no_akta', 'daftar_tgl_akta', 'nomor_wasiat', 'nama_pemberi_wasiat', 'nama_notaris_pemberi_wasiat',\n        'kedudukan_notaris_wasiat', 'tahun', 'nomor_daftar', 'tanggal_pembayaran'\n    );\n\n    /**\n     * array attribute transaksi (key) Perkumpulan yang nama nya beda dengan attribute master (value)\n     * tapi memiliki maksud atau nilai yang sama\n     * contoh : 'id_badan_hukum' => 'badan_hukum_id' dimana 'id_badan_hukum' attribute di transaksi\n     * 'badan_hukum_id' attribute di master, keduanya memiliki nilai yang sama\n     */\n    public static $attributeDiffName = array(\n        'id_badan_hukum' => 'badan_hukum_id', 'parent_nomor_transaksi' => 'no_transaksi', 'nama_perkumpulan' => 'nama',\n        'npwp_perkumpulan' => 'npwp', 'alamat_perkumpulan' => 'alamat', 'rt_perkumpulan' => 'rt', 'rw_perkumpulan' => 'rw',\n        'provinsi_id_perkumpulan'=>'provinsi_id', 'provinsi_nama_perkumpulan' => 'provinsi_nama',\n        'kabupaten_id_perkumpulan' => 'kabupaten_id', 'kabupaten_nama_perkumpulan' => 'kabupaten_nama',\n        'kecamatan_id_perkumpulan' => 'kecamatan_id', 'kecamatan_nama_perkumpulan' => 'kecamatan_nama',\n        'kelurahan_perkumpulan' => 'kelurahan', 'kodepos_perkumpulan' => 'kodepos', 'nomor_telepon_perkumpulan' => 'telephone'\n    );\n\n    /**\n     * @param array $arrBadanHukum\n     * @return void update value attribute parent TransaksiPerkumpulan\n     */\n    public function assignFromBadanHukum(TransaksiPerkumpulan &$model, $arrBadanHukum)\n    {\n        foreach ($model->attributes as $key => $value) {\n            if (isset($arrBadanHukum[$key])) {\n                $model->$key = $arrBadanHukum[$key];\n            }\n            if (in_array($key, static::$attributeZeroValues)) {\n                $model->$key = 0;\n            }\n            if (in_array($key, static::$attributeNullValues)) {\n                $model->$key = null;\n            }\n            if (isset(static::$attributeDiffName[$key])) {\n                $model->$key = $arrBadanHukum[static::$attributeDiffName[$key]];\n            }\n            if ($model->$key === '') {\n                $model->$key = null;\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    public static function getSteps(array $cari, array $syarat, array $input, array $likuidasi)\n    {\n        $result = array();\n        $result['cari'] = CariForm::steps($cari);\n        $result['syarat'] = SyaratForm::steps($syarat);\n        $result['input'] = InputForm::steps($input);\n        $result['likuidasi'] = LikuidasiForm::steps($likuidasi);\n        return $result;\n    }\n}\n\n\n--- File: 1172 # utils/ArrayHelper.php ---\n<?php\n\n/**\n * Array Helper Utility Class\n * \n * Provides utility methods for safe array operations and data extraction.\n * Can be reused across the application for consistent array handling.\n */\nclass ArrayHelper\n{\n    /**\n     * Safely get a value from an array with optional default\n     * \n     * @param array $array The source array\n     * @param string|int $key The key to retrieve\n     * @param mixed $default Default value if key doesn't exist\n     * @return mixed The value or default\n     */\n    public static function get($array, $key, $default = null)\n    {\n        return array_key_exists($key, $array) ? $array[$key] : $default;\n    }\n    \n    /**\n     * Get multiple values from an array\n     * \n     * @param array $array The source array\n     * @param array $keys Array of keys to retrieve\n     * @param mixed $default Default value for missing keys\n     * @return array Associative array of key-value pairs\n     */\n    public static function getMultiple($array, $keys, $default = null)\n    {\n        $result = [];\n        foreach ($keys as $key) {\n            $result[$key] = self::get($array, $key, $default);\n        }\n        return $result;\n    }\n    \n    /**\n     * Check if all required keys exist in array\n     * \n     * @param array $array The source array\n     * @param array $requiredKeys Array of required keys\n     * @return bool True if all keys exist\n     */\n    public static function hasAllKeys($array, $requiredKeys)\n    {\n        foreach ($requiredKeys as $key) {\n            if (!array_key_exists($key, $array)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    \n    /**\n     * Get missing keys from array\n     * \n     * @param array $array The source array\n     * @param array $requiredKeys Array of required keys\n     * @return array Array of missing keys\n     */\n    public static function getMissingKeys($array, $requiredKeys)\n    {\n        $missing = [];\n        foreach ($requiredKeys as $key) {\n            if (!array_key_exists($key, $array)) {\n                $missing[] = $key;\n            }\n        }\n        return $missing;\n    }\n    \n    /**\n     * Filter array to only include specified keys\n     * \n     * @param array $array The source array\n     * @param array $allowedKeys Array of keys to keep\n     * @return array Filtered array\n     */\n    public static function filterKeys($array, $allowedKeys)\n    {\n        return array_intersect_key($array, array_flip($allowedKeys));\n    }\n    \n    /**\n     * Remove specified keys from array\n     * \n     * @param array $array The source array\n     * @param array $keysToRemove Array of keys to remove\n     * @return array Array with specified keys removed\n     */\n    public static function removeKeys($array, $keysToRemove)\n    {\n        return array_diff_key($array, array_flip($keysToRemove));\n    }\n    \n    /**\n     * Check if array has any of the specified keys\n     * \n     * @param array $array The source array\n     * @param array $keys Array of keys to check\n     * @return bool True if any key exists\n     */\n    public static function hasAnyKey($array, $keys)\n    {\n        foreach ($keys as $key) {\n            if (array_key_exists($key, $array)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * Get first non-null value from array of keys\n     * \n     * @param array $array The source array\n     * @param array $keys Array of keys to check in order\n     * @param mixed $default Default value if no keys found\n     * @return mixed First non-null value or default\n     */\n    public static function getFirst($array, $keys, $default = null)\n    {\n        foreach ($keys as $key) {\n            if (array_key_exists($key, $array) && $array[$key] !== null) {\n                return $array[$key];\n            }\n        }\n        return $default;\n    }\n} \n\n--- File: 104 # models/Voucher.php ---\n<?php\n\n/**\n * This is the model class for table \"{{voucher}}\".\n *\n * The followings are the available columns in table '{{voucher}}':\n * @property string $no_voucher\n * @property string $no_transaksi\n * @property string $tgl_pembayaran\n * @property integer $terpakai\n */\nclass Voucher extends CActiveRecord\n{\n\t/**\n\t * Returns the static model of the specified AR class.\n\t * @param string $className active record class name.\n\t * @return Voucher the static model class\n\t */\n\tpublic $tanggal_pembayaran_list;//untuk ditampilkan di list data voucher\n\tpublic $limitRow;//untuk limit record per page\n\tpublic static function model($className=__CLASS__)\n\t{\n\t\treturn parent::model($className);\n\t}\n\n\t/**\n\t * @return CDbConnection database connection\n\t */\n\tpublic function getDbConnection()\n\t{\n\t\treturn Yii::app()->dbVoucher;\n\t}\n\t\n\tprotected function beforeSave(){\n\t\tif(parent::beforeSave()){\n\t\t\t$this->tgl_pembayaran=date('Y-m-d', strtotime($this->tgl_pembayaran));\n\t\t\treturn TRUE;\n\t\t}else{\n\t\t\treturn FALSE;\n\t\t}\n\t}\n\t\n\tprotected function afterFind(){\n\t\tparent::afterFind();\n\t\t$this->tanggal_pembayaran_list = Helpers::getDateFormatId($this->tgl_pembayaran);\n\t}\n\n\t/**\n\t * @return string the associated database table name\n\t */\n\tpublic function tableName()\n\t{\n\t\treturn '{{voucher}}';\n\t}\n\n\t/**\n\t * @return array validation rules for model attributes.\n\t */\n\tpublic function rules()\n\t{\n\t\t// NOTE: you should only define rules for those attributes that\n\t\t// will receive user inputs.\n\t\treturn array(\n\t\t\tarray('no_voucher, no_transaksi, tgl_pembayaran', 'required'),\n\t\t\tarray('terpakai,no_voucher', 'numerical', 'integerOnly'=>true),\n\t\t\tarray('no_voucher','unique'),\n\t\t\tarray('no_voucher, no_transaksi', 'length', 'max'=>50),\n\t\t\t// The following rule is used by search().\n\t\t\t// Please remove those attributes that should not be searched.\n\t\t\tarray('no_voucher, no_transaksi, tgl_pembayaran, terpakai', 'safe', 'on'=>'search'),\n\t\t);\n\t}\n\n\t/**\n\t * @return array relational rules.\n\t */\n\tpublic function relations()\n\t{\n\t\t// NOTE: you may need to adjust the relation name and the related\n\t\t// class name for the relations automatically generated below.\n\t\treturn array(\n\t\t);\n\t}\n\n\t/**\n\t * @return array customized attribute labels (name=>label)\n\t */\n\tpublic function attributeLabels()\n\t{\n\t\treturn array(\n\t\t\t'no_voucher' => 'No Voucher',\n\t\t\t'no_transaksi' => 'No Transaksi',\n\t\t\t'tgl_pembayaran' => 'Tanggal Pembayaran',\n\t\t\t'terpakai' => 'Terpakai',\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves a list of models based on the current search/filter conditions.\n\t * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n\t */\n\tpublic function search()\n\t{\n\t\t// Warning: Please modify the following code to remove attributes that\n\t\t// should not be searched.\n\n\t\t$criteria=new CDbCriteria;\n\n\t\t$criteria->compare('no_voucher',$this->no_voucher,true);\n\t\t$criteria->compare('no_transaksi',$this->no_transaksi,true);\n\t\t$criteria->compare('tgl_pembayaran',$this->tgl_pembayaran,true);\n\t\t$criteria->compare('terpakai',$this->terpakai);\n\n\t\treturn new CActiveDataProvider($this, array(\n\t\t\t'criteria'=>$criteria,\n\t\t\t'pagination'=>array('pageSize'=>$this->limitRow)\n\t\t));\n\t}\n        \n        public function saveTransaksi($no_voucher, $tgl_transaksi, $no_transaksi){\n            if($no_voucher && $tgl_transaksi && $no_transaksi){\n                $sql = \"update db_sabh.tbl_voucher SET tgl_transaksi='\".$tgl_transaksi.\"', no_transaksi = '\".$no_transaksi.\"' where no_voucher = '\".$no_voucher.\"'\";\n                Yii::app()->dbBadanHukum->createCommand($sql)->execute();\n            }\n            return true;\n        }\n}\n\n--- File: 125 # models/BoMonitoringNotarisBadanHukum.php ---\n<?php\n\nclass BoMonitoringNotarisBadanHukum extends BoMonitoringNotaris\n{\n    public $perseroan;\n    public $yayasan;\n    public $perkumpulan;\n\n    public function init()\n    {\n        parent::init();\n        $this->perseroan = new BoMonitoringNotarisPerseroan();\n        $this->yayasan = new BoMonitoringNotarisYayasan();\n        $this->perkumpulan = new BoMonitoringNotarisPerkumpulan();\n    }\n\n    public function initOtherAttribute()\n    {\n        parent::initOtherAttribute();\n        $this->perseroan->tahun = $this->tahun;\n        $this->yayasan->tahun = $this->tahun;\n        $this->perkumpulan->tahun = $this->tahun;\n    }\n\n    /**\n     *\n     */\n    public function baseQuery()\n    {\n        $arrQueryText = array();\n        $queryPerseroan = $this->perseroan->filterBase();\n        if ($queryPerseroan !== null) {\n            $strQueryPerseroan = $queryPerseroan->getText();\n            $arrQueryText['perseroan'] = $strQueryPerseroan;\n        }\n        $queryYayasan = $this->yayasan->filterBase();\n        if ($queryYayasan !== null) {\n            $strQueryYayasan = $queryYayasan->getText();\n            $arrQueryText['yayasan'] = $strQueryYayasan;\n        }\n        $queryPerkumpulan = $this->perkumpulan->filterBase();\n        if ($queryPerkumpulan !== null) {\n            $strQueryPerkumpulan = $queryPerkumpulan->getText();\n            $arrQueryText['perkumpulan'] = $strQueryPerkumpulan;\n        }\n        if (!empty($this->bakum) && array_key_exists($this->bakum, $arrQueryText)) {\n            $arrQueryTextFiltered = $arrQueryText[$this->bakum];\n            $arrQueryText = array();\n            $arrQueryText[$this->bakum] = $arrQueryTextFiltered;\n        }\n        $unionSql = implode(' UNION ALL ', $arrQueryText);\n        $query = null;\n        if (count($arrQueryText) > 0) {\n            $query = Yii::app()->dbBadanHukum->createCommand()\n                ->from(\"($unionSql) AS a\")\n                ->where('a.jumlah > 0')\n                ->order('a.id_notaris ASC');\n            $query->params[':start'] = $this->start;\n            $query->params[':end'] = $this->end;\n        }\n        return $query;\n    }\n\n    public function filterBase()\n    {\n        $query = $this->baseQuery();\n        if ($query !== null) {\n            $this->compare($query, 'id_notaris', $this->id_notaris);\n        }\n        return $query;\n    }\n\n    public function filterData()\n    {\n        $rawData = parent::filterData();\n        if (!empty($rawData)) {\n            $this->filterBakum($rawData);\n        }\n        return array_values($rawData);\n    }\n\n    public function mixData()\n    {\n        $boPerseroan = new BoMonitoringPerseroan();\n        $boYayasan = new BoMonitoringYayasan();\n        $boPerkumpulan = new BoMonitoringPerkumpulan();\n        $rawDataPerseroan = $this->mixDataBakum($boPerseroan);\n        $rawDataYayasan = $this->mixDataBakum($boYayasan);\n        $rawDataPerkumpulan = $this->mixDataBakum($boPerkumpulan);\n        return array(\n            'perseroan' => $rawDataPerseroan,\n            'yayasan' => $rawDataYayasan,\n            'perkumpulan' => $rawDataPerkumpulan\n        );\n    }\n\n    public function countTipe($allData)\n    {\n        $result = array();\n        foreach ($allData as $key => $allDataPerBakum) {\n            $result[$key] = parent::countTipe($allDataPerBakum);\n        }\n        return $result;\n    }\n\n    public function getChart($allData)\n    {\n        $result = array();\n        foreach ($allData as $key => $allDataPerBakum) {\n            $result[$key] = parent::getChart($allDataPerBakum);\n        }\n        return $result;\n    }\n}\n\n\n--- File: 1160 # mappers/DPerseroanRangeDateMapper.php ---\n<?php\n\nclass DPerseroanRangeDateMapper extends MapperBase\n{\n    public function findAll($kategori, $tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $kategori = strtoupper(str_replace('_', ' ', $kategori));\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.status_transaksi,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.pemegang_saham,\n            p.tahun,\n            p.nomor_transaksi,\n            p.jenis_perseroan,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            p.provinsi_id_perseroan\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.$tahun.' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            -- tp.id_aksi_transaksi = 9\n            p.jenis_perseroan = \"'.$kategori.'\"\n            AND p.kabupaten_id_perseroan IS NOT NULL\n            AND p.kabupaten_id_perseroan != \"\"\n            AND p.kabupaten_id_perseroan != 0\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllYears($kategori, $tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $kategori = strtolower($kategori);\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::PERSEROAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAll($kategori, $tahun, array(), false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$kategori);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsGroup($kategori, $tanggalAwal, $tanggalAkhir, $param)\n    {\n        $kategori = strtolower($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$kategori);\n        $cmd->from('('.$this->findAllYears($kategori, $tanggalAwal, $tanggalAkhir, array(), 'getText').') AS '.$kategori);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 340 # components/NoTransaksiSABH.php ---\n<?php\n\nclass NoTransaksiSABH {\n    /*\n     *  10    |   14  |  03   |   24   |   31    |      21          |  0001\n     *  produk  tahun   bulan   tanggal  wilayah   jenis_transaksi    no_urut\n     */\n\n    static public function getValue($product, $wilayah, $tipe_transaksi) {\n        $nomor = '';\n        $month = date('m');\n        $tahun = date('Y');\n        // $querylock = \"LOCK TABLES MS_NOMOR WRITE\";\n        // $lock = Yii::app()->db->createCommand($querylock)->execute();\n\n        $transaction = Yii::app()->db->beginTransaction();\n\n        try {\n            $querySelect = \"SELECT * from MS_NOMOR where bln='\" . $month . \"' AND th='\" . $tahun . \"' AND produk='\" . $product . \"' AND tipe_transaksi='\" . $tipe_transaksi . \"'\";\n            $result = self::getDBvalue($querySelect);\n\n            if ($result) {\n                $querySelect .= \" FOR UPDATE\";\n                $result = self::getDBvalue($querySelect);\n\n                $nomor = self::generateNomorTransaksi($result, $wilayah, $month, $tahun, $product, $tipe_transaksi);            \n\n            } else {\n                if(self::setNewValue($month, $tahun, $product, $tipe_transaksi)){\n                    $querySelect .= \" FOR UPDATE\";\n                    $result = self::getDBvalue($querySelect);\n\n                    if ($result) {\n                        $nomor = self::generateNomorTransaksi($result, $wilayah, $month, $tahun, $product, $tipe_transaksi);                    \n                    }\n                }\n            }\n            // $queryunlock = \"UNLOCK TABLES\";\n            // $unlock = Yii::app()->db->createCommand($queryunlock)->execute();\n\n            $transaction->commit();\n\n        } catch (Exception $e) {\n            $transaction->rollback();\n        }\n\n        return $nomor;\n    }\n\n    static public function setNewValue($month, $tahun, $product, $tipe_transaksi) {\n        /*\n         * Insert New Value = 0\n         */\n        $queryInsert = \"INSERT into MS_NOMOR(`bln`,`th`,`produk`,`tipe_transaksi`,`value`)\n                      values('$month', '$tahun', '$product', '$tipe_transaksi', 1);\";\n        return self::executeDBvalue($queryInsert);        \n    }\n    static public function updateValueTransaksi($month, $tahun, $product, $tipe_transaksi, $value){\n        /*\n         * Update value\n         */\n        $queryInsert = \"UPDATE MS_NOMOR set `value`='$value' where `bln`='$month' AND `th`='$tahun' AND `produk`='$product' AND `tipe_transaksi`='$tipe_transaksi'\";\n        return self::executeDBvalue($queryInsert);\n    }\n    static public function generateNomorTransaksi($data, $wilayah, $month, $tahun, $product, $tipe_transaksi){\n        if(isset($data[0])){\n            $result = $data[0];\n            if($result){\n                //Update value\n                self::updateValueTransaksi($month, $tahun, $product, $tipe_transaksi, $result['value']+1); //update value\n                \n                return $result['produk']. //product\n                       substr($result['th'],2,4). //tahun\n                       self::checkBulan($result['bln']). //bulan\n                       date('d'). // tanggal\n                       $wilayah. //wilayah\n                       $result['tipe_transaksi']. //tipe transaksi\n                       self::checkUrut($result['value']); // value\n            }\n        }        \n        return '';\n    }\n    static public function getDBvalue($query) {\n        $db = Yii::app()->db;\n        return $db->createCommand($query)->queryAll();\n    }\n\n    static public function executeDBvalue($query) {\n        $db = Yii::app()->db;\n        return $db->createCommand($query)->execute();\n    }\n    \n    static public function checkBulan($no) {\n        if (strlen($no) == 1)\n            return '0' . $no;\n        else\n            return $no;\n    }\n    \n    static public function checkUrut($no) {\n        if (strlen($no) == 1)\n            return '000' . $no;\n        elseif (strlen($no) == 2)\n            return '00' . $no;\n        elseif (strlen($no) == 3)\n            return '0' . $no;        \n        else\n            return $no;\n    }\n\n}\n\n?>\n\n\n--- File: 1173 # utils/RequestContext.php ---\n<?php\n\n/**\n * Request Helper Utility Class\n * \n * Provides utility methods for handling HTTP requests and JSON parsing.\n * Can be reused across controllers for consistent request handling.\n */\nclass RequestContext\n{\n    /**\n     * Get JSON body from request and decode it\n     * \n     * @param string $defaultValue Default value if body is empty\n     * @return array|null The decoded JSON data or default value\n     * @throws Exception If JSON is invalid\n     */\n    public static function getJsonBody($defaultValue = null)\n    {\n        $body = file_get_contents('php://input');\n        \n        if (empty($body)) {\n            return $defaultValue;\n        }\n\n        $data = json_decode($body, true);\n        \n        if (json_last_error() !== JSON_ERROR_NONE) {\n            throw new Exception('Invalid JSON format: ' . json_last_error_msg());\n        }\n        \n        return $data;\n    }\n    \n    /**\n     * Get JSON body with validation\n     * \n     * @param array $requiredKeys Array of required keys\n     * @param array $optionalKeys Array of optional keys\n     * @return array The validated JSON data\n     * @throws Exception If validation fails\n     */\n    public static function getValidatedJsonBody($requiredKeys = [], $optionalKeys = [])\n    {\n        $data = self::getJsonBody();\n        \n        if ($data === null) {\n            throw new Exception('Request body is required');\n        }\n        \n        // Check required keys\n        $missingKeys = ArrayHelper::getMissingKeys($data, $requiredKeys);\n        if (!empty($missingKeys)) {\n            throw new Exception('Missing required fields: ' . implode(', ', $missingKeys));\n        }\n        \n        // Filter to only allowed keys\n        $allowedKeys = array_merge($requiredKeys, $optionalKeys);\n        return ArrayHelper::filterKeys($data, $allowedKeys);\n    }\n    \n    /**\n     * Get request method\n     * \n     * @return string The HTTP request method\n     */\n    public static function getRequestMethod()\n    {\n        return Yii::app()->request->getRequestType();\n    }\n    \n    /**\n     * Check if request method matches\n     * \n     * @param string $method The expected method\n     * @return bool True if method matches\n     */\n    public static function isMethod($method)\n    {\n        return strtoupper(self::getRequestMethod()) === strtoupper($method);\n    }\n    \n    /**\n     * Get request headers\n     * \n     * @return array The request headers\n     */\n    public static function getHeaders()\n    {\n        return getallheaders();\n    }\n    \n    /**\n     * Get specific header value\n     * \n     * @param string $name Header name\n     * @param string $default Default value if header not found\n     * @return string The header value or default\n     */\n    public static function getHeader($name, $default = null)\n    {\n        $headers = self::getHeaders();\n        return ArrayHelper::get($headers, $name, $default);\n    }\n    \n    /**\n     * Get POST data\n     * \n     * @return array The POST data\n     */\n    public static function getPostData()\n    {\n        return $_POST;\n    }\n    \n    /**\n     * Get GET parameters\n     * \n     * @return array The GET parameters\n     */\n    public static function getQueryParams()\n    {\n        return $_GET;\n    }\n    \n    /**\n     * Get specific POST value\n     * \n     * @param string $key The key to retrieve\n     * @param mixed $default Default value if key not found\n     * @return mixed The POST value or default\n     */\n    public static function getPost($key, $default = null)\n    {\n        return ArrayHelper::get($_POST, $key, $default);\n    }\n    \n    /**\n     * Get specific GET parameter\n     * \n     * @param string $key The key to retrieve\n     * @param mixed $default Default value if key not found\n     * @return mixed The GET parameter or default\n     */\n    public static function getQuery($key, $default = null)\n    {\n        return ArrayHelper::get($_GET, $key, $default);\n    }\n    \n    /**\n     * Check if request is AJAX\n     * \n     * @return bool True if request is AJAX\n     */\n    public static function isAjax()\n    {\n        return Yii::app()->request->isAjaxRequest;\n    }\n    \n    /**\n     * Get client IP address\n     * \n     * @return string The client IP address\n     */\n    public static function getClientIp()\n    {\n        return Yii::app()->request->userHostAddress;\n    }\n    \n    /**\n     * Get user agent\n     * \n     * @return string The user agent string\n     */\n    public static function getUserAgent()\n    {\n        return Yii::app()->request->userAgent;\n    }\n} \n\n--- File: 151 # models/MappingTipeTransaksi.php ---\n<?php\n\n/**\n * This is the model class for table \"{{mapping_tipe_transaksi}}\".\n *\n * The followings are the available columns in table '{{mapping_tipe_transaksi}}':\n * @property integer $id\n * @property string $tipe_transaksi\n * @property string $jenis_transaksi\n */\nclass MappingTipeTransaksi extends CActiveRecord\n{\n\t/**\n\t * Returns the static model of the specified AR class.\n\t * @param string $className active record class name.\n\t * @return MappingTipeTransaksi the static model class\n\t */\n\tpublic static function model($className=__CLASS__)\n\t{\n\t\treturn parent::model($className);\n\t}\n\n\t/**\n\t * @return CDbConnection database connection\n\t */\n\tpublic function getDbConnection()\n\t{\n\t\treturn Yii::app()->dbBadanHukum;\n\t}\n\n\t/**\n\t * @return string the associated database table name\n\t */\n\tpublic function tableName()\n\t{\n\t\treturn '{{mapping_tipe_transaksi}}';\n\t}\n\n\t/**\n\t * @return array validation rules for model attributes.\n\t */\n\tpublic function rules()\n\t{\n\t\t// NOTE: you should only define rules for those attributes that\n\t\t// will receive user inputs.\n\t\treturn array(\n\t\t\tarray('tipe_transaksi, jenis_transaksi', 'length', 'max'=>250),\n\t\t\t// The following rule is used by search().\n\t\t\t// Please remove those attributes that should not be searched.\n\t\t\tarray('id, tipe_transaksi, jenis_transaksi', 'safe', 'on'=>'search'),\n\t\t);\n\t}\n\n\t/**\n\t * @return array relational rules.\n\t */\n\tpublic function relations()\n\t{\n\t\t// NOTE: you may need to adjust the relation name and the related\n\t\t// class name for the relations automatically generated below.\n\t\treturn array(\n\t\t);\n\t}\n\n\t/**\n\t * @return array customized attribute labels (name=>label)\n\t */\n\tpublic function attributeLabels()\n\t{\n\t\treturn array(\n\t\t\t'id' => 'ID',\n\t\t\t'tipe_transaksi' => 'Tipe Transaksi',\n\t\t\t'jenis_transaksi' => 'Jenis Transaksi',\n\t\t);\n\t}\n\n\t/**\n\t * Retrieves a list of models based on the current search/filter conditions.\n\t * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n\t */\n\tpublic function search()\n\t{\n\t\t// Warning: Please modify the following code to remove attributes that\n\t\t// should not be searched.\n\n\t\t$criteria=new CDbCriteria;\n\n\t\t$criteria->compare('id',$this->id);\n\t\t$criteria->compare('tipe_transaksi',$this->tipe_transaksi,true);\n\t\t$criteria->compare('jenis_transaksi',$this->jenis_transaksi,true);\n\n\t\treturn new CActiveDataProvider($this, array(\n\t\t\t'criteria'=>$criteria,\n\t\t));\n\t}\n\tpublic function getByTipeTransaksi($tipeTransaksi='', $raw = false)\n\t{\n\t\tif (!empty($tipeTransaksi)) {\n\t\t\t$criteria = new CDbCriteria;\n\t\t\t$criteria->select = 'jenis_transaksi';\n\t\t\t$criteria->condition = 'tipe_transaksi = :tipe';\n\t\t\t$criteria->params = array(':tipe' => $tipeTransaksi);\n\t\t\t$data = self::model()->findAll($criteria);\n\t\t\tif (empty($raw)) {\n\t\t\t\tif (!empty($data) && is_array($data)) {\n\t\t\t\t\t$data = $this->getArrFromModel($data, 'jenis_transaksi');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $data;\n\t\t}\n\t}\n\tpublic function getByJenisTransaksi($data='', $filed='', $raw = false)\n\t{\n\t\tif (!empty($data) && !empty($filed) && is_array($filed)) {\n\t\t\tif (!empty($data) && is_array($data)) {\n\t\t\t\t$data = array_map('trim', $data);\n\t\t    \t$data = array_map('strtolower', $data);\n\t\t\t\t$data = implode(\"','\", $data);\n\t\t\t\t$data = \"'\".$data.\"'\";\n\t\t\t}\n\t\t\t$criteria = new CDbCriteria;\n\t\t\t$criteria->condition = 'jenis_transaksi in ('.$data.')';\n\t\t\t$criteria->order = 'id ASC';\n\t\t\t$data = self::model()->findAll($criteria);\n\t\t\tif (empty($raw)) {\n\t\t\t\tif (!empty($data) && is_array($data) && !empty($filed)) {\n\t\t\t\t\t$data = $this->getArrFromModel($data, $filed);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn $data;\n\t\t}\n\t}\n\tpublic function getArrFromModel($model='', $filed='')\n\t{\n\t\tif (!empty($model) && is_array($model) && !empty($filed) && is_array($filed)) {\n\t\t\t$result = array();\n\t\t\tforeach ($filed as $k_filed => $v_filed) {\n\t\t\t\t$retArr = array();\n\t\t\t\tforeach ($model as $k_model => $v_model) {\n\t\t\t\t\tif (!empty($v_model[$v_filed])) {\n\t\t\t\t\t\t$retArr[] = $v_model[$v_filed];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!empty($retArr)) {\n\t\t\t\t\t$result[$v_filed] = $retArr;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $result;\n\t\t}\n\t}\n}\n\n--- File: 356 # components/NoSKSABH.php ---\n<?php\n\nclass NoSKSABH{    \n    /*\n     *  AHU-00001.40.10.2014\n\n        AHU-qqqqq.AH.xx.yy.Tahun 2015 \n\n        \tqqqqq => no urut\n\n        \txx = 01 (badan hukum)\n\n        \tyy = 01 PT pengesahan\n        \t\t 02 PT persetujuan perubahan anggaran dasar\n        \t\t 03 PT pemberitahuan anggaran dasar / perubahan data perseroan\n                 10 PT penyesuaian/pembubaran/merger/likuidasi\n\n        \t\t 04 YYS pengesahan\n        \t\t 05 YYS perubahan\n        \t\t 06 YYS pembubaran\n\n        \t\t 07 KMPL pengesahan\n        \t\t 08 KMPL perubahan\n        \t\t 08 KMPL pembubaran\n                \n     */\n\n    static public function get($produkAsli, $tipe_perubahanAsli, $year = null, $urutno = null, $nocheck = false){\n        if(empty($year))\n            $year = date('Y');\n\n        if(intval($year) >= 2015)\n            list($produk, $tipe_perubahan, $fmt) = self::get_mapping($produkAsli, $tipe_perubahanAsli);\n        else{\n            $produk = $produkAsli;\n            $tipe_perubahan = $tipe_perubahanAsli;\n            $fmt = 'AHU-{nnnnnnn}.{pp}.{tt}.{yyyy}';\n        }\n\n        if(empty($fmt)){\n            $fmt = Yii::app()->dbBadanHukum->createCommand()->select('format')->from('{{mapping_transaksi}}')->where('id_produk = 0 and tipe_transaksi = 0')->queryScalar();\n\n            if(empty($fmt))\n                throw new CException(\"Tidak dapat menemukan format default nomor SK/SP di DB\");\n        }\n\n        if(empty($urutno)){\n            $DB = Yii::app()->db;\n            $transDB = $DB->beginTransaction();\n            $DB->createCommand(\"INSERT into MS_NOMOR(`bln`,`th`,`produk`,`tipe_transaksi`,`value`) values(0, '{$year}', '{$produk}', '{$tipe_perubahan}', 1) on duplicate key update value=value+1\")->execute();\n            $nourut = $DB->createCommand(\"SELECT value from MS_NOMOR where bln=0 AND th='{$year}' AND produk='{$produk}' AND tipe_transaksi='{$tipe_perubahan}'\")->queryScalar();\n            $transDB->commit();\n        }\n        else\n            $nourut = $urutno;\n\n        $gen = preg_replace_callback('/\\{(?<group>(?<letter>[a-z])\\2*)\\}/i', function($m) use($nourut, $produk, $tipe_perubahan, $year){\n            switch(strtolower($m['letter'])){\n                case 'n': $c = \"$nourut\"; break;\n                case 'p': $c = \"$produk\"; break;\n                case 't': $c = \"$tipe_perubahan\"; break;\n                case 'y': $c = \"$year\"; break;\n                default: $c = '';\n            }\n            $len = strlen($c);\n            $expected = strlen($m['group']);\n\n            if($len < $expected)\n                return str_pad($c, $expected, '0', STR_PAD_LEFT);\n            // elseif($len > $expected)\n            //     return substr($c, -$expected);\n            return $c;\n\n        }, $fmt);\n\n        if($nocheck or self::check($gen, $produkAsli) < 1)\n            return $gen;\n        return self::get($produkAsli, $tipe_perubahanAsli, $year);\n    }\n\n    static public function check($nomor_sp_dp, $produk){\n        if($nomor_sp_dp && $produk){\n            $tbl = $produk == '40' ? 'Perseroan' : 'BadanHukum';\n\n            $arr = array(\n                'nomor_sk' => $nomor_sp_dp,\n                'nomor_sp_ad' => $nomor_sp_dp,\n                'nomor_sp_dp' => $nomor_sp_dp,\n                'nomor_sp_mg' => $nomor_sp_dp,\n            );\n\n            $model = new $tbl('search');\n            $model->unsetAttributes();\n            $model->attributes = $arr;\n\n            foreach($model->attributes as $attr => $val){\n                if(empty($val))\n                    continue;\n                $model->dbCriteria->compare($attr, $val, false, 'or');\n            }\n            // var_dump($model->count()); exit;\n            return intval($model->count());\n        }\n        return false;\n    }\n\n    static public function get_mapping($produk, $tipe_perubahan){\n        if($q = Yii::app()->dbBadanHukum->createCommand()->select('id_produk_map, tipe_transaksi_map, format')->from('{{mapping_transaksi}}')->where('id_produk = :id and tipe_transaksi = :tr', array(':id' => $produk, ':tr' => $tipe_perubahan))->queryRow())\n            return array_values($q);\n\n        throw new CException(\"Tidak ditemukan kode mapping yang sesuai untuk ID Produk $produk dan/atau tipe transaksi $tipe_perubahan\");\n    }\n\n    static public function getSP($kode, $nourut, $produk, $year){                \n        throw new CException('This function has been removed. User NoSKSABH::get() instead.');\n    }\n\n}\n\n\n--- File: 1148 # dto/CreatePermohonanBerakhirnyaStatusBadanHukumDto.php ---\n<?php\n\nclass CreatePermohonanBerakhirnyaStatusBadanHukumDto\n{\n    public $nomorVoucher;\n    public $nomorAktaPembubaran;\n    public $tanggalAktaPembubaran;\n    public $urlAktaPembubaran;\n    public $tanggalRapat;\n    public $tanggalCetakPengumumanSuratKabar;\n    public $nomorPengumumanSuratKabar;\n    public $notarisPengganti;\n    public $jumlahKehadiranRapatAnggota;\n    public $tanggalCetakPengumumanSuratKabarHasilLikuidasi;\n    public $nomorPengumumanSuratKabarHasilLikuidasi;\n    public $sisaKekayaanSaatIni;\n\n    public static function fromArray($data)\n    {\n        $dto = new self();  \n        $dto->nomorVoucher = isset($data['nomor_voucher']) ? $data['nomor_voucher'] : null;\n        $dto->nomorAktaPembubaran = isset($data['nomor_akta_pembubaran']) ? $data['nomor_akta_pembubaran'] : null;\n        $dto->tanggalAktaPembubaran = isset($data['tanggal_akta_pembubaran']) ? $data['tanggal_akta_pembubaran'] : null;\n        $dto->urlAktaPembubaran = isset($data['url_akta_pembubaran']) ? $data['url_akta_pembubaran'] : null;\n        $dto->tanggalRapat = isset($data['tanggal_rapat']) ? $data['tanggal_rapat'] : null;\n        $dto->tanggalCetakPengumumanSuratKabar = isset($data['tanggal_cetak_pengumuman_surat_kabar']) ? $data['tanggal_cetak_pengumuman_surat_kabar'] : null;\n        $dto->nomorPengumumanSuratKabar = isset($data['nomor_pengumuman_surat_kabar']) ? $data['nomor_pengumuman_surat_kabar'] : array();\n        $dto->notarisPengganti = isset($data['notaris_pengganti']) ? (bool)$data['notaris_pengganti'] : false;\n        $dto->jumlahKehadiranRapatAnggota = isset($data['jumlah_kehadiran_rapat_anggota']) ? $data['jumlah_kehadiran_rapat_anggota'] : 0;\n        $dto->tanggalCetakPengumumanSuratKabarHasilLikuidasi = isset($data['tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi']) ? $data['tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi'] : null;\n        $dto->nomorPengumumanSuratKabarHasilLikuidasi = isset($data['nomor_pengumuman_surat_kabar_hasil_likuidasi']) ? $data['nomor_pengumuman_surat_kabar_hasil_likuidasi'] : array();\n        $dto->sisaKekayaanSaatIni = isset($data['sisa_kekayaan_saat_ini']) ? $data['sisa_kekayaan_saat_ini'] : null;\n        \n        return $dto;\n    }\n\n    public function isValid()\n    {\n        // Validate required fields\n        if (empty($this->nomorVoucher)) {\n            throw new Exception(\"'nomor_voucher' wajib diisi\");\n        }\n\n        if (empty($this->nomorAktaPembubaran)) {\n            throw new Exception(\"'nomor_akta_pembubaran' wajib diisi\");\n        }\n\n        if (empty($this->nomorPengumumanSuratKabar)) {\n            throw new Exception(\"'nomor_pengumuman_surat_kabar' wajib diisi\");\n        }\n\n        if (empty($this->nomorPengumumanSuratKabarHasilLikuidasi)) {\n            throw new Exception(\"'nomor_pengumuman_surat_kabar_hasil_likuidasi' wajib diisi\");\n        }\n\n        // Validate date formats\n        if (!empty($this->tanggalAktaPembubaran) && !strtotime($this->tanggalAktaPembubaran)) {\n            throw new Exception(\"'tanggal_akta_pembubaran' format tidak valid\");\n        }\n\n        if (!empty($this->tanggalRapat) && !strtotime($this->tanggalRapat)) {\n            throw new Exception(\"'tanggal_rapat' format tidak valid\");\n        }\n\n        if (!empty($this->tanggalCetakPengumumanSuratKabar) && !strtotime($this->tanggalCetakPengumumanSuratKabar)) {\n            throw new Exception(\"'tanggal_cetak_pengumuman_surat_kabar' format tidak valid\");\n        }\n\n        if (!empty($this->tanggalCetakPengumumanSuratKabarHasilLikuidasi) && !strtotime($this->tanggalCetakPengumumanSuratKabarHasilLikuidasi)) {\n            throw new Exception(\"'tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi' format tidak valid\");\n        }\n\n        // Validate arrays\n        if (!is_array($this->nomorPengumumanSuratKabar)) {\n            throw new Exception(\"'nomor_pengumuman_surat_kabar' harus berupa array\");\n        }\n\n        if (!is_array($this->nomorPengumumanSuratKabarHasilLikuidasi)) {\n            throw new Exception(\"'nomor_pengumuman_surat_kabar_hasil_likuidasi' harus berupa array\");\n        }\n\n        return true;\n    }\n}\n\n\n--- File: 370 # components/widgets/DclModal.php ---\n<?php\n/**\n * Widget to create html modal\n *\n * @since 2017-04-08\n */\nclass DclModal extends CWidget\n{\n    /**\n     * @var string\n     */\n    public $classModal = 'modal';\n\n    /**\n     * @var string\n     */\n    public $idModal = 'modal';\n\n    /**\n     * modal allow to close\n     * @var boolean\n     */\n    public $allowClose = true;\n\n    /**\n     * show icon close in corner modal\n     * @var boolean\n     */\n    public $iconClose = true;\n\n    /**\n     * @var string\n     */\n    public $title;\n\n    /**\n     * @var string tag\n     */\n    public $tagContentBody = 'p';\n\n    /**\n     * @var string content\n     */\n    public $content;\n\n    /**\n     * @var string\n     */\n    public $closeText = 'Close';\n\n    /**\n     * @var array\n     */\n    public $buttons = array();\n\n    /**\n     * @var string\n     */\n    public $classButton;\n\n    /**\n     * @var string\n     */\n    public $classButtonClose;\n\n    /**\n     * @var string\n     */\n    public $classContentBody = 'text-center';\n\n    /**\n     * @var boolean\n     */\n    public $showHeader = true;\n\n    /**\n     * @var boolean\n     */\n    public $showFooter = true;\n\n    /**\n     * @var string\n     */\n    public $modalColor = 'modal-yellow';\n\n    /**\n     * @var string\n     */\n    public $classHeader = '';\n\n    /**\n     * @var string\n     */\n    public $classFooter = '';\n\n    /**\n     * @var string\n     */\n    public $size = '';\n\n    /**\n     * @var string script js\n     */\n    public $scripts;\n\n    /**\n     * @inheritdoc\n     */\n    public function init()\n    {\n        parent::init();\n        if ($this->classModal === 'modal') {\n            $this->classModal = 'modal fade';\n            $this->classButton = empty($this->classButton) ? 'btn btn-primary' : $this->classButton;\n            $this->classButtonClose = 'btn btn-danger';\n        }\n        echo CHtml::openTag('div', array('class'=>$this->classModal, 'id'=>$this->idModal, 'tabindex'=>'-1', 'role'=>'dialog', 'aria-hidden'=>'true', 'data-backdrop'=>'static', 'data-keyboard'=>'false')\n        );\n        echo CHtml::openTag('div', array('class'=>'modal-dialog '.$this->size));\n        echo CHtml::openTag('div', array('class'=>'modal-content '.$this->modalColor));\n        if ($this->showHeader) {\n            echo $this->renderHeader();\n        }\n        echo CHtml::openTag('div', array('class'=>'modal-body'));\n        if ($this->content !== null) {\n            echo CHtml::tag($this->tagContentBody, array('class'=>$this->classContentBody, 'encode'=>false), $this->content);\n        }\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public function run()\n    {\n        echo CHtml::closeTag('div');\n        if ($this->showFooter) {\n            echo $this->renderFooter();\n        }\n        echo CHtml::closeTag('div');\n        echo CHtml::closeTag('div');\n        echo CHtml::closeTag('div');\n        $this->registerClientScript();\n    }\n\n    /**\n     * @return string modal header\n     */\n    public function renderHeader()\n    {\n        $header = '';\n        $header .= CHtml::openTag('div', array('class' => 'modal-header '.$this->classHeader));\n        if ($this->allowClose && $this->iconClose) {\n            $iconCloseSpan = '&times;';\n            $header .= CHtml::tag(\n                'button',\n                array('type' => 'button', 'class' => 'close', 'data-dismiss' => 'modal', 'aria-hidden' => 'true'),\n                $iconCloseSpan\n            );\n        }\n        if ($this->title !== null) {\n            $header .= CHtml::tag('h4',\n                array('class' => 'modal-title text-center'),\n                $this->title\n            );\n        }\n        $header .= CHtml::closeTag('div');\n        return $header;\n    }\n\n    /**\n     * @return string modal footer\n     */\n    public function renderFooter()\n    {\n        $footer = '';\n        $footer .= CHtml::openTag('div', array('class' => 'modal-footer text-center '.$this->classFooter));\n        if ($this->allowClose) {\n            $footer .= CHtml::button($this->closeText, array('type' => 'button', 'class' => \"$this->classButtonClose\", 'data-dismiss' => 'modal'));\n        }\n        foreach ($this->buttons as $key => $button) {\n            if (is_string($button)) {\n                $footer .= $button;\n            } else {\n                $tag = isset($button['tag']) ? $button['tag'] : 'button';\n                $options = ['type' => 'button', 'class' => \"$this->classButton\"];\n                $options = array_merge($options, isset($button['options']) ? $button['options'] : []);\n                $footer .= CHtml::tag($tag, $options, $button['title']);\n            }\n        }\n        $footer .= CHtml::closeTag('div');\n        return $footer;\n    }\n\n    /**\n     * Registers the needed CSS and JavaScript.\n     */\n    public function registerClientScript()\n    {\n        if (!empty($this->scripts)) {\n            $cs=Yii::app()->getClientScript();\n            $cs->registerScript(\"modal{$this->idModal}\", $this->scripts);\n        }\n    }\n}\n\n\n--- File: 521 # views/blokirPerkumpulan/detail/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('../_common/_ckeditorAddon') ?>\n<?php $this->renderPartial('./_common/_constants') ?>\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\" id=\"data-pratinjau\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <template x-if=\"stage === 1\">\n            <section class=\"panel\">\n                <header class=\"panel-heading text-center\">\n                    <h3>DETAIL PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES PERKUMPULAN</h3>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_permohonanData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_pemohonData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_dokumenPersyaratan'); ?>\n                    </div>\n\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_riwayatVerifikasi'); ?>\n                    </div>\n\n                    <template x-if=\"canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_verifikasi'); ?>\n                        </div>\n                    </template>\n                    <template x-if=\"!canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_konsepSuratJawaban'); ?>\n                        </div>\n                    </template>\n\n\n                </div>\n            </section>\n        </template>\n\n        <template x-if=\"stage === 2\">\n            <div class=\"container py-4\">\n                <?php $this->renderPartial('./detail/_suratJawaban'); ?>\n            </div>\n        </template>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            currentUser: <?php echo json_encode($user); ?>,\n            currentDomain: DOMAINS.PERKUMPULAN,\n\n\n            viewData: {\n                permohonanId: null,\n                nomorPermohonan: null,\n                jenisLayanan: null,\n                kodeVoucher: null,\n                perkumpulanId: null,\n                namaPerkumpulan: null,\n                alasanPermohonan: null,\n                jenisAkunPemohon: null,\n                statusPemohon: null,\n                diajukanKuasa: null,\n                pemohonData: {},\n                jabatan: null,\n                organData: null,\n                nomorSuratPermohonan: null,\n                tanggalSuratPermohonan: null,\n                nomorAktaPerkumpulan: null,\n                tanggalAktaPerkumpulan: null,\n                nomorAktaKuasa: null,\n                tanggalAktaKuasa: null,\n                namaNotaris: null,\n                statusPermohonan: null,\n                suratJawaban: null,\n                dokumenPermohonan: [],\n                riwayatVerifikasi: [],\n                riwayatSuratJawaban: [],\n                verifikator: {},\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                alasan: null,\n            },\n\n            /**\n             * Initializes the component by fetching data from backend\n             */\n            async init() {\n                this.$loading.startLoading('pratinjau');\n\n                const permohonanId = <?php echo json_encode($id); ?>;\n\n                if (!permohonanId) {\n                    this.$loading.stopLoading('pratinjau');\n                    return;\n                }\n\n                await this.fetchPermohonanDetail(permohonanId);\n\n                this.$loading.stopLoading('pratinjau');\n            },\n\n            /**\n             * Fetches permohonan detail data from the server\n             * @param {string} permohonanId - The permohonan ID\n             * @returns {Promise<void>}\n             */\n            async fetchPermohonanDetail(permohonanId) {\n                const url = new URL(`/sabh/api/pemblokiran/perkumpulan/permohonan/${permohonanId}`, window.location.origin);\n\n                const [res, err] = await safeFetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error fetching permohonan detail:', err);\n                    return;\n                }\n\n                this.viewData = { ...this.viewData, ...res.data };\n            },\n\n            submitVerifikasi(hasil, alasan) {\n                this.formData.hasilVerifikasi = hasil;\n                this.formData.alasan = alasan;\n                this.nextStage();\n            },\n\n            nextStage() {\n                this.stage++;\n            },\n\n            prevStage() {\n                this.stage--;\n            },\n\n            canVerify() {\n                switch (this.viewData.statusPermohonan) {\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturJenderalId;\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturBadanUsahaId;\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_DIREKTUR_BU:\n                        return this.currentUser.user_id === this.viewData.verifikator.verifikatorId;\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_VERIFIKATOR:\n                        return this.currentUser.user_id === this.viewData.verifikator.konseptorId;\n                    default:\n                        return false;\n                }\n            }\n        }\n    }\n</script>\n\n--- File: 921 # views/blokirPerseroan/detail/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('./_common/_constants') ?>\n<?php $this->renderPartial('../_common/_ckeditorAddon') ?>\n\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\" id=\"data-pratinjau\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <template x-if=\"stage === 1\">\n            <section class=\"panel\">\n                <header class=\"panel-heading text-center\">\n                    <h3>DAFTAR PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES PT</h3>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_permohonanData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_pemohonData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_dokumenPersyaratan'); ?>\n                    </div>\n\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_riwayatVerifikasi'); ?>\n                    </div>\n\n                    <template x-if=\"canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_verifikasi'); ?>\n                        </div>\n                    </template>\n                    <template x-if=\"!canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_konsepSuratJawaban'); ?>\n                        </div>\n                    </template>\n\n\n                </div>\n            </section>\n        </template>\n\n        <template x-if=\"stage === 2\">\n            <div class=\"container py-4\">\n                <?php $this->renderPartial('./detail/_suratJawaban'); ?>\n            </div>\n        </template>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            currentUser: <?php echo json_encode($user); ?>,\n            currentDomain: DOMAINS.PERSEROAN_TERBATAS,\n\n\n            viewData: {\n                permohonanId: null,\n                nomorPermohonan: null,\n                jenisLayanan: null,\n                kategoriPermohonan: null,\n                kodeVoucher: null,\n                perseroanTerbatasId: null,\n                namaPerseroanTerbatas: null,\n                alasanPermohonan: null,\n                jenisAkunPemohon: null,\n                statusPemohon: null,\n                diajukanKuasa: false,\n                jenisPemegangSaham: null,\n                jenisBadanHukumPermohonan: null,\n                subjekPermohonan: null,\n                pemohonData: {},\n                pemegangSahamData: {},\n                daftarNomor: {},\n                nomorSuratPermohonan: null,\n                tanggalSuratPermohonan: null,\n                nomorAktaKuasa: null,\n                tanggalAktaKuasa: null,\n                namaNotaris: null,\n                statusPermohonan: null,\n                dokumenPermohonan: {},\n                riwayatVerifikasi: null,\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                alasan: null,\n            },\n\n            signatureData: <?php echo json_encode($signatureData); ?>,\n            /**\n             * Initializes the component by fetching data from backend\n             */\n            async init() {\n                this.$loading.startLoading('pratinjau');\n\n                const permohonanId = <?php echo json_encode($id); ?>;\n\n                if (!permohonanId) {\n                    this.$loading.stopLoading('pratinjau');\n                    return;\n                }\n\n                await this.fetchPermohonanDetail(permohonanId);\n\n                this.$loading.stopLoading('pratinjau');\n            },\n\n            /**\n             * Fetches permohonan detail data from the server\n             * @param {string} permohonanId - The permohonan ID\n             * @returns {Promise<void>}\n             */\n            async fetchPermohonanDetail(permohonanId) {\n                const url = new URL(`/sabh/api/pemblokiran/pt/permohonan/${permohonanId}`, window.location.origin);\n\n                const [res, err] = await safeFetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error fetching permohonan detail:', err);\n                    return;\n                }\n\n                this.viewData = { ...this.viewData, ...res.data };\n            },\n\n            submitVerifikasi(hasil, alasan) {\n                this.formData.hasilVerifikasi = hasil;\n                this.formData.alasan = alasan;\n                this.nextStage();\n            },\n\n            nextStage() {\n                this.stage++;\n            },\n\n            prevStage() {\n                this.stage--;\n            },\n\n            canVerify() {\n                switch (this.viewData.statusPermohonan) {\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturJenderalId;\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturBadanUsahaId;\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_DIREKTUR_BU:\n                        return this.currentUser.user_id === this.viewData.verifikator.verifikatorId;\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_VERIFIKATOR:\n                        return this.currentUser.user_id === this.viewData.verifikator.konseptorId;\n                    default:\n                        return false;\n                }\n            }\n        }\n    }\n</script>\n\n\n--- File: 968 # views/blokirYayasan/detail/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('../_common/_ckeditorAddon') ?>\n<?php $this->renderPartial('./_common/_constants') ?>\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\" id=\"data-pratinjau\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <template x-if=\"stage === 1\">\n            <section class=\"panel\">\n                <header class=\"panel-heading text-center\">\n                    <h3>DETAIL PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES YAYASAN</h3>\n                </header>\n                <div class=\"panel-body\">\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_permohonanData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_pemohonData'); ?>\n                    </div>\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_dokumenPersyaratan'); ?>\n                    </div>\n\n                    <div class=\"container py-4\">\n                        <?php $this->renderPartial('./detail/_riwayatVerifikasi'); ?>\n                    </div>\n\n                    <template x-if=\"canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_verifikasi'); ?>\n                        </div>\n                    </template>\n                    <template x-if=\"!canVerify()\">\n                        <div class=\"container py-4\">\n                            <?php $this->renderPartial('./detail/_konsepSuratJawaban'); ?>\n                        </div>\n                    </template>\n\n\n                </div>\n            </section>\n        </template>\n\n        <template x-if=\"stage === 2\">\n            <div class=\"container py-4\">\n                <?php $this->renderPartial('./detail/_suratJawaban'); ?>\n            </div>\n        </template>\n    </div>\n</div>\n\n<script type=\"text/javascript\">\n    function dataPratinjau() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            currentUser: <?php echo json_encode($user); ?>,\n            currentDomain: DOMAINS.PERKUMPULAN,\n\n\n            viewData: {\n                permohonanId: null,\n                nomorPermohonan: null,\n                jenisLayanan: null,\n                kodeVoucher: null,\n                yayasanId: null,\n                namaYayasan: null,\n                alasanPermohonan: null,\n                jenisAkunPemohon: null,\n                statusPemohon: null,\n                diajukanKuasa: null,\n                pemohonData: {},\n                totalPembinaAktif: null,\n                pembinaData: [],\n                jabatan: null,\n                organData: null,\n                daftarNomor: {},\n                nomorSuratPermohonan: null,\n                tanggalSuratPermohonan: null,\n                nomorAktaKuasa: null,\n                tanggalAktaKuasa: null,\n                namaNotaris: null,\n                statusPermohonan: null,\n                suratJawaban: null,\n                dokumenPermohonan: [],\n                riwayatVerifikasi: [],\n                riwayatSuratJawaban: [],\n                verifikator: {\n                    konseptorId: null,\n                    verifikatorId: null,\n                    direkturBadanUsahaId: null,\n                    direkturJenderalId: null\n                },\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                alasan: null,\n            },\n\n            /**\n             * Initializes the component by fetching data from backend\n             */\n            async init() {\n                this.$loading.startLoading('pratinjau');\n\n                const permohonanId = <?php echo json_encode($id); ?>;\n\n                if (!permohonanId) {\n                    console.error('Permohonan ID not provided');\n                    this.$loading.stopLoading('pratinjau');\n                    return;\n                }\n\n                await this.fetchPermohonanDetail(permohonanId);\n\n                this.$loading.stopLoading('pratinjau');\n            },\n\n            /**\n             * Fetches permohonan detail data from the server\n             * @param {string} permohonanId - The permohonan ID\n             * @returns {Promise<void>}\n             */\n            async fetchPermohonanDetail(permohonanId) {\n                const url = new URL(`/sabh/api/pemblokiran/yayasan/permohonan/${permohonanId}`, window.location.origin);\n\n                const [res, err] = await safeFetch(url, {\n                    method: 'GET',\n                    credentials: 'include',\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error fetching permohonan detail:', err);\n                    return;\n                }\n\n                this.viewData = { ...this.viewData, ...res.data };\n            },\n\n            submitVerifikasi(hasil, alasan) {\n                this.formData.hasilVerifikasi = hasil;\n                this.formData.alasan = alasan;\n                this.nextStage();\n            },\n\n            nextStage() {\n                this.stage++;\n            },\n\n            prevStage() {\n                this.stage--;\n            },\n\n            canVerify() {\n                switch (this.viewData.statusPermohonan) {\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturJenderalId;\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_JENDERAL:\n                        return this.currentUser.user_id === this.viewData.verifikator.direkturBadanUsahaId;\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_DIREKTUR_BU:\n                        return this.currentUser.user_id === this.viewData.verifikator.verifikatorId;\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_VERIFIKATOR:\n                        return this.currentUser.user_id === this.viewData.verifikator.konseptorId;\n                    default:\n                        return false;\n                }\n            }\n        }\n    }\n</script>\n\n--- File: 63 # models/PermohonanBerakhirnyaStatusBadanHukum.php ---\n<?php\n\nclass PermohonanBerakhirnyaStatusBadanHukum extends CActiveRecord\n{\n    public static function model($className = __CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    public function tableName()\n    {\n        return 'tbl_permohonan_berakhirnya_status_badan_hukum';\n    }\n\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    public function rules()\n    {\n        return array(\n            array('nomor_akta_pembubaran, tanggal_akta_pembubaran, tanggal_rapat, nomor_voucher', 'required'),\n            array('nomor_voucher', 'length', 'max' => 255),\n            array('notaris_pengganti', 'numerical', 'integerOnly' => true),\n            array('notaris_pengganti', 'in', 'range' => array(0, 1)),\n            array('nomor_akta_pembubaran', 'length', 'max' => 100),\n            array('url_akta_pembubaran', 'length', 'max' => 255),\n            array('sisa_kekayaan_saat_ini', 'length', 'max' => 255),\n            array('tanggal_akta_pembubaran, tanggal_rapat, tanggal_cetak_pengumuman_surat_kabar, tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi', 'date', 'format' => 'yyyy-MM-dd'),\n            array('nomor_pengumuman_surat_kabar, nomor_pengumuman_surat_kabar_hasil_likuidasi', 'safe'),\n            array('id, nomor_akta_pembubaran, tanggal_akta_pembubaran, url_akta_pembubaran, tanggal_rapat, tanggal_cetak_pengumuman_surat_kabar, nomor_pengumuman_surat_kabar, notaris_pengganti, jumlah_kehadiran_rapat_anggota, tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi, nomor_pengumuman_surat_kabar_hasil_likuidasi, sisa_kekayaan_saat_ini, created, updated', 'safe', 'on' => 'search'),\n        );\n    }\n\n    public function attributeLabels()\n    {\n        return array(\n            'id' => 'ID',\n            'nomor_akta_pembubaran' => 'Nomor Akta Pembubaran',\n            'tanggal_akta_pembubaran' => 'Tanggal Akta Pembubaran',\n            'url_akta_pembubaran' => 'URL Akta Pembubaran',\n            'tanggal_rapat' => 'Tanggal Rapat',\n            'tanggal_cetak_pengumuman_surat_kabar' => 'Tanggal Cetak Pengumuman Surat Kabar',\n            'nomor_pengumuman_surat_kabar' => 'Nomor Pengumuman Surat Kabar',\n            'notaris_pengganti' => 'Notaris Pengganti',\n            'jumlah_kehadiran_rapat_anggota' => 'Jumlah Kehadiran Rapat Anggota',\n            'tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi' => 'Tanggal Cetak Pengumuman Surat Kabar Hasil Likuidasi',\n            'nomor_pengumuman_surat_kabar_hasil_likuidasi' => 'Nomor Pengumuman Surat Kabar Hasil Likuidasi',\n            'sisa_kekayaan_saat_ini' => 'Sisa Kekayaan Saat Ini',\n            'created' => 'Created',\n            'updated' => 'Updated',\n        );\n    }\n\n    public function beforeSave()\n    {\n        if (parent::beforeSave()) {\n            // Convert arrays to JSON before saving\n            if (is_array($this->nomor_pengumuman_surat_kabar)) {\n                $this->nomor_pengumuman_surat_kabar = json_encode($this->nomor_pengumuman_surat_kabar);\n            }\n            if (is_array($this->nomor_pengumuman_surat_kabar_hasil_likuidasi)) {\n                $this->nomor_pengumuman_surat_kabar_hasil_likuidasi = json_encode($this->nomor_pengumuman_surat_kabar_hasil_likuidasi);\n            }\n            return true;\n        }\n        return false;\n    }\n\n    public function afterFind()\n    {\n        parent::afterFind();\n        \n        // Convert JSON back to arrays after finding\n        if (!empty($this->nomor_pengumuman_surat_kabar)) {\n            $this->nomor_pengumuman_surat_kabar = json_decode($this->nomor_pengumuman_surat_kabar, true);\n        }\n        if (!empty($this->nomor_pengumuman_surat_kabar_hasil_likuidasi)) {\n            $this->nomor_pengumuman_surat_kabar_hasil_likuidasi = json_decode($this->nomor_pengumuman_surat_kabar_hasil_likuidasi, true);\n        }\n    }\n\n    public function search()\n    {\n        $criteria = new CDbCriteria;\n        $criteria->compare('id', $this->id);\n        $criteria->compare('nomor_akta_pembubaran', $this->nomor_akta_pembubaran, true);\n        $criteria->compare('tanggal_akta_pembubaran', $this->tanggal_akta_pembubaran, true);\n        $criteria->compare('url_akta_pembubaran', $this->url_akta_pembubaran, true);\n        $criteria->compare('tanggal_rapat', $this->tanggal_rapat, true);\n        $criteria->compare('tanggal_cetak_pengumuman_surat_kabar', $this->tanggal_cetak_pengumuman_surat_kabar, true);\n        $criteria->compare('notaris_pengganti', $this->notaris_pengganti);\n        $criteria->compare('tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi', $this->tanggal_cetak_pengumuman_surat_kabar_hasil_likuidasi, true);\n        $criteria->compare('sisa_kekayaan_saat_ini', $this->sisa_kekayaan_saat_ini, true);\n        $criteria->compare('created', $this->created, true);\n        $criteria->compare('updated', $this->updated, true);\n\n        return new CActiveDataProvider($this, array(\n            'criteria' => $criteria,\n            'sort' => array(\n                'defaultOrder' => 'created DESC',\n            ),\n        ));\n    }\n} \n\n--- File: 157 # models/UploadModalDasarLog.php ---\n<?php\n\n/**\n * This is the model class for table \"{{upload_modal_dasar_log}}\".\n *\n * The followings are the available columns in table '{{upload_modal_dasar_log}}':\n * @property integer $id\n * @property integer $id_perseroan\n * @property string $nomor_transaksi\n * @property string $path\n * @property integer $tahun\n * @property string $uploaded_date\n * @property integer $uploaded_by\n */\nclass UploadModalDasarLog extends CActiveRecord\n{\n    /* MAX_UPLOAD = 10 MB, PHP 5.6 you can finally define constant using math expressions*/\n    const MAX_UPLOAD = 10485760;\n    const PATH_SAVE = '/uploads/ModalDasar/';\n    // const MAX_UPLOAD = 1024 * 1024 * 10;\n    public $file;\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return UploadModalDasarLog the static model class\n     */\n    public static function model($className=__CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{upload_modal_dasar_log}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('id_perseroan, tahun, uploaded_by', 'numerical', 'integerOnly'=>true),\n            array('nomor_transaksi', 'length', 'max'=>100),\n            array('path', 'length', 'max'=>250),\n            array('uploaded_date', 'safe'),\n            // The following rule is used by search().\n            // Please remove those attributes that should not be searched.\n            array('id, id_perseroan, nomor_transaksi, path, tahun, uploaded_date, uploaded_by', 'safe', 'on'=>'search'),\n        );\n    }\n\n    /**\n     * @return array relational rules.\n     */\n    public function relations()\n    {\n        // NOTE: you may need to adjust the relation name and the related\n        // class name for the relations automatically generated below.\n        return array(\n        );\n    }\n\n    /**\n     * @return array customized attribute labels (name=>label)\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'id' => 'ID',\n            'id_perseroan' => 'Id Perseroan',\n            'nomor_transaksi' => 'Nomor Transaksi',\n            'path' => 'Path',\n            'tahun' => 'Tahun',\n            'uploaded_date' => 'Uploaded Date',\n            'uploaded_by' => 'Uploaded By',\n        );\n    }\n\n    /**\n     * Retrieves a list of models based on the current search/filter conditions.\n     * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n     */\n    public function search()\n    {\n        // Warning: Please modify the following code to remove attributes that\n        // should not be searched.\n\n        $criteria=new CDbCriteria;\n\n        $criteria->compare('id',$this->id);\n        $criteria->compare('id_perseroan',$this->id_perseroan);\n        $criteria->compare('nomor_transaksi',$this->nomor_transaksi,true);\n        $criteria->compare('path',$this->path,true);\n        $criteria->compare('tahun',$this->tahun);\n        $criteria->compare('uploaded_date',$this->uploaded_date,true);\n        $criteria->compare('uploaded_by',$this->uploaded_by);\n\n        return new CActiveDataProvider($this, array(\n            'criteria'=>$criteria,\n        ));\n    }\n\n    /**\n     * Upload Modal dasar to log\n     * @param   files   post files modal dasar\n     * @param   obj     model of transaksi perseroan\n     */\n    public function uploadModal($file, $model)\n    {\n        $file_loc = $file['tmp_name'];\n        $size = $file['size'];\n        if (!is_string($file_loc)) {\n            RestApi::response(400, 'Invalid file upload.');\n        }\n        $maxUpload = self::MAX_UPLOAD;\n        if (intval($size) > $maxUpload) {\n            $maxSize = ($maxUpload/1024)/1024;\n            RestApi::response(400, 'Maximum File '. $maxSize .' Mb');\n        }\n        $finfo = finfo_open(FILEINFO_MIME_TYPE);\n        $mimeType = finfo_file($finfo, $file_loc);\n        finfo_close($finfo);\n        if ($mimeType !== 'application/pdf') {\n            RestApi::response(400, 'File harus berupa pdf.');\n        }\n        $path = self::PATH_SAVE;\n        $fileName = isset($file['name']) ? str_replace(' ', '-', $file['name']) : \"\";\n        $pathFile = BadanHukumAktaLog::model()->createPathSave($path, $fileName, $model->nomor_transaksi);\n        $pathsave = Yii::getPathOfAlias('webroot').$pathFile;\n        $modelLog = self::model()->find(\n            \"nomor_transaksi=:no and id_perseroan=:id\",\n            [\n                ':no' => $model->nomor_transaksi,\n                ':id' => $model->id_perseroan\n            ]\n        );\n        if (!empty($modelLog->path)) {\n            @unlink(Yii::getPathOfAlias('webroot').$modelLog->path);\n        }\n        // if (is_array($file_loc)) {\n        //     $file_loc = current($file_loc);\n        //     if (is_array($file_loc))\n        //         $file_loc = current($file_loc);\n        // }\n        $up = move_uploaded_file($file_loc,$pathsave);\n        if ($up) {\n            if(!empty($modelLog)){ //Update data (Re-upload Akta)\n                $modelLog->path = $pathFile;\n                $modelLog->uploaded_date = date('Y-m-d H:i:s');\n                $modelLog->uploaded_by = Yii::app()->user->id;\n                if ($modelLog->save())\n                    RestApi::response(200, $modelLog->attributes);\n            } else {\n                $modelLog = new self;\n                $modelLog->id_perseroan = $model->id_perseroan;\n                $modelLog->nomor_transaksi = $model->nomor_transaksi;\n                $modelLog->tahun = $model->tahun;\n                $modelLog->path = $pathFile;\n                $modelLog->uploaded_date = date('Y-m-d H:i:s');\n                $modelLog->uploaded_by = Yii::app()->user->id;\n                if ($modelLog->save())\n                    RestApi::response(200, $modelLog->attributes);\n            }\n        }\n        else{\n            RestApi::response(400);\n        }\n    }\n\n}\n\n\n--- File: 892 # views/badan_hukum/listDataPesanNama.php ---\n<style>\n\t.cetak{\n\t\tcolor:green !important;\n\t\t \n\t}\n\t.dataTable td:last-child{\n\t\tcursor: pointer;\n\t}\n\t.formPerpanjang{\n\t\tleft:294px; \n\t\t/*border:solid 1px black;*/\n\t\tz-index: 99;\n\t\tdisplay: none;\n\t\tposition: absolute;\n\t}\n</style>\n<div style=\"margin-top: 1px;\">&nbsp;</div>&nbsp;\n<input  class=\"btn btn-shadow btn-default\" onclick=\"javascript:location.href='<?php echo Yii::app()->request->baseUrl;?>/sabh/<?php echo $id;?>/checkpesannama'\" type=\"button\" value=\"Cek nama yang telah dipesan\" /> \n\n<h3 style=\"margin-top:70px;\">TABEL DAFTAR PESAN NAMA <?php echo strtoupper($id);?></h3>\n<?php\n    foreach(Yii::app()->user->getFlashes() as $key => $message) {\n        echo '<div style=\"margin-top: 18px;background:#E6EFC2;color:#264409;border-color:#C6D880;height:30px;padding:5px 15px 15px 15px;\" class=\"flash-' . $key . '\">' . $message . \"</div>\";\n    }\n    echo \"<br>\";\n?>\n<div style=\"position: relative;background:white;\">\n\t<div class=\"formPerpanjang\">\n\t\t\n\t</div>\n</div> \n<?php if($idNotaris):?>\n<?php\n    $action = \"/sabh/{$id}/checkpesannama\";\n?>\n<?php echo CHtml::beginForm($action, \"post\", array('id' => 'myForm', 'class' => 'form-horizontal')); ?>\n<div class=\"col-lg-4 col-sm-4\">\n    <?= CHtml::activeTextField($model, 'novoucher', array('class' => 'form-control', 'placeholder' => $id=='perkumpulan'?'MASUKKAN NOMOR PEMESANAN NAMA':'MASUKKAN KODE PEMBAYARAN')); ?>\n    <?php echo CHtml::error($model, 'novoucher'); ?>\n</div>\n<div class=\"col-lg-2 col-sm-4\">\n    <button type=\"submit\" style=\"margin-left:-10px !important;\" class=\"btn btn-danger\" type=\"button\">Cari</button>\n</div>\n<?php echo CHtml::endForm(); ?>\n<div class=\"clearfix\"></div>\n<?php endif;?>\n<?php\n$this->widget('zii.widgets.grid.CGridView', array(\n\t'id' => 'agama-grid',\n    'dataProvider' => $OrderName->searchAllOrderName(),\n    'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n    'template' => \"{filter}\\n{items}\\n{pager}\",    \n    'columns' => array(\n    \tarray(\n        \t'header' => 'No.',\n            'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n        ),\n        array(\n\t\t\t'header'=>'No Pesan Nama',\n\t\t\t'value'=>'$data[\"id_pesan\"]',\n\t\t),\n        array(\n            'header'=>'Kode Pembayaran',\n            'value'=> function($data) {\n                return $data[\"no_voucher\"] == '9999' ? '-' : $data[\"no_voucher\"];\n            },\n        ),\n\t\tarray(\n\t\t\t'header'=>'Nama ' . strtoupper($id),\n\t\t\t'value'=>'strtoupper($data[\"nama\"])',\n\t\t),\n\t\tarray(\n\t\t\t'header'=>'Nama Pemohon',\n\t\t\t'value'=>'$data[\"nama_pemohon\"]',\n\t\t),\n\t\tarray(\n\t\t\t'header'=>'Tanggal Pesan',\n\t\t\t'value'=>'Helpers::getDateFormatId($data[\"tgl_pesan\"])',\n\t\t),\n\t\tarray(\n\t\t\t'header'=>'Tanggal Kadaluarsa',\n\t\t\t'type'=>'HTML',\n\t\t\t'value'=>'\"<span class=tgl_exp>\".Helpers::getDateFormatId($data[\"tgl_exp_pesan\"]).\"</span>\"',\n\t\t),\n\t\tarray(\n\t\t\t'header'=>'Masa Kadaluarsa',\n\t\t\t'type'=>'raw',\n\t\t\t'value'=> function($data) use ($id) {\n                return OrderNamePerseroan::model()->setPerpanjang($data, $id);\n            }\n\t\t),\n\t\tarray(\n            'header'=>'Aksi',\n            'type'=>'raw',\n            'value'=> function($data) use ($OrderName, $id) {\n                return $OrderName->aksiPerseroan($data, $id);\n            }\n            // 'value'=>'$data->aksiPerseroan(\"'.$id.'\")',\n            // 'value'=>'CHtml::link(\"Download Bukti Pesan\",\n            //     Yii::app()->createUrl(\n            //         \"/sabh/$data->base/downloadbuktipesan/\",\n            //         [\n            //             \"nama\" => $data->nama,\n            //             \"nama_singkat\" => $data->nama_singkat,\n            //             \"tanggalPesan\" => $data->tgl_pesan,\n            //             \"noPesan\" => $data->id_pesan,\n            //             \"tanggalExp\" => $data->tgl_exp_pesan,\n            //             \"voucher\" => $data->no_voucher,\n            //             \"namaPemohon\" => $data->nama_pemohon,\n            //             \"emailPemohon\" => $data->email_pemohon,\n            //             \"nomorTelepon\" => $data->telepon_pemohon\n            //         ]\n            //     ),\n            //     array(\"class\"=>\"cetak\"))'\n        ), \n     ),\n\t)\n);\n\nfunction getStatusVerif($data)\n{\n    if ($data[\"status_verifikasi\"] == '2') {\n        return 'Ditolak' . '<br>' . $data[\"keterangan\"];\n    } else {\n        if ($data[\"is_proses\"] == 1) {\n            return \"Sudah Pendirian\";\n        } else if ($data[\"is_active\"] == 1 && $data[\"status_verifikasi\"] == 1) {\n            return \"Diterima\";\n        } else if ($data[\"is_proses\"] == 0 && $data[\"is_active\"] == 1 && $data[\"status_verifikasi\"] == 0) {\n            return \"Belum Diverifikasi\";\n        }\n    }\n\n    return \"-\";\n}\n\n// function setPerpanjang($data, $id){\n//     if($data->is_proses==0){\n//        return \"<center>\n//            <i title=\\\"Anda dapat memperpanjang nama \".strtoupper($id).\" yang sama 7 hari sebelum kadaluarsa.\\\" class=\\\"icon-info-sign\\\"></i>\"\n//                .$data->days.$data->expired_pesan_nama.\n//            \"</center>\";\n//         return \"<center>\n//             <i title=\\\"Anda dapat memperpanjang nama \".strtoupper($id).\".\\\" class=\\\"icon-info-sign\\\"></i>\"\n//                 .$data->expired_pesan_nama.\n//             \"</center>\";\n//     }\n//     else\n//         return \"<center>Sudah Proses Pendirian</center>\";\n// }\n\n?>\n<!--$data->tanggal_pesan_exp-->\n<script>\n    function perpanjangPesanNama(elemt){        \n        var href = $(elemt).attr('href'); \n        $('.formPerpanjang').load(href);\n        $('.formPerpanjang').show();        \n        return false;\n    }\n    $(document).ready(function(){\t     \n        $('.cetak').click(function(){\n            var href = $(this).attr('href');\t\t \n            window.location.href=href;\t\t\n            return false;\t\t\n\t});\n    });    \n</script>\n\n\n\n\n--- File: 1145 # dto/CreatePermohonanPemblokiranPTDto.php ---\n<?php\n\nYii::import('application.modules.sabh.enums.JenisLayananPermohonan');\nYii::import('application.modules.sabh.enums.KategoriPermohonan');\nYii::import('application.modules.sabh.enums.StatusPemohon');\nYii::import('application.modules.sabh.enums.JenisPemegangSaham');\n\nclass CreatePermohonanPemblokiranPTDto\n{\n    // Data Permohonan\n    public $jenis_layanan_permohonan;\n    public $kategori_permohonan;\n    public $kode_voucher;\n    public $id_perseroan_terbatas;\n    public $alasan_permohonan;\n    \n    // Data Pemohon\n    public $status_pemohon;\n    public $jenis_pemegang_saham;\n\n    public $nomor_surat_permohonan;\n    public $tanggal_surat_permohonan;\n    public $nomor_putusan_atau_penetapan_pengadilan;\n\n\n    // Data Pemegang Saham\n    public $nama_pemegang_saham;\n    public $jenis_kewarganegaraan_pemegang_saham;\n    public $nik_pemegang_saham;\n    public $jabatan_pemegang_saham;\n    public $email_pemegang_saham;\n    public $no_telepon_pemegang_saham;\n    public $alamat_pemegang_saham;\n    public $jumlah_saham;\n\n    // Data Notaris\n    public $id_notaris;\n\n    // Dokumen Persyaratan\n    public $url_surat_permohonan;\n    public $url_bukti_pelaporan_pemilik_manfaat;\n    public $url_putusan_atau_penetapan_pengadilan;\n    public $url_riwayat_perubahan_saham;\n    public $url_surat_kuasa_atau_akta_notaris;\n    public $url_laporan_keuangan_audit;\n    public $url_laporan_pajak_tahunan;\n    public $url_surat_keterangan_waris;\n    public $url_surat_perdamaian_atau_akta_perdamaian;\n    public $url_laporan_keuangan_dan_pajak;\n    public $url_surat_pencabutan_perkara_atau_putusan_sengketa;\n\n    public function isDiajukanOlehPenerimaKuasa() {\n        \n    }\n\n    public static function fromArray(array $data)\n    {\n        $dto = new CreatePermohonanPemblokiranPTDto();\n\n        // Data Permohonan\n        $dto->jenis_layanan_permohonan = ArrayHelper::get($data, 'jenis_layanan_permohonan');\n        $dto->kategori_permohonan = ArrayHelper::get($data, 'kategori_permohonan');\n        $dto->kode_voucher = ArrayHelper::get($data, 'kode_voucher');\n        $dto->nama_perseroan_terbatas = ArrayHelper::get($data, 'nama_perseroan_terbatas');\n        $dto->alasan_permohonan = ArrayHelper::get($data, 'alasan_permohonan');\n\n        // Data Pemohon\n        $dto->status_pemohon = ArrayHelper::get($data, 'status_pemohon');\n        $dto->nama_pemohon = ArrayHelper::get($data, 'nama_pemohon');\n        $dto->nik = ArrayHelper::get($data, 'nik');\n        $dto->jabatan = ArrayHelper::get($data, 'jabatan');\n        $dto->email = ArrayHelper::get($data, 'email');\n        $dto->no_telepon = ArrayHelper::get($data, 'no_telepon');\n\n        // Data Notaris\n        $dto->nama_notaris = ArrayHelper::get($data, 'nama_notaris');\n        $dto->nik_notaris = ArrayHelper::get($data, 'nik_notaris');\n        $dto->email_notaris = ArrayHelper::get($data, 'email_notaris');\n        $dto->no_telepon_notaris = ArrayHelper::get($data, 'no_telepon_notaris');\n\n        // Dokumen Persyaratan\n        $dto->url_surat_permohonan = ArrayHelper::get($data, 'url_surat_permohonan');\n        $dto->url_bukti_pelaporan_pemilik_manfaat = ArrayHelper::get($data, 'url_bukti_pelaporan_pemilik_manfaat');\n        $dto->url_putusan_atau_penetapan_pengadilan = ArrayHelper::get($data, 'url_putusan_atau_penetapan_pengadilan');\n        $dto->url_riwayat_perubahan_saham = ArrayHelper::get($data, 'url_riwayat_perubahan_saham');\n        $dto->url_surat_kuasa_atau_akta_notaris = ArrayHelper::get($data, 'url_surat_kuasa_atau_akta_notaris');\n        $dto->url_laporan_keuangan_audit = ArrayHelper::get($data, 'url_laporan_keuangan_audit');\n        $dto->url_laporan_pajak_tahunan = ArrayHelper::get($data, 'url_laporan_pajak_tahunan');\n        $dto->url_surat_keterangan_waris = ArrayHelper::get($data, 'url_surat_keterangan_waris');\n        $dto->url_surat_perdamaian_atau_akta_perdamaian = ArrayHelper::get($data, 'url_surat_perdamaian_atau_akta_perdamaian');\n        $dto->url_laporan_keuangan_dan_pajak = ArrayHelper::get($data, 'url_laporan_keuangan_dan_pajak');\n        $dto->url_surat_pencabutan_perkara_atau_putusan_sengketa = ArrayHelper::get($data, 'url_surat_pencabutan_perkara_atau_putusan_sengketa');\n\n        return $dto;\n    }\n\n    public function isValid()\n    {\n        // 1. Validate required fields\n        $requiredFields = [\n            // Data Permohonan\n            'jenis_layanan_permohonan' => 'Jenis Layanan Permohonan',\n            'kategori_permohonan' => 'Kategori Permohonan',\n            'kode_voucher' => 'Kode Voucher',\n            'nama_perseroan_terbatas' => 'Nama Perseroan Terbatas',\n            'alasan_permohonan' => 'Alasan Permohonan',\n\n            // Data Pemohon\n            'status_pemohon' => 'Status Pemohon',\n            'nama_pemohon' => 'Nama Pemohon',\n            'nik' => 'NIK',\n            'jabatan' => 'Jabatan',\n            'email' => 'Email',\n            'no_telepon' => 'No Telepon',\n\n            // Data Notaris\n            'nama_notaris' => 'Nama Notaris',\n            'nik_notaris' => 'NIK Notaris',\n            'email_notaris' => 'Email Notaris',\n            'no_telepon_notaris' => 'No Telepon Notaris',\n        ];\n\n        $nullFields = [];\n\n        foreach ($requiredFields as $field => $label) {\n            if ($this->$field === null || $this->$field === '') {\n                $nullFields[] = $label;\n            }\n        }\n\n        if (!empty($nullFields)) {\n            $errorMessage = 'Required fields cannot be null or empty: ' . implode(', ', $nullFields);\n            throw new Exception($errorMessage);\n        }\n\n        // 2. Validate Jenis Layanan Permohonan\n        if (!JenisLayananPermohonan::isValid($this->jenis_layanan_permohonan)) {\n            throw new Exception('Jenis Layanan Permohonan is invalid');\n        }\n\n        // 3. Validate Kategori Permohonan\n        if (!KategoriPermohonan::isValid($this->kategori_permohonan)) {\n            throw new Exception('Kategori Permohonan is invalid');\n        }\n\n        if (!StatusPemohon::isValid($this->status_pemohon)) {\n            throw new Exception('Status Pemohon is invalid');\n        }\n\n        if (!JenisPemegangSaham::isValid($this->jenis_pemegang_saham)) {\n            throw new Exception('Jenis Pemegang Saham is invalid');\n        }\n    }\n}\n\n\n--- File: 415 # views/bo/index.php ---\n<?php\n/** @var $model model form dari perseroan, yayasan dan perkumpulan **/\n/** @var $modelBo BoForm **/\n/** @var $file file pdf perpres **/\n/** @var $form CActiveForm **/\n\n$form = isset($form) ? $form : new CActiveForm();\n$modelBo = $model->bo;\n$arrDetails = CJSON::decode($modelBo->temp_details);\n$checkedHasBo = !empty($arrDetails);\n$disabledPernyataan = ($modelBo->disclaimer == 0);\n$file = Yii::app()->baseUrl . '/uploads/bo/Perpres-13-tahun-2018-tentang-Beneficial-Ownership.pdf';\n\n$list_is_pendirian = ['pendirian', 'pendirianpending', 'myformpendirian'];\n$controller = Yii::app()->controller->id;\n$perseroanTransaksi = strpos($controller, 'persero') !== false;\n\n$method = Yii::app()->controller->action->id;\n$is_pendirian = false;\n\nif (\n    in_array($method, $list_is_pendirian) ||\n    ($controller == 'yayasan' && $method == 'penyesuaian')\n) {\n    $is_pendirian = true;\n}\n\n?>\n\n<div class=\"row\" id=\"bo_container\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Pemilik Manfaat</legend>\n                    <div class=\"form-group clearfix\">\n                        <?= CHtml::hiddenField('', (int) $is_pendirian, ['id' => 'check_is_pendirian']) ?>\n                        <?= CHtml::hiddenField('', (int) $modelBo->is_exist, ['id' => 'check_has_bo']) ?>\n                        \n                        <?php if ($modelBo->is_exist && !$modelBo->is_api_success) : ?>\n                            <div class=\"col-lg-12\" style=\"margin-bottom: 20px;\">\n                                <div class=\"errorMessage\">\n                                    <b>\n                                        Service bo sedang bermasalah, silahkan isi untuk melanjutkan, atau tunggu hingga service berjalan kembali. silahkan coba refresh laman kembali dalam beberapa menit\n                                    </b>\n                                </div>\n                            </div>\n                        <?php endif; ?>\n                        <div class=\"col-lg-12\">\n                            <font color = \"red\">* Wajib Diisi</font>\n                        </div>\n                        <div class=\"col-lg-12\">\n                            <div class=\"alert alert-warning-kuning\">\n                            <?php if($perseroanTransaksi): ?>\n                                <p class=\"text-justify\" style=\"color: red; font-weight: bold;\">\n                                Kementerian Hukum dalam mendukung pemberantasan tindak \n                                pidana pencucian uang dan Tindak Pidana Pendanaan Terorisme melalui \n                                korporasi, menerapkan kewajiban pelaporan pemilik manfaat, sesuai \n                                ketentuan:\n                                </p>\n                                <ul>\n                                    <li><?php echo CHtml::link('- Peraturan Presiden Nomor 13 Tahun 2018 ( Unduh )', array($file), array(\n                                        'target' => '_blank',\n                                        'class' => 'text-primary',\n                                        'style' => 'font-weight: bold;',\n                                    )); ?></li>\n                                    <li><?php echo CHtml::link('- Peraturan Menteri Hukum dan HAM Nomor 15 Tahun 2019 ( Unduh )', array(Yii::app()->baseUrl .'/uploads/bo/Permenkumham_Nomor_15_Tahun_2019.pdf'), array(\n                                        'target' => '_blank',\n                                        'class' => 'text-primary',\n                                        'style' => 'font-weight: bold;',\n                                    )); ?></li>\n                                    <li><?php echo CHtml::link('- Peraturan Menteri Hukum Nomor 2 Tahun 2025 ( Unduh )', array(Yii::app()->baseUrl .'/uploads/bo/Permenkumham_Nomor_2_Tahun_2025.pdf'), array(\n                                        'target' => '_blank',\n                                        'class' => 'text-primary',\n                                        'style' => 'font-weight: bold;',\n                                    )); ?></li>\n                                </ul>\n                                <div class=\"checkbox\">\n                                    <label>\n                                    \n                                    <?php echo CHtml::checkBox(\n                                        'has_bo',\n                                        $checkedHasBo,\n                                        array(\n                                            'id'=>'has_bo',\n                                            'class' => 'checkbox'\n                                        )\n                                    ); ?>\n                                    \n                                    <b style=\"color: red;\">Saya mengerti, memahami dan bersedia melaksanakan sebagaimana \n                                    ketentuan mengenai pelaporan pemilik manfaat pada korporasi.</b>\n                                    </label>\n                                </div>\n                            <?php else: ?>\n                                <p class=\"text-justify\" style=\"color: red; font-weight: bold;\">\n                                Kementerian Hukum dan HAM dalam mendukung pemberantasan tindak pidana pencucian uang, melalui korporasi/perusahaan menerapkan sistem mengenali pemilik manfaat, bagi para pemohon wajib mengikuti dan mengisi isian sebagai berikut : Pemilik Manfaat adalah orang perseorangan yang dapat menunjuk atau memberhentikan direksi, dewan komisaris, pengurus, pembina, atau pengawas pada Korporasi, memiliki kemampuan untuk mengendalikan Korporasi, berhak atas dan/atau menerima manfaat dari Korporasi baik langsung maupun tidak langsung, merupakan pemilik sebenarnya dari dana atau saham Korporasi dan/atau memenuhi kriteria sebagaimana dimaksud dalam Peraturan Presiden Nomor 13 Tahun 2018.\n                                </p>\n                                <div class=\"checkbox\">\n                                    <label>\n                                    \n                                    <?php echo CHtml::checkBox(\n                                        'has_bo',\n                                        $checkedHasBo,\n                                        array(\n                                            'id'=>'has_bo',\n                                            'class' => 'checkbox'\n                                        )\n                                    ); ?>\n                                    \n                                    <b style=\"color: red;\">Saya mengerti dan memahami pengertian pemilik manfaat.</b>\n                                    </label>\n                                </div>\n                            <?php endif; ?>\n                            </div>\n                            <div class=\"errorMessage\" id=\"has_bo_em_\" style=\"display:none\"></div>\n                            <p class=\"help-block\"><?php echo $form->error($model, 'has_bo'); ?></p>\n                            <?php if (!$perseroanTransaksi):?>\n                            <div class=\"center has-bo-child\" style=\"display: none;\">\n                                <iframe width='800' height='500'\n                                    src='<?php echo $file; ?>#toolbar=0&view=FitH'\n                                    frameborder='0' allowfullscreen>\n                                </iframe>\n                            </div>\n                            <?php endif; ?>\n                        </div>\n                    </div>\n\n                    <div class=\"has-bo-child\" style=\"display: none;\">\n                        <?php if (!$perseroanTransaksi):?>\n                        <div class=\"form-group clearfix\">\n                            <div class=\"col-lg-6 col-lg-offset-5\">\n                                <?php echo CHtml::link('DOWNLOAD', array($file), array(\n                                    'class' => 'btn btn-success',\n                                    'target' => '_blank'\n                                )); ?>\n                            </div>\n                        </div>\n                        <?php endif; ?>\n\n                        <div id=\"container_disclaimer_bo\">\n                            <?php $this->renderPartial('/bo/_disclaimer', array(\n                                'model' => $modelBo,\n                                'perseroanTransaksi' => $perseroanTransaksi\n                            )); ?>\n                        </div>\n\n                        <div class=\"form-group clearfix\">\n                            <div class=\"col-lg-12\">\n                                <?php echo $form->hiddenField($modelBo, 'pernyataan'); ?>\n                                <?php echo $form->hiddenField($modelBo, 'base'); ?>\n                            </div>\n                        </div>\n\n                        <div id=\"container_details\">\n                            <?php if((count($modelBo->details) > 0 && $checkedHasBo) || $perseroanTransaksi): ?>\n                                <?php $this->renderPartial('/bo/_details', array('model' => $modelBo)); ?>\n                            <?php endif; ?>\n                        </div>\n\n                        <?php echo $form->error($model, 'bo'); ?>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n<div id=\"modal_bo\"></div>\n\n<?php\nYii::app()->clientScript->registerScript('bo_badan_hukum',\n    file_get_contents(Yii::app()->basePath.'/modules/sabh/views/bo/index.js')\n);\n?>\n\n--- File: 262 # controllers/MonitoringBoNotarisController.php ---\n<?php\n\nclass MonitoringBoNotarisController extends Controller\n{\n    protected function parseGet()\n    {\n        $bakum = Yii::app()->request->getQuery('bakum');\n        if ($bakum === 'perseroan') {\n            $model = new BoMonitoringNotarisPerseroan();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringNotarisPerseroan');\n        } elseif ($bakum === 'yayasan') {\n            $model = new BoMonitoringNotarisYayasan();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringNotarisYayasan');\n        } elseif ($bakum === 'perkumpulan') {\n            $model = new BoMonitoringNotarisPerkumpulan();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringNotarisPerkumpulan');\n        } else {\n            $model = new BoMonitoringNotarisBadanHukum();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringNotarisBadanHukum');\n        }\n        if (!empty($dataGet)) {\n            $model->attributes = $dataGet;\n        }\n        $model->setSafeAttribute('id_notaris', Yii::app()->request->getQuery('id_notaris'));\n        $model->setSafeAttribute('provinsi', Yii::app()->request->getQuery('provinsi'));\n        $model->setSafeAttribute('kabupaten', Yii::app()->request->getQuery('kabupaten'));\n        //$model->setSafeAttribute('kriteria', Yii::app()->request->getQuery('kriteria'));\n        $model->setSafeAttribute('start', Yii::app()->request->getQuery('start'));\n        $model->setSafeAttribute('end', Yii::app()->request->getQuery('end'));\n        //$model->setSafeAttribute('tipe', Yii::app()->request->getQuery('tipe'));\n        return $model;\n    }\n\n    public function actionIndex()\n    {\n        $model = $this->parseGet();\n        $model->initOtherAttribute();\n        $dataProvider = $rawData = array();\n        if ($model->validate()) {\n            $rawData = $model->filterData();\n            $dataProvider = $model->getDataProvider($rawData);\n        } else {\n            throw new CHttpException(404, 'The requested page does not not exist.');\n        }\n\n        $model->completeDate();\n        $rawData = $model->mixData();\n        $chart = $model->getChart($rawData);\n        $countTipe = $model->countTipe($rawData);\n        $this->render('/bo/monitoring-notaris/index', array(\n            'model' => $model,\n            'data' => $dataProvider,\n            'countTipe' => $countTipe,\n            'chart' => $chart,\n        ));\n    }\n\n    /**\n     * Action download list data Notaris sesuai filter\n     * yang dipilih\n     *\n     * @return void\n     */\n    public function actionDownload()\n    {\n        $model = $this->parseGet();\n        $model->setSafeAttribute('tipe_download', Yii::app()->request->getQuery('type'));\n        if (empty($model->tipe_download)) {\n            throw new CHttpException(404, 'The requested page does not not exist.');\n        }\n        $model->initOtherAttribute();\n        $rawData = array();\n        if ($model->validate()) {\n            $this->boDownload($model);\n        } else {\n            throw new CHttpException(404, 'The requested page does not not exist.');\n        }\n    }\n\n    /**\n     * Menentukan tipe file yang akan didownload\n     * @param $model model BoMonitoringNotaris\n     *\n     * @return void\n     */\n    protected function boDownload($model)\n    {\n        $rawData = $model->filterData();\n        $model->ucfirstNamaBakum($rawData);\n        if ($model->tipe_download === 'pdf') {\n            $this->boPdf($rawData, $model);\n        } else {\n            $this->boExcel($rawData, $model);\n        }\n    }\n\n    /**\n     * Download Data Notaris tipe PDF\n     * @param $rawData array data badan hukum\n     * @param $model model BoMonitoringNotaris\n     *\n     * @return void\n     */\n    protected function boPdf($rawData, $model)\n    {\n        $title = 'Monitoring BO Notaris ' . ucfirst($model->bakum);\n        $namaFile = 'Monitoring_BO_Notaris_' . substr($model->start, 0, 10) . \"_\" . \n            substr($model->end, 0, 10);\n        $content = $this->renderPartial('/bo/monitoring-notaris/_pdf', array(\n            'headers' => $model->listHeaderPdf(),\n            'datas' => $rawData,\n            'title' => $title,\n            'start' => $model->start,\n            'end' => $model->end,\n            'bakum' => $model->bakum\n        ), true);\n        SabhHelpers::cetakPdf($content, $namaFile, true, '', '', 'D', 'L');\n        Yii::app()->end();\n    }\n\n    /**\n     * Download Data Notaris tipe Excel\n     * @param $rawData array data badan hukum\n     * @param $model model BoMonitoringNotaris\n     *\n     * @return void\n     */\n    protected function boExcel($rawData, $model)\n    {\n        $title = 'Monitoring BO Notaris ' . ucfirst($model->bakum);\n        $namaFile = 'Monitoring_Notaris_' . ucfirst($model->bakum);\n        Yii::import('system.docotel.cms.extensions.phpexcel.XPHPExcel');\n        $objPHPExcel= XPHPExcel::createPHPExcel();\n        $objPHPExcel->getProperties()->setCreator('Aplikasi Ditjen AHU Online')\n            ->setLastModifiedBy('AHU Online System')\n            ->setTitle($title);\n        $header = $model->listHeaderExcel();\n        SabhHelpers::generateExcelForMonitoringPerseroan(\n            $title, \"Tanggal : \" . date(\"d-m-Y\", strtotime($model->start)) .\n             \" s/d \" . date(\"d-m-Y\", strtotime($model->end)), $header, $rawData, array(), $objPHPExcel, $namaFile);\n        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n        $objWriter->save('php://output');\n        Yii::app()->end();\n    }\n\n    public function actionDetail()\n    {\n        $bakum = Yii::app()->request->getQuery('bakum');\n        if ($bakum === 'perseroan') {\n            $model = new BoMonitoringPerseroan();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringPerseroan');\n        } elseif ($bakum === 'yayasan') {\n            $model = new BoMonitoringYayasan();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringYayasan');\n        } else {\n            $model = new BoMonitoringPerkumpulan();\n            $dataGet = Yii::app()->request->getQuery('BoMonitoringPerkumpulan');\n        }\n        if (!empty($dataGet)) {\n            $model->attributes = $dataGet;\n        }\n        $modelDetail = new BoMonitoringNotarisDetail();\n        $modelDetail->setSafeAttribute('bakum', Yii::app()->request->getQuery('bakum'));\n        $modelDetail->setSafeAttribute('id_notaris', Yii::app()->request->getQuery('id'));\n        $modelDetail->setSafeAttribute('start', Yii::app()->request->getQuery('start'));\n        $modelDetail->setSafeAttribute('end', Yii::app()->request->getQuery('end'));\n        $modelDetail->initOtherAttribute();\n        $dataProvider = $rawData = array();\n        $nama = '';\n        if ($modelDetail->validate()) {\n            $modelDetail->setBoAttribute($model);\n            $rawData = $model->filterData();\n            $model->ucfirstJenisTransaksi($rawData);\n            $dataProvider = $model->getDataProvider($rawData);\n            $notaris = MsNotarisProfile::model()->findByPk($model->id_notaris);\n            if ($notaris !== null) {\n                $nama = trim($notaris->nama_gelar);\n            }\n        } else {\n            throw new CHttpException(404, 'The requested page does not not exist.');\n        }\n\n        $this->render('/bo/monitoring-notaris/detail', array(\n            'model' => $model,\n            'dataProvider' => $dataProvider,\n            'nama' => $nama,\n        ));\n    }\n}\n\n\n--- File: 1165 # mappers/DBakumProvinsiMapper.php ---\n<?php\n\nclass DBakumProvinsiMapper extends MapperBase\n{\n    public function findAllPerseroan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.jenis_perseroan,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.tanggal_sk,\n            p.nomor_transaksi,\n            p.status_transaksi,\n            p.pemegang_saham,\n            p.kegiatan,\n            p.tahun,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            (\"\") AS lat,\n            (\"\") AS lon\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        // ids, secara default dashboard akan menampilkan data tahun ini (agar bisa di join dengan transaksi)\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'. date('Y') .' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            p.provinsi_id_perseroan = :provinsi_id\n            AND p.kabupaten_id_perseroan IS NOT NULL \n            AND p.kabupaten_id_perseroan != 0\n            AND p.jenis_perseroan != \"\"\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.date('Y').' tp2 \n            WHERE p.id_perseroan = tp2.id_perseroan\n            GROUP BY tp2.id_perseroan)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerseroanGroup($param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perseroan\n        ');\n        $cmd->from('('.$this->findAllPerseroan(array(), false, 'getText').') AS perseroan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYayasan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            ty.keterangan_sosial,\n            ty.keterangan_kemanusiaan,\n            ty.keterangan_keagamaan,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.pendiri,\n            ty.pengurus,\n            ty.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE\n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        // ids, secara default dashboard akan menampilkan data tahun ini (agar bisa di join dengan transaksi)\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'. date('Y') .' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"yayasan\"\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.date('Y').' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllYayasanGroup($param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_yayasan\n        ');\n        $cmd->from('('.$this->findAllYayasan(array(), false, 'getText').') AS yayasan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllPerkumpulan(array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            b.maksud,\n            b.tujuan,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            tp.pengurus,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE\n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'. date('Y') .' tp', 'tp.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.provinsi_id = :provinsi_id\n            AND b.kabupaten_id IS NOT NULL \n            AND b.kabupaten_id != 0\n            AND b.base = \"perkumpulan\"\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'.date('Y').' tp2 \n            WHERE b.badan_hukum_id = tp2.id_badan_hukum\n            GROUP BY tp2.id_badan_hukum)\n        ', $param);\n\n        if ($cmdReturn) {\n            return $cmd;\n        }\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulanGroup($param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perkumpulan\n        ');\n        $cmd->from('('.$this->findAllPerkumpulan(array(), false, 'getText').') AS perkumpulan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 852 # views/monitoringPerseroan/index.php ---\n<?php\n/* @var $this MonitoringPerseroanController */\n/* @var $listDay array */\n/* @var $listMonth array */\n/* @var $listYear array */\n?>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Monitoring Pendirian Dan Perubahan Perseroan Dengan Modal Dasar < 50 Juta</legend>\n                    <div class=\"task-option\">\n                <?php\n                echo CHtml::beginForm(array('downloadExcel'), 'post', array('id'=>'form_filter'));\n                echo CHtml::dropDownList('ListDay', date('j'), $listDay, array(\n                    'class' => 'styled'\n                ));\n                ?>\n                <?php\n                echo CHtml::dropDownList('ListMonthly', date('n'), $listMonth, array(\n                    'class' => 'styled'\n                ));\n                ?>\n                <?php\n                echo CHtml::dropDownList('ListYear', date('Y'), $listYear, array(\n                    'class' => 'styled'\n                ));\n                ?>\n                &nbsp;\n                <?php\n                echo CHtml::dropDownList('TypeCharts', 0, array(\n                         'Total Keseluruhan', 'Harian', 'Bulanan', 'Tahunan', 'Total Per Bulan',\n                        'Total Per Tahun'), array(\n                    'class' => 'styled'\n                ));\n                echo CHtml::endForm();\n                ?>\n            </div>\n                    <div id=\"rep-graph\" class=\"graph\"></div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<div class=\"row\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <fieldset class=\"fieldset\">\n                    <legend>Detail Perseroan</legend>\n                    <div class=\"panel-body\">\n                        <div id=\"grid-view\"></div>\n                    </div>\n                </fieldset>\n            </div>\n        </section>\n    </div>\n</div>\n\n<?php\nYii::app()->clientScript->registerScriptFile($this->getBaseModule()->assetsUrl . '/js/highcharts.js',CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile($this->getBaseModule()->assetsUrl . '/js/highcharts-3d.js', CClientScript::POS_END);\nYii::app()->clientScript->registerScriptFile($this->getBaseModule()->assetsUrl . '/js/highcharts-exporting.js', CClientScript::POS_END);\nYii::app()->clientScript->registerScript('monitoring-perseroan-js',\n'\n    (function(){\n        $(document).ready(function() {\n            // filter by day, month, year\n            $(\"#TypeCharts\").change(function(){\n                /*\n                 value of type is :\n                 0 = Total Keseluruhan\n                 1 = Harian\n                 2 = Bulanan\n                 3 = Tahunan\n                 4 = Total Per Bulan\n                 5 = Total Per Tahun\n                */ \n                var type = $(\"#TypeCharts\").val();\n                switch (parseInt(type)) {\n                    case 1:\n                        daySelected();\n                        break;\n                    case 2:\n                        monthSelected();\n                        break;\n                    case 3:\n                        yearSelected();\n                        break;\n                    case 4:\n                        totalPerMonth();\n                        break;\n                    case 5:\n                        totalPerYear();\n                        break;\n                    case 0:\n                        allTotal();\n                        break;\n                }\n            });\n\n            // run this after page fully loaded\n            $(\"#TypeCharts\").trigger(\"change\");\n\n            // run by trigger\n            $(\"#ListDay, #ListMonthly, #ListYear\").change(function(){\n                $(\"#TypeCharts\").trigger(\"change\");\n            });\n\n            /************************* by day *********************************/\n            // filter by day\n            function daySelected()\n            {\n                $(\"#ListDay\").show();\n                $(\"#ListMonthly\").show();\n                $(\"#ListYear\").show();\n                reqChartDay();\n                reqGridDay();\n            }\n\n            // for chart\n            function reqChartDay()\n            {\n                var d = parseInt($(\"#ListDay\").val());\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { day: d, month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGraphDay').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            // for grid\n            function reqGridDay()\n            {\n                var d = parseInt($(\"#ListDay\").val());\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    data: { day: d, month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGridDay').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            /*********************** end by day *******************************/\n\n            /*********************** by month *********************************/\n            // filter by month\n            function monthSelected()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").show();\n                $(\"#ListYear\").show();\n                reqChartMonthly();\n                reqGridMonthly();\n            }\n\n            // for chart\n            function reqChartMonthly()\n            {\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGraphMonthly').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            // for grid\n            function reqGridMonthly()\n            {\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    data: { month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGridMonthly').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            function totalPerMonth()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").show();\n                $(\"#ListYear\").show();\n                reqChartTotalMonthly();\n                reqGridMonthly();\n            }\n\n            // for chart\n            function reqChartTotalMonthly()\n            {\n                var m = parseInt($(\"#ListMonthly\").val());\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { month: m, year: y},\n                    url: \"'.$this->createUrl('ajaxGraphTotalMonthly').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            /************************ end by month ****************************/\n            \n            /************************* by year ********************************/\n            // filter year\n            function yearSelected()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").hide();\n                $(\"#ListYear\").show();\n                reqChartYear();\n                reqGridYear();\n            }\n\n            // for chart\n            function reqChartYear()\n            {\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { year: y},\n                    url: \"'.$this->createUrl('ajaxGraphYear').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            // for grid\n            function reqGridYear()\n            {\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    data: { year: y},\n                    url: \"'.$this->createUrl('ajaxGridYear').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            function totalPerYear()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").hide();\n                $(\"#ListYear\").show();\n                reqChartTotalYear();\n                reqGridYear();\n            }\n\n            function reqChartTotalYear()\n            {\n                var y = parseInt($(\"#ListYear\").val());\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    data: { year: y},\n                    url: \"'.$this->createUrl('ajaxGraphTotalYear').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n            /************************** end by year ***************************/\n\n            /************************** all total *****************************/\n\n            function allTotal()\n            {\n                $(\"#ListDay\").hide();\n                $(\"#ListMonthly\").hide();\n                $(\"#ListYear\").hide();\n                reqChartAllTotal();\n                reqGridAllTotal();\n            }\n\n            // for chart all total\n            function reqChartAllTotal()\n            {\n                $.ajax({\n                    type: \"POST\",\n                    dataType: \"json\",\n                    url: \"'.$this->createUrl('ajaxGraphAllTotal').'\",\n                    success: function (data) {\n                        data.chart.renderTo = \"rep-graph\";\n                        new Highcharts.Chart(data);\n                    },\n                });\n            }\n\n             // for grid all total\n            function reqGridAllTotal() \n            {\n                $.ajax({\n                    type: \"GET\",\n                    dataType: \"json\",\n                    url: \"'.$this->createUrl('ajaxGridAllTotal').'\",\n                    success: function (data) {\n                        $(\"#grid-view\").html(data);\n                    },\n                });\n            }\n\n            /************************** end all total *************************/\n        });\n    })();\n',\nCClientScript::POS_END);\n?>\n\n--- File: 721 # views/perseroan/previewPerubahanPerseroan.php ---\n<style>\n    #previewPerseroan .most-popular {\n        background: none repeat scroll 0 0 #ffffff !important;\n        color: #FFFFFF;\n    }\n    table.preview {\n        color: #000000;\n        width: 100% !important;\n    }\n    table.preview td {\n        text-align: left !important;\n        text-transform: uppercase !important;\n    }\n    table.preview caption{\n        padding:5px 0px;\n        border-bottom:black 1px solid;margin-bottom:15px;background:#840E0E;color:#fff !important;\n    }\n    table.preview span {\n        color:#840E0E !important;\n        text-transform: uppercase;\n    }\n    hr{\n        border: solid 1px black;\n    }\n</style>\n\n<div id=\"previewPerseroan\" class=\"modal modal-lg modal-preview-perseroan fade in\" style=\"position:fixed; top:0; left:0; height:100%; text-align:center; margin: 0; width: 100%; display: none; background-color: rgba(0, 0, 0, .6);\">\n    <div style='display: table;width:100%;'>\n        <div style='display:table-cell;vertical-align:middle;'>\n            <div style='display:inline-block; background-color: #eee'>\n                <div class=\"preview-perseroan-head\">\n                    <h2 style=\"padding:10px 50px; font-size:35px;\" id=\"pratinjau_title\">PRA TINJAU PERUBAHAN DATA PERSEROAN</h2>\n                </div>\n                <div style=\"font-size: 20px; padding: 10px 50px;\">\n                    <table class=\"preview\">\n                        <tr>\n                            <td style=\"width: 200px;\">Jenis Perseroan</td>\n                            <td>:</td>\n                            <td><span class=\"jenis_perseroan\">N/A</span></td>\n                        </tr>\n                    </table>\n                    <hr>\n                    <table class=\"preview\">\n                        <caption>\n                            DATA PERSEROAN\n                        </caption>\n                        <tr>\n                            <td style=\"width: 200px;\">Nama Perseroan</td>\n                            <td>:</td>\n                            <td><span class=\"nama_perseroan\">N/A</span></td>\n                        </tr>\n                        <tr class=\"show_nama_singkat\" style=\"display:none;\">\n                            <td style=\"width: 200px;\">Nama Singkatan</td>\n                            <td>:</td>\n                            <td><span class=\"nama_singkat\">N/A</span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">NPWP Perseroan</td>\n                            <td>:</td>\n                            <td><span class=\"npwp_perseroan\">N/A</span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">Jangka Waktu</td>\n                            <td>:</td>\n                            <td><span class=\"jangka_waktu\">Tidak Terbatas</span> <span class=\"tahun_jangka_waktu\"></span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">Kedudukan</td>\n                            <td>:</td>\n                            <td><span class=\"kabupaten\">N/A</span> >> <span class=\"provinsi\">N/A</span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">Kecamatan</td>\n                            <td>:</td>\n                            <td><span class=\"kecamatan\">N/A</span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">Alamat</td>\n                            <td>:</td>\n                            <td><span class=\"alamat_perseroan\">TEST ALAMAT PERSEROAN</span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">Rt : <span class=\"rt_perseroan\">N/A</span></td>\n                            <td>&nbsp;</td>\n                            <td>Rw : <span class=\"rw_perseroan\">N/A</span></td>\n                        </tr>\n                        <tr>\n                            <td style=\"width: 200px;\">Kode Post : <span class=\"pos_perseroan\">N/A</span></td>\n                            <td>&nbsp;</td>\n                            <td>Nomor Telepon : <span class=\"telepon_perseroan\">N/A</span></td>\n                        </tr>\n                    </table>\n                    <hr>\n                    <table style=\"width: 100%\" class=\"preview\">\n                        <caption>MAKSUD DAN TUJUAN</caption>\n                        <tr>\n                            <td valign=\"top\" class=\"td_preview_maksud_tujuan_perseroan\">\n                                <table class=\"table_preview_maksud_tujuan_perseroan table table-striped table-hover table-bordered dataTable\" style=\"color:#000000 !important;\">\n                                    <thead>\n                                    <tr>\n                                        <th>No</th>\n                                        <th>Kode KBLI</th>\n                                        <th>Judul KBLI</th>\n                                        <th>Uraian KBLI</th>\n                                    </tr>\n                                    </thead>\n                                    <tbody id=\"preview_maksud_tujuan_perseroan\">\n                                    </tbody>\n                                </table>\n                            </td>\n                        </tr>\n                    </table>\n                    <hr>\n                    <table style=\"width:100%;\" class=\"preview\">\n                        <caption>\n                            AKTA NOTARIS\n                        </caption>\n                        <tbody class=\"data_akta\"></tbody>\n                    </table>\n                    <hr>\n                    <table class=\"table table-striped table-hover table-bordered dataTable\" style=\"color:#000000 !important;\">\n                        <caption style=\"text-align: left;\">\n                            Modal Dasar\n                        </caption>\n                        <thead>\n                        <tr>\n                            <th>Klasifikasi Saham</th>\n                            <th>Harga Per Lembar</th>\n                            <th>Jumlah Saham (Lembar)</th>\n                            <th>Total</th>\n                        </tr>\n                        </thead>\n                        <tbody id=\"preview_seri_saham_perseroan\">\n                        </tbody>\n                    </table>\n                    <hr>\n                    <table class=\"table table-striped table-hover table-bordered dataTable\" style=\"color:#000000 !important;\">\n                        <caption style=\"text-align: left;\">\n                            Modal Ditempatkan\n                        </caption>\n                        <thead>\n                        <tr>\n                            <th>Klasifikasi Saham</th>\n                            <th>Harga Per Lembar</th>\n                            <th>Jumlah Saham (Lembar)</th>\n                            <th>Total</th>\n                        </tr>\n                        </thead>\n                        <tbody id=\"preview_saham_modal_di_tempatkan\">\n                        </tbody>\n                    </table>\n                    <hr>\n                    <table class=\"preview\">\n                        <tr>\n                            <td valign=\"top\" style=\"width: 200px;\">Modal Disetor</td>\n                            <td>:</td>\n                            <td><span class=\"modal_disetor\">N/A</span></td>\n                        </tr>\n                        <tr>\n                            <td valign=\"top\" style=\"width: 200px;\">Lainnya</td>\n                            <td>:</td>\n                            <td><span class=\"modal_disetor_lain\">N/A</span></td>\n                        </tr>\n                    </table>\n                    <hr>\n                    <table class=\"table table-striped table-hover table-bordered dataTable\" style=\"color:#000000 !important;\">\n                        <caption style=\"text-align: left;\">\n                            Pengurus dan Pemegang Saham\n                        </caption>\n                        <thead>\n                        <tr>\n                            <th>Penanggung Jawab</th>\n                            <th>Nama</th>\n                            <th>Modal Ditempatkan</th>\n                            <th>Lembar Saham</th>\n                            <th>Jabatan</th>\n                            <th>Total</th>\n                        </tr>\n                        </thead>\n                        <tbody id=\"preview_dewan_komisaris_perseroan\" style=\"text-transform:uppercase;\">\n                        </tbody>\n                    </table>\n                    <div id=\"bag_notaris_pengganti\" class=\"table table-striped table-hover table-bordered dataTable\" style=\"color:#000000 !important;\">\n                        <div id=\"preview_notaris_pengganti\" style=\"text-transform:uppercase;\"></div>\n                    </div>\n\n                    <hr>\n                    <table class=\"preview\">\n                        <tr>\n                            <td valign=\"top\" style=\"width: 200px;\">JENIS PERUBAHAN</td>\n                            <td>:</td>\n                            <td><?php\n                                if($flag == 2){\n                                    if(isset($model->jenis_perubahan)){\n                                        if($model->jenis_perubahan){\n                                            $jenis_perubahan = json_decode($model->jenis_perubahan);\n                                            if($jenis_perubahan){\n                                                if(isset($jenis_perubahan->PAD)){\n                                                    if($jenis_perubahan->PAD)\n                                                        echo '<label>Persetujuan perubahan anggaran dasar</label><div class=\"clearfix\"> - '.$jenis_perubahan->PAD.'</div><br/>';\n                                                }\n                                                if(isset($jenis_perubahan->PPAD)){\n                                                    if($jenis_perubahan->PPAD)\n                                                        echo '<label>Pemberitahuan perubahan anggaran dasar</label><div class=\"clearfix\"> - '.$jenis_perubahan->PPAD.'</div><br/>';\n                                                }\n                                                if(isset($jenis_perubahan->NONPAD)){\n                                                    if($jenis_perubahan->NONPAD)\n                                                        echo '<label>Pemberitahuan perubahan data Perseroan</label><div class=\"clearfix\"> - '.$jenis_perubahan->NONPAD.'</div><br/>';\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                ?>\n                            </td>\n                        </tr>\n                    </table>\n\n                    <div class=\"price-actions\">\n                        <?php echo CHtml::button('KEMBALI', array('id' => 'kembali_pratinjau', 'class' => 'btn btn-danger')); ?>\n\n                        <?php if(!in_array('cs-sabh-cikini', Yii::app()->user->group)): ?>\n                            <span id=\"proses_submit_msg\" class=\"btn btn-success\" style=\"display:none;\">Sedang proses..</span>\n                            <?php echo CHtml::button('SAYA YAKIN', array('id' => 'submit_data', 'class' => 'btn btn-success')); ?>\n                        <?php endif; ?>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n--- File: 265 # controllers/PesanNamaController.php ---\n<?php\n\nclass PesanNamaController extends Controller\n{\n    public function actionKoreksiPerseroan() {\n        $this->koreksi('perseroan');\n    }\n    public function actionKoreksiYayasan() {\n        $this->koreksi('yayasan');\n    }\n    public function actionKoreksiPerkumpulan() {\n        $this->koreksi('perkumpulan');\n    }\n\n    public function koreksi($id) {\n        if($id == 'perseroan')\n            $model = New OrderNamePerseroan('search');\n        else {\n            $model = New OrderName('search');\n            $model->dbCriteria->addCondition('base=\"' . $id . '\"');\n        }\n        $model->dbCriteria->addCondition('is_proses=0 AND is_active=1');\n        $model->dbCriteria->order = 'tgl_pesan DESC';\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        if (isset($_GET[get_class($model)])) {\n            $model->attributes = $_GET[get_class($model)];\n        }\n        $this->render('listKoreksi', get_defined_vars());\n        return;\n    }\n\n    public function actionVerifikasiPerseroan() {\n        $this->verifikasi('perseroan');\n    }\n    public function actionVerifikasiYayasan() {\n        $this->verifikasi('yayasan');\n    }\n    public function actionVerifikasiPerkumpulan() {\n        $this->verifikasi('perkumpulan');\n    }\n\n    public function verifikasi($id) {\n        if($id == 'perseroan')\n            $model = New OrderNamePerseroan('search');\n        else {\n            $model = New OrderName('search');\n            $model->dbCriteria->addCondition('base=\"' . $id . '\"');\n        }\n        $model->dbCriteria->addCondition('is_approve=2');\n        $model->dbCriteria->order = 'tgl_pesan DESC';\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        if (isset($_GET[get_class($model)])) {\n            $model->attributes = $_GET[get_class($model)];\n        }\n        $this->render('listVerifikasi', get_defined_vars());\n        return;\n    }\n\n    public function actionApproval($id, $v, $t) {\n        $result=false;\n        if($id && $t && $v >= 0) {\n            if($t == 'perseroan')\n                $data = OrderNamePerseroan::model ()->find('id_pesan=:id', array(':id' => $id));\n            else\n                $data = OrderName::model ()->find('id_pesan=:id AND base=:base', array(':id' => $id, ':base' => $t));\n            if($data) {\n                if($data->saveAttributes(array('is_approve' => $v)))\n                    return true;\n            }\n        }\n        return false;\n    }\n\n    public function actionBlokir($id, $type='perseroan', $is_korektor = true, $val = false) {\n        if($type == 'perseroan')\n            $model = OrderNamePerseroan::model()->find(\"id_pesan=:id_pesan\", array(\":id_pesan\" => $id));\n        else\n            $model = OrderName::model()->find(\"id_pesan=:id_pesan\", array(\":id_pesan\" => $id));\n        if($model) {\n            $keterangan = Yii::app()->request->getPost('keterangan');\n            $isAjax = Yii::app()->request->getPost('ajax');\n            if(!empty($keterangan)) {\n                if($is_korektor) {\n                    if($model->saveAttributes(array('is_approve' => 2))) {\n                        $blokir = OrderNameBlokir::model()->find('id_pesan=:id', array(':id' => $id));\n                        if(!$blokir) {\n                            $blokir = new OrderNameBlokir;\n                            $blokir->id_pesan = $id;\n                            $blokir->base = $type;\n                        }\n                        $blokir->keterangan_korektor = $keterangan;\n                        $blokir->tolak_by = Yii::app()->user->name;\n                        $blokir->tolak_date = date('Y-m-d H:i:s');\n                        if($blokir->save()) {\n                            $this->redirect(array('/sabh/pesanNama/koreksi' . ucwords($type)));\n                        }\n                    }\n                }\n                else {\n                    if($model->saveAttributes(array('is_active' => $val, 'is_approve' => 3))) {\n                        $blokir = OrderNameBlokir::model()->find('id_pesan=:id', array(':id' => $id));\n                        if(!$blokir) {\n                            $blokir = new OrderNameBlokir;\n                            $blokir->id_pesan = $id;\n                            $blokir->base = $type;\n                        }\n                        $blokir->keterangan = $keterangan;\n                        $blokir->blokir_by = Yii::app()->user->name;\n                        $blokir->blokir_date = date('Y-m-d H:i:s');\n                        if($blokir->save()) {\n                            $this->redirect(array('/sabh/pesanNama/verifikasi' . ucwords($type)));\n                        }\n                    }\n                }\n            }\n            else{\n                if($isAjax)\n                    echo '0^Keterangan harus diisi.';\n                else {\n                    if($is_korektor)\n                        $this->redirect(array('/sabh/pesanNama/koreksi' . ucwords($type)));\n                    else\n                        $this->redirect(array('/sabh/pesanNama/verifikasi' . ucwords($type)));\n                }\n                return;\n            }\n        }\n        else {\n            if($is_korektor)\n                $this->redirect(array('/sabh/pesanNama/koreksi' . ucwords($type)));\n            else\n                $this->redirect(array('/sabh/pesanNama/verifikasi' . ucwords($type)));\n        }\n        return;\n    }\n\n    /*\n    * 15/03/16\n    */\n\n    public function actionDisactive () {\n        $currentUrl = Yii::app()->request->url;\n        if(strtolower($currentUrl)=='/sabh/pesannama/disactive'){\n            // $this->redirect(array('/sabh/pesanNama/disactive/'));\n            header('Location: /sabh/pesanNama/disactive/');\n        }\n        $base = '';\n        $base = isset($_GET['yayasanListordername']) ? 'yayasanListordername' : $base;\n        $base = isset($_GET['perkumpulanListordername']) ? 'perkumpulanListordername' : $base;\n        $base = isset($_GET['perseroanListordername']) ? 'perseroanListordername' : $base;\n\n        switch($base){\n            case \"yayasanListordername\":\n                $condition = 'yayasan';\n                $selected = 'selectYayasan';\n                break;\n            case \"perkumpulanListordername\":\n                $condition = 'perkumpulan';\n                $selected = 'selectPerkumpulan';\n                break;\n            case \"perseroanListordername\":\n                $condition = 'perseroan';\n                $selected = 'selectPerseroan';\n                break;\n            default:\n                $condition = 'perkumpulan';\n                $selected = 'selectPerkumpulan';\n                break;\n        }\n\n        if($condition==='perseroan'){\n            $model = New OrderNamePerseroan('search');\n            $model->dbCriteria->condition = 'is_proses=\"0\" AND is_active=\"1\"';\n        }else{\n            $model = New OrderName('search');\n            $model->dbCriteria->condition = 'is_proses=\"0\"  AND is_active=\"1\" AND base=\"'. $condition .'\"';\n        }\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        if (isset($_GET[get_class($model)])) {\n            $model->attributes = $_GET[get_class($model)];\n        }\n        return $this->render('/yayasan/listdisactivename', array('model' => $model, $selected => ' selected=\"selected\"', 'base' => strtoupper($condition)));\n    }\n\n    public function actionDisactivePesanNama($id, $type='perseroan') {\n        if($type == 'perseroan'){\n            $model = OrderNamePerseroan::model()->find(\n                \"id_pesan=:id_pesan\",\n                array(\n                    \":id_pesan\" => $id\n                )\n            );\n        }else{\n            $model = OrderName::model()->find(\n                \"id_pesan=:id_pesan\",\n                array(\n                    \":id_pesan\" => $id\n                )\n            );\n        }\n        if($model) {\n            $isAjax = Yii::app()->request->getPost('ajax');\n            if($model->saveAttributes(array('is_active' => 0))) {\n                $hapus = new OrderNameHapus;\n                $hapus->id_pesan        = $id;\n                $hapus->base            = $type;\n                $hapus->nama            = $model->nama;\n                $hapus->nama_singkat    = $model->nama_singkat;\n                $hapus->id_notaris      = $model->id_notaris;\n                $hapus->tgl_pesan       = $model->tgl_pesan;\n                $hapus->tgl_exp_pesan   = $model->tgl_exp_pesan;\n                $hapus->is_proses       = $model->is_proses;\n                $hapus->no_voucher      = $model->no_voucher;\n                $hapus->nama_pemohon    = $model->nama_pemohon;\n                $hapus->telepon_pemohon = $model->telepon_pemohon;\n                $hapus->email_pemohon   = $model->email_pemohon;\n                $hapus->alamat_pemohon  = $model->alamat_pemohon;\n                $hapus->nama_wilayah   = $model->nama_wilayah;\n                $hapus->kode_wilayah   = $model->kode_wilayah;\n                $hapus->kegiatan        = $model->kegiatan;\n                $hapus->tgl_hapus       = date('Y-m-d H:i:s');\n                $hapus->deleted_by      = Yii::app()->user->name;\n                if($hapus->save()) {\n                    if ($isAjax) {\n                        RestApi::response(200, $hapus->attributes);\n                    } else {\n                        return $this->redirect(array('/sabh/pesanNama/disactive/'.$type.'Listordername'));\n                    }\n                }\n            }\n        }\n        if ($isAjax) {\n            RestApi::response(400);\n        } else {\n            return $this->redirect(array('/sabh/pesanNama/disactive/'.$type.'Listordername'));\n        }\n    }\n}\n\n\n--- File: 343 # components/DashboardHelper.php ---\n<?php\n\nclass DashboardHelper\n{\n    const TYPE_BAKUM = 0;\n    const TYPE_PERSEROAN = 1;\n    const TYPE_YAYASAN = 2;\n    const TYPE_MAKSUD_TUJUAN = 3;\n\n    /**\n     * @return array\n     */\n    public static function getTypeReports()\n    {\n        return array(\n            array('title'=>'Jumlah Badan Hukum Berdasarkan Wilayah'),\n            array('title'=>'Jumlah Jenis Perseroan Berdasarkan Wilayah'),\n            array('title'=>'Jumlah Jenis Kekayaan Awal Yayasan Berdasarkan Wilayah'),\n            array('title'=>'Jumlah Badan Hukum Berdasarkan Maksud dan Tujuan'),\n        );\n    }\n\n    /**\n     *\n     */\n    public static function getArrayTahunTransaksi($tanggalAwal, $tanggalAkhir)\n    {\n        $tahunAwal = date('Y', strtotime($tanggalAwal));\n        $tahunAkhir = date('Y', strtotime($tanggalAkhir));\n        // var $tahunAwal - 1\n        //$tahunAwal--;\n        $arrTahun = array();\n        for ($i=$tahunAwal; $i <= $tahunAkhir ; $i++) { \n            $arrTahun[] = $i;\n        }\n\n        return $arrTahun;\n    }\n\n    public static function getArrTahunValidTransaksi($kategori, $tanggalAwal, $tanggalAkhir)\n    {\n        $perseroanMapper = new PerseroanMapper();\n        $arrTahun = self::getArrayTahunTransaksi($tanggalAwal, $tanggalAkhir);\n        return $perseroanMapper->checkTableTransaksiBakumExist($kategori, $arrTahun);\n    }\n\n    public static function toParamBind(array $param)\n    {\n        $paramBind = array();\n        foreach ($param as $key => $value) {\n            $pdo = is_int($value) ? PDO::PARAM_INT : PDO::PARAM_STR;\n            $paramBind[] = array($key, $value, $pdo);\n        }\n\n        return $paramBind;\n    }\n\n    public static function getTotalColumn(array $data, $category, $field)\n    {\n        if (!empty($data)) {\n            $total = 0;\n            foreach ($data as $key => $value) {\n                $kategori = $value['kategori'];\n                if ($kategori !== $category) {\n                    continue;\n                } else {\n                    $items = $value['data'];\n                    if (!empty($items)) {\n                        foreach ($items as $subkey => $item) {\n                            $total+= (int) $item[$field.'_'.$category];\n                        }\n                        break;\n                    }\n                }\n            }\n            return $total;\n        }\n    }\n\n    public static function subtitleDateRange($tanggalAwal, $tanggalAkhir)\n    {\n        return $tanggalAwal == $tanggalAkhir ? Helpers::getDateFormatId($tanggalAwal) :\n            Helpers::getDateFormatId($tanggalAwal).' s.d '.Helpers::getDateFormatId($tanggalAkhir);\n    }\n\n    public static function generateChart(DashboardFilterForm $model){\n        if ($model->tanggal_awal !== '' && $model->tanggal_akhir !== '' && $model->provinsi_id !== '' && $model->kabupaten_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateRangeDateKabupatenChart($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateRangeDateKabupatenChart($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullRangeDateKabupatenChart($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateRangeDateKabupatenChart($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiRangeDateKabupatenChart($model);\n                    }\n            }\n        } elseif ($model->tanggal_awal !== '' && $model->tanggal_akhir !== '' && $model->provinsi_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateRangeDateProvinsiChart($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateRangeDateProvinsiChart($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullRangeDateProvinsiChart($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateRangeDateProvinsiChart($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiRangeDateProvinsiChart($model);\n                    }\n                    break;\n            }\n        } elseif ($model->tanggal_awal !== '' && $model->tanggal_akhir !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateRangeDateChart($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateRangeDateChart($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullRangeDateChart($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateRangeDateChart($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiRangeDateChart($model);\n                    }\n                    break;\n            }\n        } elseif ($model->provinsi_id !== '' && $model->kabupaten_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateKabupatenChart($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateKabupatenChart($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullKabupatenChart($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateKabupatenChart($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiKabupatenChart($model);\n                    }\n                    break;\n            }\n        } elseif ($model->provinsi_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateProvinsiChart($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateProvinsiChart($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullProvinsiChart($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateProvinsiChart($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiProvinsiChart($model);\n                    }\n                    break;\n            }\n        }\n    }\n\n    public static function generateGrid(DashboardFilterForm $model){\n        if ($model->tanggal_awal !== '' && $model->tanggal_akhir !== '' && $model->provinsi_id !== '' && $model->kabupaten_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateRangeDateKabupatenGrid($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateRangeDateKabupatenGrid($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullRangeDateKabupatenGrid($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateRangeDateKabupatenGrid($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiRangeDateKabupatenGrid($model);\n                    }\n                    break;\n            }\n        } elseif ($model->tanggal_awal !== '' && $model->tanggal_akhir !== '' && $model->provinsi_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateRangeDateProvinsiGrid($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateRangeDateProvinsiGrid($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullRangeDateProvinsiGrid($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateRangeDateProvinsiGrid($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiRangeDateProvinsiGrid($model);\n                    }\n                    break;\n            }\n        } elseif ($model->tanggal_awal !== '' && $model->tanggal_akhir !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateRangeDateGrid($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateRangeDateGrid($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullRangeDateGrid($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateRangeDateGrid($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiRangeDateGrid($model);\n                    }\n                    break;\n            }\n        } elseif ($model->provinsi_id !== '' && $model->kabupaten_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateKabupatenGrid($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateKabupatenGrid($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullKabupatenGrid($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateKabupatenGrid($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiKabupatenGrid($model);\n                    }\n                    break;\n            }\n        } elseif ($model->provinsi_id !== '') {\n            switch ($model->tipe) {\n                case 0:\n                    return DashboardBakumHelper::generateProvinsiGrid($model);\n                    break;\n                \n                case 1 :\n                    return DashboardPerseroanHelper::generateProvinsiGrid($model);\n                    break;\n\n                case 2:\n                    if ($model->kategori !== '' && $model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateFullProvinsiGrid($model);\n                    } elseif ($model->kategori !== '') {\n                        return DashboardYayasanHelper::generateProvinsiGrid($model);\n                    } elseif ($model->jenis_transaksi !== '') {\n                        return DashboardYayasanHelper::generateJenisTransaksiProvinsiGrid($model);\n                    }\n                    break;\n            }\n        }\n    }\n}\n\n\n--- File: 146 # models/UploadModalDasar.php ---\n<?php\n\n/**\n * This is the model class for table \"{{upload_modal_dasar}}\".\n *\n */\nclass UploadModalDasar extends CActiveRecord {\n\n    private static $_tablePrefix = 'tbl_upload_modal_dasar_';\n    private static $_models = array();\n    static $_tableName = 'tbl_upload_modal_dasar_2016';\n    static $_prefix = '';\n    static $pathUpload = '/uploads/ModalDasar/';\n    private $_md;\n    private $forceTahun = false;\n\n    public function __construct($scenario = 'insert', $prefix = null) {\n        if(null !== $prefix)\n            $this->forceTahun = true;\n\n        // $pr = $prefix !== NULL && !empty($prefix) ? $prefix : date('Y');\n        if (!empty($prefix) && $prefix <= date('Y'))\n            $pr = $prefix;\n        else\n            $pr = date('Y');\n\n        static::$_prefix = $pr;\n        static::$_tableName = static::$_tablePrefix . $pr;\n        $this->checkTableExist($pr);\n        parent::__construct($scenario);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection() {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    public function checkTableExist($prefix) {\n        $connection = Yii::app()->dbBadanHukum;\n        $cektable = $connection->createCommand(\"SHOW TABLES LIKE '\".preg_replace('/^[^.]+\\./', '', static::$_tableName).\"'\")->queryScalar();\n        if (!$cektable) {\n            $q = \"create table \" . static::$_tableName . \" like \" . self::$_tablePrefix . \"2016\";\n            $connection->createCommand($q)->query();\n        }\n    }\n\n    protected function setTableFromYear($prefix = NULL, $initMd = FALSE) {\n        if ($prefix === null || strlen($prefix) != 4){\n            $prefix = date('Y');\n        }\n\n        static::$_prefix = $prefix;\n        static::$_tableName = static::$_tablePrefix . $prefix;\n        $this->checkTableExist($prefix);\n\n        if ($initMd) {\n            $this->_md = NULL;\n        }\n    }\n\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return TransaksiYayasan the static model class\n     */\n    public static function model($prefix = NULL, $className = __CLASS__) {\n\n        if ($prefix === NULL)\n            $prefix = date('Y');\n\n        if (isset(static::$_models[$prefix . $className]))\n            return static::$_models[$prefix . $className];\n        else {\n            $model = static::$_models[$prefix . $className] = new $className(NULL, $prefix);\n            $model->_md = new CActiveRecordMetaData($model);\n            $model->attachBehaviors($model->behaviors());\n            return $model;\n        }\n    }\n\n    public function getMetaData() {\n        if ($this->_md !== null)\n            return $this->_md;\n        else\n            return $this->_md = static::model(static::$_prefix)->_md;\n    }\n\n    public function refreshMetaData() {\n        $finder = static::model(static::$_prefix);\n        $finder->_md = new CActiveRecordMetaData($finder);\n        if ($this !== $finder)\n            $this->_md = $finder->_md;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName() {\n        return static::$_tableName;\n    }\n\n    public function behaviors()\n    {\n        return array(\n            'LoggableBehavior' => array(\n                'class' => 'application.models.LoggableBehavior',\n            )\n        );\n    }\n\n    public function find($condition='',$params=array()) {\n        Yii::trace(get_class($this).'.find()','system.db.ar.CActiveRecord');\n        $criteria=$this->getCommandBuilder()->createCriteria($condition,$params);\n        return $this->_find($criteria);\n    }\n\n    public function findAll($condition='',$params=array()){\n        Yii::trace(get_class($this).'.findAll()','system.db.ar.CActiveRecord');\n        $criteria=$this->getCommandBuilder()->createCriteria($condition,$params);\n        return $this->_find($criteria, true);\n    }\n\n    public function findAllByAttributes($attributes,$condition='',$params=array()){\n        Yii::trace(get_class($this).'.findAllByAttributes()','system.db.ar.CActiveRecord');\n        $prefix=$this->getTableAlias(true).'.';\n        $criteria=$this->getCommandBuilder()->createColumnCriteria($this->getTableSchema(),$attributes,$condition,$params,$prefix);\n        return $this->_find($criteria, true);\n    }\n\n    public function findByAttributes($attributes,$condition='',$params=array()){\n        Yii::trace(get_class($this).'.findByAttributes()','system.db.ar.CActiveRecord');\n        $prefix=$this->getTableAlias(true).'.';\n        $criteria=$this->getCommandBuilder()->createColumnCriteria($this->getTableSchema(),$attributes,$condition,$params,$prefix);\n        return $this->_find($criteria);\n    }\n\n    private function _find($criteria, $all = false){\n        $order = '';\n        $oDesc = false;\n\n        if(!empty($criteria->condition)) {\n            if(preg_match('/nomor_transaksi \\s* = \\s* (\\:\\w+|([\\'\"])\\d{16}\\2)/misx', $criteria->condition, $match)) {\n                $idken = $match[1][0] == ':' ? $criteria->params[$match[1]] : substr($match[1], 1, -1);\n                $year = '20' . substr($idken, 2, 2);\n                $checkYear = SabhHelpers::cekTahun($year);\n                if (!empty($checkYear)) {\n                    $this->setTableFromYear($year);\n                }\n                $this->refreshMetaData();\n                return $this->query($criteria, $all);\n                // var_dump($match, $params, $criteria);\n            }\n            if(preg_match('/(?:\\s+|^) order \\s+ by \\s+ (.+?) (\\s+ limit \\s+ (\\d+(\\s*,\\s*\\d+)?))?$/misx', $criteria->condition, $match)){\n                $order = $match[1];\n            }\n        }\n        if($this->forceTahun)\n            return $this->query($criteria, $all);\n\n        if(!empty($criteria->order))\n            $order = $criteria->order;\n\n        $orders = preg_split('/\\s*,\\s*/ms', trim($order), -1, PREG_SPLIT_NO_EMPTY);\n        foreach($orders as $val)\n            if(preg_match('/\\s* created_date (\\s+ (?<order>asc|desc))? \\s*/misx', $val, $match))\n                if(isset($match['order']) and strtolower($match['order']) === 'desc')\n                    $oDesc = true;\n\n        $yearList = range(2014, intval(date('Y')));\n        if($oDesc)\n            $yearList = array_reverse($yearList);\n\n        $res = $all ? array() : null;\n\n        foreach($yearList as $year){\n            $this->setTableFromYear($year);\n            $this->refreshMetaData();\n            if($tmp = $this->query($criteria, $all)){\n                if($all)\n                    $res = array_merge($res, $tmp);\n                else{\n                    $res = $tmp;\n                    break;\n                }\n            }\n        }\n        return $res;\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('nomor_transaksi', 'unique'),\n            array('id, id_perseroan, nomor_transaksi, path, tahun, created_date, created_by, updated_date, updated_by', 'safe', 'on' => 'search'),\n            array('id_perseroan, nomor_transaksi, path, tahun, created_date, created_by, updated_date, updated_by', 'safe'),\n        );\n    }\n\n    /**\n     * @return array relational rules.\n     */\n    public function relations()\n    {\n        return array(\n        );\n    }\n\n    /**\n     * @return array customized attribute labels (name=>label)\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'id' => 'Id Upload Modal Dasar',\n            'id_perseroan' => 'Id Perseroan',\n            'nomor_transaksi' => 'Nomor Transaksi',\n            'path' => 'Path',\n            'tahun' => 'Tahun',\n            'created_date' => 'Tanggal Upload',\n            'created_by' => 'Created By',\n            'updated_date' => 'Modified Date',\n            'updated_by' => 'Modified By',\n        );\n    }\n\n    /**\n     * Funtion untuk upload dan re-upload akta\n     * @param   int     $id     id of UploadModalDasarLog\n     * @param   string  $tipeBuktiSetor     radiobutton\n     * @return  obj     obj     of UploadModalDasar\n     */\n    public function uploadModal($id, $tipeBuktiSetor=null)\n    {\n        $modelLog = UploadModalDasarLog::model()->findByPk($id);\n        if ($modelLog) {\n            $nomor_transaksi = $modelLog->nomor_transaksi;\n\n            $model = self::model()->find('nomor_transaksi=:no', [':no' => $nomor_transaksi]);\n            if (empty($model)) {\n                $model = new self;\n                $model->attributes = $modelLog->attributes;\n                $model->tipe_bukti_setor = $tipeBuktiSetor;\n                $model->created_by = Yii::app()->user->id;\n                $model->created_date = date('Y-m-d H:i:s');\n            } else {\n                return false;\n            }\n            try {\n                if (!empty($model) && $model->save()) {\n                    $modelLog->delete();\n                    return $model;\n                }\n            } catch(Exception $e){\n                LogSABH::insert(__FILE__, 'Error insert upload modal dasar ' . $e->getMessage());\n                return true;\n            }\n        }\n    }\n\n    public function reuploadModal($id, $tipeBuktiSetor=null)\n    {\n        $modelLog = UploadModalDasarLog::model()->findByPk($id);\n        if ($modelLog) {\n            $nomor_transaksi = $modelLog->nomor_transaksi;\n\n            $model = self::model()->find('nomor_transaksi=:no', [':no' => $nomor_transaksi]);\n            if (empty($model)) {\n                $model = new self;\n                $model->attributes = $modelLog->attributes;\n                $model->tipe_bukti_setor = $tipeBuktiSetor;\n                $model->created_by = Yii::app()->user->id;\n                $model->created_date = date('Y-m-d H:i:s');\n            } else {\n                $model->attributes = $modelLog->attributes;\n                $model->tipe_bukti_setor = $tipeBuktiSetor;\n                $model->updated_by = Yii::app()->user->id;\n                $model->updated_date = date('Y-m-d H:i:s');\n            }\n            try {\n                if (!empty($model) && $model->save()) {\n                    $modelLog->delete();\n                    return $model;\n                }\n            } catch(Exception $e){\n                LogSABH::insert(__FILE__, 'Error insert upload modal dasar ' . $e->getMessage());\n                return true;\n            }\n        }\n    }\n\n}\n\n\n--- File: 807 # views/yayasan/previewYayasan.php ---\n<style>\n    #previewYayasan .most-popular {\n        background: none repeat scroll 0 0 #ffffff !important;\n        color: #FFFFFF;\n    }\n    table.preview,.dataPendiriYayasanPrev table{\n        color: #000000;\n        width: 100% !important;\n        text-transform: uppercase;\n    }\n    table.preview span{\n        color:red;\n        text-transform: uppercase;\n    }\n\n    table.preview td {\n        text-align: left !important;\n    }\n\n    div.dataPendiriYayasanPrev table{}\n    div.dataPendiriYayasanPrev table>thead>tr>th:last-child{\n        display: none;\n    }\n    div.dataPendiriYayasanPrev table>tbody>tr>td:last-child{\n        display: none;\n    }\n    div.dataPendiriYayasanPrev table>tbody>tr>td{\n        text-align: left !important;\n    }\n    table.preview caption{\n        padding:5px 0px;\n        border-bottom:black 1px solid;margin-bottom:15px;background:#840E0E;color:#fff !important;\n    }\n    table.preview tbody.dataPengurusYayasanPrev > tr>td:last-child{display: none;}\n    hr{\n        border: solid 1px black;\n    }\n</style>\n\n<div id=\"overlay\" style=\"display:none; cursor: auto; background-color: rgba(0, 0, 0, 0.85); opacity: 0.85; position: fixed; top: 0px; left: 0px; right: 0px; bottom: 0px;\"></div>\n\n<div id=\"previewYayasan\" class=\"modal modal-lg modal-preview-perseroan fade in\" style=\"position:fixed; top:0; left:0; height:100%; text-align:center; margin: 0; width: 100%; display: none; background-color: rgba(0, 0, 0, .6);\">\n    <div class=\"pricing-table most-popular\" style=\"height: auto; width: 1000px; margin: 20px auto\">\n        <div class=\"pricing-head\">\n            <h2 style=\"padding:10px 50px; font-size:35px;\">PRATINJAU PENGISIAN DATA YAYASAN</h2>\n        </div>\n        <div style=\"font-size: 20px; padding: 10px 50px;\">\n            <div class=\"table-responsive\">\n\n                <table class=\"table preview\">\n                    <tr>\n                        <td>NAMA YAYASAN</td>\n                        <td>:</td>\n                        <td><span class=\"nama_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>NAMA SINGKATAN</td>\n                        <td>:</td>\n                        <td><span class=\"nama_singkat\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td style=\"width: 400px;\">PENDIRI YAYASAN</td>\n                        <td>:</td>\n                        <td><span class=\"jenis_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>PENDIRIAN BERDASARKAN ASAL USUL</td>\n                        <td>:</td>\n                        <td><span class=\"asal_usul\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>NPWP YAYASAN</td>\n                        <td>:</td>\n                        <td><span class=\"npwp\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>NOMOR REGISTRASI PENGADILAN</td>\n                        <td>:</td>\n                        <td><span class=\"nomor_pengesahan_pengadilan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>NOMOR TBN</td>\n                        <td>:</td>\n                        <td><span class=\"nomor_tbn\">N/A</span></td>\n                    </tr>\n                    <?php if($is_penyesuaian !== null): ?>\n                    <tr>\n                        <td>Izin Operasional</td>\n                        <td>:</td>\n                        <td><span class=\"izin_operasional\">N/A</span></td>\n                    </tr>\n                    <?php endif; ?>\n                </table>\n\n            </div>\n            <hr>\n            <div class=\"table-responsive\">\n                <table class=\"preview data-wasiat\">\n                    <caption>DATA WASIAT</caption>\n                    <tr>\n                        <td style=\"width: 537px;\">NOMOR WASIAT : <span class=\"nomor_wasiat\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>NAMA PEMBERI WASIAT : <span class=\"nama_pemberi_wasiat\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>NAMA NOTARIS PEMBUAT AKTA WASIAT : <span class=\"notaris_pembuat_wasiat\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>KEDUDUKAN NOTARIS PEMBUAT AKTA WASIAT : <span class=\"kedudukan_notaris\">N/A</span></td>\n                    </tr>\n                </table>\n            </div>\n            <hr>\n            <div class=\"table-responsive\">\n                <table class=\"table preview\">\n                    <caption>DATA YAYASAN</caption>\n                    <tr><!--\n                            <td>NAMA YAYASAN : <span class=\"nama_yayasan\">N/A</span></td>\n                            <td>&nbsp;</td>-->\n                        <td>NPWP YAYASAN : <span class=\"npwp_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"3\">ALAMAT : <span class=\"alamat_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>RT : <span class=\"rt_yayasan\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>RW : <span class=\"rw_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>PROVINSI : <span class=\"provinsi_yayasan\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>KABUPATEN : <span class=\"kabupaten_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>KECAMATAN : <span class=\"kecamatan_yayasan\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>KELURAHAN/DESA : <span class=\"kelurahan_yayasan\">N/A</span></td>\n                    </tr>\n                    <tr>\n                        <td>KODE POS : <span class=\"kode_pos_yayasan\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>&nbsp;</td>\n                    </tr>\n                    <tr>\n                        <td>NOMER TELEPON : <span class=\"nomor_telepon_yayasan\">N/A</span></td>\n                        <td>&nbsp;</td>\n                        <td>&nbsp;</td>\n                    </tr>\n                </table>\n            </div>\n            <hr>\n            <div class=\"table-responsive\">\n                <table class=\"table preview\">\n                    <caption>SUMBER KEKAYAAN</caption>\n                    <tr>\n                        <td valign=\"top\">KEKAYAAN AWAL : <span class=\"kekayaan_awal_yayasan\">N/A</span> >> <span class=\"nominal_kekayaan_awal\"></span></td>\n                        <!--\n                        <td>&nbsp;</td>\n                        <td valign=\"top\"><b>SUMBER KEKAYAAN LAIN:</b><br>\n                        -->\n                                <!--SUMBANGAN: <span class=\"sumbangan\">N/A</span><br>-->\n                        <!--\n                        PEMISAHAN : <span class=\"pemisahan\">N/A</span><br>\n                        WAKAF : <span class=\"wakaf\">N/A</span><br>\n                        -->\n                        <!--\n                        HIBAH : <span class=\"hibah\">N/A</span><br>\n                        HIBAH WASIAT : <span class=\"hibah_wasiat\">N/A</span><br>\n                        PEROLEHAN LAIN : <span class=\"perolehan_lain\">N/A</span><br>\n                        -->\n                        </td>\n                    </tr>\n                </table>\n                <div class=\"table-responsive\">\n                    <hr>\n                    <div class=\"table-responsive\">\n                        <table class=\"table preview\">\n                            <caption>\n                                AKTA NOTARIS\n                            </caption>\n                            <tr>\n                                <td>NOMOR AKTA YAYASAN : <span class=\"nomor_akta_yayasan\">N/A</span></td>\n                                <td>&nbsp;</td>\n                                <td>TANGGAL AKTA YAYASAN : <span class=\"tanggal_akta_yayasan\">N/A</span></td>\n                            </tr>\n                            <tr id=\"tr_akta_2\">\n                                <td>NOMOR AKTA YAYASAN : <span class=\"nomor_akta_yayasan2\">N/A</span></td>\n                                <td>&nbsp;</td>\n                                <td>TANGGAL AKTA YAYASAN : <span class=\"tanggal_akta_yayasan2\">N/A</span></td>\n                            </tr>\n                        </table>\n                    </div>\n                    <hr>\n                    <center style=\"padding:5px 0px;border-bottom:black 1px solid;margin-bottom:15px;background:#840E0E;color:#fff !important;\">\n                        PENDIRI YAYASAN\n                    </center>\n                    <div class=\"dataPendiriYayasanPrev\"></div>\n                    <hr>\n                    <center style=\"padding:5px 0px;border-bottom:black 1px solid;margin-bottom:15px;background:#840E0E;color:#fff !important;\">PENGURUS YAYASAN</center>\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-striped table-hover table-bordered dataTable preview\" style=\"color:#000000 !important;\">\n                            <caption style=\"text-align: left;background: white;color: #000 !important;\">\n                                PENDIRI, PEMBINA, PENGURUS, PENGAWAS\n                            </caption>\n                            <thead>\n                                <tr>\n                                    <th>Nama</th>\n                                    <th>No. KTP/Passport</th>\n                                    <th>Organ Yayasan</th>\n                                    <th>Jabatan</th>\n                                </tr>\n                            </thead>\n                            <tbody id=\"preview_pendiri_yayasanx\" class=\"dataPengurusYayasanPrev\" style=\"text-transform: uppercase;\">\n                            </tbody>\n                        </table>\n                    </div>\n                    <hr>\n                    <!-- Penyesuaian gak jadi ada daftar hadir rapat pembina -->\n                    <?php if (!empty($is_penyesuaian) && false): ?>\n                        <!-- Daftar Hadi rapat -->\n                        <center style=\"padding:5px 0px;border-bottom:black 1px solid;margin-bottom:15px;background:#840E0E;color:#fff !important;\">\n                            DAFTAR HADIR RAPAT PEMBINA\n                        </center>\n                        <div class=\"table-responsive preview_daftar_hadir\"></div>\n                        <hr>\n                    <?php endif; ?>\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table preview\">\n                            <caption>MAKSUD DAN TUJUAN</caption>\n                            <tr>\n                                <td colspan=\"3\">\n                                    SOSIAL : <span class=\"tujuan_sosial\">N/A</span><br>\n                                    KEMANUSIAAN : <span class=\"tujuan_kemanusiaan\">N/A</span><br>\n                                    KEAGAMAAN : <span class=\"tujuan_keagamaan\">N/A</span><br>\n                                </td>\n                            </tr>\n\n                        </table>\n                    </div>\n                    <div class=\"price-actions\">\n                        <a onclick=\"$('#previewYayasan,#overlay').fadeOut();\n                                $('#flag_pratinjau').val('');\n                                return false;\" class=\"btn\" href=\"javascript:;\">Kembali</a>\n                        &nbsp;\n                        <span id=\"proses_submit_msg\" class=\"btn btn-success\" style=\"display:none;\">Sedang proses..</span>\n                        <a onclick=\"$('#lanjutkansubmit').hide();\n                                $('#proses_submit_msg').show();\n                                $('#input-form').submit();\" href=\"javascript:;\" class=\"btn btn-success\" id=\"lanjutkansubmit\">Lanjutkan</a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n\n--- File: 517 # views/blokirPerkumpulan/detail/_suratJawaban.php ---\n<div x-data=\"suratJawaban()\" class=\"container py-4\">\n    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n        Konsep Surat Jawaban\n    </div>\n    <div class=\"form-content border border-gray-300 rounded p-4\" style=\"padding: 20px;\">\n        <div class=\"form-parent\">\n            <textarea name=\"surat_jawaban\" id=\"surat_jawaban\"></textarea>\n        </div>\n    </div>\n    \n    <div x-show=\"errors.hasilVerifikasi || errors.catatanVerifikasi\" class=\"mt-4 p-4 bg-red-50 border border-red-200 rounded\">\n        <h4 class=\"text-red-800 font-medium mb-2\">Error Validasi:</h4>\n        <div x-show=\"errors.hasilVerifikasi\" class=\"text-red-600 text-sm mb-1\" x-text=\"errors.hasilVerifikasi\"></div>\n        <div x-show=\"errors.catatanVerifikasi\" class=\"text-red-600 text-sm\" x-text=\"errors.catatanVerifikasi\"></div>\n    </div>\n\n    <div x-show=\"isContentChanged\" class=\"mt-4\">\n        <div class=\"form-group pt-12\">\n            <label for=\"keterangan_perubahan\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Keterangan Perubahan\n                <span class=\"text-red-500\">*</span>\n            </label>\n            <textarea \n                id=\"keterangan_perubahan\"\n                x-model=\"formData.keteranganPerubahan\"\n                class=\"form-control\"\n                rows=\"3\"\n                placeholder=\"Masukkan keterangan perubahan yang dilakukan pada surat jawaban\"\n                :class=\"{'border-red-500': errors.keteranganPerubahan}\">\n            </textarea>\n            <div x-show=\"errors.keteranganPerubahan\" class=\"text-red-500 text-sm mt-1\" x-text=\"errors.keteranganPerubahan\"></div>\n        </div>\n    </div>\n    \n    <div class=\"flex justify-between pt-12\">\n        <div class=\"flex gap-3\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"goBack()\">    <i class=\"icon-arrow-left\"></i> Kembali</button>\n            <button type=\"button\" class=\"btn btn-info\" @click=\"previewPdf()\" :disabled=\"!CKEDITOR.instances.surat_jawaban.getData().trim()\">\n                <i class=\"icon-eye-open\"></i> Preview PDF\n            </button>\n        </div>\n        <div class=\"flex gap-3\">\n\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"submitVerifikasi()\">Submit Verifikasi</button>\n        </div>\n    </div>\n</div>\n\n\n\n<script type=\"text/javascript\">\n    function suratJawaban() {\n        return {\n            get $parent() {\n                return Alpine.$data(document.getElementById('data-pratinjau'))\n            },\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                catatanVerifikasi: '',\n                keteranganPerubahan: ''\n            },\n            errors: {\n                hasilVerifikasi: null,\n                catatanVerifikasi: null,\n                keteranganPerubahan: null\n            },\n            isContentChanged: false,\n            originalContent: '',\n\n            init() {\n                const rawContent = `<?php include 'template/_surat.php'; ?>`;\n                const latestContent = this.$parent.viewData.suratJawaban;\n\n                const suratJawabanContent = latestContent ? latestContent?.trim() : rawContent?.trim();\n                this.originalContent = suratJawabanContent;\n                \n                this.editor = CKEDITOR.replace('surat_jawaban', {\n                    extraPlugins: 'base64image'\n                });\n                initCkeditorPlugins(this.editor);\n\n                this.editor.setData(suratJawabanContent);\n\n                this.editor.on('instanceReady', () => {\n                    this.autofillTemplate();\n                });\n                \n                this.editor.on('change', () => {\n                    this.checkContentChanged();\n                });\n                \n                this.editor.on('key', () => {\n                    setTimeout(() => {\n                        this.checkContentChanged();\n                    }, 100);\n                });\n            },\n\n            autofillTemplate() {\n                if (!this.editor) return;\n                \n                let content = this.editor.getData();\n                \n                const replacements = {\n                    '{{nama_pemohon}}': this.getNamaPemohon(),\n                    '{{alamat_pemohon}}': this.getAlamatPemohon(),\n                    '{{tanggal_surat}}': this.getTanggalSurat(),\n                    '{{nomor_permohonan}}': this.getNomorSuratPermohonan(),\n                };\n                \n                Object.entries(replacements).forEach(([placeholder, value]) => {\n                    if (value) {\n                        content = content.replace(new RegExp(placeholder, 'g'), value);\n                    }\n                });\n                \n                this.editor.setData(content);\n            },\n\n            getNamaPemohon() {\n                if (this.$parent.viewData.pemohonData.jenisAkun === \"INSTANSI\") {\n                    return this.$parent.viewData.pemohonData.namaPejabat;\n                }\n\n                return this.$parent.viewData.pemohonData.namaPerorangan;\n            },\n\n            getAlamatPemohon() {\n                return this.$parent.viewData.pemohonData.alamat;\n            },\n\n            getNomorSuratPermohonan() {\n                return this.$parent.viewData.nomorPermohonan;\n            },\n\n            getTanggalSurat() {\n                const today = new Date();\n                const day = String(today.getDate()).padStart(2, '0');\n                const month = String(today.getMonth() + 1).padStart(2, '0');\n                const year = today.getFullYear();\n                return `${day}/${month}/${year}`;\n            },\n\n            checkContentChanged() {\n                const currentContent = this.editor.getData().trim();\n                this.isContentChanged = currentContent !== this.originalContent;\n                \n                if (!this.isContentChanged) {\n                    this.formData.keteranganPerubahan = '';\n                    this.errors.keteranganPerubahan = null;\n                }\n            },\n\n            goBack() {\n                this.$parent.prevStage();\n            },\n            \n            validateForm() {\n                const parentData = this.$parent;\n                const hasilVerifikasi = parentData?.formData?.hasilVerifikasi;\n                const catatanVerifikasi = parentData?.formData?.alasan;\n\n                this.errors.hasilVerifikasi = null;\n                this.errors.catatanVerifikasi = null;\n                this.errors.keteranganPerubahan = null;\n\n                this.errors.hasilVerifikasi = !hasilVerifikasi ? 'Hasil verifikasi harus dipilih' : null;\n\n                if (hasilVerifikasi === STATUS_VERIFIKASI.DITOLAK) {\n                    this.errors.catatanVerifikasi = !catatanVerifikasi ? 'Catatan verifikasi harus diisi jika menolak' : null;\n                } else {\n                    this.errors.catatanVerifikasi = null;\n                }\n\n                if (this.isContentChanged) {\n                    this.errors.keteranganPerubahan = !this.formData.keteranganPerubahan.trim() ? 'Keterangan perubahan harus diisi ketika mengubah isi surat' : null;\n                } else {\n                    this.errors.keteranganPerubahan = null;\n                }\n\n                return Object.values(this.errors).every(e => !e);\n            },\n\n            async previewPdf() {\n                const permohonanId = this.$parent?.viewData?.permohonanId;\n\n                if (!permohonanId) {\n                    alert('Permohonan ID tidak ditemukan');\n                    return;\n                }\n\n                const suratJawabanContent = this.editor.getData();\n\n                if (!suratJawabanContent.trim()) {\n                    alert('Konten surat jawaban kosong');\n                    return;\n                }\n\n                this.$loading.startLoading('preview-pdf');\n\n                try {\n                    this.previewPdfViaForm(suratJawabanContent, permohonanId);\n\n                } catch (error) {\n                    await this.previewPdfViaFetch(suratJawabanContent, permohonanId);\n                } finally {\n                    this.$loading.stopLoading('preview-pdf');\n                }\n            },\n\n            previewPdfViaForm(content, permohonanId) {\n                const form = document.createElement('form');\n                form.method = 'POST';\n                form.action = '/sabh/api/pdf/generateAndServe';\n                form.target = '_blank';\n                \n                const contentInput = document.createElement('input');\n                contentInput.type = 'hidden';\n                contentInput.name = 'content';\n                contentInput.value = content;\n                form.appendChild(contentInput);\n                \n                const idInput = document.createElement('input');\n                idInput.type = 'hidden';\n                idInput.name = 'permohonan_id';\n                idInput.value = permohonanId;\n                form.appendChild(idInput);\n                \n                document.body.appendChild(form);\n                form.submit();\n                document.body.removeChild(form);\n            },\n\n            async previewPdfViaFetch(content, permohonanId) {\n                try {\n                    const url = new URL('/sabh/api/pdf/generate', window.location.origin);\n\n                    const payload = {\n                        content: content,\n                        permohonan_id: permohonanId\n                    };\n\n                    const [res, err] = await safeFetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: 'include',\n                        body: JSON.stringify(payload),\n                        loadingSet: this.$loading?.loadingSet,\n                    });\n\n                    if (err) {\n                        alert('Gagal membuat preview PDF: ' + (err.message || 'Terjadi kesalahan'));\n                        return;\n                    }\n\n                    if (res.data) {\n                        const pdfBlob = new Blob([atob(res.data)], { type: 'application/pdf' });\n                        const pdfUrl = URL.createObjectURL(pdfBlob);\n                        window.open(pdfUrl, '_blank');\n                        \n                        setTimeout(() => URL.revokeObjectURL(pdfUrl), 10000);\n                    } else {\n                        alert('Format respons PDF tidak dikenali');\n                    }\n\n                } catch (error) {\n                    alert('Terjadi kesalahan saat membuat preview PDF');\n                }\n            },\n\n            getVerifikasiEndpoint() {\n                const statusPermohonan = this.$parent?.viewData?.statusPermohonan;\n\n                switch (statusPermohonan) {\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_JENDERAL:\n                        return '/sabh/api/pemblokiran/perkumpulan/verifikasi/direktur-jenderal';\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_JENDERAL:\n                        return '/sabh/api/pemblokiran/perkumpulan/verifikasi/direktur-bu';\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_DIREKTUR_BU:\n                        return '/sabh/api/pemblokiran/perkumpulan/verifikasi/verifikator';\n                    case STATUS_PERMOHONAN_PERKUMPULAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_PERKUMPULAN.DITOLAK_VERIFIKATOR:\n                        return '/sabh/api/pemblokiran/perkumpulan/verifikasi/konseptor';\n                    default:\n                        return '/sabh/api/pemblokiran/perkumpulan/verifikasi/konseptor';\n                }\n            },\n\n            submitVerifikasi() {\n                if (!this.validateForm()) return;\n\n                const parentData = this.$parent;\n                const permohonanId = parentData?.viewData?.permohonanId;\n                const hasilVerifikasi = parentData?.formData?.hasilVerifikasi;\n                const catatan = parentData?.formData?.alasan;\n\n                if (!permohonanId) {\n                    alert('Permohonan ID tidak ditemukan');\n                    return;\n                }\n\n                const suratJawabanContent = this.editor.getData();\n\n                const payload = {\n                    permohonan_id: parseInt(permohonanId),\n                    approve: hasilVerifikasi === STATUS_VERIFIKASI.DITERIMA,\n                    catatan: catatan || '',\n                    suratJawaban: suratJawabanContent || null,\n                    catatanSuratJawaban: this.isContentChanged ? this.formData.keteranganPerubahan : null\n                };\n\n                this.submitToBackend(payload);\n            },\n\n            async submitToBackend(payload) {\n\n                this.$loading.startLoading('submit-verifikasi');\n\n                try {\n                    const url = new URL(this.getVerifikasiEndpoint(), window.location.origin);\n\n                    const [res, err] = await safeFetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: 'include',\n                        body: payload,\n                        loadingSet: this.$loading?.loadingSet,\n                    });\n\n                    if (err) {\n                        alert('Gagal menyimpan verifikasi: ' + (err.message || 'Terjadi kesalahan'));\n                        return;\n                    }\n\n                    alert('Verifikasi berhasil disimpan!');\n                    \n                    window.location.href = '/sabh/blokirPerkumpulan/daftarPermohonan';\n\n                } catch (error) {\n                    console.error('Unexpected error:', error);\n                    alert('Terjadi kesalahan yang tidak terduga');\n                } finally {\n                    this.$loading.stopLoading('submit-verifikasi');\n                }\n            },\n        };\n    }\n</script>\n\n--- File: 964 # views/blokirYayasan/detail/_suratJawaban.php ---\n<div x-data=\"suratJawaban()\" class=\"container py-4\">\n    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n        Konsep Surat Jawaban\n    </div>\n    <div class=\"form-content border border-gray-300 rounded p-4\" style=\"padding: 20px;\">\n        <div class=\"form-parent\">\n            <textarea name=\"surat_jawaban\" id=\"surat_jawaban\"></textarea>\n        </div>\n    </div>\n    \n    <div x-show=\"errors.hasilVerifikasi || errors.catatanVerifikasi\" class=\"mt-4 p-4 bg-red-50 border border-red-200 rounded\">\n        <h4 class=\"text-red-800 font-medium mb-2\">Error Validasi:</h4>\n        <div x-show=\"errors.hasilVerifikasi\" class=\"text-red-600 text-sm mb-1\" x-text=\"errors.hasilVerifikasi\"></div>\n        <div x-show=\"errors.catatanVerifikasi\" class=\"text-red-600 text-sm\" x-text=\"errors.catatanVerifikasi\"></div>\n    </div>\n\n    <div x-show=\"isContentChanged\" class=\"mt-4\">\n        <div class=\"form-group pt-12\">\n            <label for=\"keterangan_perubahan\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Keterangan Perubahan\n                <span class=\"text-red-500\">*</span>\n            </label>\n            <textarea \n                id=\"keterangan_perubahan\"\n                x-model=\"formData.keteranganPerubahan\"\n                class=\"form-control\"\n                rows=\"3\"\n                placeholder=\"Masukkan keterangan perubahan yang dilakukan pada surat jawaban\"\n                :class=\"{'border-red-500': errors.keteranganPerubahan}\">\n            </textarea>\n            <div x-show=\"errors.keteranganPerubahan\" class=\"text-red-500 text-sm mt-1\" x-text=\"errors.keteranganPerubahan\"></div>\n        </div>\n    </div>\n    \n    <div class=\"flex justify-between pt-12\">\n        <div class=\"flex gap-3\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"goBack()\">    <i class=\"icon-arrow-left\"></i> Kembali</button>\n            <button type=\"button\" class=\"btn btn-info\" @click=\"previewPdf()\" :disabled=\"!CKEDITOR.instances.surat_jawaban.getData().trim()\">\n                <i class=\"icon-eye-open\"></i> Preview PDF\n            </button>\n        </div>\n        <div class=\"flex gap-3\">\n\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"submitVerifikasi()\">Submit Verifikasi</button>\n        </div>\n    </div>\n</div>\n\n\n\n<script type=\"text/javascript\">\n\n\n    function suratJawaban() {\n        return {\n            get $parent() {\n                return Alpine.$data(document.getElementById('data-pratinjau'))\n            },\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                catatanVerifikasi: '',\n                keteranganPerubahan: ''\n            },\n            errors: {\n                hasilVerifikasi: null,\n                catatanVerifikasi: null,\n                keteranganPerubahan: null\n            },\n            isContentChanged: false,\n            originalContent: '',\n            editor: null,\n\n            init() {\n                const rawContent = `<?php include 'template/_surat.php'; ?>`;\n                const latestContent = this.$parent.viewData.suratJawaban;\n\n                const suratJawabanContent = latestContent ? latestContent?.trim() : rawContent.trim();\n                this.originalContent = suratJawabanContent;\n                \n                \n                this.editor = CKEDITOR.replace('surat_jawaban', {\n                    extraPlugins: 'base64image'\n                });\n                initCkeditorPlugins(this.editor);\n\n                this.editor.setData(suratJawabanContent);\n                \n                this.editor.on('instanceReady', () => {\n                    this.autofillTemplate();\n                });\n\n                this.editor.on('change', () => {\n                    this.checkContentChanged();\n                });\n                \n                this.editor.on('key', () => {\n                    setTimeout(() => {\n                        this.checkContentChanged();\n                    }, 100);\n                });\n\n            \n            },\n\n            autofillTemplate() {\n                if (!this.editor) return;\n                \n                let content = this.editor.getData();\n                \n                const replacements = {\n                    '{{nama_pemohon}}': this.getNamaPemohon(),\n                    '{{alamat_pemohon}}': this.getAlamatPemohon(),\n                    '{{tanggal_surat}}': this.getTanggalSurat(),\n                    '{{nomor_permohonan}}': this.getNomorSuratPermohonan(),\n                };\n                \n                Object.entries(replacements).forEach(([placeholder, value]) => {\n                    if (value) {\n                        content = content.replace(new RegExp(placeholder, 'g'), value);\n                    }\n                });\n                \n                this.editor.setData(content);\n            },\n\n            getNamaPemohon() {\n                return this.$parent.viewData.pemohonData.namaPerorangan;\n            },\n\n            getAlamatPemohon() {\n                return this.$parent.viewData.pemohonData.alamat;\n            },\n\n            getNomorSuratPermohonan() {\n                return this.$parent.viewData.nomorPermohonan;\n            },\n\n            getTanggalSurat() {\n                const today = new Date();\n                const day = String(today.getDate()).padStart(2, '0');\n                const month = String(today.getMonth() + 1).padStart(2, '0');\n                const year = today.getFullYear();\n                return `${day}/${month}/${year}`;\n            },\n\n            checkContentChanged() {\n                const currentContent = this.editor.getData().trim();\n                this.isContentChanged = currentContent !== this.originalContent;\n                \n                if (!this.isContentChanged) {\n                    this.formData.keteranganPerubahan = '';\n                    this.errors.keteranganPerubahan = null;\n                }\n            },\n\n            goBack() {\n                this.$parent.prevStage();\n            },\n            \n            validateForm() {\n                const parentData = this.$parent;\n                const hasilVerifikasi = parentData?.formData?.hasilVerifikasi;\n                const catatanVerifikasi = parentData?.formData?.alasan;\n\n                this.errors.hasilVerifikasi = null;\n                this.errors.catatanVerifikasi = null;\n                this.errors.keteranganPerubahan = null;\n\n                this.errors.hasilVerifikasi = !hasilVerifikasi ? 'Hasil verifikasi harus dipilih' : null;\n\n                if (hasilVerifikasi === STATUS_VERIFIKASI.DITOLAK) {\n                    this.errors.catatanVerifikasi = !catatanVerifikasi ? 'Catatan verifikasi harus diisi jika menolak' : null;\n                } else {\n                    this.errors.catatanVerifikasi = null;\n                }\n\n                if (this.isContentChanged) {\n                    this.errors.keteranganPerubahan = !this.formData.keteranganPerubahan.trim() ? 'Keterangan perubahan harus diisi ketika mengubah isi surat' : null;\n                } else {\n                    this.errors.keteranganPerubahan = null;\n                }\n\n                return Object.values(this.errors).every(e => !e);\n            },\n\n            async previewPdf() {\n                const permohonanId = this.$parent?.viewData?.permohonanId;\n\n                if (!permohonanId) {\n                    alert('Permohonan ID tidak ditemukan');\n                    return;\n                }\n\n                const suratJawabanContent = this.editor.getData();\n\n                if (!suratJawabanContent.trim()) {\n                    alert('Konten surat jawaban kosong');\n                    return;\n                }\n\n                this.$loading.startLoading('preview-pdf');\n\n                try {\n                    this.previewPdfViaForm(suratJawabanContent, permohonanId);\n\n                } catch (error) {\n                    console.error('Form submission failed, trying fetch method:', error);\n                    await this.previewPdfViaFetch(suratJawabanContent, permohonanId);\n                } finally {\n                    this.$loading.stopLoading('preview-pdf');\n                }\n            },\n\n            previewPdfViaForm(content, permohonanId) {\n                const form = document.createElement('form');\n                form.method = 'POST';\n                form.action = '/sabh/api/pdf/generateAndServe';\n                form.target = '_blank';\n                \n                const contentInput = document.createElement('input');\n                contentInput.type = 'hidden';\n                contentInput.name = 'content';\n                contentInput.value = content;\n                form.appendChild(contentInput);\n                \n                const idInput = document.createElement('input');\n                idInput.type = 'hidden';\n                idInput.name = 'permohonan_id';\n                idInput.value = permohonanId;\n                form.appendChild(idInput);\n                \n                document.body.appendChild(form);\n                form.submit();\n                document.body.removeChild(form);\n            },\n\n            async previewPdfViaFetch(content, permohonanId) {\n                try {\n                    const url = new URL('/sabh/api/pdf/generate', window.location.origin);\n\n                    const payload = {\n                        content: content,\n                        permohonan_id: permohonanId\n                    };\n\n                    const [res, err] = await safeFetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: 'include',\n                        body: JSON.stringify(payload),\n                        loadingSet: this.$loading?.loadingSet,\n                    });\n\n                    if (err) {\n                        console.error('Error generating PDF preview:', err);\n                        alert('Gagal membuat preview PDF: ' + (err.message || 'Terjadi kesalahan'));\n                        return;\n                    }\n\n                    if (res.data) {\n                        const pdfBlob = new Blob([atob(res.data)], { type: 'application/pdf' });\n                        const pdfUrl = URL.createObjectURL(pdfBlob);\n                        window.open(pdfUrl, '_blank');\n                        \n                        setTimeout(() => URL.revokeObjectURL(pdfUrl), 10000);\n                    } else {\n                        alert('Format respons PDF tidak dikenali');\n                    }\n\n                } catch (error) {\n                    console.error('Fetch method error:', error);\n                    alert('Terjadi kesalahan saat membuat preview PDF');\n                }\n            },\n\n            getVerifikasiEndpoint() {\n                const statusPermohonan = this.$parent?.viewData?.statusPermohonan;\n\n                switch (statusPermohonan) {\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_JENDERAL:\n                        return '/sabh/api/pemblokiran/yayasan/verifikasi/direktur-jenderal';\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_DIREKTUR_BU:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_JENDERAL:\n                        return '/sabh/api/pemblokiran/yayasan/verifikasi/direktur-bu';\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_VERIFIKATOR:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_DIREKTUR_BU:\n                        return '/sabh/api/pemblokiran/yayasan/verifikasi/verifikator';\n                    case STATUS_PERMOHONAN_YAYASAN.MENUNGGU_KONSEPTOR:\n                    case STATUS_PERMOHONAN_YAYASAN.DITOLAK_VERIFIKATOR:\n                        return '/sabh/api/pemblokiran/yayasan/verifikasi/konseptor';\n                    default:\n                        return '/sabh/api/pemblokiran/yayasan/verifikasi/konseptor';\n                }\n            },\n\n            submitVerifikasi() {\n                if (!this.validateForm()) return;\n\n                const parentData = this.$parent;\n                const permohonanId = parentData?.viewData?.permohonanId;\n                const hasilVerifikasi = parentData?.formData?.hasilVerifikasi;\n                const catatan = parentData?.formData?.alasan;\n\n                if (!permohonanId) {\n                    alert('Permohonan ID tidak ditemukan');\n                    return;\n                }\n\n                const suratJawabanContent = this.editor.getData();\n\n                const payload = {\n                    permohonan_id: parseInt(permohonanId),\n                    approve: hasilVerifikasi === STATUS_VERIFIKASI.DITERIMA,\n                    catatan: catatan || '',\n                    suratJawaban: suratJawabanContent || null,\n                    catatanSuratJawaban: this.isContentChanged ? this.formData.keteranganPerubahan : null\n                };\n\n                this.submitToBackend(payload);\n            },\n\n            async submitToBackend(payload) {\n\n                this.$loading.startLoading('submit-verifikasi');\n\n                try {\n                    const url = new URL(this.getVerifikasiEndpoint(), window.location.origin);\n\n                    const [res, err] = await safeFetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: 'include',\n                        body: payload,\n                        loadingSet: this.$loading?.loadingSet,\n                    });\n\n                    if (err) {\n                        console.error('Error submitting verifikasi:', err);\n                        alert('Gagal menyimpan verifikasi: ' + (err.message || 'Terjadi kesalahan'));\n                        return;\n                    }\n\n                    alert('Verifikasi berhasil disimpan!');\n                    \n                    window.location.href = '/sabh/blokirYayasan/daftarPermohonan';\n\n                } catch (error) {\n                    console.error('Unexpected error:', error);\n                    alert('Terjadi kesalahan yang tidak terduga');\n                } finally {\n                    this.$loading.stopLoading('submit-verifikasi');\n                }\n            },\n        };\n    }\n</script>\n\n--- File: 137 # models/BoDetailForm.php ---\n<?php\n\n/**\n * Form model untuk detail data BO\n *\n */\nclass BoDetailForm extends CFormModel\n{\n    public $id;\n    public $base;\n    public $kriteria;\n    public $jenis;\n    public $perorangan;\n    public $badan_hukum;\n\n    public $nama;\n    public $tipe_identitas;\n    public $identitas;\n    public $tempat_lahir;\n    public $tgl_lahir;\n    public $kewarganegaraan;\n    public $negara;\n    public $alamat_negara_asal;\n\n    public $nama_badan_hukum;\n    public $nomor_sk;\n\n    public $alamat;\n    public $npwp;\n    public $hubungan;\n    public $disclaimer;\n    public $is_new;\n\n    public $provinsi;\n    public $kecamatan;\n    public $kabupaten;\n    public $kelurahan;\n    public $rt;\n    public $rw;\n\n    // tambahan properti untuk ditampilkan di table\n    public $v_nama;\n    public $v_identitas;\n    public $v_ttl;\n    public $v_kewarganegaraan;\n    // id pesaham\n    public $id_pesaham;\n\n    public $state;\n    public $uncheck;\n\n    const JENIS_PERORANGAN = 'Perorangan';\n    const JENIS_BADAN_HUKUM = 'Badan Hukum';\n\n    const STATE_CREATE = 'create';\n    const STATE_UPDATE = 'update';\n\n    /**\n     * @inheritdoc\n     */\n    public function init()\n    {\n        $this->kriteria = array();\n        $this->jenis = self::JENIS_PERORANGAN;\n        $this->perorangan = new BoPeroranganForm();\n        $this->badan_hukum = new BoBadanHukumForm();\n        $this->state = self::STATE_CREATE;\n        $this->is_new = 1;\n    }\n\n    /**\n     * @return array rules model\n     */\n    public function rules()\n    {\n        return array(\n            array('kriteria', 'validateKriteria'),\n            array('jenis', 'required'),\n            array('jenis', 'in', 'range' => $this->listJenis()),\n            array('perorangan', 'validatePerorangan'),\n            array('badan_hukum', 'validateBadanHukum'),\n            array('disclaimer, is_new', 'boolean'),\n            array('nama, tipe_identitas, identitas, tempat_lahir, tgl_lahir,\n                  kewarganegaraan, negara, alamat_negara_asal, nama_badan_hukum,\n                  nomor_sk, alamat, npwp, hubungan', 'filter', 'filter' => 'trim'),\n            array('nama, tipe_identitas, identitas, tempat_lahir, tgl_lahir,\n                  kewarganegaraan, negara, alamat_negara_asal, nama_badan_hukum,\n                  nomor_sk, alamat, npwp, hubungan', 'filter', 'filter' => 'strip_tags'),\n            array('id, base, v_nama, v_identitas, v_ttl, v_kewarganegaraan, state, id_pesaham,provinsi, kabupaten, kecamatan, kelurahan, rt, rw', 'safe'),\n        );\n    }\n\n    /**\n     * @return array label model\n     */\n    public function attributeLabels()\n    {\n        $base = empty($this->base) ? 'badan hukum' : $this->base;\n        return array(\n            'kriteria' => 'Pemilik Manfaat dari '.$base.' merupakan orang \n                perseorangan yang memenuhi kriteria:'\n        );\n    }\n\n    /**\n     *\n     */\n    public function beforeValidate()\n    {\n        $this->cekPemegangSaham();\n        return parent::beforeValidate();\n    }\n\n    /**\n     * set kriteria sebagai array kosong jika value nya string kosong\n     */\n    public function afterValidate()\n    {\n        if ($this->kriteria == '') {\n            $this->kriteria = array();\n        }\n        return parent::afterValidate();\n    }\n\n    /**\n     * @return array list kriteria BO perseroan\n     */\n    public function listKriteria()\n    {\n        $data = array();\n        $criteria = new CDbCriteria();\n        $criteria->select = 'kode, kriteria';\n        $criteria->order = 'kriteria';\n        if (!empty($this->base)) {\n            $criteria->condition = 'base =:base';\n            $criteria->params = array(':base'=>$this->base);\n            $data = KriteriaBo::model()->findAll($criteria);\n        }\n        return CHtml::listData($data, 'kode', 'kriteria');\n    }\n\n    /**\n     * @return array list jenis dari BO\n     */\n    public function listJenis()\n    {\n        return array(\n            self::JENIS_PERORANGAN => self::JENIS_PERORANGAN,\n            self::JENIS_BADAN_HUKUM => self::JENIS_BADAN_HUKUM,\n        );\n    }\n\n    /**\n     * Validasi pilihan kriteria\n     */\n    public function validateKriteria($attribute, $params)\n    {\n        if (is_array($this->$attribute)) {\n            if (count($this->$attribute) === 0) {\n                $this->addError($attribute, 'Minimal satu kriteria harus dipilih.');\n            }\n        } else {\n            $this->addError($attribute, 'Invalid kriteria.');\n        }\n    }\n\n    /**\n     * Validasi untuk jenis BO 'Perorangan'\n     */\n    public function validatePerorangan($attribute, $params)\n    {\n        if (!$this->hasErrors() && $this->jenis === self::JENIS_PERORANGAN) {\n            if ($this->perorangan instanceof BoPeroranganForm) {\n                $perorangan = $this->perorangan;\n                if ($perorangan->kewarganegaraan == \"WNA\") {\n                    $perorangan->scenario = 'wna';\n                }\n\n                if ($this->uncheck == '1') {\n                    $perorangan->scenario = 'skip';\n                }\n                if (!$perorangan->validate()) {\n                    $this->addError($attribute, 'Gagal validasi perorangan.');\n                }\n            } else {\n                $this->addError($attribute, 'Model bukan instance dari BoPeroranganForm.');\n            }\n        }\n    }\n\n    /**\n     * Validasi untuk jenis BO 'Badan Hukum'\n     */\n    public function validateBadanHukum($attribute, $params)\n    {\n        if (!$this->hasErrors() && $this->jenis === self::JENIS_BADAN_HUKUM) {\n            if ($this->badan_hukum instanceof BoBadanHukumForm) {\n                $badan_hukum = $this->badan_hukum;\n                if (!$badan_hukum->validate()) {\n                    $this->addError($attribute, 'Gagal validasi badan_hukum.');\n                }\n            } else {\n                $this->addError($attribute, 'Model bukan instance dari BoBadanHukumForm.');\n            }\n        }\n    }\n\n    /**\n     * Assign value dari model BoPeroranganForm atau BoBadanHukumForm\n     * ke attribute model BoDetailForm yang sesuai\n     */\n    public function assign()\n    {\n        if (!$this->hasErrors()) {\n            if ($this->jenis === self::JENIS_PERORANGAN) {\n                $this->attributes = $this->perorangan->attributes;\n            } else {\n                $this->attributes = $this->badan_hukum->attributes;\n            }\n        }\n    }\n\n    public function reverseAssign()\n    {\n        if ($this->jenis === self::JENIS_PERORANGAN) {\n            $perorangan = new BoPeroranganForm();\n            $perorangan->attributes = $this->attributes;\n            $this->perorangan = $perorangan;\n        } else {\n            $badanHukum = new BoBadanHukumForm();\n            $badanHukum->attributes = $this->attributes;\n            $this->badan_hukum = $badanHukum;\n        }\n    }\n\n    public function assignFromTransaksi($transaksiDetail)\n    {\n        $this->attributes = $transaksiDetail->attributes;\n        $this->tgl_lahir = date('d-m-Y', strtotime($transaksiDetail->tgl_lahir));\n        $this->reverseAssign();\n        $this->setValueTambahan();\n        $this->kriteria = CJSON::decode($this->kriteria);\n    }\n\n    public function assignFromApi($transaksiDetailApi)\n    {\n        // mapping data dari API ke attribute\n        $this->nama = $transaksiDetailApi['nama_lengkap'];\n        $this->tipe_identitas = $transaksiDetailApi['jenis_identitas'] == \"PASPOR\" ? \"Paspor\" : $transaksiDetailApi['jenis_identitas'];\n        $this->identitas = $transaksiDetailApi['nomor_identitas'];\n        $this->tempat_lahir = $transaksiDetailApi['tempat_lahir'];\n        $this->tgl_lahir = date('d-m-Y', strtotime($transaksiDetailApi['tanggal_lahir']));\n        $this->kewarganegaraan = $transaksiDetailApi['kewarganegaraan'];\n        $this->negara = $transaksiDetailApi['negara'];\n        $this->alamat_negara_asal = $transaksiDetailApi['kewarganegaraan'] == \"WNA\" ? $transaksiDetailApi['alamat'] : \"\";\n        $this->alamat = $transaksiDetailApi['alamat'];\n        $this->npwp = $transaksiDetailApi['npwp'];\n        $this->hubungan = $transaksiDetailApi['hubungan_bo'];\n        $this->provinsi = $transaksiDetailApi['id_provinsi'];\n        $this->kabupaten = $transaksiDetailApi['id_kabupaten'];\n        $this->kecamatan = $transaksiDetailApi['id_kecamatan'];\n        $this->kelurahan = BoAPI::getKelurahan($transaksiDetailApi['id_kelurahan']);\n        $this->rt = $transaksiDetailApi['rt'];\n        $this->rw = $transaksiDetailApi['rw'];\n\n        $this->reverseAssign();\n        $this->setValueTambahan();\n        $this->kriteria = BoAPI::assignKriteria($this->base, $transaksiDetailApi['kriteria']);\n    }\n\n    /**\n     * Assign value attribute tambahan\n     */\n    public function setValueTambahan()\n    {\n        if ($this->jenis === self::JENIS_PERORANGAN) {\n            $this->v_nama = $this->nama;\n            $this->v_identitas = $this->identitas;\n            $this->v_ttl = $this->tempat_lahir . ' / ' . date('d-m-Y', strtotime($this->tgl_lahir));\n            $this->v_kewarganegaraan = $this->kewarganegaraan;\n        } else {\n            $this->v_nama = $this->nama_badan_hukum;\n            $this->v_identitas = $this->nomor_sk;\n            $this->v_ttl = $this->v_kewarganegaraan = '-';\n        }\n    }\n\n    /**\n     *\n     */\n    public function cekPemegangSaham()\n    {\n        if (!empty($this->kriteria) && in_array('saham', $this->kriteria) && $this->base === 'perseroan') {\n            $this->hubungan = 'Pemegang Saham';\n            if ($this->perorangan instanceof BoPeroranganForm) {\n                $this->perorangan->hubungan = $this->hubungan;\n            }\n            if ($this->badan_hukum instanceof BoBadanHukumForm) {\n                $this->badan_hukum->hubungan = $this->hubungan;\n            }\n        }\n    }\n\n    public function assignFromPTP($boPTP)\n    {\n        $typeIdentities = [\n            \"1\" => \"NIK\",\n            \"2\" => \"SIM\",\n            \"3\" => \"Paspor\",\n        ];\n\n        $typeIdentity = null;\n\n        if (isset($typeIdentities[$boPTP['identityTypeId']])) {\n            $typeIdentity = $typeIdentities[$boPTP['identityTypeId']];\n        }\n        // mapping data dari API ke attribute\n        $this->nama = $boPTP['benefitName'];\n        $this->tipe_identitas = $typeIdentity;\n        $this->identitas = $boPTP['identityValue'];\n        $this->tempat_lahir = $boPTP['benefitBirthplace'];\n        $this->tgl_lahir = date('d-m-Y', strtotime($boPTP['benefitBirthdate']));\n        $this->kewarganegaraan = $boPTP['benefitNationality'];\n        $this->alamat = $boPTP['benefitAddress'];\n        $this->npwp = $boPTP['benefitNpwp'];\n        $this->hubungan = $boPTP['benefitRelation'];\n        $this->rt = $boPTP['benefitRt'];\n        $this->rw = $boPTP['benefitRw'];\n\n        $kriteria = explode(',', strtoupper($boPTP['criteriaValue']));\n\n        $this->reverseAssign();\n        $this->setValueTambahan();\n        $this->kriteria = BoAPI::assignKriteria($this->base, $kriteria);\n    }\n\n    public function validateDukcapil()\n    {\n        $validation = null;\n        if ($this->perorangan) {\n            $validation = $this->perorangan->validateDukcapil($this->base);\n        }\n\n        return $validation;\n    }\n}\n\n\n--- File: 91 # models/PermohonanPemblokiranPT.php ---\n<?php\n\n/**\n * PermohonanPemblokiranPT model\n * \n * Database model for permohonan pemblokiran PT (blocking request for PT)\n * Matches the CreatePermohonanPemblokiranPTDto structure exactly\n */\nclass PermohonanPemblokiranPT extends CActiveRecord\n{\n    /**\n     * Returns the static model of the specified AR class\n     * \n     * @param string $className active record class name\n     * @return PermohonanPemblokiranPT the static model class\n     */\n    public static function model($className = __CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    /**\n     * Returns the associated database table name\n     * \n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return 'AHU_BADAN_HUKUM.permohonan_pemblokiran_pt';\n    }\n\n    /**\n     * Returns the validation rules for model attributes\n     * \n     * @return array validation rules for model attributes\n     */\n    public function rules()\n    {\n        return [\n            // Data Permohonan\n            ['jenis_layanan_permohonan, kategori_permohonan, nama_perseroan_terbatas, alasan_permohonan', 'required'],\n            ['jenis_layanan_permohonan, kategori_permohonan, nama_perseroan_terbatas, alasan_permohonan', 'length', 'max' => 255],\n            ['kode_voucher', 'length', 'max' => 100],\n            \n            // Data Pemohon\n            ['status_pemohon, nama_pemohon, nik, jabatan, email, no_telepon', 'required'],\n            ['status_pemohon, nama_pemohon, jabatan', 'length', 'max' => 255],\n            ['nik, nik_notaris', 'length', 'max' => 16],\n            ['email, email_notaris', 'email'],\n            ['no_telepon, no_telepon_notaris', 'length', 'max' => 20],\n            \n            // Data Notaris\n            ['nama_notaris, nik_notaris, email_notaris, no_telepon_notaris', 'required'],\n            ['nama_notaris', 'length', 'max' => 255],\n            \n            // Dokumen Persyaratan - URLs are optional but should be valid URLs if provided\n            ['url_surat_permohonan, url_bukti_pelaporan_pemilik_manfaat, url_putusan_atau_penetapan_pengadilan, url_riwayat_perubahan_saham, url_surat_kuasa_atau_akta_notaris, url_laporan_keuangan_audit, url_laporan_pajak_tahunan, url_surat_keterangan_waris, url_surat_perdamaian_atau_akta_perdamaian, url_laporan_keuangan_dan_pajak, url_surat_pencabutan_perkara_atau_putusan_sengketa', 'url'],\n            ['url_surat_permohonan, url_bukti_pelaporan_pemilik_manfaat, url_putusan_atau_penetapan_pengadilan, url_riwayat_perubahan_saham, url_surat_kuasa_atau_akta_notaris, url_laporan_keuangan_audit, url_laporan_pajak_tahunan, url_surat_keterangan_waris, url_surat_perdamaian_atau_akta_perdamaian, url_laporan_keuangan_dan_pajak, url_surat_pencabutan_perkara_atau_putusan_sengketa', 'length', 'max' => 500],\n            \n            // Safe attributes for mass assignment\n            ['jenis_layanan_permohonan, kategori_permohonan, kode_voucher, nama_perseroan_terbatas, alasan_permohonan, status_pemohon, nama_pemohon, nik, jabatan, email, no_telepon, nama_notaris, nik_notaris, email_notaris, no_telepon_notaris, url_surat_permohonan, url_bukti_pelaporan_pemilik_manfaat, url_putusan_atau_penetapan_pengadilan, url_riwayat_perubahan_saham, url_surat_kuasa_atau_akta_notaris, url_laporan_keuangan_audit, url_laporan_pajak_tahunan, url_surat_keterangan_waris, url_surat_perdamaian_atau_akta_perdamaian, url_laporan_keuangan_dan_pajak, url_surat_pencabutan_perkara_atau_putusan_sengketa', 'safe', 'on' => 'search'],\n        ];\n    }\n\n    /**\n     * Returns the attribute labels for model attributes\n     * \n     * @return array attribute labels (name => label)\n     */\n    public function attributeLabels()\n    {\n        return [\n            // Data Permohonan\n            'jenis_layanan_permohonan' => 'Jenis Layanan Permohonan',\n            'kategori_permohonan' => 'Kategori Permohonan',\n            'kode_voucher' => 'Kode Voucher',\n            'nama_perseroan_terbatas' => 'Nama Perseroan Terbatas',\n            'alasan_permohonan' => 'Alasan Permohonan',\n            \n            // Data Pemohon\n            'status_pemohon' => 'Status Pemohon',\n            'nama_pemohon' => 'Nama Pemohon',\n            'nik' => 'NIK',\n            'jabatan' => 'Jabatan',\n            'email' => 'Email',\n            'no_telepon' => 'No Telepon',\n            \n            // Data Notaris\n            'nama_notaris' => 'Nama Notaris',\n            'nik_notaris' => 'NIK Notaris',\n            'email_notaris' => 'Email Notaris',\n            'no_telepon_notaris' => 'No Telepon Notaris',\n            \n            // Dokumen Persyaratan\n            'url_surat_permohonan' => 'URL Surat Permohonan',\n            'url_bukti_pelaporan_pemilik_manfaat' => 'URL Bukti Pelaporan Pemilik Manfaat',\n            'url_putusan_atau_penetapan_pengadilan' => 'URL Putusan atau Penetapan Pengadilan',\n            'url_riwayat_perubahan_saham' => 'URL Riwayat Perubahan Saham',\n            'url_surat_kuasa_atau_akta_notaris' => 'URL Surat Kuasa atau Akta Notaris',\n            'url_laporan_keuangan_audit' => 'URL Laporan Keuangan Audit',\n            'url_laporan_pajak_tahunan' => 'URL Laporan Pajak Tahunan',\n            'url_surat_keterangan_waris' => 'URL Surat Keterangan Waris',\n            'url_surat_perdamaian_atau_akta_perdamaian' => 'URL Surat Perdamaian atau Akta Perdamaian',\n            'url_laporan_keuangan_dan_pajak' => 'URL Laporan Keuangan dan Pajak',\n            'url_surat_pencabutan_perkara_atau_putusan_sengketa' => 'URL Surat Pencabutan Perkara atau Putusan Sengketa',\n        ];\n    }\n\n    /**\n     * Retrieves a list of models based on the current search/filter conditions\n     * \n     * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions\n     */\n    public function search()\n    {\n        $criteria = new CDbCriteria;\n\n        // Data Permohonan\n        $criteria->compare('jenis_layanan_permohonan', $this->jenis_layanan_permohonan, true);\n        $criteria->compare('kategori_permohonan', $this->kategori_permohonan, true);\n        $criteria->compare('kode_voucher', $this->kode_voucher, true);\n        $criteria->compare('nama_perseroan_terbatas', $this->nama_perseroan_terbatas, true);\n        $criteria->compare('alasan_permohonan', $this->alasan_permohonan, true);\n\n        // Data Pemohon\n        $criteria->compare('status_pemohon', $this->status_pemohon, true);\n        $criteria->compare('nama_pemohon', $this->nama_pemohon, true);\n        $criteria->compare('nik', $this->nik, true);\n        $criteria->compare('jabatan', $this->jabatan, true);\n        $criteria->compare('email', $this->email, true);\n        $criteria->compare('no_telepon', $this->no_telepon, true);\n\n        // Data Notaris\n        $criteria->compare('nama_notaris', $this->nama_notaris, true);\n        $criteria->compare('nik_notaris', $this->nik_notaris, true);\n        $criteria->compare('email_notaris', $this->email_notaris, true);\n        $criteria->compare('no_telepon_notaris', $this->no_telepon_notaris, true);\n\n        // Dokumen Persyaratan\n        $criteria->compare('url_surat_permohonan', $this->url_surat_permohonan, true);\n        $criteria->compare('url_bukti_pelaporan_pemilik_manfaat', $this->url_bukti_pelaporan_pemilik_manfaat, true);\n        $criteria->compare('url_putusan_atau_penetapan_pengadilan', $this->url_putusan_atau_penetapan_pengadilan, true);\n        $criteria->compare('url_riwayat_perubahan_saham', $this->url_riwayat_perubahan_saham, true);\n        $criteria->compare('url_surat_kuasa_atau_akta_notaris', $this->url_surat_kuasa_atau_akta_notaris, true);\n        $criteria->compare('url_laporan_keuangan_audit', $this->url_laporan_keuangan_audit, true);\n        $criteria->compare('url_laporan_pajak_tahunan', $this->url_laporan_pajak_tahunan, true);\n        $criteria->compare('url_surat_keterangan_waris', $this->url_surat_keterangan_waris, true);\n        $criteria->compare('url_surat_perdamaian_atau_akta_perdamaian', $this->url_surat_perdamaian_atau_akta_perdamaian, true);\n        $criteria->compare('url_laporan_keuangan_dan_pajak', $this->url_laporan_keuangan_dan_pajak, true);\n        $criteria->compare('url_surat_pencabutan_perkara_atau_putusan_sengketa', $this->url_surat_pencabutan_perkara_atau_putusan_sengketa, true);\n\n        return new CActiveDataProvider($this, [\n            'criteria' => $criteria,\n            'sort' => [\n                'defaultOrder' => 'id DESC',\n            ],\n        ]);\n    }\n\n    /**\n     * Creates a new PermohonanPemblokiranPT from DTO data\n     * \n     * @param CreatePermohonanPemblokiranPTDto $dto The DTO object\n     * @return PermohonanPemblokiranPT The created model instance\n     */\n    public static function createFromDto($dto)\n    {\n        $model = new self();\n        \n        // Data Permohonan\n        $model->jenis_layanan_permohonan = $dto->jenis_layanan_permohonan;\n        $model->kategori_permohonan = $dto->kategori_permohonan;\n        $model->kode_voucher = $dto->kode_voucher;\n        $model->nama_perseroan_terbatas = $dto->nama_perseroan_terbatas;\n        $model->alasan_permohonan = $dto->alasan_permohonan;\n        \n        // Data Pemohon\n        $model->status_pemohon = $dto->status_pemohon;\n        $model->nama_pemohon = $dto->nama_pemohon;\n        $model->nik = $dto->nik;\n        $model->jabatan = $dto->jabatan;\n        $model->email = $dto->email;\n        $model->no_telepon = $dto->no_telepon;\n        \n        // Data Notaris\n        $model->nama_notaris = $dto->nama_notaris;\n        $model->nik_notaris = $dto->nik_notaris;\n        $model->email_notaris = $dto->email_notaris;\n        $model->no_telepon_notaris = $dto->no_telepon_notaris;\n        \n        // Dokumen Persyaratan\n        $model->url_surat_permohonan = $dto->url_surat_permohonan;\n        $model->url_bukti_pelaporan_pemilik_manfaat = $dto->url_bukti_pelaporan_pemilik_manfaat;\n        $model->url_putusan_atau_penetapan_pengadilan = $dto->url_putusan_atau_penetapan_pengadilan;\n        $model->url_riwayat_perubahan_saham = $dto->url_riwayat_perubahan_saham;\n        $model->url_surat_kuasa_atau_akta_notaris = $dto->url_surat_kuasa_atau_akta_notaris;\n        $model->url_laporan_keuangan_audit = $dto->url_laporan_keuangan_audit;\n        $model->url_laporan_pajak_tahunan = $dto->url_laporan_pajak_tahunan;\n        $model->url_surat_keterangan_waris = $dto->url_surat_keterangan_waris;\n        $model->url_surat_perdamaian_atau_akta_perdamaian = $dto->url_surat_perdamaian_atau_akta_perdamaian;\n        $model->url_laporan_keuangan_dan_pajak = $dto->url_laporan_keuangan_dan_pajak;\n        $model->url_surat_pencabutan_perkara_atau_putusan_sengketa = $dto->url_surat_pencabutan_perkara_atau_putusan_sengketa;\n        \n        return $model;\n    }\n} \n\n--- File: 1162 # mappers/DYayasanRangeDateMapper.php ---\n<?php\n\nclass DYayasanRangeDateMapper extends MapperBase\n{\n    public function findAll(\n        $kategori,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.status_transaksi,\n            b.created,\n            b.tahun,\n            b.no_transaksi,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllFull(\n        $kategori,\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        BaseEnum::changeFormatJenisYayasan($kategori);\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.status_transaksi,\n            b.created,\n            b.no_transaksi,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.jenis_kekayaan_awal = \"'.$kategori.'\"\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllJenisTransaksi(\n        $jenis_transaksi,\n        $tahun,\n        array $param = [],\n        $cmdReturn = false,\n        $method = 'queryAll'\n    ) {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id,\n            b.kabupaten_nama,\n            b.provinsi_nama,\n            b.no_transaksi,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.jenis_transaksi = \"'.$jenis_transaksi.'\"\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS transaksi');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllYears(\n        $kategori,\n        $tanggalAwal,\n        $tanggalAkhir,\n        array $param = [],\n        $method = 'queryAll'\n    ) {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::YAYASAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAll($kategori, $tahun, array(), false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n           *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$kategori);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsFull(\n        $kategori,\n        $jenis_transaksi,\n        $tanggalAwal,\n        $tanggalAkhir,\n        array $param = [],\n        $method = 'queryAll'\n    ) {\n        $alias = $kategori.'_'.$jenis_transaksi;\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::YAYASAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllFull($kategori, $jenis_transaksi, $tahun, array(), false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$alias);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsJenisTransaksi(\n        $jenis_transaksi,\n        $tanggalAwal,\n        $tanggalAkhir,\n        array $param = [],\n        $method = 'queryAll'\n    ) {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(\n            BaseEnum::YAYASAN,\n            $tanggalAwal,\n            $tanggalAkhir\n        );\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllJenisTransaksi(\n                $jenis_transaksi,\n                $tahun,\n                array(),\n                false,\n                'getText'\n            );\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS '.$jenis_transaksi);\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYearsGroup($kategori, $tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$kategori);\n        $cmd->from('('.$this->findAllYears($kategori, $tanggalAwal, $tanggalAkhir, array(), 'getText').') AS '.$kategori);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYearsFullGroup($kategori, $jenis_transaksi, $tanggalAwal, $tanggalAkhir, $param)\n    {\n        $alias = $kategori.'_'.$jenis_transaksi;\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$alias);\n        $cmd->from('('.$this->findAllYearsFull(\n            $kategori,\n            $jenis_transaksi,\n            $tanggalAwal,\n            $tanggalAkhir,\n            array(),\n            'getText').') AS '.$alias);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYearsJenisTransaksiGroup(\n        $jenis_transaksi,\n        $tanggalAwal,\n        $tanggalAkhir,\n        $param\n    ) {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_'.$jenis_transaksi);\n        $cmd->from('('.$this->findAllYearsJenisTransaksi(\n            $jenis_transaksi,\n            $tanggalAwal,\n            $tanggalAkhir,\n            array(),\n            'getText'\n        ).') AS '.$jenis_transaksi);\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 932 # views/blokirPerseroan/create/index.php ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/dialog') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n<?php $this->renderPartial('_common/_constants') ?>\n\n\n<div x-data=\"blokirPerseroanForm()\" id=\"blokir-perseroan-form\">\n    <div class=\"permohonan-header\">\n        <h1>PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES</h1>\n\n        <div class=\"progress-bar\">\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 1}\">1</div>\n                <div class=\"step-label\">Data Permohonan</div>\n            </div>\n            <div class=\"step-connector\"></div>\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 2}\">2</div>\n                <div class=\"step-label\">Data Pemohon</div>\n            </div>\n            <div class=\"step-connector\"></div>\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 3}\">3</div>\n                <div class=\"step-label\">Unggah Dokumen</div>\n            </div>\n            <div class=\"step-connector\"></div>\n            <div class=\"step\">\n                <div class=\"step-number\" :class=\"{'step-active': stage >= 4}\">4</div>\n                <div class=\"step-label\">Pratinjau</div>\n            </div>\n        </div>\n    </div>\n\n\n    <template x-if=\"stage === 1\">\n        <div>\n            <?php $this->renderPartial('create/_dataPermohonan') ?>\n        </div>\n    </template>\n\n    <template x-if=\"stage === 2\">\n        <div>\n            <?php $this->renderPartial('create/_dataPemohon') ?>\n        </div>\n    </template>\n\n    <template x-if=\"stage === 3\">\n        <div>\n            <?php $this->renderPartial('create/_dataDokumen') ?>\n        </div>\n    </template>\n\n    <template x-if=\"stage === 4\">\n        <div>\n            <?php $this->renderPartial('create/_dataPratinjau') ?>\n        </div>\n    </template>\n</div>\n\n\n<script type=\"text/javascript\">\n    function blokirPerseroanForm() {\n        return {\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            stage: 1,\n\n            userId: <?php echo Yii::app()->user->id; ?>,\n\n\n            formData: {\n                jenisPermohonan: JENIS_PERMOHONAN.SEBAGIAN,\n                jenisLayanan: JENIS_LAYANAN.BLOKIR,\n                namaPerseroan: 'PT Dummy Perseroan',\n                kodeVoucher: 'VCHR123456',\n                alasanPermohonan: 'Permohonan blokir akses karena perubahan kepemilikan.',\n                selectedPerseroan: {\n                    nama: 'PT Dummy Perseroan',\n                    nomor_transaksi: 'NIB123456789',\n                    npwp: '12.345.678.9-012.345',\n                    status: 'Aktif',\n                    alamat: 'Jl. Dummy Raya No. 123, Jakarta'\n                },\n\n                statusPemohonNama: 'Ahli Waris Pemegang Saham',\n                statusPemohonKey: STATUS_PEMOHON.AHLI_WARIS_PEMEGANG_SAHAM,\n                namaPemohon: 'Budi Santoso',\n                nikPemohon: '3174090909090001',\n                jabatanPemohon: 'Direktur',\n                emailPemohon: 'budi.santoso@email.com',\n                teleponPemohon: '081234567890',\n                jenisPemegangSaham: JENIS_PEMEGANG_SAHAM.PERORANGAN,\n                namaBadanHukum: 'PT Dummy Perseroan',\n\n                namaNotaris: 'Siti Notaris',\n                nikNotaris: '3174090909090002',\n                emailNotaris: 'siti.notaris@email.com',\n                teleponNotaris: '081298765432',\n            },\n\n            userProfile: null,\n\n\n            init() {\n                this.loadUserProfile();\n            },\n\n            async loadUserProfile() {\n                const [res, err] = await safeFetch('/sabh/api/blokirAuth/me', {\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error loading user profile:', err);\n                    alert('Error loading user profile');\n                    return;\n                }\n\n                this.userProfile = res.data;\n                console.log(this.userProfile);\n            },\n\n            submitFirstForm(\n                jenisLayanan,\n                jenisPermohonan,\n                kodeVoucher,\n                alasanPermohonan,\n                selectedPerseroan\n            ) {\n                this.formData.jenisLayanan = jenisLayanan;\n                this.formData.jenisPermohonan = jenisPermohonan;\n                this.formData.kodeVoucher = kodeVoucher;\n                this.formData.alasanPermohonan = alasanPermohonan;\n                this.formData.selectedPerseroan = selectedPerseroan;\n            },\n\n            submitSecondFormPemohon(\n                statusPemohonNama,\n                statusPemohonKey,\n                namaPemohon,\n                nikPemohon,\n                jabatanPemohon,\n                emailPemohon,\n                teleponPemohon,\n                jenisPemegangSaham,\n                namaBadanHukum\n            ) {\n                this.formData.statusPemohonNama = statusPemohonNama;\n                this.formData.statusPemohonKey = statusPemohonKey;\n                this.formData.namaPemohon = namaPemohon;\n                this.formData.nikPemohon = nikPemohon;\n                this.formData.jabatanPemohon = jabatanPemohon;\n                this.formData.emailPemohon = emailPemohon;\n                this.formData.teleponPemohon = teleponPemohon;\n                this.formData.jenisPemegangSaham = jenisPemegangSaham;\n                this.formData.namaBadanHukum = namaBadanHukum;\n            },\n\n            submitSecondFormNotaris(\n                namaNotaris,\n                nikNotaris,\n                emailNotaris,\n                teleponNotaris\n            ) {\n                this.formData.namaNotaris = namaNotaris;\n                this.formData.nikNotaris = nikNotaris;\n                this.formData.emailNotaris = emailNotaris;\n                this.formData.teleponNotaris = teleponNotaris;\n            },\n\n\n            submitThirdForm(\n                files\n            ) {\n                for (const key in DOCUMENT_FIELDS) {\n                    if (files[key]) {\n                        this.formData[key] = files[key];\n                    }\n                }\n\n            },\n\n\n            documentsToPayload: {\n                [DOCUMENT_FIELDS.SURAT_PERMOHONAN]: 'url_surat_permohonan',\n                [DOCUMENT_FIELDS.BUKTI_PELAPORAN]: 'url_bukti_pelaporan_pemilik_manfaat',\n                [DOCUMENT_FIELDS.PUTUSAN_PENGADILAN]: 'url_putusan_atau_penetapan_pengadilan',\n                [DOCUMENT_FIELDS.LAPORAN_KEUANGAN_AUDIT]: 'url_laporan_keuangan_audit',\n                [DOCUMENT_FIELDS.LABORAN_PAJAK_TAHUNAN]: 'url_laporan_pajak_tahunan',\n                [DOCUMENT_FIELDS.RIWAYAT_PERUBAHAN_SAHAM]: 'url_riwayat_perubahan_saham',\n                [DOCUMENT_FIELDS.SURAT_PERMOHONAN]: 'url_surat_permohonan',\n                [DOCUMENT_FIELDS.BUKTI_PELAPORAN]: 'url_bukti_pelaporan_pemilik_manfaat',\n                [DOCUMENT_FIELDS.PUTUSAN_PENGADILAN]: 'url_putusan_atau_penetapan_pengadilan',\n                [DOCUMENT_FIELDS.LAPORAN_KEUANGAN_AUDIT]: 'url_laporan_keuangan_audit',\n                [DOCUMENT_FIELDS.LABORAN_PAJAK_TAHUNAN]: 'url_laporan_pajak_tahunan',\n                [DOCUMENT_FIELDS.RIWAYAT_PERUBAHAN_SAHAM]: 'url_riwayat_perubahan_saham',\n                [DOCUMENT_FIELDS.SURAT_KETERANGAN_WARIS]: 'url_surat_keterangan_waris',\n                [DOCUMENT_FIELDS.SURAT_KUASA]: 'url_surat_kuasa_atau_akta_notaris',\n                [DOCUMENT_FIELDS.SURAT_PERDAMAIAN]: 'url_surat_perdamaian_atau_akta_perdamaian',\n                [DOCUMENT_FIELDS.LABORAN_KEUANGAN_DAN_PAJAK]: 'url_laporan_keuangan_dan_pajak',\n                [DOCUMENT_FIELDS.PENCABUTAN_PERKARA_ATAU_PUTUSAN_SENGKETA]: 'url_surat_pencabutan_perkara_atau_putusan_sengketa',\n            },\n\n\n\n\n            async createPermohonan() {\n                const filesPayload = Object.keys(this.documentsToPayload).reduce((acc, key) => {\n                    if (this.formData[key]) {\n                        acc[this.documentsToPayload[key]] = this.formData[key].path;\n                    }\n                    return acc;\n                }, {});\n                \n                const payload = {\n                    jenis_layanan_permohonan: this.formData.jenisLayanan,\n                    kategori_permohonan: this.formData.jenisPermohonan,\n                    kode_voucher: this.formData.kodeVoucher,\n                    nama_perseroan_terbatas: this.formData.namaPerseroan,\n                    alasan_permohonan: this.formData.alasanPermohonan,\n                    status_pemohon: this.formData.statusPemohonKey,\n                    nama_pemohon: this.formData.namaPemohon,\n                    nik: this.formData.nikPemohon,\n                    jabatan: this.formData.jabatanPemohon,\n                    email: this.formData.emailPemohon,\n                    no_telepon: this.formData.teleponPemohon,\n                    nama_notaris: this.formData.namaNotaris,\n                    nik_notaris: this.formData.nikNotaris,\n                    email_notaris: this.formData.emailNotaris,\n                    no_telepon_notaris: this.formData.teleponNotaris,\n                   \n                    ...filesPayload,\n                }\n\n                console.log(payload)\n\n                const [res, err] = await safeFetch('/sabh/api/permohonanPemblokiranPT/create', {\n                    method: 'POST',\n                    body: payload,\n                    loadingSet: this.$loading.loadingSet,\n                });\n\n                if (err) {\n                    console.error('Error creating permohonan:', err);\n                    alert('Error creating permohonan');\n                    return;\n                }\n\n                console.log(res);\n                // $dto = new CreatePermohonanPemblokiranPTDto();\n\n// // Data Permohonan\n// $dto->jenis_layanan_permohonan = ArrayHelper::get($data, 'jenis_layanan_permohonan');\n// $dto->kategori_permohonan = ArrayHelper::get($data, 'kategori_permohonan');\n// $dto->kode_voucher = ArrayHelper::get($data, 'kode_voucher');\n// $dto->nama_perseroan_terbatas = ArrayHelper::get($data, 'nama_perseroan_terbatas');\n// $dto->alamat_permohonan = ArrayHelper::get($data, 'alamat_permohonan');\n\n// // Data Pemohon\n// $dto->status_pemohon = ArrayHelper::get($data, 'status_pemohon');\n// $dto->nama_pemohon = ArrayHelper::get($data, 'nama_pemohon');\n// $dto->nik = ArrayHelper::get($data, 'nik');\n// $dto->jabatan = ArrayHelper::get($data, 'jabatan');\n// $dto->email = ArrayHelper::get($data, 'email');\n// $dto->no_telepon = ArrayHelper::get($data, 'no_telepon');\n\n// // Data Notaris\n// $dto->nama_notaris = ArrayHelper::get($data, 'nama_notaris');\n// $dto->nik_notaris = ArrayHelper::get($data, 'nik_notaris');\n// $dto->email_notaris = ArrayHelper::get($data, 'email_notaris');\n// $dto->no_telepon_notaris = ArrayHelper::get($data, 'no_telepon_notaris');\n\n// // Dokumen Persyaratan\n// $dto->url_surat_permohonan = ArrayHelper::get($data, 'url_surat_permohonan');\n// $dto->url_bukti_pelaporan_pemilik_manfaat = ArrayHelper::get($data, 'url_bukti_pelaporan_pemilik_manfaat');\n// $dto->url_putusan_atau_penetapan_pengadilan = ArrayHelper::get($data, 'url_putusan_atau_penetapan_pengadilan');\n// $dto->url_riwayat_perubahan_saham = ArrayHelper::get($data, 'url_riwayat_perubahan_saham');\n// $dto->url_surat_kuasa_atau_akta_notaris = ArrayHelper::get($data, 'url_surat_kuasa_atau_akta_notaris');\n// $dto->url_laporan_keuangan_audit = ArrayHelper::get($data, 'url_laporan_keuangan_audit');\n// $dto->url_laporan_pajak_tahunan = ArrayHelper::get($data, 'url_laporan_pajak_tahunan');\n// $dto->url_surat_keterangan_waris = ArrayHelper::get($data, 'url_surat_keterangan_waris');\n// $dto->url_surat_perdamaian_atau_akta_perdamaian = ArrayHelper::get($data, 'url_surat_perdamaian_atau_akta_perdamaian');\n// $dto->url_laporan_keuangan_dan_pajak = ArrayHelper::get($data, 'url_laporan_keuangan_dan_pajak');\n// $dto->url_surat_pencabutan_perkara_atau_putusan_sengketa = ArrayHelper::get($data, 'url_surat_pencabutan_perkara_atau_putusan_sengketa');\n            },\n\n            submitFourthForm() {\n                this.createPermohonan();\n            },\n\n            nextStage() {\n                if (this.stage < 4) this.stage++;\n            },\n\n            prevStage() {\n                if (this.stage > 1) this.stage--;\n            },\n\n            submitForm() {\n                alert('Form submitted!');\n            }\n        };\n    }\n</script>\n\n--- File: 1158 # mappers/DBakumRangeDateMapper.php ---\n<?php\n\nclass DBakumRangeDateMapper extends MapperBase\n{\n    public function findAllPerseroan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            p.id_perseroan,\n            p.nama_perseroan,\n            p.jenis_perseroan,\n            p.status_perseroan,\n            p.total_modal_dasar,\n            p.total_modal_ditempatkan,\n            p.modal_disetorkan,\n            p.nama_notaris,\n            p.nomor_sk,\n            p.tanggal_sk,\n            p.nomor_transaksi,\n            p.status_transaksi,\n            p.pemegang_saham,\n            p.kegiatan,\n            p.tahun,\n            p.kabupaten_id_perseroan AS kabupaten_id,\n            p.kabupaten_nama_perseroan AS kabupaten_nama,\n            p.provinsi_nama_perseroan AS provinsi_nama,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            p.provinsi_id_perseroan AS provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_perseroan p');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.$tahun.' tp', 'tp.id_perseroan = p.id_perseroan');\n        $cmd->where('\n            -- tp.id_aksi_transaksi = 9\n            p.kabupaten_id_perseroan IS NOT NULL\n            AND p.kabupaten_id_perseroan != \"\"\n            AND p.kabupaten_id_perseroan != 0\n            AND p.jenis_perseroan != \"\"\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perseroan_'.$tahun.' tp2 \n            WHERE p.id_perseroan = tp2.id_perseroan\n            GROUP BY tp2.id_perseroan)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS perseroan');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllPerseroanYears($tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::PERSEROAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllPerseroan($tahun, array(), false, 'getText');\n        }\n\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd =$this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS perseroan');\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n\n        return $cmd->$method();\n    }\n\n    public function findAllPerseroanYearsGroup($tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perseroan\n        ');\n        $cmd->from('('.$this->findAllPerseroanYears($tanggalAwal, $tanggalAkhir, array(), 'getText').') AS perseroan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllYayasan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id AS kabupaten_id,\n            b.kabupaten_nama AS kabupaten_nama,\n            b.provinsi_nama AS provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            ty.keterangan_sosial,\n            ty.keterangan_kemanusiaan,\n            ty.keterangan_keagamaan,\n            ty.id_aksi_transaksi,\n            ty.pendiri,\n            ty.pengurus,\n            (\n                CASE \n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN ty.tanggal_sk IS NOT NULL THEN ty.tanggal_sk\n                    WHEN ty.tanggal_setuju IS NOT NULL THEN ty.tanggal_setuju\n                    WHEN ty.tanggal_pembayaran IS NOT NULL THEN ty.tanggal_pembayaran\n                    ELSE ty.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty', 'ty.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"yayasan\"\n            -- AND ty.id_aksi_transaksi = 2\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND ty.id_transaksi IN \n            (SELECT MAX(ty2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_yayasan_'.$tahun.' ty2 \n            WHERE b.badan_hukum_id = ty2.id_badan_hukum\n            GROUP BY ty2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS yayasan');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllYayasanYears($tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::YAYASAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllYayasan($tahun, $param, false, 'getText');\n        }\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n           *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS yayasan');\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllYayasanYearsGroup($tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_yayasan\n        ');\n        $cmd->from('('.$this->findAllYayasanYears($tanggalAwal, $tanggalAkhir, array(), 'getText').') AS yayasan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n\n    public function findAllPerkumpulan($tahun, array $param = [], $cmdReturn = false, $method = 'queryAll')\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            b.badan_hukum_id,\n            b.nama,\n            b.nama_notaris,\n            b.nomor_sk,\n            b.kabupaten_id AS kabupaten_id,\n            b.kabupaten_nama AS kabupaten_nama,\n            b.provinsi_nama AS provinsi_nama,\n            b.no_transaksi,\n            b.status_transaksi,\n            b.tanggal_sk,\n            b.created,\n            b.jenis_transaksi,\n            b.maksud,\n            b.tujuan,\n            b.tahun,\n            (\"\") AS lat,\n            (\"\") AS lon,\n            tp.id_aksi_transaksi,\n            tp.pengurus,\n            (\n                CASE \n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sp,\n            (\n                CASE \n                    WHEN tp.tanggal_sk IS NOT NULL THEN tp.tanggal_sk\n                    WHEN tp.tanggal_setuju IS NOT NULL THEN tp.tanggal_setuju\n                    WHEN tp.tanggal_pembayaran IS NOT NULL THEN tp.tanggal_pembayaran\n                    ELSE tp.created_date\n                    END\n            ) AS tanggal_sk_final,\n            b.provinsi_id\n        ');\n        $cmd->from('AHU_BADAN_HUKUM.tbl_badan_hukum b');\n        $cmd->join('AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'.$tahun.' tp', 'tp.id_badan_hukum = b.badan_hukum_id');\n        $cmd->where('\n            b.base = \"perkumpulan\"\n            -- AND tp.id_aksi_transaksi = 14\n            AND b.kabupaten_id IS NOT NULL\n            AND b.kabupaten_id != \"\"\n            AND b.kabupaten_id != 0\n            AND tp.id_transaksi IN \n            (SELECT MAX(tp2.id_transaksi) FROM AHU_BADAN_HUKUM.tbl_transaksi_perkumpulan_'.$tahun.' tp2 \n            WHERE b.badan_hukum_id = tp2.id_badan_hukum\n            GROUP BY tp2.id_badan_hukum)\n        ', $param);\n\n        $cmdOuter = $this->createCommand('dbBadanHukum', false);\n        $cmdOuter->select('*');\n        $cmdOuter->from('('.$cmd->getText().') AS perkumpulan');\n        $cmdOuter->where('\n            tanggal_sk_final IS NOT NULL \n            AND tanggal_sk_final BETWEEN :tanggal_awal AND :tanggal_akhir', $param);\n\n        if ($cmdReturn) {\n            return $cmdOuter;\n        }\n\n        return $cmdOuter->$method();\n    }\n\n    public function findAllPerkumpulanYears($tanggalAwal, $tanggalAkhir, array $param = [], $method = 'queryAll')\n    {\n        $arrTahun = DashboardHelper::getArrTahunValidTransaksi(BaseEnum::PERKUMPULAN, $tanggalAwal, $tanggalAkhir);\n        $arrStrSql = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $arrStrSql[] = $this->findAllPerkumpulan($tahun, $param, false, 'getText');\n        }\n\n        $unionAllQuery = implode($arrStrSql, ' UNION ALL ');\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            *\n        ');\n        $cmd->from('('.$unionAllQuery.') AS perkumpulan');\n        $strUnionSql = $cmd->getText();\n        $cmd = $this->createCommand('dbBadanHukum', $strUnionSql, DashboardHelper::toParamBind($param));\n        return $cmd->$method();\n    }\n\n    public function findAllPerkumpulanYearsGroup($tanggalAwal, $tanggalAkhir, $param)\n    {\n        $cmd = $this->createCommand('dbBadanHukum', false);\n        $cmd->select('\n            kabupaten_id,\n            kabupaten_nama,\n            provinsi_nama,\n            lat,\n            lon,\n            COUNT(*) AS jumlah_perkumpulan\n        ');\n        $cmd->from('('.$this->findAllPerkumpulanYears($tanggalAwal, $tanggalAkhir, array(), 'getText').') AS perkumpulan');\n        $cmd->group('kabupaten_id');\n        return $this->execSqlQueryAll('dbBadanHukum', $cmd->getText(), DashboardHelper::toParamBind($param));\n    }\n}\n\n\n--- File: 595 # views/perkumpulan/listTransaksi.php ---\n\n<?php echo $this->renderPartial('//dashboard/_topmenu');?>\n<style>\n\ttbody>tr{\n\t\tcursor: pointer;\n\t}\n    a.pratinjau-link,a.tagihan, a.permohonan{\n        color : red;\n    }\n    a.pratinjau-link:hover,a.tagihan:hover, a.permohonan:hover{\n        color :#e67e22 ;\n    }\n    \n    ul.list-transaksi-perkumpulan{\n       list-style-type: none; \n    }\n    .list-transaksi-perkumpulan li{\n        border-bottom: 1px solid #bdc3c7;\n        margin-bottom: 5px;\n        padding-bottom:5px;\n    }\n    .list-transaksi-perkumpulan li:last-child{\n        border-bottom: none;\n    }\n    \n</style>\n<?php\nif(Yii::app()->user->hasFlash('yakin')):\n    $aksi = \"Perubahan\";\n    if (Yii::app()->user->hasFlash('id_aksi_transaksi')) {\n        $id_aksi_transaksi = Yii::app()->user->getFlash('id_aksi_transaksi');\n        if (!empty($id_aksi_transaksi) && $id_aksi_transaksi == 14)\n            $aksi = \"Pendirian\";\n        if(!empty($id_aksi_transaksi) && $id_aksi_transaksi == 28) // pembubaran\n            $aksi = 'Pembubaran';\n    }\n    // $_msg = 'Terima kasih, Pengajuan SK '.$aksi.' Perkumpulan '.Yii::app()->user->getFlash(\"yakin\").' telah selesai. Segala isian data dan informasi yang disampaikan menjadi tanggung jawab sepenuhnya Pemohon.';\n    $_msg = 'Terima kasih, Pengajuan Pengesahan Pendirian Perkumpulan '.Yii::app()->user->getFlash(\"yakin\").' menunggu verifikasi. Segala isian data dan informasi yang disampaikan menjadi tanggung jawab sepenuhnya Pemohon.';\n    if ($questionnaireRecommendation) {\n        $_msg .= '<br><br><p style=\"text-align: justify\">'. $questionnaireRecommendation .'</p>';\n    }\n    echo $this->renderPartial('/template/info_submit',array(\n        'message'=>$_msg\n        // 'message'=>'Terima kasih, Pengajuan SK Pengesahan '.$nama_perseroan.' telah selesai. \"Menteri menyatakan tidak keberatan atas permohonan pengesahan Badan Hukum '.$badanHukum.'\".'\n    ));\nendif;\n?>\n<?php if(Yii::app()->user->hasFlash('error_perkumpulan')): ?>\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <section class=\"panel\">\n                <div class=\"panel-body\">\n                    <h4 class=\"alert alert-danger\"><?php echo Yii::app()->user->getFlash('error_perkumpulan'); ?></h4>\n                </div>\n            </section>\n        </div>\n    </div>\n<?php endif; ?>\n<div class=\"row list-transaksi\">\n    <div class=\"col-lg-12\">\n        <section class=\"panel\">\n            <div class=\"panel-body\">\n                <div class=\"col-lg-12\">\n                     <div class=\"alert alert-block alert-danger fade in hidden-print\" style=\"padding:20px 50px;\">\n                        <h4>\n                            <strong>\n                                Setelah Transaksi Selesai Notaris diwajibkan Upload Akta. Waktu Upload Akta  <span  style=\"color:red\">30</span> hari <span  style=\"color:red\">dihitung sejak dari penginputan tanggal akta.</span><br>\n                                Jika Notaris tidak melakukan Upload Akta sesuai dengan tanggal yang ditentukan, Transaksi\n                                otomatis akan Terhapus oleh Sistem dan voucher PNBP tidak dapat digunakan kembali.<br><br><br>\n                                <span  style=\"color:red\">Pratinjau hanya berlaku 7 hari, sejak transaksi selesai</span>\n                            </strong>\n                        </h4>\n                    </div>                    \n                </div>\n                <?php if($data_hapus):?>\n                <div class=\"col-lg-12\">\n                     <div class=\"alert alert-block alert-danger fade in hidden-print\" style=\"padding:20px 50px;\">\n                        <h5>\n                            <strong>\n                                <table width=\"100%\">\n                                    <tr>\n                                        <td colspan=\"3\"><strong>DAFTAR TRANSAKSI YANG DIHAPUS TANGGAL <?php echo strtoupper(Helpers::getDateFormatId(date('Y-m-d'))).\" :\";?></strong></td>\n                                    </tr>\n                                    <tr>\n                                        <td colspan=\"3\">&nbsp;</td>\n                                    </tr>\n                                <?php $i=1; foreach ($data_hapus as $value): ?>\n                                    <tr>\n                                        <td><?php echo $i. \".\"; ?></td>\n                                        <td><?php echo $value['nama']; ?></td>\n                                        <td><?php echo $value['nomor_transaksi']; $i++;?></td>\n                                        <td><?php echo 'Terlambat Upload Akta'; ?></td>\n                                    </tr>\n                                <?php endforeach;?>\n                                </table>\n                            </strong>\n                        </h5>\n                    </div>                    \n                </div>\n                <?php endif;?> \n                <center>\n                    <h3>\n                        Daftar Transaksi Perkumpulan\n                    </h3>\n                </center>\n                <div class=\"panel-body duplikat\" style='display:none'>\n                    <a href='/sabh/perkumpulan/perbaikanSK'>Daftar SK Duplikat</a>\n                </div>\n                <div class=\"panel-body\" style='font-size: 1.2em'>\n                    Pilih Tahun &nbsp;&nbsp;\n                    <?php\n                    $tahunawal = 2014;\n                    $tahunini = intval(date('Y'));\n                    $tahunarr = array();\n                    do\n                        $tahunarr[$tahunawal] = $tahunawal;\n                    while(++$tahunawal <= $tahunini);\n                    echo CHtml::dropDownList('tahun', Yii::app()->request->getQuery('year', $tahunini), $tahunarr, array('class' => 'form-control', 'style' => 'width: auto; display: inline-block;', 'id' => 'pilihtahun'));\n                    ?>\n                </div>\n                <div class=\"panel-body\">\n                    <?php\n                    $this->widget('zii.widgets.grid.CGridView', array(\n                        'id' => 'agama-grid',\n                        'dataProvider' => $model->search(),\n                        'filter'=>$model,\n\n                        'itemsCssClass' => 'table table-striped table-hover table-bordered dataTable',\n                        'template' => \"{items}\\n{pager}\",\n                        'afterAjaxUpdate'=>\"function() {\n                            $('.datepicker').datepicker({\n                                changeMonth: true,\n                                changeYear: true,\n                                dateFormat: 'yy-mm-dd'\n                            });                           \n                        }\",\n                        'columns' => array(\n                            array(\n                                'header' => 'No.',\n                                'value' => '$this->grid->dataProvider->pagination->currentPage * $this->grid->dataProvider->pagination->pageSize + ($row+1)',\n                            ),\n                            array(\n                                'name'=>'nomor_transaksi',\n                                //'value'=>'CHtml::link($data->nomor_transaksi,array(\"ViewTransaksi\",\"id\"=>$data->nomor_transaksi),array(\"class\"=>\"viewNoTrans\"))',\n                                'type'=>'HTML',\n                                'htmlOptions'=>array(\"class\"=>\"no_transaksi\")\n                            ),\n                            array(\n                                'name'=>'kode_voucher',\n                                'value'=>function($data){\n                                    return ($data->kode_voucher) ? :'-';\n                                },\n                                'header'=>'Kode Voucher'\n                            ),\n                            array(\n                                'name'=>'jenis_transaksi',\n                                'value'=>'strtoupper($data->jenis_transaksi)',\n                                'filter' => CHtml::dropDownList('TransaksiPerkumpulan[jenis_transaksi]',$model->jenis_transaksi,array('pendirian'=>'PENDIRIAN','perubahan'=>'PERUBAHAN'),array('empty'=>'')),\n                                'type'=>'html'\n                            ),\n                            'nama_perkumpulan',\n                            array(\n                                'name'=>'status_billing',\n                                'value'=>'$data->getStatusTransaksi($data->status_billing, $data->id_aksi_transaksi, $data->nomor_transaksi, $data->tipe_perubahan)',\n                                'filter' => CHtml::dropDownList('TransaksiPerkumpulan[status_billing]',$model->status_billing,array('0'=>'BELUM BAYAR','1'=>'SUDAH BAYAR'),array('empty'=>'')),\n                                'type'=>'html'\n                            ),\n                            array(\n                                'name'=>'created_date',\n                                'filter' => CHtml::textField(get_class($model).'[created_date]', \"\", array(\n                                    \"class\"=>\"datepicker\"\n                                )),\n                                'value'=>'$data->created_date?Helpers::getDateFormatId($data->created_date). date(\" H:i:s\",strtotime($data->created_date)):\"\"'\n                            ),\n                            array(\n                                'header'=>'Download',\n                                'type'=>'raw',\n                                //'value'=>'$data->getSkPerkumpulan($data)',\n                                'value'=>'$data->getSKTransaksi($data)',\n\n                            ),\n                        ),\n                        )\n                    );\n\n                    ?>\n                </div>\n            </div>\n        </section>\n    </div>\n</div>\n<div class='overlay_candra' style='display:none'><div><div><div class='col-lg-6' style='background-color: white; padding: 1em; text-align: center; font-size: 2em'>\n    Telah terjadi kesalahan pada <i>database Sistem Aplikasi Badan Hukum (SABH) Online</i> sehingga terjadi penomoran ulang pada beberapa Nomor Surat Keputusan dan/atau Surat Pemberitahuan yang ada. Silahkan klik <br/><a href='/sabh/perkumpulan/perbaikanSK'>di sini</a> untuk melihat Nomor SK dan/atau SP anda yang telah diperbaiki dan harap segera dicetak kembali.<br><br>Klik dimanapun untuk menutup pesan ini.\n</div></div></div></div>\n<script>\n    $('#pilihtahun').on('change', function(){\n        window.top.location.href = '<?= $this->createAbsoluteUrl('listTransaksi') ?>?year=' + this.value;\n    });\n    <?php if(isset($duplikat) and $duplikat): ?>\n\n        $('.overlay_candra, .duplikat').fadeIn();\n        $('.overlay_candra').click(function(){\n            $(this).fadeOut();\n        });\n    <?php endif; ?>\n</script>\n<?php\n    Yii::app()->clientScript->registerScript('footer_js', \"\n        $('.datepicker').datepicker({\n            changeMonth: true,\n            changeYear: true,\n            dateFormat: 'yy-mm-dd'\n        });\n         $(document).on('click','.downloadSK',function(event){\n            event.preventDefault();\n            \n            var href = $(this).attr('href');\n            var count = $(this).attr('count_sk');\n            var flags = $(this).attr('flag');\n            var nomor = $(this).parents('tr').find('td.no_transaksi').html();\n            var tag = $(this).attr('aksi');\n            var data = {\n                mark:{\n                    tanda:'request'\n            }};\n            r = href.split('/');\n            console.log(r[3]);\n            if(count<2){\n                $(this).attr('count_sk',parseInt(count)+1);\n            }\n            else if(flags<2){\n                $(this).attr('count_sk',parseInt(count)+1);\n                $(this).attr('flag',parseInt(flags)+1);\n            }\n            if(r[3] == 'cetakSKPendirian'){\n                $.ajax({\n                    type: 'POST',\n                    url: '\" . Yii::app()->getBaseUrl(true) . \"/sabh/perkumpulan/CetakSKPendirian/id/'+nomor+'?isAjax=1',\n                    data:data,\n                    dataType: 'JSON',\n                    success: function(r) {\n                        if(r.status == 1){\n                            location.href=href;\n                        }\n                        else{\n                            $('#link').val(href);\n                            $('#no_tag').val(tag);\n                            $('#no_transaksi').val(nomor);\n                            $('#kodeVoucher').modal('show');\n                        }\n                    }\n                });\n           }\n           else{\n                $.ajax({\n                    type: 'POST',\n                    url: '\" . Yii::app()->getBaseUrl(true) . \"/sabh/perkumpulan/CetakSKPerubahan/id/'+nomor+'?isAjax=1',\n                    data:data,\n                    dataType: 'JSON',\n                    success: function(r) {\n                        if(r.status == 1){\n                            location.href=href;\n                        }\n                        else{\n                            $('#link').val(href);\n                            $('#no_tag').val(tag);\n                            $('#no_transaksi').val(nomor);\n                            $('#kodeVoucher').modal('show');\n                        }\n                    }\n                });\n           }\n            return false;\n        });\n    \");\n    if(isset(Yii::app() -> session['successPendirian']) =='yes') {\n        Yii::app()->clientScript->registerScript('hide_js', \"\n            $('.list-transaksi').hide();\n        \");\n    }\n?>\n<?php\n\tif(isset(Yii::app() -> session['successPendirian']) =='yes'){\n\t\t// $nama_perseroan = isset(Yii::app()->session['nama']) ? Yii::app()->session['nama'] : '';\n  //       $badanHukum = isset(Yii::app() -> session['badanHukum'])?Yii::app() -> session['badanHukum']:\"\";\n\t\t// echo $this->renderPartial('/template/info_submit',array(\n\t\t// \t//'message'=>'Terima kasih, Pengajuan SK Pengesahan -'.$nama_perseroan.'- telah selesai. \"Menteri menyatakan tidak keberatan atas permohonan pengesahan Badan Hukum '.$badanHukum.'\". Mohon setorkan PNBP ke BNI terdekat sebelum anda dapat mencetak SK.'\n  //           'message'=>'Terima kasih, Pengajuan SK Pengesahan -'.$nama_perseroan.'- telah selesai. \"Menteri menyatakan tidak keberatan atas permohonan pengesahan Badan Hukum '.$badanHukum.'\".'\n\t\t// ));\n\t\tunset(Yii::app() -> session['successPendirian']);\n\t\tunset(Yii::app() -> session['nama']);\n\t\tunset(Yii::app() -> session['badanHukum']);\n\n\t}\n    $this->renderPartial('_formKodeVoucher');\n    $this->renderPartial('_konfirmasiSukses');\n?>\n\n--- File: 916 # views/blokirPerseroan/detail/_suratJawaban.php ---\n<div x-data=\"suratJawaban()\" class=\"container py-4\">\n    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n        Konsep Surat Jawaban\n    </div>\n    <div class=\"form-content border border-gray-300 rounded p-4\" style=\"padding: 20px;\">\n        <div class=\"form-parent\">\n            <textarea name=\"surat_jawaban\" id=\"surat_jawaban\"></textarea>\n        </div>\n    </div>\n    \n    <div x-show=\"errors.hasilVerifikasi || errors.catatanVerifikasi\" class=\"mt-4 p-4 bg-red-50 border border-red-200 rounded\">\n        <h4 class=\"text-red-800 font-medium mb-2\">Error Validasi:</h4>\n        <div x-show=\"errors.hasilVerifikasi\" class=\"text-red-600 text-sm mb-1\" x-text=\"errors.hasilVerifikasi\"></div>\n        <div x-show=\"errors.catatanVerifikasi\" class=\"text-red-600 text-sm\" x-text=\"errors.catatanVerifikasi\"></div>\n    </div>\n\n    <div x-show=\"isContentChanged\" class=\"mt-4\">\n        <div class=\"form-group pt-12\">\n            <label for=\"keterangan_perubahan\" class=\"block text-sm font-medium text-gray-700 mb-2\">\n                Keterangan Perubahan\n                <span class=\"text-red-500\">*</span>\n            </label>\n            <textarea \n                id=\"keterangan_perubahan\"\n                x-model=\"formData.keteranganPerubahan\"\n                class=\"form-control\"\n                rows=\"3\"\n                placeholder=\"Masukkan keterangan perubahan yang dilakukan pada surat jawaban\"\n                :class=\"{'border-red-500': errors.keteranganPerubahan}\">\n            </textarea>\n            <div x-show=\"errors.keteranganPerubahan\" class=\"text-red-500 text-sm mt-1\" x-text=\"errors.keteranganPerubahan\"></div>\n        </div>\n    </div>\n    \n    <div class=\"flex justify-between pt-12\">\n        <div class=\"flex gap-3\">\n            <button type=\"button\" class=\"btn btn-secondary\" @click=\"goBack()\">    <i class=\"icon-arrow-left\"></i> Kembali</button>\n            <button type=\"button\" class=\"btn btn-info\" @click=\"previewPdf()\">\n                <i class=\"icon-eye-open\"></i> Preview PDF\n            </button>\n        </div>\n        <div class=\"flex gap-3\">\n\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"submitVerifikasi()\">Submit Verifikasi</button>\n        </div>\n    </div>\n</div>\n\n\n\n<script type=\"text/javascript\">\n    function suratJawaban() {\n        return {\n            get $parent() {\n                return Alpine.$data(document.getElementById('data-pratinjau'))\n            },\n\n            get $loading() {\n                return Alpine.$data(document.getElementById('loading-overlay'));\n            },\n\n            formData: {\n                hasilVerifikasi: null,\n                catatanVerifikasi: '',\n                keteranganPerubahan: ''\n            },\n            errors: {\n                hasilVerifikasi: null,\n                catatanVerifikasi: null,\n                keteranganPerubahan: null\n            },\n            isContentChanged: false,\n            originalContent: '',\n\n            init() {\n                const rawContent = `<?php include 'template/_surat.php'; ?>`;\n                const latestContent = this.$parent.viewData.suratJawaban;\n\n                let suratJawabanContent = latestContent ? latestContent?.trim() : rawContent?.trim();\n                \n                // Replace signature placeholders with actual values\n                suratJawabanContent = this.replacePlaceholders(suratJawabanContent);\n                \n                this.originalContent = suratJawabanContent;\n                \n                this.editor = CKEDITOR.replace('surat_jawaban', {\n                    extraPlugins: 'base64image'\n                });\n                initCkeditorPlugins(this.editor);\n\n                this.editor.setData(suratJawabanContent);\n\n                this.editor.on('instanceReady', () => {\n                    this.autofillTemplate();\n                \n                });\n                this.editor.on('change', () => {\n                    this.checkContentChanged();\n                });\n                this.editor.on('key', () => {\n                    setTimeout(() => {\n                        \n                        this.checkContentChanged();\n                    }, 100);\n                });\n            },\n\n            autofillTemplate() {\n                if (!this.editor) return;\n                \n\n                let content = this.editor.getData();\n                const replacements = {\n                    '{{nama_pemohon}}': this.getNamaPemohon(),\n                    '{{alamat_pemohon}}': this.getAlamatPemohon(),\n                    '{{tanggal_surat}}': this.getTanggalSurat(),\n                    '{{tanggal_permohonan}}': this.getTanggalPermohonan(),\n                    '{{nomor_permohonan}}': this.getNomorSuratPermohonan(),\n                };\n                \n                Object.entries(replacements).forEach(([placeholder, value]) => {\n                    if (value) {\n                        content = content.replace(new RegExp(placeholder, 'g'), value);\n                    }\n                });\n                this.editor.setData(content);\n            },\n\n            getNamaPemohon() {\n                return this.$parent.viewData.pemohonData.namaPerorangan || this.$parent.viewData.pemohonData.namaPejabat || this.$parent.viewData.pemohonData.namaBadanHukum;\n            },\n\n            getAlamatPemohon() {\n                return this.$parent.viewData.pemohonData.alamat;\n            },\n\n            getNomorSuratPermohonan() {\n                return this.$parent.viewData.nomorPermohonan;\n            },\n\n            getTanggalPermohonan() {\n                const date = new Date(this.$parent.viewData.tanggalSuratPermohonan);\n                const day = String(date.getDate()).padStart(2, '0');\n                const month = String(date.getMonth() + 1).padStart(2, '0');\n                const year = date.getFullYear();\n                return `${day}/${month}/${year}`;\n            },\n\n            getTanggalSurat() {\n                const today = new Date();\n                const day = String(today.getDate()).padStart(2, '0');\n                const month = String(today.getMonth() + 1).padStart(2, '0');\n                const year = today.getFullYear();\n                return `${day}/${month}/${year}`;\n            },\n\n            checkContentChanged() {\n                const currentContent = this.editor.getData().trim();\n                this.isContentChanged = currentContent !== this.originalContent;\n                \n                if (!this.isContentChanged) {\n                    this.formData.keteranganPerubahan = '';\n                    this.errors.keteranganPerubahan = null;\n                }\n            },\n\n            goBack() {\n                this.$parent.prevStage();\n            },\n            \n            validateForm() {\n                const parentData = this.$parent;\n                const hasilVerifikasi = parentData?.formData?.hasilVerifikasi;\n                const catatanVerifikasi = parentData?.formData?.alasan;\n\n                this.errors.hasilVerifikasi = null;\n                this.errors.catatanVerifikasi = null;\n                this.errors.keteranganPerubahan = null;\n\n                this.errors.hasilVerifikasi = !hasilVerifikasi ? 'Hasil verifikasi harus dipilih' : null;\n\n                if (hasilVerifikasi === STATUS_VERIFIKASI.DITOLAK) {\n                    this.errors.catatanVerifikasi = !catatanVerifikasi ? 'Catatan verifikasi harus diisi jika menolak' : null;\n                } else {\n                    this.errors.catatanVerifikasi = null;\n                }\n\n                if (this.isContentChanged) {\n                    this.errors.keteranganPerubahan = !this.formData.keteranganPerubahan.trim() ? 'Keterangan perubahan harus diisi ketika mengubah isi surat' : null;\n                } else {\n                    this.errors.keteranganPerubahan = null;\n                }\n\n                return Object.values(this.errors).every(e => !e);\n            },\n\n            async previewPdf() {\n\n                const permohonanId = this.$parent?.viewData?.permohonanId;\n\n                if (!permohonanId) {\n                    alert('Permohonan ID tidak ditemukan');\n                    return;\n                }\n\n                const suratJawabanContent = this.editor.getData();\n\n                if (!suratJawabanContent.trim()) {\n                    alert('Konten surat jawaban kosong');\n                    return;\n                }\n\n                this.$loading.startLoading('preview-pdf');\n\n                try {\n                    this.previewPdfViaForm(suratJawabanContent, permohonanId);\n\n                } catch (error) {\n                    await this.previewPdfViaFetch(suratJawabanContent, permohonanId);\n                } finally {\n                    this.$loading.stopLoading('preview-pdf');\n                }\n            },\n\n            previewPdfViaForm(content, permohonanId) {\n                const form = document.createElement('form');\n                form.method = 'POST';\n                form.action = '/sabh/api/pdf/generateAndServe';\n                form.target = '_blank';\n                \n                const contentInput = document.createElement('input');\n                contentInput.type = 'hidden';\n                contentInput.name = 'content';\n                contentInput.value = content;\n                form.appendChild(contentInput);\n                \n                const idInput = document.createElement('input');\n                idInput.type = 'hidden';\n                idInput.name = 'permohonan_id';\n                idInput.value = permohonanId;\n                form.appendChild(idInput);\n                \n                document.body.appendChild(form);\n                form.submit();\n                document.body.removeChild(form);\n            },\n\n            async previewPdfViaFetch(content, permohonanId) {\n                try {\n                    const url = new URL('/sabh/api/pdf/generate', window.location.origin);\n\n                    const payload = {\n                        content: content,\n                        permohonan_id: permohonanId\n                    };\n\n                    const [res, err] = await safeFetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: 'include',\n                        body: JSON.stringify(payload),\n                        loadingSet: this.$loading?.loadingSet,\n                    });\n\n                    if (err) {\n                        alert('Gagal membuat preview PDF: ' + (err.message || 'Terjadi kesalahan'));\n                        return;\n                    }\n\n                    if (res.data) {\n                        const pdfBlob = new Blob([atob(res.data)], { type: 'application/pdf' });\n                        const pdfUrl = URL.createObjectURL(pdfBlob);\n                        window.open(pdfUrl, '_blank');\n                        \n                        setTimeout(() => URL.revokeObjectURL(pdfUrl), 10000);\n                    } else {\n                        alert('Format respons PDF tidak dikenali');\n                    }\n\n                } catch (error) {\n                    alert('Terjadi kesalahan saat membuat preview PDF');\n                }\n            },\n\n            getVerifikasiEndpoint() {\n                const statusPermohonan = this.$parent?.viewData?.statusPermohonan;\n\n                switch (statusPermohonan) {\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_JENDERAL:\n                        return '/sabh/api/pemblokiran/pt/verifikasi/direktur-jenderal';\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_DIREKTUR_BU:\n                        return '/sabh/api/pemblokiran/pt/verifikasi/direktur-bu';\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_VERIFIKATOR:\n                        return '/sabh/api/pemblokiran/pt/verifikasi/verifikator';\n                    case STATUS_PERMOHONAN_PERSEROAN.MENUNGGU_KONSEPTOR:\n                        return '/sabh/api/pemblokiran/pt/verifikasi/konseptor';\n                    case STATUS_PERMOHONAN_PERSEROAN.DITOLAK_KONSEPTOR:\n                        return '/sabh/api/pemblokiran/pt/verifikasi/verifikator';\n                    default:\n                        return '/sabh/api/pemblokiran/pt/verifikasi/konseptor';\n                }\n            },\n\n            submitVerifikasi() {\n                if (!this.validateForm()) return;\n\n                const parentData = this.$parent;\n                const permohonanId = parentData?.viewData?.permohonanId;\n                const hasilVerifikasi = parentData?.formData?.hasilVerifikasi;\n                const catatan = parentData?.formData?.alasan;\n\n                if (!permohonanId) {\n                    alert('Permohonan ID tidak ditemukan');\n                    return;\n                }\n\n                const suratJawabanContent = this.editor.getData();\n\n                const payload = {\n                    permohonan_id: parseInt(permohonanId),\n                    approve: hasilVerifikasi === STATUS_VERIFIKASI.DITERIMA,\n                    catatan: catatan || '',\n                    suratJawaban: suratJawabanContent || null,\n                    catatanSuratJawaban: this.isContentChanged ? this.formData.keteranganPerubahan : null\n                };\n\n                this.submitToBackend(payload);\n            },\n\n            async submitToBackend(payload) {\n\n                this.$loading.startLoading('submit-verifikasi');\n\n                try {\n                    const url = new URL(this.getVerifikasiEndpoint(), window.location.origin);\n\n                    const [res, err] = await safeFetch(url, {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json',\n                        },\n                        credentials: 'include',\n                        body: payload,\n                        loadingSet: this.$loading?.loadingSet,\n                    });\n\n                    if (err) {\n                        alert('Gagal menyimpan verifikasi: ' + (err.message || 'Terjadi kesalahan'));\n                        return;\n                    }\n\n                    alert('Verifikasi berhasil disimpan!');\n                    \n                    window.location.href = '/sabh/blokirPerseroan/daftarPermohonan';\n\n                } catch (error) {\n                    alert('Terjadi kesalahan yang tidak terduga');\n                } finally {\n                    this.$loading.stopLoading('submit-verifikasi');\n                }\n            },\n\n            /**\n             * Replace placeholders in surat content with actual signature data\n             * @param {string} content - HTML content with placeholders\n             * @returns {string} - Content with placeholders replaced\n             */\n            replacePlaceholders(content) {\n                // Get signature data from parent component or use defaults\n                const signatureData = this.getSignatureData();\n                \n                // Replace signature placeholders\n                content = content.replace(/\\/images\\/#IMG_TTD#/g, '/images/' + signatureData.IMG_TTD);\n                content = content.replace(/#IMG_TTD#/g, signatureData.IMG_TTD);\n                content = content.replace(/#NAMA_TTD#/g, signatureData.NAMA_TTD);\n                content = content.replace(/#NIP_TTD#/g, signatureData.NIP_TTD);\n                \n                return content;\n            },\n\n            /**\n             * Get signature data from controller-provided data\n             * @returns {Object} - Signature data object\n             */\n            getSignatureData() {\n                // Get signature data passed from controller\n                return {\n                    IMG_TTD: this.$parent.signatureData.IMG_TTD || 'default_signature.png',\n                    NAMA_TTD: this.$parent.signatureData.NAMA_TTD || 'Widodo',\n                    NIP_TTD: this.$parent.signatureData.NIP_TTD || ''\n                };\n            },\n        };\n    }\n</script>\n\n--- File: 244 # controllers/BoController.php ---\n<?php\n\n/**\n * Semua action di BoController ini diakses via ajax\n *\n */\nclass BoController extends Controller\n{\n    /**\n     * Cek apakah semua action adalah ajax request\n     *\n     */\n    public function beforeAction($action)\n    {\n        if (!Yii::app()->request->isAjaxRequest) {\n            return false;\n        }\n        return parent::beforeAction($action);\n    }\n\n    /**\n     * @return array default response\n     *\n     */\n    protected function initResponse()\n    {\n        return array('success' => false, 'content' => '', 'message' => '');\n    }\n\n    /**\n     * Echo response result berupa string berformat json\n     *\n     */\n    protected function sendResponse($response)\n    {\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n\n    /**\n     * Direquest saat pilihan 'YA' pernyataan penerima manfaat dipilih\n     *\n     * @return string\n     */\n    public function actionSetuju()\n    {\n        $response = array(\n            'success' => false,\n            'content' => array('disclaimer' => '', 'details' => ''),\n            'message' => ''\n        );\n        $post = Yii::app()->request->getPost('BoForm');\n        $hasBo = Yii::app()->request->getPost('has_bo');\n        if (!empty($post) && $hasBo == 1) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if ($model->validate()) {\n                $details = $this->renderPartial('_details', array(\n                    'model' => $model\n                ), true, true);\n                $response['content']['details'] = $details;\n                $response['success'] = true;\n            } else {\n                $response['content']['details'] = '';\n            }\n            $disclaimer = $this->renderPartial('_disclaimer', array(\n                'model' => $model\n            ),true, true);\n            $response['content']['disclaimer'] = $disclaimer;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'Tambah Data' Bo\n     *\n     * @return string\n     */\n    public function actionCreate()\n    {\n        $response = $this->initResponse();\n        $hasBo = Yii::app()->request->getPost('has_bo');\n        $post = Yii::app()->request->getPost('BoForm');\n        if (!empty($post) && $hasBo == 1) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if ($model->validate()) {\n                $detail = new BoDetailForm();\n                $detail->base = $model->base;\n                $content = $this->renderPartial(\n                    'popupCreate',\n                    array('detail' => $detail, 'validationDukcapilMsg' => null),\n                    true, true\n                );\n                $response['content'] = $content;\n                $response['success'] = true;\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'OK' di form popup Tambah Data BO\n     * untuk cek pengisian pilihan kriteria BO\n     *\n     * @return string\n     */\n    public function actionCekKriteria()\n    {\n        $response = array(\n            'success' => false,\n            'content' => array('kriteria' => '', 'form' => ''),\n            'message' => ''\n        );\n        $post = Yii::app()->request->getPost('BoDetailForm');\n        if (!empty($post)) {\n            $model = new BoDetailForm();\n            $model->attributes = $post;\n            $model->validate();\n            $error = $model->getError('kriteria');\n            if (empty($error)) {\n                $response['success'] = true;\n                $model = new BoDetailForm();\n                $model->attributes = $post;\n                $model->cekPemegangSaham();\n            }\n            $content = $this->renderPartial('_create', array(\n                'detail' => $model\n            ), true, true);\n            $response['content'] = $content;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat pilihan jenis BO ('Perorangan', 'Badan Hukum')\n     *\n     * @return string\n     */\n    public function actionPilihJenis()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoDetailForm');\n        if (!empty($post)) {\n            $model = new BoDetailForm();\n            $model->attributes = $post;\n            if (in_array($model->jenis, $model->listJenis())) {\n                $content = $this->renderPartial(\n                    '_create',\n                    array('detail' => $model),\n                    true, true\n                );\n                $response['content'] = $content;\n                $response['success'] = true;\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'SIMPAN' di form popup Tambah Data BO\n     * untuk ditambahkan di list tabel BO\n     *\n     * @return string\n     */\n    public function actionSimpan()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        $postDetail = Yii::app()->request->getPost('BoDetailForm');\n        $postPerorangan = Yii::app()->request->getPost('BoPeroranganForm');\n        $postBadanHukum = Yii::app()->request->getPost('BoBadanHukumForm');\n        if (\n            !empty($post) &&\n            !empty($postDetail) &&\n            (!empty($postPerorangan) || !empty($postBadanHukum))\n        ) {\n            $model = new BoForm();\n            $model->attributes = $post;\n\n            $detail = new BoDetailForm();\n            $detail->attributes = $postDetail;\n            if (!empty($postPerorangan)) {\n                $detail->perorangan->attributes = $postPerorangan;\n                if ($detail->perorangan->kewarganegaraan == \"WNA\") {\n                    $detail->perorangan->scenario = 'wna';\n                }\n            }\n            if (!empty($postBadanHukum)) {\n                $detail->badan_hukum->attributes = $postBadanHukum;\n            }\n            if ($detail->validate()) {\n                $validationDukcapilMsg = $detail->validateDukcapil();\n\n                /*\n                $idPesaham = \"\";\n                if (in_array('saham', $detail->kriteria)) {\n                    $pengurus = $model->addPengurus($detail);\n                    $response['pengurus'] = $pengurus['json'];\n                    $response['nomor'] = $pengurus['no'];\n                    $response['trPengurus'] = $this->renderPartial('_pengurus', array(\n                        'no' => $pengurus['no'],\n                        'nama' => $pengurus['nama'],\n                        'jenis' => $pengurus['jenis'],\n                    ), true);\n                    $idPesaham = $pengurus['no'];\n                }\n                $detail->id_pesaham = $idPesaham;\n                */\n                if ($validationDukcapilMsg) {\n                    $content = $this->renderPartial('_create', array(\n                        'detail' => $detail, 'validationDukcapilMsg' => $validationDukcapilMsg\n                    ), true, true);\n\n                } else {\n                    $model->tambahDetails($detail);\n                    $content = $this->renderPartial('_details', array(\n                        'model' => $model\n                    ), true);\n                    $response['success'] = true;\n                }\n\n            } else {\n                $content = $this->renderPartial('_create', array(\n                    'detail' => $detail\n                ), true, true);\n            }\n            $response['content'] = $content;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik link 'Edit' di list table BO\n     * untuk menampilkan popup form Edit BO\n     *\n     * @return string\n     */\n    public function actionLoadUpdate($id)\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        if (!empty($post)) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if (!empty($model->temp_details) && $model->validate()) {\n                $detail = $model->findDetailById($id);\n                if ($detail !== null) {\n                    $detail->base = $model->base;\n                    $detail->state = BoDetailForm::STATE_UPDATE;\n                    $content = $this->renderPartial(\n                        'popupUpdate',\n                        array('detail' => $detail),\n                        true, true\n                    );\n                    $response['content'] = $content;\n                    $response['success'] = true;\n                }\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'SIMPAN PERUBAHAN' di form popup Edit Data BO\n     * untuk diupdate di list tabel BO\n     *\n     * @return string\n     */\n    public function actionUpdate()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        $postDetail = Yii::app()->request->getPost('BoDetailForm');\n        $postPerorangan = Yii::app()->request->getPost('BoPeroranganForm');\n        $postBadanHukum = Yii::app()->request->getPost('BoBadanHukumForm');\n        if (\n            !empty($post) &&\n            !empty($postDetail) &&\n            (!empty($postPerorangan) || !empty($postBadanHukum))\n        ) {\n            $model = new BoForm();\n            $model->attributes = $post;\n\n            $detail = new BoDetailForm();\n            $detail->attributes = $postDetail;\n            if (!empty($postPerorangan)) {\n                $detail->perorangan->attributes = $postPerorangan;\n            }\n            if (!empty($postBadanHukum)) {\n                $detail->badan_hukum->attributes = $postBadanHukum;\n            }\n            if ($detail->validate()) {\n                $validationDukcapilMsg = $detail->validateDukcapil();\n                /*\n                $idPesaham = \"\";\n                if (in_array('saham', $detail->kriteria)) {\n                    $pengurus = $model->updatePengurus($detail);\n                    if (!empty($pengurus)) {\n                        $response['pengurus'] = $pengurus['json'];\n                        $response['nomor'] = $pengurus['no'];\n                        $response['trPengurus'] = $this->renderPartial('_pengurus', array(\n                            'no' => $pengurus['no'],\n                            'nama' => $pengurus['nama'],\n                            'jenis' => $pengurus['jenis'],\n                        ), true);\n                        $idPesaham = $pengurus['no'];\n                    }\n                }\n                $detail->id_pesaham = $idPesaham;\n                */\n                if ($validationDukcapilMsg) {\n                    $content = $this->renderPartial('_create', array(\n                        'detail' => $detail, 'validationDukcapilMsg' => $validationDukcapilMsg\n                    ), true, true);\n\n                } else {\n                    $model->updateDetails($detail);\n                    $content = $this->renderPartial('_details', array(\n                        'model' => $model,\n                    ), true);\n                    $response['success'] = true;\n                }\n            } else {\n                $content = $this->renderPartial('_create', array(\n                    'detail' => $detail\n                ), true, true);\n            }\n            $response['content'] = $content;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik link 'Hapus' di list table BO\n     * untuk menghapus data di table BO\n     *\n     * @return string\n     */\n    public function actionDelete($id)\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        if (!empty($post)) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if (!empty($model->temp_details) && $model->validate()) {\n                $detail = $model->findDetailById($id);\n                if ($detail !== null) {\n                    $model->deleteDetails($detail);\n                    $content = $this->renderPartial('_details', array(\n                        'model' => $model,\n                    ), true);\n                    $response['content'] = $content;\n                    $response['success'] = true;\n                }\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat pilih base badan hukum pada monitoring BO\n     *\n     */\n    public function actionPilihKriteria()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('base');\n        if (!empty($post)) {\n            $model = new BoDetailForm();\n            $model->base = $post;\n            if (in_array($model->base, array('perseroan', 'yayasan', 'perkumpulan'))) {\n                $monitoring = new BoMonitoring();\n                $monitoring->bakum = $model->base;\n                $content = $this->renderPartial('monitoring/_filterKriteria', array(\n                    'model' => $monitoring,\n                ), true);\n                $response['content'] = $content;\n                $response['success'] = true;\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     *\n     */\n    public function actionCariBadanHukum()\n    {\n        $response = array('status' => 200, 'record' => '');\n        $base = Yii::app()->request->getQuery('base');\n        $nama = Yii::app()->request->getQuery('name');\n        if (in_array($base, array('perseroan', 'yayasan', 'perkumpulan')) && !empty($nama)) {\n            $model = new BoBadanHukumForm();\n            $model->base = $base;\n            $response['record'] = $model->listBadanHukum($nama);\n        }\n        $this->sendResponse($response);\n    }\n\n    public function actionDownloadFile()\n    {\n        $fullpath = Yii::getPathOfAlias('webroot').\"/uploads/bo/Perpres-13-tahun-2018-tentang-Beneficial-Ownership.pdf\";\n        if(!empty($fullpath)){ \n            header(\"Content-type:application/pdf\"); //for pdf file\n            //header('Content-Type:text/plain; charset=ISO-8859-15');\n            //if you want to read text file using text/plain header \n            header('Content-Disposition: attachment; filename=\"'.basename($fullpath).'\"'); \n            header('Content-Length: ' . filesize($fullpath));\n            readfile($fullpath);\n            Yii::app()->end();\n        }\n    }\n}\n\n\n--- File: 359 # components/PerseroanMapper.php ---\n<?php\n\n/**\n * Class Mapper for Perseroan\n * @author Hendi\n * @since 2016-08-31\n */\n\nclass PerseroanMapper extends MapperBase\n{\n    /**\n     * @return array\n     */\n    public function queryAll($db, $sql, $arrayParam = null)\n    {\n        return $this->execSqlQueryAll($db, $sql, $arrayParam);\n    }\n\n    /**\n     * @return array\n     */\n    public function findAllTableTransaction($tahun = null, $scalar = false)\n    {\n        if ($tahun === null) {\n            $sql = \"Show tables like 'tbl\\_transaksi\\_perseroan\\_____'\";\n        } else {\n            $sql = \"Show tables like 'tbl\\_transaksi\\_perseroan\\_\".$tahun.\"'\";\n        }\n        \n        if ($scalar) {\n            return $this->execSqlQueryScalar('dbBadanHukum', $sql);\n        } else {\n            return $this->execSqlQueryColumn('dbBadanHukum', $sql);\n        }\n    }\n\n    /**\n     * @return array\n     */\n    public function findAllTableAfter2016($yearPp29)\n    {\n        $year = date('Y');\n        $tbl = array();\n        for ($i = $year; $i >= $yearPp29; $i-- ) {\n            $showTbls = $this->findAllTableTransaction($i, true);\n            if ($showTbls) {\n                $tbl[] = $showTbls;\n            }\n        }\n        return $tbl;\n    }\n\n    /**\n     *\n     */\n    public function checkTableExist($db, $table)\n    {\n        $sql = \"show tables like \".$table;\n        return $this->execSqlQueryColumn($db, $sql);\n    }\n\n    /**\n     * untuk grafik detail monitoring pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by harian\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByDay($strSql, $paramBind = array())\n    {\n        $sql = \"\n        SELECT \n            b.jenis,\n            COUNT(*) AS jumlah\n        FROM\n            (\n                SELECT\n                    a.*,\n                CASE\n                    WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                    WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                    ELSE NULL\n                    END AS 'jenis'\n                FROM\n                    (\n                    $strSql\n                    ) AS a\n            ) AS b\n        WHERE b.jenis IS NOT NULL\n        GROUP BY b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik detail monitoring pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by bulanan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByMonthly($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                b.tanggal,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        EXTRACT(DAY FROM a.created_date) AS tanggal,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis, b.tanggal\n            ORDER BY \n                b.tanggal;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik detail monitoring pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by tahunan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByYear($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                b.bulan,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        EXTRACT(MONTH FROM a.created_date) AS bulan,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis, b.bulan\n            ORDER BY \n                b.bulan;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik monitoring total pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by bulanan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByTotalMonthly($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis\n            ORDER BY \n                b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik monitoring total pendirian dan perubahan dengan modal dasar < 50 jt\n     * filter by tahunan\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByTotalYear($strSql, $paramBind = array())\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis\n            ORDER BY \n                b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /**\n     * untuk grafik monitoring total semua pendirian dan perubahan dengan modal dasar < 50 jt\n     * tanpa filter\n     * @param string $strSql\n     * @return CDbDataReader\n     */\n    public function findCountTransactionByAllTotal($strSql)\n    {\n        $sql = \"\n            SELECT\n                b.jenis,\n                COUNT(*) AS jumlah\n            FROM \n                (\n                    SELECT\n                        a.*,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis'\n                    FROM\n                        (\n                            $strSql\n                        ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n            GROUP BY\n                b.jenis\n            ORDER BY \n                b.jenis;\n        \";\n        return $this->execSqlQueryAll('dbBadanHukum', $sql);\n    }\n\n    /**\n     * create string sql\n     * @param string $strSql\n     * @param FormFilter $formFilter\n     */\n    private function basicSqlDetail($strSql, $formFilter, $additionalParam)\n    {\n        $sql = \"\n            SELECT\n                b.*\n            FROM \n                (\n                    SELECT\n                        a.id_transaksi,\n                        a.id_perseroan,\n                        a.nama_perseroan,\n                        CASE\n                            WHEN a.id_aksi_transaksi = 9 THEN 'Pendirian'\n                            WHEN a.id_aksi_transaksi = 10 AND a.id_aksi != 27 THEN 'Perubahan'\n                            ELSE NULL\n                            END AS 'jenis',\n                        a.total_modal_dasar,\n                        a.total_modal_ditempatkan,\n                        a.created_date,\n                        a.tahun,\n                        a.nomor_transaksi\n                    FROM\n                    (\n                    \".$strSql.\"\n                    ) AS a\n                ) AS b\n            WHERE\n                b.jenis IS NOT NULL\n        \";\n\n        $sqlData = $this->basicSqlFilter($sql, $formFilter, true, $additionalParam);\n\n        return $sqlData;\n    }\n\n    /**\n     * untuk grid/tabel informasi detail dari grafik\n     * monitoring pendirian dan perubahan perseroan dengan modal dasar < 50 jt\n     * filter by hari\n     * @param string $strSql\n     * @param FormFilter $formFilter\n     */\n    public function findDetailTransaction($strSql, $formFilter, $additionalParam = array())\n    {\n        $sqlData = $this->basicSqlDetail($strSql, $formFilter, $additionalParam);\n        return $sqlData;\n        //return $this->createCommand('dbBadanHukum', $sql);\n    }\n\n    /**\n     * count total row data\n     * @param string $strSql\n     * @param FormFilter $formFilter\n     */\n    public function countDetailTransaction($sqlData, $paramBind)\n    {\n        $sql = 'SELECT COUNT(*) FROM (' . $sqlData . ') as count_alias';\n        return $this->execSqlQueryScalar('dbBadanHukum', $sql, $paramBind);\n    }\n\n    /********************* Start Monitoring Bukti Setor ***********************/\n\n    /**\n     * @return array\n     */\n    public function findAllYearPendirianPp29()\n    {\n        $sql = \"\n            SELECT\n                DISTINCT\n                EXTRACT(YEAR FROM a.created_date) AS tahun\n            FROM\n            tbl_pendirian_pp29 a;\n        \";\n\n        return $this->execSqlQueryColumn('dbBadanHukum', $sql);\n    }\n\n    /**\n     * @param array $arrTahun\n     * @return array $newArrTahun\n     */\n    public function checkTableTransaksiPerseroanExist($arrTahun)\n    {\n        $newArrTahun = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $tableTransaksiExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_transaksi\\_perseroan\\_\".$tahun.\"'\");\n            if (!empty($tableTransaksiExist)) {\n                $newArrTahun[] = $tahun;\n            }\n        }\n\n        return $newArrTahun;\n    }\n\n    /**\n     * @param string $jenis\n     * @param array $arrTahun\n     * @return array $newArrTahun\n     */\n    public function checkTableTransaksiBakumExist($jenis, $arrTahun)\n    {\n        $newArrTahun = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $tableTransaksiExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_transaksi\\_\".$jenis.\"\\_\".$tahun.\"'\");\n            if (!empty($tableTransaksiExist)) {\n                $newArrTahun[] = $tahun;\n            }\n        }\n\n        return $newArrTahun;\n    }\n\n    /**\n     *\n     */\n    public function checkTableExistForMonitoringBuktiSetor($arrTahun)\n    {\n        $newArrTahun = array();\n        foreach ($arrTahun as $key => $tahun) {\n            $tableTransaksiExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_transaksi\\_perseroan\\_\".$tahun.\"'\");\n            $tableUploadModalDasarExist = $this->checkTableExist('dbBadanHukum', \"'tbl\\_upload\\_modal\\_dasar\\_\".$tahun.\"'\");\n            if (!empty($tableTransaksiExist) && !empty($tableUploadModalDasarExist)) {\n                $newArrTahun[] = $tahun;\n            }\n        }\n\n        return $newArrTahun;\n    }\n\n    /**\n     * @param boolean $whereExist if the end of string of $sql with clause WHERE\n     * add clause AND\n     */\n    private function basicSqlFilter($sql, $formFilter, $whereExist = true, $additionalParam = array())\n    {\n        $arrCondition = array();\n        $arrParamBind = array();\n        $arrParam = array();\n        foreach ($formFilter->attributes as $key => $value) {\n            if (!empty($value)) {\n                if (strpos($key, 'tanggal') !== false) { // if contain words tanggal\n                    //$arrCondition[] = \"DATE_FORMAT(\".$key.\", '%d-%m-%Y') = '\".$value.\"'\";\n                    $arrCondition[] = \"DATE_FORMAT($key, '%d-%m-%Y') = :$key\";\n                } else {\n                    //$arrCondition[] = \"LOWER(\".$key.\") LIKE '%\".strtolower($value).\"%'\";\n                    $arrCondition[] = \"LOWER($key) LIKE :$key\";\n                    $value = \"%\".strtolower($value).\"%\";\n                }\n                $arrParamBind[] = array(':'.$key, $value, PDO::PARAM_STR);\n                $arrParam[\":$key\"] = $value;\n            }\n        }\n        $strCondition = implode($arrCondition, ' AND ');\n        if (count($arrCondition) >= 1) {\n            if ($whereExist) {\n                $sql .= ' AND ';\n            } else {\n                $sql .= ' WHERE ';\n            }\n        }\n\n        // add $arrParam and $arrParamBind\n        if (!empty($additionalParam)) {\n            foreach ($additionalParam as $key => $value) {\n                $arrParam[$key] = $value;\n                $arrParamBind[] = array($key, $value, PDO::PARAM_STR);\n            }\n        }\n\n        $sql .= $strCondition;\n        return array('sql'=>$sql, 'paramBind'=>$arrParamBind, 'param'=>$arrParam);\n    }\n\n    /**\n     *\n     */\n    public function findAllBuktiModalDasar($strSql, $formFilter, $whereExist)\n    {\n        $sqlData = $this->basicSqlFilter($strSql, $formFilter, $whereExist);\n        return $sqlData;\n    }\n\n    /**\n     *\n     */\n    public function countBuktiModalDasar($sqlData, $paramBind)\n    {\n        $sql = 'SELECT COUNT(*) FROM (' . $sqlData . ') as count_alias';\n        return $this->execSqlQueryScalar('dbBadanHukum', $sql, $paramBind);\n    }\n}\n\n\n--- File: 238 # controllers/DashboardController.php ---\n<?php\n\nclass DashboardController extends Controller\n{\n    public $defaultAction = 'bakum';\n\n    public function actionBakum()\n    {\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListBase();\n        $listJenisTransaksi = BaseEnum::getListJenis(\"perseroan\");\n        $tipe = DashboardHelper::TYPE_BAKUM;\n        $model = new DashboardFilterForm($tipe);\n        $this->render('index', array(\n            'model' => $model,\n            'report' => $listReport[$tipe],\n            'listKategori' => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'tipe' => $tipe,\n            'listProvinsi' => $listProvinsi,\n            'listKabupaten'=>$listKabupaten,\n        ));\n    }\n\n    public function actionJenisPerseroan(){\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListJenisPerseroan();\n        $listJenisTransaksi = BaseEnum::getListJenis(\"perseroan\");\n        $tipe = DashboardHelper::TYPE_PERSEROAN;\n        $model = new DashboardFilterForm($tipe);\n\n        $this->render('index', array(\n            'model' => $model,\n            'report' => $listReport[$tipe],\n            'listKategori' => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'tipe' => $tipe,\n            'listProvinsi' => $listProvinsi,\n            'listKabupaten' => $listKabupaten,\n            'tampil_kolom' => $this->renderPartial('_collapsibleColumn', array('tipe' => 'perseroan'), true, true),\n        ));\n    }\n\n    public function actionJenisYayasan(){\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListJenisYayasan();\n        $listJenisTransaksi = BaseEnum::getListJenisTransaksiYayasan();\n        $listJenisTransaksiPerseroan = BaseEnum::getListJenis(\"yayasan\");\n        $tipe = DashboardHelper::TYPE_YAYASAN;\n        $model = new DashboardFilterForm($tipe);\n\n        $this->render('index', array(\n            'model' => $model,\n            'report' => $listReport[$tipe],\n            'listKategori' => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'listJenisTransaksiPerseroan' => $listJenisTransaksiPerseroan,\n            'tipe' => $tipe,\n            'listProvinsi' => $listProvinsi,\n            'listKabupaten'=>$listKabupaten,\n            'tampil_kolom' => $this->renderPartial('_collapsibleColumn', array('tipe' => 'yayasan'), true, true),\n        ));\n    }\n\n    /**\n     * An ajax action\n     * for get html dropdownlist with dynamic value kabupaten by provinsi\n     * @return string\n     */\n    public function actionAjaxGetKabupaten()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $json = array('success'=>false, 'content'=>'', 'message'=>'', 'addition'=>array('name'=>''));\n            $dataPost = Yii::app()->request->getPost('DashboardFilterForm');\n            if ($dataPost) {\n                $model = new DashboardFilterForm();\n                $model->attributes = $dataPost;\n                $listKabupaten = Wilayah::model()->getKabupaten($model->provinsi_id);\n                $modelProvinsi = Wilayah::model()->findByPk($model->provinsi_id);\n                $content = $this->renderPartial('_fieldKabupatenForm', \n                    array('tipe'=>$model->tipe, 'model'=>$model, 'listKabupaten'=>$listKabupaten), true);\n                $json['success'] = true;\n                $json['content'] = $content;\n                $json['addition']['name'] = $modelProvinsi !== null ? $modelProvinsi->NAMA : '';\n            }\n            echo CJSON::encode($json);\n        }\n    }\n\n    public function actionAjaxChart(){\n        if (Yii::app()->request->isAjaxRequest) {\n            $dataPost = Yii::app()->request->getPost('DashboardFilterForm');\n            if ($dataPost) {\n                $model = new DashboardFilterForm();\n                $model->attributes = $dataPost;\n                if ($model->validate()) {\n                    $result = DashboardHelper::generateChart($model);\n                    $this->renderJSON($result['chart']);\n                }\n            }\n        }\n    }\n\n    public function actionAjaxGrid(){\n        if (Yii::app()->request->isAjaxRequest) {\n\n            $modelSearch = new DashboardFilterDataForm('search');\n            $getSearch = Yii::app()->request->getQuery('DashboardFilterDataForm');\n\n            $jenis_transaksi = Yii::app()->request->getQuery('jenis_transaksi');\n            $id_aksi_transaksi = Yii::app()->request->getQuery('id_aksi_transaksi');\n            $tipe = Yii::app()->request->getQuery('tipe');\n            $kategori = Yii::app()->request->getQuery('kategori');\n            $provinsi_id = Yii::app()->request->getQuery('provinsi_id');\n            $kabupaten_id = Yii::app()->request->getQuery('kabupaten_id');\n            $tanggal_awal = Yii::app()->request->getQuery('tanggal_awal');\n            $tanggal_akhir = Yii::app()->request->getQuery('tanggal_akhir');\n            $maksud = Yii::app()->request->getQuery('maksud');\n            $tujuan = Yii::app()->request->getQuery('tujuan');\n            // IDS, Filter berdasarkan id_aksi_transaksi\n            // pencarian berdasarkan jenis transaksi\n            $getSearch['id_aksi_transaksi'] = ($tipe == 2) ? $id_aksi_transaksi : $jenis_transaksi;\n\n            if ($maksud != null && $tujuan != null) {\n                if ($kategori == 'perseroan') {\n                    $getSearch['kegiatan'] = '{\"maksud\":\"'. $maksud .'\"%'. $tujuan;\n                } elseif ($kategori == 'yayasan') {\n                    $getSearch['keterangan_' . strtolower($maksud)] = '%'. $tujuan .'%';\n                } else {\n                    $getSearch['maksud'] = '%{\"'. $maksud .'\":\"'. $tujuan .'%';\n                }\n            }\n\n            if (!empty($getSearch)) {\n                $modelSearch->unsetAttributes();\n                $modelSearch->attributes = $getSearch;\n            }\n\n            if (\n                $tipe !== null &&\n                ($kategori !== null || $jenis_transaksi !== null) &&\n                ($provinsi_id !== null || ($tanggal_awal !== null && $tanggal_akhir !== null))\n            ) {\n                $model = new DashboardFilterForm();\n                $model->setAttributesManual(\n                    array(\n                        'tipe'=>$tipe, 'kategori'=>$kategori, 'jenis_transaksi' => $jenis_transaksi, \n                        'provinsi_id'=>$provinsi_id,'kabupaten_id'=>$kabupaten_id,\n                        'tanggal_awal'=>$tanggal_awal, 'tanggal_akhir'=>$tanggal_akhir,\n                        'id_aksi_transaksi' => $jenis_transaksi,\n                    )\n                );\n                if ($model->validate()) {\n                    $model->search = $modelSearch;\n                    $result = DashboardHelper::generateGrid($model);\n                    $gridContent = $this->renderPartial($result['view'], array('model'=>$result['grid'], 'modelSearch'=>$modelSearch), true, true);\n                    $this->renderJSON($gridContent);\n                }\n            }\n        }\n    }\n\n    public function actionDownloadExcel()\n    {\n        $dataPost = Yii::app()->request->getPost('DashboardFilterForm');\n        $header = Yii::app()->request->getPost('header');\n        $base = 'perseroan';\n\n        // IDS, Ambil filter berdasarkan gridview\n        $get_grid_filter = $_POST['DashboardFilterDataForm'];\n        $dataPost = array_merge($dataPost, $get_grid_filter);\n\n\n        if (!empty($dataPost)) {\n            $modelSearch = new DashboardFilterDataForm('search');\n            $modelSearch->attributes = $dataPost;\n            $model = new DashboardFilterForm();\n\n            // IDS, Filter berdasarkan id_aksi_transaksi\n            // untuk filter berdasarkan jenis_transaksi\n            $modelSearch->jenis_transaksi = '';\n            $modelSearch->id_aksi_transaksi = $dataPost['tipe'] == 2 ? $dataPost['id_aksi_transaksi'] : $dataPost['jenis_transaksi'];\n\n            if ($dataPost['maksud'] != null && $dataPost['tujuan'] != null) {\n                if ($dataPost['kategori'] == 'perseroan') {\n                    $modelSearch->kegiatan = '{\"maksud\":\"'. $dataPost['maksud'] .'\"%'. $dataPost['tujuan'];\n                    $modelSearch->maksud = '';\n                    $modelSearch->tujuan = '';\n                } elseif ($dataPost['kategori'] == 'yayasan') {\n                    $variable_ket = 'keterangan_' . strtolower($dataPost['maksud']);\n\n                    $modelSearch->{$variable_ket} = '%'.  $dataPost['tujuan'] .'%';\n                    $modelSearch->maksud = '';\n                    $modelSearch->tujuan = '';\n                } elseif ($dataPost['kategori'] == 'perkumpulan') {\n                    $modelSearch->maksud = '%{\"'. $dataPost['maksud'] .'\":\"'. $dataPost['tujuan'] .'%';\n                    $modelSearch->kegiatan = '';\n                    $modelSearch->tujuan = '';\n                }\n            }\n            // menentukan base laporan untuk nama pemilik manfaat\n            if ($dataPost['kategori'] == 'perkumpulan') {\n                $base = 'perkumpulan';\n            } elseif ($dataPost['kategori'] == 'yayasan' || $dataPost['kategori'] == 'perorangan' || $dataPost['kategori'] == 'badan_hukum') {\n                $base = 'yayasan';\n            }\n\n            $model->attributes = $dataPost;\n            $model->jenis_transaksi = $dataPost['jenis_transaksi'];\n\n            if ($model->validate()) {\n                $model->search = $modelSearch;\n                $model->pagination = false;\n                $result = DashboardHelper::generateGrid($model);\n                if (empty($result['grid'])) {\n                    throw new CHttpException(404, \"Page requested does not exist.\");\n                    \n                }\n                $dataProvider = $result['grid']->getData();\n                Yii::import('system.docotel.cms.extensions.phpexcel.XPHPExcel');\n                $objPHPExcel= XPHPExcel::createPHPExcel();\n                $objPHPExcel->getProperties()->setCreator('Aplikasi Ditjen AHU Online')\n                     ->setLastModifiedBy('AHU Online System')\n                     ->setTitle('Download Dashboard Badan Hukum')\n                     ->setSubject('Download Dashboard Badan Hukum Excel')\n                     ->setDescription('Monitoring Dashboard')\n                     ->setKeywords('office 2007 openxml php')\n                     ->setCategory('Export Excel');\n                $title = $result['excel']['title'];\n                $subtitle = $result['excel']['subtitle'];\n                $namaFile = 'Monitoring Badan Hukum';\n                SabhHelpers::generateExcelForMonitoringPerseroan(\n                    $title, \n                    $subtitle, \n                    $model->getListHeaderExcel($header), \n                    $dataProvider, \n                    array('total_modal_dasar', 'total_modal_ditempatkan', 'modal_disetorkan'), \n                    $objPHPExcel, \n                    $namaFile,\n                    [],\n                    $base\n                );\n                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n                $objWriter->save('php://output');\n                Yii::app()->end();\n            }\n        }\n    }\n\n    public function actionAjaxGetJenisTransaksi()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $kategori = Yii::app()->request->getPost('kategori');\n\n            $data = array(\n                'jenis_transaksi' => BaseEnum::getListJenis($kategori),\n                'column' => $this->renderPartial('_collapsibleColumn', array('tipe' => $kategori), true, true)\n            );\n            echo CJSON::encode($data);exit;\n        }\n    }\n\n    public function actionMaksudTujuan()\n    {\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListBase();\n        $listJenisTransaksi = array();\n        $tipe = DashboardHelper::TYPE_MAKSUD_TUJUAN;\n        $model = new DashboardFilterForm(0);\n        $this->render('index', array(\n            'model'              => $model,\n            'report'             => $listReport[$tipe],\n            'listKategori'       => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'tipe'               => $tipe,\n            'listProvinsi'       => $listProvinsi,\n            'listKabupaten'      => $listKabupaten,\n            'maksud'             => Perseroan::model()->getKBLI(),\n            'tujuan'             => array(),\n        ));\n    }\n\n    public function actionGetTujuan($id = false)\n    {\n        if ($id && is_string($id) & strlen($id) == 1) {\n            $condition = \"kategori = '{$id}' and char_length(kode) = 5\";\n            $query = \"select id_kbli, judul from m_kbli\";\n            $query = $query . \" where \" . $condition;\n\n            $result = Yii::app()->dbBadanHukum->createCommand($query)->queryAll();\n            $data = [];\n            foreach ($result as $key => $value) {\n                $data[$value['judul']] = $value['judul'];\n            }\n            $this->jsonReturn($data);\n        } elseif ($id && is_string($id)) {\n            $this->jsonReturn(TransaksiYayasan::model()->arrKegiatan[$id]);\n        } else {\n            $this->jsonReturn(FALSE);\n        }\n    }\n\n    public function actionGetMaksud()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $kategori = Yii::app()->request->getPost('kategori');\n\n            if ($kategori == 'perseroan') {\n                $this->jsonReturn(Perseroan::getNewKbli());\n            } elseif ($kategori == 'yayasan') {\n                $this->jsonReturn([\n                    'sosial' => 'Sosial',\n                    'kemanusiaan' => 'Kemanusiaan',\n                    'keagamaan' => 'Keagamaan',\n                ]);\n            } elseif ($kategori == 'perkumpulan') {\n                $this->jsonReturn([\n                    'asas_tujuan' => 'Asas, Tujuan dan Fungsi',\n                    'hak_kewajiban' => 'Hak dan Kewajiban Anggota',\n                    'pengelola' => 'Pengelola Keuangan',\n                    'mekanisme' => 'Mekanisme Penyelesaian Sengketa dan Pengawasan Internal',\n                    'pembubaran' => 'Pembubaran Organisasi',\n                ]);\n            } else {\n                $this->jsonReturn(FALSE);\n            }\n        }\n    }\n\n    private function jsonReturn($val) {\n        $data = array(\n            'status' => 500,\n            'message' => 'no data',\n            'value' => ''\n        );\n        if ($val) {\n            $data['status'] = 200;\n            $data['message'] = 'success';\n            $data['value'] = $val;\n        }\n        header('Content-Type: application/json');\n        echo json_encode($data);\n        exit;\n    }\n}\n\n\n--- File: 90 # models/BadanHukumAktaLog.php ---\n<?php\n\n/**\n * This is the model class for table \"{{badan_hukum_akta_log}}\".\n *\n * The followings are the available columns in table '{{badan_hukum_akta_log}}':\n * @property integer $log_id\n * @property string $nomor_transaksi\n * @property string $base\n * @property string $uploaded_date\n * @property string $uploaded_by\n */\nclass BadanHukumAktaLog extends CActiveRecord\n{\n    public $file_akta;\n    public $upload_akta_pemindahan_hak;\n    /**\n     * Returns the static model of the specified AR class.\n     * @param string $className active record class name.\n     * @return BadanHukumAktaLog the static model class\n     */\n    public static function model($className=__CLASS__)\n    {\n        return parent::model($className);\n    }\n\n    /**\n     * @return CDbConnection database connection\n     */\n    public function getDbConnection()\n    {\n        return Yii::app()->dbBadanHukum;\n    }\n\n    /**\n     * @return string the associated database table name\n     */\n    public function tableName()\n    {\n        return '{{badan_hukum_akta_log}}';\n    }\n\n    /**\n     * @return array validation rules for model attributes.\n     */\n    public function rules()\n    {\n        // NOTE: you should only define rules for those attributes that\n        // will receive user inputs.\n        return array(\n            array('file_akta',\n                    'file',\n                  'allowEmpty' => true,\n                  'maxSize' => 1024 * 1024 * 100,\n                  'types' =>'pdf',\n                  'tooLarge' => 'Silahkan upload file yg berukuran lebih kecil dari 5MB.',\n                  'wrongType' => 'File akta hanya boleh berupa file pdf.',\n                  'on'=>'edit_transaksi_upload'),\n            array('nomor_transaksi', 'length', 'max'=>20),\n            array('base', 'length', 'max'=>11),\n            array('uploaded_by', 'length', 'max'=>255),\n            array('uploaded_date, upload_akta, upload_akta_pemindahan_hak', 'safe'),\n            array('nomor_transaksi, base, uploaded_by, uploaded_date, upload_akta, upload_akta_pemindahan_hak','safe','on'=>'edit_transaksi_upload'),\n            // array('pending','default','value'=>1,'on'=>'edit_transaksi_upload','setOnEmpty'=>false),\n            // array('pending','default','value'=>0,'on'=>'verify_transaksi_upload','setOnEmpty'=>false),\n            // The following rule is used by search().\n            // Please remove those attributes that should not be searched.\n            array('log_id, nomor_transaksi, base, uploaded_date, uploaded_by, file_akta', 'safe', 'on'=>'search'),\n        );\n    }\n\n    /**\n     * @return array relational rules.\n     */\n    public function relations()\n    {\n        // NOTE: you may need to adjust the relation name and the related\n        // class name for the relations automatically generated below.\n        return array(\n        );\n    }\n\n    /**\n     * @return array customized attribute labels (name=>label)\n     */\n    public function attributeLabels()\n    {\n        return array(\n            'log_id' => 'Log',\n            'nomor_transaksi' => 'Nomor Transaksi',\n            'base' => 'Base',\n            'uploaded_date' => 'Uploaded Date',\n            'uploaded_by' => 'Uploaded By',\n        );\n    }\n\n    /**\n     * Retrieves a list of models based on the current search/filter conditions.\n     * @return CActiveDataProvider the data provider that can return the models based on the search/filter conditions.\n     */\n    public function search()\n    {\n        // Warning: Please modify the following code to remove attributes that\n        // should not be searched.\n\n        $criteria=new CDbCriteria;\n\n        $criteria->compare('log_id',$this->log_id);\n        $criteria->compare('nomor_transaksi',$this->nomor_transaksi,true);\n        $criteria->compare('base',$this->base,true);\n        $criteria->compare('uploaded_date',$this->uploaded_date,true);\n        $criteria->compare('uploaded_by',$this->uploaded_by,true);\n\n        return new CActiveDataProvider($this, array(\n            'criteria'=>$criteria,\n        ));\n    }\n\n    public static function findLatestFileByNomorTransaksi($nomor_transaksi){\n        $criteria = new CDbCriteria();\n        $criteria->compare('nomor_transaksi',$nomor_transaksi,false,'AND');\n        $criteria->order = 'log_id DESC';\n        return self::model()->find($criteria);\n    }\n\n    public function handleUploadAkta($file='', $nomor_transaksi='', $_save=true, $dataPost = null, $isAktaPemindahanHak = false)\n    {\n        $file_loc = $file['tmp_name'];\n        \n        $size = $file['size'];\n        if (!is_string($file_loc)) {\n            // RestApi::response(400, 'Invalid file upload.');\n            return null;\n        }\n        if (intval($size) > 10485760) {\n            // RestApi::response(400, 'Maximum File 10Mb');\n            return null;\n        }\n        $finfo = finfo_open(FILEINFO_MIME_TYPE); // return mime-type extension\n        $mimeType = finfo_file($finfo, $file_loc);\n        finfo_close($finfo);\n        if ($mimeType !== 'application/pdf') {\n            // RestApi::response(400, 'File harus berupa pdf.');\n            return null;\n        }\n        $base = $this->getBase($nomor_transaksi);\n        $path = \"\";\n        switch ($base) {\n            case 'perseroan':\n                $path = $isAktaPemindahanHak ? BadanHukumAkta::$aktaPemindahanHak : BadanHukumAkta::$aktaPerseroan;\n                break;\n            case 'perkumpulan':\n                $path = BadanHukumAkta::$aktaPerkumpulan;\n                break;\n            case 'yayasan':\n                $path = BadanHukumAkta::$aktaYayasan;\n                break;\n        }\n        $fileName = isset($file['name']) ? str_replace(' ', '-', $file['name']) : \"\";\n        $pathFile = $this->createPathSave($path, $fileName, $nomor_transaksi);\n        $pathsave = Yii::getPathOfAlias('webroot').$pathFile;\n        $up = move_uploaded_file($file_loc,$pathsave);\n\n        if ($up && !empty($_save)) {\n            $res = false;\n            $modelLog = BadanHukumAktaLog::model()->find('nomor_transaksi=\"'.$nomor_transaksi.'\"');\n            if(!empty($modelLog)){ //Update data (Re-upload Akta)\n                $this->setUploadAkta($modelLog, $pathFile, $dataPost, $isAktaPemindahanHak);\n                $modelLog->uploaded_date = date('Y-m-d H:i:s');\n                $modelLog->uploaded_by = Yii::app()->user->name;\n                if ($modelLog->save())\n                    return $modelLog;\n            }\n            else {\n                $model = new BadanHukumAktaLog;\n                $model->nomor_transaksi = $nomor_transaksi;\n                $model->base = $base;\n                $model->uploaded_date = date('Y-m-d H:i:s');\n                $model->uploaded_by = Yii::app()->user->name;\n                $this->setUploadAkta($model, $pathFile, $dataPost, $isAktaPemindahanHak);\n                if ($model->save())\n                    return $model;\n            }\n        }\n        else{\n            // RestApi::response(400);\n            return null;\n        }\n    }\n\n    public function uploadAkta($file='', $nomor_transaksi='', $_save=true, $dataPost = null, $isAktaPemindahanHak = false)\n    {\n        $file_loc = $file['tmp_name'];\n        \n        $size = $file['size'];\n        if (!is_string($file_loc)) {\n            RestApi::response(400, 'Invalid file upload.');\n        }\n        if (intval($size) > 10485760) {\n            RestApi::response(400, 'Maximum File 10Mb');\n        }\n        $finfo = finfo_open(FILEINFO_MIME_TYPE); // return mime-type extension\n        $mimeType = finfo_file($finfo, $file_loc);\n        finfo_close($finfo);\n        if ($mimeType !== 'application/pdf') {\n            RestApi::response(400, 'File harus berupa pdf.');\n        }\n        $base = $this->getBase($nomor_transaksi);\n        $path = \"\";\n        switch ($base) {\n            case 'perseroan':\n                $path = $isAktaPemindahanHak ? BadanHukumAkta::$aktaPemindahanHak : BadanHukumAkta::$aktaPerseroan;\n                break;\n            case 'perkumpulan':\n                $path = BadanHukumAkta::$aktaPerkumpulan;\n                break;\n            case 'yayasan':\n                $path = BadanHukumAkta::$aktaYayasan;\n                break;\n        }\n        $fileName = isset($file['name']) ? str_replace(' ', '-', $file['name']) : \"\";\n        $pathFile = $this->createPathSave($path, $fileName, $nomor_transaksi);\n        $pathsave = Yii::getPathOfAlias('webroot').$pathFile;\n        \n        $dirPath = dirname($pathsave);\n        if (!is_dir($dirPath)) {\n            mkdir($dirPath, 0755, true);\n        }\n        \n        $up = move_uploaded_file($file_loc,$pathsave);\n\n        if ($up && !empty($_save)) {\n            $res = false;\n            $modelLog = BadanHukumAktaLog::model()->find('nomor_transaksi=\"'.$nomor_transaksi.'\"');\n            if(!empty($modelLog)){ //Update data (Re-upload Akta)\n                $this->setUploadAkta($modelLog, $pathFile, $dataPost, $isAktaPemindahanHak);\n                $modelLog->uploaded_date = date('Y-m-d H:i:s');\n                $modelLog->uploaded_by = Yii::app()->user->name;\n                if ($modelLog->save())\n                    RestApi::response(200, $modelLog->attributes);\n            }\n            else {\n                $model = new BadanHukumAktaLog;\n                $model->nomor_transaksi = $nomor_transaksi;\n                $model->base = $base;\n                $model->uploaded_date = date('Y-m-d H:i:s');\n                $model->uploaded_by = Yii::app()->user->name;\n                $this->setUploadAkta($model, $pathFile, $dataPost, $isAktaPemindahanHak);\n                if ($model->save())\n                    RestApi::response(200, $model->attributes);\n            }\n        }\n        else{\n            RestApi::response(400);\n        }\n    }\n\n    protected function setUploadAkta(&$model, $pathFile, $dataPost, $isAktaPemindahanHak)\n    {\n        $fileType = null;\n        if (is_array($dataPost) && isset($dataPost['file_type'])) {\n            $fileType = $dataPost['file_type'];\n        }\n\n        if ($isAktaPemindahanHak) {\n            $model->upload_akta_pemindahan_hak = $pathFile;\n        } elseif (!empty($fileType)) {\n            switch ($fileType) {\n                case 'berita_acara':\n                    if ($model->hasAttribute('upload_berita_acara_rapat_atau_notulen'))\n                        $model->upload_berita_acara_rapat_atau_notulen = $pathFile;\n                    break;\n                case 'akta_pemindahan_hak':\n                    if ($model->hasAttribute('upload_akta_pemindahan_hak'))\n                        $model->upload_akta_pemindahan_hak = $pathFile;\n                    break;\n                case 'penetapan_ganti_nama':\n                    // Support both new and old column names for backward compatibility\n                    if ($model->hasAttribute('upload_penetapan_ganti_nama_pemegang_saham'))\n                        $model->upload_penetapan_ganti_nama_pemegang_saham = $pathFile;\n                    elseif ($model->hasAttribute('upload_fotokopi_identitas_nama_baru'))\n                        $model->upload_fotokopi_identitas_nama_baru = $pathFile;\n                    break;\n                case 'surat_persetujuan':\n                    // Support both new and old column names for backward compatibility\n                    if ($model->hasAttribute('upload_surat_persetujuan_pemilik_manfaat'))\n                        $model->upload_surat_persetujuan_pemilik_manfaat = $pathFile;\n                    elseif ($model->hasAttribute('upload_daftar_pemegang_saham'))\n                        $model->upload_daftar_pemegang_saham = $pathFile;\n                    break;\n                case 'dokumen_lainnya':\n                    if ($model->hasAttribute('upload_dokumen_lainnya'))\n                        $model->upload_dokumen_lainnya = $pathFile;\n                    break;\n                // Keep old cases for backward compatibility\n                case 'dokumen_dasar_hukum':\n                    if ($model->hasAttribute('upload_dokumen_dasar_hukum_perubahan_nama'))\n                        $model->upload_dokumen_dasar_hukum_perubahan_nama = $pathFile;\n                    break;\n                case 'fotokopi_identitas':\n                    if ($model->hasAttribute('upload_fotokopi_identitas_nama_baru'))\n                        $model->upload_fotokopi_identitas_nama_baru = $pathFile;\n                    break;\n                case 'daftar_pemegang_saham':\n                    if ($model->hasAttribute('upload_daftar_pemegang_saham'))\n                        $model->upload_daftar_pemegang_saham = $pathFile;\n                    break;\n                default:\n                    // fallback to akta if unknown file_type\n                    $model->upload_akta = $pathFile;\n                    break;\n            }\n        } else {\n            if (\n                $dataPost !== null &&\n                is_array($dataPost) &&\n                isset($dataPost['jenis']) &&\n                $dataPost['jenis'] == 'gabung' && isset($dataPost['tipe'])\n            ) {\n                if ($dataPost['tipe'] == '_1') {\n                    $model->upload_akta = $pathFile;\n                } elseif ($dataPost['tipe'] == '_2') {\n                    $model->upload_akta_2 = $pathFile;\n                }\n            } else {\n                $model->upload_akta = $pathFile;\n            }\n        }\n    }\n\n    /**\n     * Create Path and new file name for upload\n     * @param   string      $path   folder path\n     * @param   string      $fileName   client file name\n     * @param   string      $nomorTransaksi\n     */\n    public function createPathSave($path='', $fileName='', $nomorTransaksi='')\n    {\n        if (!empty($path) && !empty($fileName) ) {\n            $nama_uniq = !empty($fileName)\n                ? str_replace(' ', '-', $fileName) : rand(1, 100);\n            $nomorTransaksi = is_array($nomorTransaksi)\n                ? implode(\"\", $nomorTransaksi) : $nomorTransaksi;\n            if (is_string($nama_uniq) && is_string($nomorTransaksi)) {\n                $filename = $nomorTransaksi.'_'.$nama_uniq;\n            } elseif(is_string($nama_uniq)) {\n                $filename = $nama_uniq;\n            } elseif(is_string($nomorTransaksi)) {\n                $filename = $nomorTransaksi;\n            }\n\n            $fullpath = $path.$filename;\n            // max length in tbl_badan_hukum_akta.upload_akta 200 char\n            if (strlen($fullpath) > 200) {\n                $path_info = pathinfo($fullpath);\n                $new_filename = substr($path_info['filename'], 0, 150) . '.' . $path_info['extension'];\n                $fullpath = $path.$new_filename;\n            }\n\n            return $fullpath;\n        }\n    }\n    public function getBase($nomor_transaksi='')\n    {\n        if (!empty($nomor_transaksi)) {\n            switch (substr($nomor_transaksi, 0, 2)) {\n                case '40':\n                    return 'perseroan';\n                    break;\n                case '50':\n                    return 'yayasan';\n                    break;\n                case '60':\n                    return 'perkumpulan';\n                    break;\n            }\n        }\n    }\n}\n\n\n--- File: 294 # controllers/UploadAktaController.php ---\n<?php\n\nclass UploadAktaController  extends BaseController{\n\n    public function actionPerseroan(){\n        $nomor_transaksi = Yii::app()->request->getQuery('no');\n        $id = Yii::app()->request->getQuery('id');\n        $data_post = Yii::app()->request->getPost('BadanHukumAkta');\n        $kreditor = TransaksiPerseroan::model()->getKeberatanKreditor($nomor_transaksi);\n        $transaksiPerseroan = TransaksiPerseroan::model()->find('nomor_transaksi = :no', array(':no' => $nomor_transaksi));\n        /**\n         * start questionaire BO\n         */\n        $trxQuestionaire = TransactionQuestionnaire::model()->find('bakum_type=:type AND master_id=:master_id', array('type' => 'perseroan', 'master_id' => $transaksiPerseroan->id_perseroan));\n        if (is_null($trxQuestionaire) && in_array($transaksiPerseroan->id_aksi_transaksi, array(9, 10, 35))) {\n            if ($this->checkStatusQuestionnaire(\"01\")) {\n                Yii::app()->session['success_questionnaire_redirect'] = '/sabh/uploadAkta/perseroan/no/'.$nomor_transaksi.'/id/'.$id;\n                $this->redirect(array('perseroan/questionnaire/', 'id' => $transaksiPerseroan->nomor_transaksi));\n                exit();\n            }\n        } else {\n            unset(Yii::app()->session['success_questionnaire_redirect']);\n        }\n        /**\n         * end questionaire bo\n         */\n        $perseroan = Perseroan::model()->findByPk($id);\n\n        // 2024-06-25, cek status blokir perseroan pada saat upload akta\n        if ($perseroan->status_transaksi == 4) {\n            Yii::app()->user->setFlash('blokir', \"Perseroan ini sedang berstatus blokir\");\n            $this->redirect(array('/sabh/perseroan/detailTransaksi', 'id' => $nomor_transaksi));\n        }\n\n        $nonpadTypes = $this->parseNONPADTypes($transaksiPerseroan->jenis_perubahan);\n        $perubahanPemegangSaham = DiffTransaksi::cekPerubahanPemegangSaham($perseroan->pemegang_saham, $transaksiPerseroan->pemegang_saham);\n        if (!empty($kreditor) && $kreditor == 1) {\n            $this->redirect(array('/sabh/perseroan/listTransaksi'));\n        }\n        $this->formUpload('perseroan', $nomor_transaksi, $id, $data_post, $perubahanPemegangSaham, $nonpadTypes);\n    }\n\n    public function actionPerkumpulan(){\n        $nomor_transaksi = Yii::app()->request->getQuery('no');\n        $id = Yii::app()->request->getQuery('id');\n        $data_post = Yii::app()->request->getPost('BadanHukumAkta');\n        /**\n         * start questionaire BO\n         */\n        $transaksiPerkumpulan = TransaksiPerkumpulan::model()->find('nomor_transaksi = :no', array(':no' => $nomor_transaksi));\n        $trxQuestionaire = TransactionQuestionnaire::model()->find('bakum_type=:type AND master_id=:master_id', array('type' => 'perkumpulan', 'master_id' => $id));\n        if (is_null($trxQuestionaire) && $transaksiPerkumpulan->id_aksi_transaksi == 14) {\n            if ($this->checkStatusQuestionnaire(\"03\")) {\n                Yii::app()->session['success_questionnaire_redirect'] = '/sabh/uploadAkta/perkumpulan/no/'.$nomor_transaksi.'/id/'.$id;\n                $this->redirect(array('perkumpulan/questionnaire/', 'id' => $transaksiPerkumpulan->nomor_transaksi));\n                exit();\n            }\n        } else {\n            unset(Yii::app()->session['success_questionnaire_redirect']);\n        }\n        /**\n         * end questionaire bo\n         */\n        $this->formUpload('perkumpulan', $nomor_transaksi, $id, $data_post);\n\n    }\n\n    public function actionYayasan(){\n        $nomor_transaksi = Yii::app()->request->getQuery('no');\n        $id = Yii::app()->request->getQuery('id');\n        /**\n         * start questionaire BO\n         */\n        $transaksiPerkumpulan = TransaksiYayasan::model()->find('nomor_transaksi = :no', array(':no' => $nomor_transaksi));\n        $trxQuestionaire = TransactionQuestionnaire::model()->find('bakum_type=:type AND master_id=:master_id', array('type' => 'yayasan', 'master_id' => $id));\n        if (is_null($trxQuestionaire) && $transaksiPerkumpulan->id_aksi_transaksi == 2) {\n            if ($this->checkStatusQuestionnaire(\"02\")) {\n                Yii::app()->session['success_questionnaire_redirect'] = '/sabh/uploadAkta/yayasan/no/'.$nomor_transaksi.'/id/'.$id;\n                $this->redirect(array('yayasan/questionnaire/', 'id' => $transaksiPerkumpulan->nomor_transaksi));\n                exit();\n            }\n        } else {\n            unset(Yii::app()->session['success_questionnaire_redirect']);\n        }\n        /**\n         * end questionaire bo\n         */\n        $data_post = Yii::app()->request->getPost('BadanHukumAkta');\n        $postJenis = Yii::app()->request->getPost('jenis');\n        $postTipe = Yii::app()->request->getPost('tipe');\n        $data_post = !empty($data_post) ? $data_post : array();\n        if (!empty($postJenis)) {\n            $data_post['jenis'] = $postJenis;\n        }\n        if (!empty($postTipe)) {\n            $data_post['tipe'] = $postTipe;\n        }\n        $this->formUpload('yayasan', $nomor_transaksi, $id, $data_post);\n    }\n    /*\n     * $tipe = perseroan, yayasan, perkumpulan\n     *\n     *\n    */\n    public function formUpload($tipe='perseroan', $nomor_transaksi = '', $id='', $data_post='', $perubahanPemegangSaham = false, $nonpadTypes = [])\n    {\n        set_time_limit(0);\n        @ini_set('memory_limit', '-1');\n        @ini_set('upload_max_size' , '10M' );\n        @ini_set('post_max_size', '10M');\n        $group = Yii::app()->user->group;\n        if(!empty($nomor_transaksi)){\n            // payload ketika upload akta perubahan request by ajax\n            $isUploadAktaPerubahanHak = Yii::app()->request->getPost('is_akta_perubahan_hak') == '1';\n            if(!empty($_FILES)) {\n                $fileType = Yii::app()->request->getPost('file_type');\n                $payloadPost = is_array($data_post) ? $data_post : array();\n                if (!empty($fileType)) {\n                    $payloadPost['file_type'] = $fileType;\n                }\n                foreach ($_FILES as $key => $value) {\n                    $upload = BadanHukumAktaLog::model()->UploadAkta($value, $nomor_transaksi, true, $payloadPost, $isUploadAktaPerubahanHak);\n                }\n                if (!empty($upload)) {\n                    $res = array('status' => 'success',\n                        'result' =>$upload );\n                }\n                else\n                    $res = array('status' => 'error');\n\n                echo json_encode($res);\n                exit;\n            }\n\n            $year = '20' . substr($nomor_transaksi, 2, 2);\n            $checkYear = SabhHelpers::cekTahun($year);\n            if (empty($checkYear)) {\n                $year = date(\"Y\");\n            }\n\n            $scenario = ($tipe == 'perseroan' && ($perubahanPemegangSaham || !empty($nonpadTypes))) ? 'simpan_dengan_akta_pemindahan_hak' : 'simpan';\n\n            $model = new BadanHukumAkta($scenario, $year);\n            $model->scenario = $scenario;\n            $transaksi = null;\n            $pr_nama = \"nama_perseroan\";\n            if ($tipe == 'perseroan'){\n                $transaksi = TransaksiPerseroan::model()->find('nomor_transaksi=:no_trans AND id_perseroan=:id_perseroan AND id_notaris=:id_notaris AND status_transaksi=0',\n                    array(\n                        ':no_trans' => $nomor_transaksi,\n                        ':id_perseroan' => $id,\n                        ':id_notaris'=>Yii::app()->user->profilid\n                    )\n                );\n                $pr_nama = \"nama_perseroan\";\n            }\n            elseif($tipe == 'perkumpulan'){\n                $transaksi = TransaksiPerkumpulan::model()->find('nomor_transaksi=:no_trans AND id_badan_hukum=:id_badan_hukum AND id_notaris=:id_notaris AND status_transaksi=0',\n                    array(\n                        ':no_trans' => $nomor_transaksi,\n                        ':id_badan_hukum'=>$id,\n                        ':id_notaris'=>Yii::app()->user->profilid\n                    )\n                );\n                $pr_nama = \"nama_perkumpulan\";\n            }\n            elseif($tipe == 'yayasan'){\n                $transaksi = TransaksiYayasan::model()->find('nomor_transaksi=:no_trans AND id_badan_hukum=:id_badan_hukum AND id_notaris=:id_notaris AND status_transaksi=0',\n                    array(\n                        ':no_trans' => $nomor_transaksi,\n                        ':id_badan_hukum'=>$id,\n                        ':id_notaris'=>Yii::app()->user->profilid\n                    )\n                );\n                $pr_nama = \"nama_yayasan\";\n            }\n            if (!empty($transaksi)) {\n                if(!empty($data_post)){\n                    $model->attributes=$data_post;\n\n                    if(!empty($model->log_id)){\n                        $model->base = strtolower($tipe);\n                        $model->nomor_transaksi = $nomor_transaksi;\n                        $trans = Yii::app()->dbBadanHukum->beginTransaction();\n                        $akta = $model->saveAkta($model);\n                        if($akta){\n                            $trans->commit();\n\n                            $checkPratinjau = strtotime(date('Y-m-d', strtotime(\"+7 days\", strtotime($transaksi->created_date))));\n                            if ($checkPratinjau < time()){\n                                $this->sendQuestionnaireVoid($tipe, $transaksi);\n                            }\n\n                            $this->redirect('/sabh/'.$tipe.'/detailTransaksi/id/'.$nomor_transaksi);\n                        }else{\n                            $trans->rollback();\n                        }\n                    }\n                }\n            } else {\n                $this->redirect('/sabh/'.$tipe.'/listTransaksi');\n            }\n\n            $checkGabung = ($tipe === 'yayasan' && $transaksi->id_aksi_transaksi == TransaksiYayasan::model()->id_aksi_transaksi_penggabungan && !empty($transaksi->tipe_perubahan));\n            $viewUpload = $checkGabung ? '/badan_hukum/_formUploadAktaGabung' : '/badan_hukum/_formUploadAkta';\n\n            return $this->render($viewUpload,\n                array(\n                    'model'=>$model,\n                    'transaksi' => $transaksi,\n                    'nama' => !empty($transaksi->$pr_nama) ? $transaksi->$pr_nama : null,\n                    'formisi' => 3,\n                    'base' => $tipe,\n                    'perubahanPemegangSaham' => $perubahanPemegangSaham,\n                    'nonpadTypes' => $nonpadTypes,\n                    )\n            );\n        }\n        else {\n            if($group[0] == \"master\")\n                $this->redirect('/sabh/history/list');\n            else\n                $this->redirect('/sabh/'.$tipe.'/listTransaksi');\n        }\n    }\n\n    public function actionfilterUploadPerseroan(){\n         $model = new TransaksiPerseroan;\n        if(isset($_GET['TransaksiPerseroan']))\n            $model->attributes =$_GET['TransaksiPerseroan'];\n            $id = Yii::app()->user->profilid;\n            $model->dbCriteria->condition = 't.id_notaris=' . (int) $id;\n            $model->dbCriteria->order = 't.created_date DESC';\n            $model->unsetAttributes();\n         $params = array('model'=>$model);\n        if(!isset($_GET['ajax']))\n            $this->render('/perseroan/filterUploadAkta',$params);\n        else\n            $this->renderPartial('/perseroan/filterUploadAkta',$params);\n\n    }\n    public function actionfilterUploadPerkumpulan(){\n         $model = new TransaksiPerkumpulan;\n         $model->dbCriteria->with = 'BadanHukumAkta';\n         $id = Yii::app()->user->profilid;\n         $model->dbCriteria->condition = 't.id_notaris=' . (int) $id;\n         $model->dbCriteria->order = 't.created_date DESC';\n         $model->unsetAttributes();\n        if(isset($_GET['TransaksiPerkumpulan']))\n            $model->attributes =$_GET['TransaksiPerkumpulan'];\n         $params = array('model'=>$model);\n        if(!isset($_GET['ajax']))\n            $this->render('/perkumpulan/filterUploadAkta',$params);\n        else\n            $this->renderPartial('/perkumpulan/filterUploadAkta',$params);\n\n    }\n\n    public function actionfilterUploadYayasan(){\n        $model = new TransaksiYayasan;\n         $model->dbCriteria->with = 'BadanHukumAkta';\n         $id = Yii::app()->user->profilid;\n        $model->dbCriteria->condition = 't.id_notaris=' . (int) $id;\n         $model->dbCriteria->order = 't.created_date DESC';\n         $model->unsetAttributes();\n        if(isset($_GET['TransaksiYayasan']))\n            $model->attributes =$_GET['TransaksiYayasan'];\n         $params = array('model'=>$model);\n        if(!isset($_GET['ajax']))\n            $this->render('/yayasan/filterUploadAkta',$params);\n        else\n            $this->renderPartial('/yayasan/filterUploadAkta',$params);\n    }\n\n    public function actionDelete($nomor_transaksi) {\n        $detail= $model = $this->loadModel('BadanHukumAkta', $nomor_transaksi);\n        if($model->delete()){\n            @unlink(Yii::getPathOfAlias('webroot').$detail->upload_akta);\n            if (!isset($_GET['ajax'])){\n                if($detail->base == 'perseroan'){\n                    $this->redirect('/sabh/uploadAkta/perseroan/no/'.$detail->nomor_transaksi);\n                }\n                if($detail->base == 'perkumpulan'){\n                    $this->redirect('/sabh/uploadAkta/perkumpulan/no/'.$detail->nomor_transaksi);\n                }\n                if($detail->base == 'yayasan'){\n                    $this->redirect('/sabh/uploadAkta/yayasan/no/'.$detail->nomor_transaksi);\n                }\n            }\n        }\n    }\n\n    /**\n     * Parse NONPAD field from jenis_perubahan JSON\n     * Returns array of NONPAD change types present in the transaction\n     * \n     * @param string $jenisPerubahanJson JSON string from jenis_perubahan column\n     * @return array List of NONPAD change types: ['direksi_komisaris', 'peralihan_saham', 'ganti_nama_ps']\n     */\n    private function parseNONPADTypes($jenisPerubahanJson) {\n        $jenisPerubahan = json_decode($jenisPerubahanJson, true);\n        \n        if (empty($jenisPerubahan) || !isset($jenisPerubahan['NONPAD'])) {\n            return [];\n        }\n        \n        $nonpad = $jenisPerubahan['NONPAD'];\n        $types = [];\n        \n        // Exact string matching as per requirement\n        if (strpos($nonpad, 'Direksi dan Komisaris') !== false) {\n            $types[] = 'direksi_komisaris';\n        }\n        if (strpos($nonpad, 'Peralihan saham') !== false) {\n            $types[] = 'peralihan_saham';\n        }\n        if (strpos($nonpad, 'Ganti nama pemegang saham') !== false) {\n            $types[] = 'ganti_nama_ps';\n        }\n        \n        return $types;\n    }\n\n}\n\n\n--- File: 927 # views/blokirPerseroan/pratinjau/index.php (truncated) ---\n<?php $this->renderPartial('../_common/styles') ?>\n<?php $this->renderPartial('../_common/loading') ?>\n\n\n<div x-data=\"dataPratinjau()\" class=\"row\" x-init=\"init()\">\n    <div class=\"col-sm-12 col-lg-12\">\n        <section class=\"panel\">\n            <header class=\"panel-heading text-center\">\n                <h3>DAFTAR PERMOHONAN PEMBLOKIRAN/PEMBUKAAN BLOKIR AKSES PT</h3>\n            </header>\n            <div class=\"panel-body\">\n                <div class=\"container mx-0\">\n                    <div class=\"bg-primary text-white font-bold rounded-t px-4 py-2 mb-5 mt-8 tracking-wide\">\n                        Data Permohonan\n                    </div>\n                    <div class=\"form-content\">\n                        <div class=\"form-parent\">\n                            <div class=\"form-group mb-0\">\n                                <label class=\"col-lg-3\">Jenis Layanan <span class=\"required\">*</span></label>\n                                <div class=\"col-lg-9 pl-0\">\n                                    <div class=\"radio-group\">\n                                        <div class=\"radio-option\">\n                                            <input type=\"radio\" id=\"blokir\" name=\"jenisLayanan\" value=\"blokir\" x-model=\"formData.jenisLayanan\" disabled>\n                                            <label for=\"blokir\">Blokir Akses PT</label>\n                                        </div>\n                                        <div class=\"radio-option\">\n                                            <input type=\"radio\" id=\"buka\" name=\"jenisLayanan\" value=\"buka\" x-model=\"formData.jenisLayanan\" disabled>\n                                            <label for=\"buka\">Buka Blokir Akses PT</label>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"form-group\">\n... (truncated)\n\nIMPORTANT: Generate the `summary` and relationship `label` fields in **Bahasa indonesia** language. Do NOT use English for these fields.\n\nPlease provide:\n1. A high-level `summary` of the project's main purpose and functionality in a few beginner-friendly sentences (in Bahasa indonesia). Use markdown formatting with **bold** and *italic* text to highlight important concepts.\n2. A list (`relationships`) describing the key interactions between these abstractions. For each relationship, specify:\n    - `from_abstraction`: Index of the source abstraction (e.g., `0 # AbstractionName1`)\n    - `to_abstraction`: Index of the target abstraction (e.g., `1 # AbstractionName2`)\n    - `label`: A brief label for the interaction **in just a few words** (in Bahasa indonesia) (e.g., \"Manages\", \"Inherits\", \"Uses\").\n    Ideally the relationship should be backed by one abstraction calling or passing parameters to another.\n    Simplify the relationship and exclude those non-important ones.\n\nIMPORTANT: Make sure EVERY abstraction is involved in at least ONE relationship (either as source or target). Each abstraction index must appear at least once across all relationships.\n\nFormat the output as YAML:\n\n```yaml\nsummary: |\n  A brief, simple explanation of the project (in Bahasa indonesia).\n  Can span multiple lines with **bold** and *italic* for emphasis.\nrelationships:\n  - from_abstraction: 0 # AbstractionName1\n    to_abstraction: 1 # AbstractionName2\n    label: \"Manages\" (in Bahasa indonesia)\n  - from_abstraction: 2 # AbstractionName3\n    to_abstraction: 0 # AbstractionName1\n    label: \"Provides config\" (in Bahasa indonesia)\n  # ... other relationships\n```\n\nNow, provide the YAML output:\n": "summary: |\n  SABH adalah modul layanan administrasi badan hukum berbasis Yii yang menyatukan berbagai loket digital: dari pesan nama, pendirian\u2013perubahan\u2013pembubaran, hingga pemblokiran akses dan monitoring. \n  Arsitektur mengikuti pola **MVC** yang rapi dengan controller tipis, service/DTO kuat, serta respons API konsisten.\n  Fitur penting mencakup unggah dokumen terstandar (PDF), generasi PDF via Gotenberg, integrasi ke backend Go lewat proxy ber-token, sistem voucher\u2013billing, monitoring/dashboard berbasis mapper SQL, serta notifikasi email berantrian.\n  Dengan standar enum, validator khusus, dan utilitas umum, pengembangan menjadi lebih aman, konsisten, dan mudah dirawat. \n  Hasilnya adalah ekosistem layanan yang terintegrasi, audit-able, dan siap diintegrasikan dengan mitra melalui *public API*.\n\nrelationships:\n  - from_abstraction: 0 # Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n    to_abstraction: 1 # Pola MVC Yii: Controller, Model, dan View\n    label: \"Mendasarkan arsitektur MVC\"\n  - from_abstraction: 29 # Standar Controller API (Tipis, Aman, Konsisten)\n    to_abstraction: 13 # Standar Respons API & Penanganan Error\n    label: \"Mengirim respons JSON\"\n  - from_abstraction: 29 # Standar Controller API (Tipis, Aman, Konsisten)\n    to_abstraction: 24 # Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n    label: \"Memakai helper request/log\"\n  - from_abstraction: 7 # Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n    to_abstraction: 10 # Proxy Backend Go & Token Kriptografi\n    label: \"Proxy ke backend Go\"\n  - from_abstraction: 7 # Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n    to_abstraction: 26 # Standar Token Auth untuk Bridging User\n    label: \"Gunakan token pengguna\"\n  - from_abstraction: 7 # Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n    to_abstraction: 12 # Generator PDF via Gotenberg (HTML ke PDF)\n    label: \"Cetak surat jawaban\"\n  - from_abstraction: 8 # Permohonan Pemblokiran PT (Endpoint & DTO)\n    to_abstraction: 39 # Desain DTO (Data Transfer Object)\n    label: \"Gunakan DTO input\"\n  - from_abstraction: 11 # Upload File Terstandar (PDF) untuk Layanan\n    to_abstraction: 28 # Pusat Pemetaan Enums & Konstanta Bisnis\n    label: \"Validasi tipe file\"\n  - from_abstraction: 12 # Generator PDF via Gotenberg (HTML ke PDF)\n    to_abstraction: 29 # Standar Controller API (Tipis, Aman, Konsisten)\n    label: \"Dipanggil controller\"\n  - from_abstraction: 2 # Layanan Perseroan Terbatas (PT)\n    to_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    label: \"Alur verifikasi perubahan\"\n  - from_abstraction: 2 # Layanan Perseroan Terbatas (PT)\n    to_abstraction: 31 # Alur Upload Akta & Hubungan ke Transaksi\n    label: \"Upload akta transaksi\"\n  - from_abstraction: 2 # Layanan Perseroan Terbatas (PT)\n    to_abstraction: 37 # Pencarian & Profil Perusahaan (Profil PT)\n    label: \"Pencarian profil PT\"\n  - from_abstraction: 3 # Layanan Yayasan\n    to_abstraction: 41 # Integrasi Frontend Modern (Alpine.js untuk Wizard)\n    label: \"Wizard multi-step\"\n  - from_abstraction: 4 # Layanan Perkumpulan\n    to_abstraction: 21 # Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n    label: \"Alur pembubaran\"\n  - from_abstraction: 4 # Layanan Perkumpulan\n    to_abstraction: 31 # Alur Upload Akta & Hubungan ke Transaksi\n    label: \"Unggah akta\"\n  - from_abstraction: 5 # Alur Pesan Nama (Name Reservation)\n    to_abstraction: 18 # Sistem Voucher & Billing\n    label: \"Validasi voucher\"\n  - from_abstraction: 5 # Alur Pesan Nama (Name Reservation)\n    to_abstraction: 33 # Public API Bakum (Akses Mitra)\n    label: \"Dibuka via API publik\"\n  - from_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    to_abstraction: 34 # Peta Status & Riwayat Verifikasi\n    label: \"Catat riwayat verifikasi\"\n  - from_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    to_abstraction: 22 # Voting Pemegang Saham (Link Token)\n    label: \"Kirim tautan voting\"\n  - from_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    to_abstraction: 43 # Peta Status Permohonan (Konstanta Status)\n    label: \"Gunakan status terstandar\"\n  - from_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    to_abstraction: 23 # Email Service & Antrian Pengiriman\n    label: \"Notifikasi email\"\n  - from_abstraction: 9 # Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n    to_abstraction: 39 # Desain DTO (Data Transfer Object)\n    label: \"Gunakan DTO permohonan\"\n  - from_abstraction: 9 # Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n    to_abstraction: 11 # Upload File Terstandar (PDF) untuk Layanan\n    label: \"Unggah dokumen\"\n  - from_abstraction: 10 # Proxy Backend Go & Token Kriptografi\n    to_abstraction: 29 # Standar Controller API (Tipis, Aman, Konsisten)\n    label: \"Dipanggil controller\"\n  - from_abstraction: 12 # Generator PDF via Gotenberg (HTML ke PDF)\n    to_abstraction: 36 # Komunikasi Email & Template Surat\n    label: \"Lampiran PDF\"\n  - from_abstraction: 27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n    to_abstraction: 14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n    label: \"Sediakan data agregat\"\n  - from_abstraction: 14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n    to_abstraction: 20 # Peta Badan Hukum (Google Maps)\n    label: \"Tampilkan peta wilayah\"\n  - from_abstraction: 30 # Monitoring & Laporan Transaksi Perseroan\n    to_abstraction: 27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n    label: \"Gunakan mapper transaksi\"\n  - from_abstraction: 15 # Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n    to_abstraction: 35 # Validasi & Filter Data (Validator Khusus)\n    label: \"Validasi form BO\"\n  - from_abstraction: 16 # Monitoring Notaris & BO (Laporan dan Grafik)\n    to_abstraction: 12 # Generator PDF via Gotenberg (HTML ke PDF)\n    label: \"Ekspor laporan PDF\"\n  - from_abstraction: 17 # Cleansing Data (Skema, Organ, Modal)\n    to_abstraction: 24 # Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n    label: \"Gunakan DatabaseHelpers\"\n  - from_abstraction: 17 # Cleansing Data (Skema, Organ, Modal)\n    to_abstraction: 42 # Standar Logging & Audit (History & LogSABH)\n    label: \"Catat log/audit\"\n  - from_abstraction: 19 # Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n    to_abstraction: 2 # Layanan Perseroan Terbatas (PT)\n    label: \"Cek NPWP/KSWP\"\n  - from_abstraction: 20 # Peta Badan Hukum (Google Maps)\n    to_abstraction: 27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n    label: \"Ambil data peta\"\n  - from_abstraction: 25 # Reupload & Monitoring Bukti Setor Modal Dasar\n    to_abstraction: 2 # Layanan Perseroan Terbatas (PT)\n    label: \"Monitor bukti setor\"\n  - from_abstraction: 27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n    to_abstraction: 38 # Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n    label: \"Pakai helper domain\"\n  - from_abstraction: 32 # UI Komponen & Widget (Dcl*)\n    to_abstraction: 3 # Layanan Yayasan\n    label: \"Bangun komponen UI\"\n  - from_abstraction: 36 # Komunikasi Email & Template Surat\n    to_abstraction: 23 # Email Service & Antrian Pengiriman\n    label: \"Antrikan pengiriman\"\n  - from_abstraction: 38 # Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n    to_abstraction: 14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n    label: \"Hitung agregasi\"\n  - from_abstraction: 40 # Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n    to_abstraction: 18 # Sistem Voucher & Billing\n    label: \"Pemetaan tipe transaksi\"\n  - from_abstraction: 42 # Standar Logging & Audit (History & LogSABH)\n    to_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    label: \"Simpan jejak proses\"\n  - from_abstraction: 31 # Alur Upload Akta & Hubungan ke Transaksi\n    to_abstraction: 22 # Voting Pemegang Saham (Link Token)\n    label: \"Trigger notifikasi e-vote\"\n  - from_abstraction: 33 # Public API Bakum (Akses Mitra)\n    to_abstraction: 5 # Alur Pesan Nama (Name Reservation)\n    label: \"Akses mitra eksternal\"\n  - from_abstraction: 28 # Pusat Pemetaan Enums & Konstanta Bisnis\n    to_abstraction: 29 # Standar Controller API (Tipis, Aman, Konsisten)\n    label: \"Standarisasi enum\"\n  - from_abstraction: 37 # Pencarian & Profil Perusahaan (Profil PT)\n    to_abstraction: 2 # Layanan Perseroan Terbatas (PT)\n    label: \"Sediakan profil PT\"\n  - from_abstraction: 41 # Integrasi Frontend Modern (Alpine.js untuk Wizard)\n    to_abstraction: 21 # Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n    label: \"Kelola state wizard\"\n  - from_abstraction: 34 # Peta Status & Riwayat Verifikasi\n    to_abstraction: 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n    label: \"Dihasilkan oleh workflow\"\n  - from_abstraction: 35 # Validasi & Filter Data (Validator Khusus)\n    to_abstraction: 18 # Sistem Voucher & Billing\n    label: \"Filter/validasi input\"\n  - from_abstraction: 30 # Monitoring & Laporan Transaksi Perseroan\n    to_abstraction: 14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n    label: \"Tampil di dashboard\"\n  - from_abstraction: 24 # Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n    to_abstraction: 19 # Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n    label: \"Bantu parsing/HTTP\"\n  - from_abstraction: 23 # Email Service & Antrian Pengiriman\n    to_abstraction: 36 # Komunikasi Email & Template Surat\n    label: \"Gunakan template\"\n  - from_abstraction: 21 # Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n    to_abstraction: 4 # Layanan Perkumpulan\n    label: \"Proses domain perkumpulan\"", "\nGiven the following project abstractions and their relationships for the project ```` sabh-openai-bahasa ````:\n\nAbstractions (Index # Name) (Names might be in Bahasa indonesia):\n- 0 # Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\n- 1 # Pola MVC Yii: Controller, Model, dan View\n\n- 2 # Layanan Perseroan Terbatas (PT)\n\n- 3 # Layanan Yayasan\n\n- 4 # Layanan Perkumpulan\n\n- 5 # Alur Pesan Nama (Name Reservation)\n\n- 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n\n- 7 # Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n\n- 8 # Permohonan Pemblokiran PT (Endpoint & DTO)\n\n- 9 # Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n\n- 10 # Proxy Backend Go & Token Kriptografi\n\n- 11 # Upload File Terstandar (PDF) untuk Layanan\n\n- 12 # Generator PDF via Gotenberg (HTML ke PDF)\n\n- 13 # Standar Respons API & Penanganan Error\n\n- 14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n\n- 15 # Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n\n- 16 # Monitoring Notaris & BO (Laporan dan Grafik)\n\n- 17 # Cleansing Data (Skema, Organ, Modal)\n\n- 18 # Sistem Voucher & Billing\n\n- 19 # Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n\n- 20 # Peta Badan Hukum (Google Maps)\n\n- 21 # Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n\n- 22 # Voting Pemegang Saham (Link Token)\n\n- 23 # Email Service & Antrian Pengiriman\n\n- 24 # Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n\n- 25 # Reupload & Monitoring Bukti Setor Modal Dasar\n\n- 26 # Standar Token Auth untuk Bridging User\n\n- 27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n\n- 28 # Pusat Pemetaan Enums & Konstanta Bisnis\n\n- 29 # Standar Controller API (Tipis, Aman, Konsisten)\n\n- 30 # Monitoring & Laporan Transaksi Perseroan\n\n- 31 # Alur Upload Akta & Hubungan ke Transaksi\n\n- 32 # UI Komponen & Widget (Dcl*)\n\n- 33 # Public API Bakum (Akses Mitra)\n\n- 34 # Peta Status & Riwayat Verifikasi\n\n- 35 # Validasi & Filter Data (Validator Khusus)\n\n- 36 # Komunikasi Email & Template Surat\n\n- 37 # Pencarian & Profil Perusahaan (Profil PT)\n\n- 38 # Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n\n- 39 # Desain DTO (Data Transfer Object)\n\n- 40 # Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n\n- 41 # Integrasi Frontend Modern (Alpine.js untuk Wizard)\n\n- 42 # Standar Logging & Audit (History & LogSABH)\n\n- 43 # Peta Status Permohonan (Konstanta Status)\n\n\nContext about relationships and project summary:\nProject Summary (Note: Project Summary might be in Bahasa indonesia):\nSABH adalah modul layanan administrasi badan hukum berbasis Yii yang menyatukan berbagai loket digital: dari pesan nama, pendirian\u2013perubahan\u2013pembubaran, hingga pemblokiran akses dan monitoring. \nArsitektur mengikuti pola **MVC** yang rapi dengan controller tipis, service/DTO kuat, serta respons API konsisten.\nFitur penting mencakup unggah dokumen terstandar (PDF), generasi PDF via Gotenberg, integrasi ke backend Go lewat proxy ber-token, sistem voucher\u2013billing, monitoring/dashboard berbasis mapper SQL, serta notifikasi email berantrian.\nDengan standar enum, validator khusus, dan utilitas umum, pengembangan menjadi lebih aman, konsisten, dan mudah dirawat. \nHasilnya adalah ekosistem layanan yang terintegrasi, audit-able, dan siap diintegrasikan dengan mitra melalui *public API*.\n\n\nRelationships (Indices refer to abstractions above):\n- From 0 (Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n) to 1 (Pola MVC Yii: Controller, Model, dan View\n): Mendasarkan arsitektur MVC\n- From 29 (Standar Controller API (Tipis, Aman, Konsisten)\n) to 13 (Standar Respons API & Penanganan Error\n): Mengirim respons JSON\n- From 29 (Standar Controller API (Tipis, Aman, Konsisten)\n) to 24 (Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n): Memakai helper request/log\n- From 7 (Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n) to 10 (Proxy Backend Go & Token Kriptografi\n): Proxy ke backend Go\n- From 7 (Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n) to 26 (Standar Token Auth untuk Bridging User\n): Gunakan token pengguna\n- From 7 (Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n) to 12 (Generator PDF via Gotenberg (HTML ke PDF)\n): Cetak surat jawaban\n- From 8 (Permohonan Pemblokiran PT (Endpoint & DTO)\n) to 39 (Desain DTO (Data Transfer Object)\n): Gunakan DTO input\n- From 11 (Upload File Terstandar (PDF) untuk Layanan\n) to 28 (Pusat Pemetaan Enums & Konstanta Bisnis\n): Validasi tipe file\n- From 12 (Generator PDF via Gotenberg (HTML ke PDF)\n) to 29 (Standar Controller API (Tipis, Aman, Konsisten)\n): Dipanggil controller\n- From 2 (Layanan Perseroan Terbatas (PT)\n) to 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n): Alur verifikasi perubahan\n- From 2 (Layanan Perseroan Terbatas (PT)\n) to 31 (Alur Upload Akta & Hubungan ke Transaksi\n): Upload akta transaksi\n- From 2 (Layanan Perseroan Terbatas (PT)\n) to 37 (Pencarian & Profil Perusahaan (Profil PT)\n): Pencarian profil PT\n- From 3 (Layanan Yayasan\n) to 41 (Integrasi Frontend Modern (Alpine.js untuk Wizard)\n): Wizard multi-step\n- From 4 (Layanan Perkumpulan\n) to 21 (Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n): Alur pembubaran\n- From 4 (Layanan Perkumpulan\n) to 31 (Alur Upload Akta & Hubungan ke Transaksi\n): Unggah akta\n- From 5 (Alur Pesan Nama (Name Reservation)\n) to 18 (Sistem Voucher & Billing\n): Validasi voucher\n- From 5 (Alur Pesan Nama (Name Reservation)\n) to 33 (Public API Bakum (Akses Mitra)\n): Dibuka via API publik\n- From 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n) to 34 (Peta Status & Riwayat Verifikasi\n): Catat riwayat verifikasi\n- From 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n) to 22 (Voting Pemegang Saham (Link Token)\n): Kirim tautan voting\n- From 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n) to 43 (Peta Status Permohonan (Konstanta Status)\n): Gunakan status terstandar\n- From 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n) to 23 (Email Service & Antrian Pengiriman\n): Notifikasi email\n- From 9 (Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n) to 39 (Desain DTO (Data Transfer Object)\n): Gunakan DTO permohonan\n- From 9 (Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n) to 11 (Upload File Terstandar (PDF) untuk Layanan\n): Unggah dokumen\n- From 10 (Proxy Backend Go & Token Kriptografi\n) to 29 (Standar Controller API (Tipis, Aman, Konsisten)\n): Dipanggil controller\n- From 12 (Generator PDF via Gotenberg (HTML ke PDF)\n) to 36 (Komunikasi Email & Template Surat\n): Lampiran PDF\n- From 27 (Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n) to 14 (Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n): Sediakan data agregat\n- From 14 (Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n) to 20 (Peta Badan Hukum (Google Maps)\n): Tampilkan peta wilayah\n- From 30 (Monitoring & Laporan Transaksi Perseroan\n) to 27 (Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n): Gunakan mapper transaksi\n- From 15 (Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n) to 35 (Validasi & Filter Data (Validator Khusus)\n): Validasi form BO\n- From 16 (Monitoring Notaris & BO (Laporan dan Grafik)\n) to 12 (Generator PDF via Gotenberg (HTML ke PDF)\n): Ekspor laporan PDF\n- From 17 (Cleansing Data (Skema, Organ, Modal)\n) to 24 (Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n): Gunakan DatabaseHelpers\n- From 17 (Cleansing Data (Skema, Organ, Modal)\n) to 42 (Standar Logging & Audit (History & LogSABH)\n): Catat log/audit\n- From 19 (Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n) to 2 (Layanan Perseroan Terbatas (PT)\n): Cek NPWP/KSWP\n- From 20 (Peta Badan Hukum (Google Maps)\n) to 27 (Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n): Ambil data peta\n- From 25 (Reupload & Monitoring Bukti Setor Modal Dasar\n) to 2 (Layanan Perseroan Terbatas (PT)\n): Monitor bukti setor\n- From 27 (Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n) to 38 (Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n): Pakai helper domain\n- From 32 (UI Komponen & Widget (Dcl*)\n) to 3 (Layanan Yayasan\n): Bangun komponen UI\n- From 36 (Komunikasi Email & Template Surat\n) to 23 (Email Service & Antrian Pengiriman\n): Antrikan pengiriman\n- From 38 (Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n) to 14 (Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n): Hitung agregasi\n- From 40 (Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n) to 18 (Sistem Voucher & Billing\n): Pemetaan tipe transaksi\n- From 42 (Standar Logging & Audit (History & LogSABH)\n) to 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n): Simpan jejak proses\n- From 31 (Alur Upload Akta & Hubungan ke Transaksi\n) to 22 (Voting Pemegang Saham (Link Token)\n): Trigger notifikasi e-vote\n- From 33 (Public API Bakum (Akses Mitra)\n) to 5 (Alur Pesan Nama (Name Reservation)\n): Akses mitra eksternal\n- From 28 (Pusat Pemetaan Enums & Konstanta Bisnis\n) to 29 (Standar Controller API (Tipis, Aman, Konsisten)\n): Standarisasi enum\n- From 37 (Pencarian & Profil Perusahaan (Profil PT)\n) to 2 (Layanan Perseroan Terbatas (PT)\n): Sediakan profil PT\n- From 41 (Integrasi Frontend Modern (Alpine.js untuk Wizard)\n) to 21 (Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n): Kelola state wizard\n- From 34 (Peta Status & Riwayat Verifikasi\n) to 6 (Verifikasi Perubahan Perseroan (Workflow dan Voting)\n): Dihasilkan oleh workflow\n- From 35 (Validasi & Filter Data (Validator Khusus)\n) to 18 (Sistem Voucher & Billing\n): Filter/validasi input\n- From 30 (Monitoring & Laporan Transaksi Perseroan\n) to 14 (Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n): Tampil di dashboard\n- From 24 (Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n) to 19 (Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n): Bantu parsing/HTTP\n- From 23 (Email Service & Antrian Pengiriman\n) to 36 (Komunikasi Email & Template Surat\n): Gunakan template\n- From 21 (Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n) to 4 (Layanan Perkumpulan\n): Proses domain perkumpulan\n\n\nIf you are going to make a tutorial for ```` sabh-openai-bahasa ````, what is the best order to explain these abstractions, from first to last?\nIdeally, first explain those that are the most important or foundational, perhaps user-facing concepts or entry points. Then move to more detailed, lower-level implementation details or supporting concepts.\n\nOutput the ordered list of abstraction indices, including the name in a comment for clarity. Use the format `idx # AbstractionName`.\n\n```yaml\n- 2 # FoundationalConcept\n- 0 # CoreClassA\n- 1 # CoreClassB (uses CoreClassA)\n- ...\n```\n\nNow, provide the YAML output:\n": "```yaml\n- 0 # Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n- 1 # Pola MVC Yii: Controller, Model, dan View\n- 28 # Pusat Pemetaan Enums & Konstanta Bisnis\n- 29 # Standar Controller API (Tipis, Aman, Konsisten)\n- 13 # Standar Respons API & Penanganan Error\n- 39 # Desain DTO (Data Transfer Object)\n- 24 # Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n- 35 # Validasi & Filter Data (Validator Khusus)\n- 43 # Peta Status Permohonan (Konstanta Status)\n- 42 # Standar Logging & Audit (History & LogSABH)\n- 26 # Standar Token Auth untuk Bridging User\n\n- 5 # Alur Pesan Nama (Name Reservation)\n- 40 # Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n- 18 # Sistem Voucher & Billing\n- 33 # Public API Bakum (Akses Mitra)\n\n- 2 # Layanan Perseroan Terbatas (PT)\n- 19 # Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n- 31 # Alur Upload Akta & Hubungan ke Transaksi\n- 6 # Verifikasi Perubahan Perseroan (Workflow dan Voting)\n- 22 # Voting Pemegang Saham (Link Token)\n- 34 # Peta Status & Riwayat Verifikasi\n- 12 # Generator PDF via Gotenberg (HTML ke PDF)\n- 36 # Komunikasi Email & Template Surat\n- 23 # Email Service & Antrian Pengiriman\n- 11 # Upload File Terstandar (PDF) untuk Layanan\n- 25 # Reupload & Monitoring Bukti Setor Modal Dasar\n- 37 # Pencarian & Profil Perusahaan (Profil PT)\n\n- 32 # UI Komponen & Widget (Dcl*)\n- 3 # Layanan Yayasan\n- 41 # Integrasi Frontend Modern (Alpine.js untuk Wizard)\n- 4 # Layanan Perkumpulan\n- 21 # Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n\n- 7 # Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n- 10 # Proxy Backend Go & Token Kriptografi\n- 8 # Permohonan Pemblokiran PT (Endpoint & DTO)\n- 9 # Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n\n- 15 # Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n- 16 # Monitoring Notaris & BO (Laporan dan Grafik)\n\n- 27 # Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n- 38 # Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n- 14 # Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n- 30 # Monitoring & Laporan Transaksi Perseroan\n- 20 # Peta Badan Hukum (Google Maps)\n\n- 17 # Cleansing Data (Skema, Organ, Modal)\n```", "\nIMPORTANT: Write this ENTIRE tutorial chapter in **Bahasa indonesia**. Some input context (like concept name, description, chapter list, previous summary) might already be in Bahasa indonesia, but you MUST translate ALL other generated content including explanations, examples, technical terms, and potentially code comments into Bahasa indonesia. DO NOT use English anywhere except in code syntax, required proper nouns, or when specified. The entire output MUST be in Bahasa indonesia.\n\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `sabh-openai-bahasa` about the concept: \"Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\". This is Chapter 1.\n\nConcept Details (Note: Provided in Bahasa indonesia):\n- Name: Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\n- Description:\nBayangkan SABH seperti mal besar yang menaungi banyak toko layanan: pesan nama, verifikasi, pemblokiran, hingga laporan. \u201cMal\u201d-nya adalah modul SABH yang menata rapi lorong (controller), gudang (model), dan etalase (view). Setiap fitur berjalan mengikuti pola MVC milik Yii, sehingga alur data dan tampilan mudah ditelusuri. Bagi pendatang baru, memahami modul ini ibarat memegang peta mal: Anda tahu pintu masuknya, ke mana bertanya, dan di rak mana suatu layanan tersedia. Modul ini juga punya standar respons API, penanganan error, dan utilitas bersama agar semua \u201ctoko\u201d konsisten melayani.\n\n\nComplete Tutorial Structure (Note: Chapter names might be in Bahasa indonesia):\n1. [Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n](01_arsitektur_modul_sabh__sistem_administrasi_badan_hukum__.md)\n2. [Pola MVC Yii: Controller, Model, dan View\n](02_pola_mvc_yii__controller__model__dan_view_.md)\n3. [Pusat Pemetaan Enums & Konstanta Bisnis\n](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n4. [Standar Controller API (Tipis, Aman, Konsisten)\n](04_standar_controller_api__tipis__aman__konsisten__.md)\n5. [Standar Respons API & Penanganan Error\n](05_standar_respons_api___penanganan_error_.md)\n6. [Desain DTO (Data Transfer Object)\n](06_desain_dto__data_transfer_object__.md)\n7. [Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n](07_helper___utilitas_umum__requestcontext__arrayhelper__logger__.md)\n8. [Validasi & Filter Data (Validator Khusus)\n](08_validasi___filter_data__validator_khusus__.md)\n9. [Peta Status Permohonan (Konstanta Status)\n](09_peta_status_permohonan__konstanta_status__.md)\n10. [Standar Logging & Audit (History & LogSABH)\n](10_standar_logging___audit__history___logsabh__.md)\n11. [Standar Token Auth untuk Bridging User\n](11_standar_token_auth_untuk_bridging_user_.md)\n12. [Alur Pesan Nama (Name Reservation)\n](12_alur_pesan_nama__name_reservation__.md)\n13. [Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n](13_pemetaan_tipe_transaksi___jenis__mappingtipetransaksi__.md)\n14. [Sistem Voucher & Billing\n](14_sistem_voucher___billing_.md)\n15. [Public API Bakum (Akses Mitra)\n](15_public_api_bakum__akses_mitra__.md)\n16. [Layanan Perseroan Terbatas (PT)\n](16_layanan_perseroan_terbatas__pt__.md)\n17. [Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n](17_integrasi_djp__npwp__kswp____pajakapi_.md)\n18. [Alur Upload Akta & Hubungan ke Transaksi\n](18_alur_upload_akta___hubungan_ke_transaksi_.md)\n19. [Verifikasi Perubahan Perseroan (Workflow dan Voting)\n](19_verifikasi_perubahan_perseroan__workflow_dan_voting__.md)\n20. [Voting Pemegang Saham (Link Token)\n](20_voting_pemegang_saham__link_token__.md)\n21. [Peta Status & Riwayat Verifikasi\n](21_peta_status___riwayat_verifikasi_.md)\n22. [Generator PDF via Gotenberg (HTML ke PDF)\n](22_generator_pdf_via_gotenberg__html_ke_pdf__.md)\n23. [Komunikasi Email & Template Surat\n](23_komunikasi_email___template_surat_.md)\n24. [Email Service & Antrian Pengiriman\n](24_email_service___antrian_pengiriman_.md)\n25. [Upload File Terstandar (PDF) untuk Layanan\n](25_upload_file_terstandar__pdf__untuk_layanan_.md)\n26. [Reupload & Monitoring Bukti Setor Modal Dasar\n](26_reupload___monitoring_bukti_setor_modal_dasar_.md)\n27. [Pencarian & Profil Perusahaan (Profil PT)\n](27_pencarian___profil_perusahaan__profil_pt__.md)\n28. [UI Komponen & Widget (Dcl*)\n](28_ui_komponen___widget__dcl___.md)\n29. [Layanan Yayasan\n](29_layanan_yayasan_.md)\n30. [Integrasi Frontend Modern (Alpine.js untuk Wizard)\n](30_integrasi_frontend_modern__alpine_js_untuk_wizard__.md)\n31. [Layanan Perkumpulan\n](31_layanan_perkumpulan_.md)\n32. [Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n](32_penghapusan_pembubaran_perkumpulan__alur_2_tahap__.md)\n33. [Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n](33_pemblokiran_pembukaan_blokir_akses__pt__yayasan__perkumpulan__.md)\n34. [Proxy Backend Go & Token Kriptografi\n](34_proxy_backend_go___token_kriptografi_.md)\n35. [Permohonan Pemblokiran PT (Endpoint & DTO)\n](35_permohonan_pemblokiran_pt__endpoint___dto__.md)\n36. [Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n](36_berakhirnya_status_badan_hukum__permohonan___layanan__.md)\n37. [Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n](37_beneficial_ownership__bo____pemilik_manfaat_.md)\n38. [Monitoring Notaris & BO (Laporan dan Grafik)\n](38_monitoring_notaris___bo__laporan_dan_grafik__.md)\n39. [Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n](39_pemetaan_data___agregasi__mapper_berbasis_sql__.md)\n40. [Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n](40_komponen_helper_khusus_domain__no_transaksi_sk__dashboard_helper__.md)\n41. [Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n](41_dashboard___mapper_data__ringkasan_nasional_daerah__.md)\n42. [Monitoring & Laporan Transaksi Perseroan\n](42_monitoring___laporan_transaksi_perseroan_.md)\n43. [Peta Badan Hukum (Google Maps)\n](43_peta_badan_hukum__google_maps__.md)\n44. [Cleansing Data (Skema, Organ, Modal)\n](44_cleansing_data__skema__organ__modal__.md)\n\nContext from previous chapters (Note: This summary might be in Bahasa indonesia):\nThis is the first chapter.\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 351 # components/MyController.php ---\n<?php\nclass MyController extends CController{\n\t //public $layout = '//layouts/column1';\n\t public $layout = 'null';\n\n    /**\n     * @var array context menu items. This property will be assigned to {@link CMenu::items}.\n     */\n    public $menu = array();\n\n    /**\n     * @var array the breadcrumbs of the current page. The value of this property will\n     * be assigned to {@link CBreadcrumbs::links}. Please refer to {@link CBreadcrumbs::links}\n     * for more details on how to specify this property.\n     */\n    /*\n     * \n      array(\n      'Sample post'=>array('post/view', 'id'=>12),\n      'Edit',\n      )\n     */\n    public $breadcrumbs = array();\n}\n\n\n--- File: 0 # SabhModule.php ---\n<?php\n\nclass SabhModule extends CWebModule\n{\n\tpublic function init()\n\t{\n\t\t// this method is called when the module is being created\n\t\t// you may place code here to customize the module or the application\n\n\t\t// import the module-level models and components\n\t\t$this->setImport(array(\n            'sabh.models.*',\n            'sabh.models.WilayahSabh',\n\t\t\t'sabh.components.*',\n            'sabh.components.enum.*',\n            'sabh.components.widgets.*',\n            'sabh.components.validators.*',\n            'sabh.controllers.*',\n            'sabh.services.*',\n            'sabh.mappers.*',\n            'billing.models.*',\n            'billing.components.*',\n            //'application.modules.notariat_baru.models.*',\n            'application.modules.notariat_baru.models.NotarisNg',\n            'application.modules.notariat_baru.models.TransaksiNotaris',\n            'application.modules.notariat_baru.components.*',\n        ));\n\t}\n\n\tpublic function beforeControllerAction($controller, $action)\n\t{\n\t\tif(parent::beforeControllerAction($controller, $action))\n\t\t{\n\t\t\t// this method is called before any module controller action is performed\n\t\t\t// you may place customized code here\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t\treturn false;\n\t}\n}\n\n\n--- File: 401 # response/APIResponse.php ---\n<?php\n\nYii::import('application.modules.sabh.response.IResponse');\n\n/**\n * API Response Implementation\n * \n * Concrete implementation of IResponse interface for API controllers.\n * Provides consistent JSON response handling with proper headers.\n */\nclass APIResponse implements IResponse\n{\n    \n    /**\n     * Send a success response\n     * \n     * @param string $message The success message\n     * @return void\n     */\n    private static function send($success, $message, $data = null, $status = 200) \n    {\n        $response = array(\n            'success' => $success,\n            'message' => $message,\n            'data' => $data,\n            'status' => $status\n        );\n\n        // Map status code to text\n        $statusText = array(\n            200 => 'Success',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            500 => 'Internal Server Error'\n        );\n        \n        $text = isset($statusText[$status]) ? $statusText[$status] : 'Error';\n        \n        // Set headers\n        header($_SERVER['SERVER_PROTOCOL'] . \" $status $text\");\n        header('Content-Type: application/json; charset=utf-8');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With');\n        \n        // Send JSON response\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n\n    public static function ok($data = null, $message = 'Success')\n    {\n        self::send(true, $message, $data, 200);\n    }\n\n    /**\n     * Send an error response\n     * \n     * @param string $message The error message\n     * @param int $status HTTP status code\n     * @param mixed $data Optional error data\n     * @return void\n     */\n    public static function error($message, $status = 500, $data = null)\n    {\n        self::send(false, $message, $data, $status);\n    }\n}\n\n\n--- File: 329 # exception/APIExceptionThrower.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.IExceptionThrower');\n\n/**\n * API Exception Thrower Implementation\n * \n * Concrete implementation of IExceptionThrower interface for API controllers.\n * Provides consistent HTTP exception handling with JSON responses.\n */\nclass APIExceptionThrower implements IExceptionThrower\n{\n    /**\n     * Throws a 400 Bad Request exception\n     * \n     * @param string $message The error message\n     * @param array $errors Optional validation errors\n     * @return void\n     */\n    public function throwBadRequest($message = 'Bad Request', $errors = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => 400\n        ];\n        \n        if (!empty($errors)) {\n            $response['errors'] = $errors;\n        }\n        \n        $this->sendJsonResponse($response, 400);\n    }\n    \n    /**\n     * Throws a 401 Unauthorized exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwUnauthorized($message = 'Unauthorized')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 401\n        ], 401);\n    }\n    \n    /**\n     * Throws a 403 Forbidden exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwForbidden($message = 'Forbidden')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 403\n        ], 403);\n    }\n    \n    /**\n     * Throws a 404 Not Found exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwNotFound($message = 'Not Found')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 404\n        ], 404);\n    }\n    \n    /**\n     * Throws a 405 Method Not Allowed exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwMethodNotAllowed($message = 'Method Not Allowed')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 405\n        ], 405);\n    }\n    \n    /**\n     * Throws a 409 Conflict exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwConflict($message = 'Conflict')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 409\n        ], 409);\n    }\n    \n    /**\n     * Throws a 422 Unprocessable Entity exception\n     * \n     * @param string $message The error message\n     * @param array $errors Validation errors\n     * @return void\n     */\n    public function throwUnprocessableEntity($message = 'Unprocessable Entity', $errors = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => 422\n        ];\n        \n        if (!empty($errors)) {\n            $response['errors'] = $errors;\n        }\n        \n        $this->sendJsonResponse($response, 422);\n    }\n    \n    /**\n     * Throws a 500 Internal Server Error exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwInternalServerError($message = 'Internal Server Error')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 500\n        ], 500);\n    }\n    \n    /**\n     * Throws a 503 Service Unavailable exception\n     * \n     * @param string $message The error message\n     * @return void\n     */\n    public function throwServiceUnavailable($message = 'Service Unavailable')\n    {\n        $this->sendJsonResponse([\n            'message' => $message,\n            'status' => 503\n        ], 503);\n    }\n    \n    /**\n     * Throws a custom HTTP exception\n     * \n     * @param int $statusCode The HTTP status code\n     * @param string $message The error message\n     * @param array $data Additional data to include in response\n     * @return void\n     */\n    public function throwHttpException($statusCode, $message, $data = [])\n    {\n        $response = [\n            'message' => $message,\n            'status' => $statusCode\n        ];\n        \n        if (!empty($data)) {\n            $response['data'] = $data;\n        }\n        \n        $this->sendJsonResponse($response, $statusCode);\n    }\n    \n    /**\n     * Sends JSON response with proper headers\n     * \n     * @param array $data Response data\n     * @param int $statusCode HTTP status code\n     * @return void\n     */\n    private function sendJsonResponse($data, $statusCode)\n    {\n        $statusText = $this->getStatusText($statusCode);\n        \n        header($_SERVER['SERVER_PROTOCOL'] . \" {$statusCode} {$statusText}\");\n        header('Content-Type: application/json');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization');\n        \n        echo CJSON::encode($data);\n        Yii::app()->end();\n    }\n    \n    /**\n     * Gets HTTP status text for status code\n     * \n     * @param int $statusCode HTTP status code\n     * @return string Status text\n     */\n    private function getStatusText($statusCode)\n    {\n        $statusTexts = [\n            200 => 'OK',\n            201 => 'Created',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            405 => 'Method Not Allowed',\n            409 => 'Conflict',\n            422 => 'Unprocessable Entity',\n            500 => 'Internal Server Error',\n            503 => 'Service Unavailable'\n        ];\n        \n        return isset($statusTexts[$statusCode]) ? $statusTexts[$statusCode] : 'Unknown';\n    }\n}\n\n\nInstructions for the chapter (Generate content in Bahasa indonesia unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 1: Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter (in Bahasa indonesia), referencing it with a proper Markdown link using its name (Use the Bahasa indonesia chapter title from the structure above).\n\n- Begin with a high-level motivation explaining what problem this abstraction solves (in Bahasa indonesia). Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way (in Bahasa indonesia).\n\n- Explain how to use this abstraction to solve the use case (in Bahasa indonesia). Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen (in Bahasa indonesia)).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments (Translate to Bahasa indonesia if possible, otherwise keep minimal English for clarity) to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it (in Bahasa indonesia).\n\n- Describe the internal implementation to help understand what's under the hood (in Bahasa indonesia). First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called (in Bahasa indonesia). It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`.  (Use Bahasa indonesia for labels/text if appropriate).\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain (in Bahasa indonesia).\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title (Use the Bahasa indonesia chapter title from the structure above). Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format).  (Use Bahasa indonesia for labels/text if appropriate).\n\n- Heavily use analogies and examples throughout (in Bahasa indonesia) to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned (in Bahasa indonesia) and provides a transition to the next chapter (in Bahasa indonesia). If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename) (Use the Bahasa indonesia chapter title from the structure above).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand (appropriate for Bahasa indonesia readers).\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 1: Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\nBayangkan SABH seperti sebuah mal besar. Di dalamnya ada banyak \u201ctoko layanan\u201d: pesan nama, verifikasi, pemblokiran, sampai laporan. Modul SABH adalah \u201cpeta mal\u201d yang menata:\n- lorong (controller),\n- gudang (model),\n- etalase (view),\n- juga petugas pusat (service, mapper, helper).\n\nDengan peta ini, pendatang baru tahu pintu masuknya, ke mana bertanya, dan di rak mana suatu layanan tersedia. Tujuan bab ini: kamu paham arsitektur modul SABH, alur request\u2192respon, dan bisa membuat endpoint kecil yang rapi dan konsisten.\n\nUse case sederhana untuk memulai:\n- \u201cCek ketersediaan nama PT\u201d via endpoint API yang mengembalikan JSON.\n\nKita akan lihat bagaimana modul mengatur ini agar setiap layanan berperilaku sama, mudah dirawat, dan aman.\n\n---\n\n## Gambaran Besar: Peta Modul\n\nStruktur minimal yang akan sering kamu lihat:\n\n```\nsabh/\n  controllers/\n  models/\n  components/\n  services/\n  response/\n  exception/\n  mappers/\n```\n\n- controllers: pintu interaksi HTTP (lorong).\n- models: data/ORM (gudang).\n- views: tampilan HTML (etalase, jarang untuk API).\n- services: logika bisnis terpusat (petugas pusat).\n- mappers: agregasi/pemetaan data (bias SQL).\n- response/exception: standar respons & error JSON (kasir).\n- components, validators, widgets: alat bantu (alat & signage).\n\nSemua bagian ini disatukan oleh satu modul: SabhModule.\n\n---\n\n## Bagaimana Request Mengalir\n\nSaat pengguna memanggil endpoint, alurnya seperti ini:\n\n```mermaid\nsequenceDiagram\n  participant U as Pengguna\n  participant C as Controller (SABH)\n  participant S as Service\n  participant M as Mapper\n  participant R as Respons JSON\n\n  U->>C: HTTP request (cek nama)\n  C->>S: Panggil logika bisnis\n  S->>M: Ambil/olah data (SQL/DB)\n  M-->>S: Kembalikan hasil\n  S-->>C: Hasil final (DTO/array)\n  C-->>R: APIResponse::ok(...) JSON\n```\n\nIntinya: Controller tipis, Service yang kerja berat, Mapper mengolah data, Response konsisten.\n\n---\n\n## Modul SABH: Titik Sentral\n\nModul mendaftarkan apa saja yang bisa dipakai di dalamnya. Potongan inti dari SabhModule:\n\n```php\n// SabhModule::init (disederhanakan)\n$this->setImport(array(\n  'sabh.models.*',\n  'sabh.components.*',\n  'sabh.controllers.*',\n));\n```\n\nPenjelasan:\n- setImport membuat semua kelas di folder tersebut otomatis bisa dipakai (autoload).\n- Di proyek asli, daftar import lebih lengkap (services, mappers, validators, billing, dll).\n\nHook siklus modul:\n\n```php\n// SabhModule::beforeControllerAction\nif (parent::beforeControllerAction($controller, $action)) {\n  return true; // lanjut eksekusi action\n}\nreturn false;\n```\n\nPenjelasan:\n- Dipanggil sebelum action berjalan.\n- Tempat aman untuk cek global (mis. maintenance, auth dasar).\n\n---\n\n## Basis Controller: MyController\n\nSemua controller SABH biasakan mewarisi MyController (membawa pengaturan dasar).\n\n```php\nclass MyController extends CController {\n  public $layout = 'null';      // API: tidak pakai layout HTML\n  public $menu = array();       // placeholder\n  public $breadcrumbs = array();// placeholder\n}\n```\n\nPenjelasan:\n- layout null agar respons API tidak \u201cterbungkus\u201d HTML.\n- Sederhana dan konsisten di semua controller.\n\nPelajari pola layer MVC lebih dalam di: [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md)\n\n---\n\n## Standar Respons JSON: APIResponse\n\nUntuk menjaga konsistensi, SABH menyediakan APIResponse. Kamu cukup panggil ok(...) atau error(...).\n\n```php\n// Respons sukses\nAPIResponse::ok(['tersedia' => true], 'Nama tersedia');\n```\n\n```php\n// Respons error\nAPIResponse::error('Nama tidak valid', 400);\n```\n\nPenjelasan:\n- ok(...) mengirim JSON dengan status 200.\n- error(...) mengirim JSON error dengan status yang kamu berikan.\n- Header CORS dan Content-Type diatur otomatis.\n\nDetail format respons akan dibahas di: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md)\n\n---\n\n## Standar Exception JSON: APIExceptionThrower\n\nJika terjadi kesalahan, lempar error terstandar agar klien selalu menerima format yang sama.\n\n```php\n$thrower = new APIExceptionThrower();\n$thrower->throwBadRequest('Format data salah');\n```\n\n```php\n// Contoh lain\n$thrower->throwUnauthorized('Token tidak valid');\n```\n\nPenjelasan:\n- throwBadRequest \u2192 400, throwUnauthorized \u2192 401, dst.\n- Mengirim JSON dengan status HTTP sesuai.\n\n---\n\n## Membangun Endpoint Pertama: Cek Nama PT\n\nTujuan: Endpoint GET/POST sederhana yang jawab \u201ctersedia atau tidak\u201d.\n\nLangkah 1 \u2014 Buat controller:\n\n```php\nclass NamaController extends MyController {\n  public function actionCek() {\n    APIResponse::ok(['tersedia' => true], 'Nama tersedia');\n  }\n}\n```\n\nPenjelasan:\n- Controller tipis: hanya validasi ringan + panggil service + kirim respons.\n- Di tahap awal, kita mock hasilnya true.\n\nLangkah 2 \u2014 Tambah validasi singkat (opsional):\n\n```php\nclass NamaController extends MyController {\n  public function actionCek() {\n    $nama = Yii::app()->request->getParam('nama','');\n    if (trim($nama) === '') APIResponse::error('Nama kosong', 400);\n    APIResponse::ok(['tersedia' => true], 'OK');\n  }\n}\n```\n\nPenjelasan:\n- Ambil param nama dari query/body.\n- Jika kosong, kirim 400.\n- Jika ada, kembalikan hasil mock \u201ctersedia\u201d.\n\nNantinya, validasi yang lebih kaya akan dibahas di:\n- [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md)\n- [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n\n---\n\n## Contoh Input & Output\n\nPanggil:\n- GET /sabh/nama/cek?nama=PT%20MAJU\n\nOutput sukses:\n\n```json\n{\n  \"success\": true,\n  \"message\": \"OK\",\n  \"data\": { \"tersedia\": true },\n  \"status\": 200\n}\n```\n\nOutput error (nama kosong):\n\n```json\n{\n  \"success\": false,\n  \"message\": \"Nama kosong\",\n  \"data\": null,\n  \"status\": 400\n}\n```\n\nPenjelasan:\n- Struktur selalu sama, memudahkan frontend/mitra membaca.\n\n---\n\n## Di Balik Layar: Apa yang Terjadi?\n\nUrutannya saat kamu memanggil /sabh/nama/cek:\n\n1) Router Yii menemukan modul sabh \u2192 controller NamaController \u2192 actionCek.\n2) SabhModule::beforeControllerAction dipanggil. Jika oke, lanjut.\n3) actionCek dijalankan. Ambil param, validasi singkat.\n4) Panggil layanan (nanti di fase advanced), misalnya NamaService::cek().\n5) APIResponse mengirim JSON + header HTTP. Eksekusi berhenti aman.\n\nRekap singkat dengan diagram alur:\n\n```mermaid\nflowchart TD\n  A[HTTP Request /sabh/nama/cek] --> B[Router Yii]\n  B --> C[SabhModule.beforeControllerAction]\n  C --> D[NamaController.actionCek]\n  D --> E[Service/Mapper (opsional)]\n  E --> F[APIResponse::ok/error]\n  F --> G[JSON ke klien]\n```\n\n---\n\n## Mengapa Controller Harus \u201cTipis\u201d?\n\n- Mudah dites: logika bisnis dipindah ke Service.\n- Aman: satu pintu standar untuk validasi, auth, dan error.\n- Konsisten: semua endpoint punya bentuk respons yang sama.\n\nBaca panduan lengkapnya: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)\n\n---\n\n## Kapan Memakai Service dan Mapper?\n\n- Service: mengatur alur bisnis (cek nama, booking, bayar, dsb).\n- Mapper: query/aggregasi data (SQL kompleks, ringkasan laporan).\n\nContoh panggilan di controller (konsep):\n\n```php\n$hasil = NamaService::cekKetersediaan($nama); // logika bisnis\nAPIResponse::ok($hasil, 'OK');\n```\n\nDetail pemetaan data akan kamu temukan di: [Pemetaan Data & Agregasi (Mapper Berbasis SQL)](39_pemetaan_data___agregasi__mapper_berbasis_sql__.md)\n\n---\n\n## Komponen Lain yang Terhubung\n\n- Enums & konstanta bisnis: satu tempat untuk nilai-nilai status/tipe \u2192 [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n- DTO: format data masuk/keluar agar bersih \u2192 [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n- Helper umum (request context, array, logging) \u2192 [Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)](07_helper___utilitas_umum__requestcontext__arrayhelper__logger__.md)\n- Status permohonan (workflow) \u2192 [Peta Status Permohonan (Konstanta Status)](09_peta_status_permohonan__konstanta_status__.md)\n- Logging & audit \u2192 [Standar Logging & Audit (History & LogSABH)](10_standar_logging___audit__history___logsabh__.md)\n- Token auth bridging user \u2192 [Standar Token Auth untuk Bridging User](11_standar_token_auth_untuk_bridging_user_.md)\n\nSemua itu adalah \u201caturan main\u201d yang membuat setiap \u201ctoko layanan\u201d di mal SABH terasa seragam dan mudah dirawat.\n\n---\n\n## Rangkuman\n\nYang kamu pelajari:\n- Gambaran arsitektur Modul SABH seperti \u201cmal layanan\u201d.\n- Alur request\u2192controller\u2192service\u2192mapper\u2192response JSON.\n- Peran SabhModule, MyController, APIResponse, dan APIExceptionThrower.\n- Cara membuat endpoint API sederhana yang konsisten.\n\nSelanjutnya, kita akan membedah lapisan MVC agar kamu semakin mantap menaruh berkas dan logika pada tempatnya: [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md)", "\nIMPORTANT: Write this ENTIRE tutorial chapter in **Bahasa indonesia**. Some input context (like concept name, description, chapter list, previous summary) might already be in Bahasa indonesia, but you MUST translate ALL other generated content including explanations, examples, technical terms, and potentially code comments into Bahasa indonesia. DO NOT use English anywhere except in code syntax, required proper nouns, or when specified. The entire output MUST be in Bahasa indonesia.\n\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `sabh-openai-bahasa` about the concept: \"Pola MVC Yii: Controller, Model, dan View\n\". This is Chapter 2.\n\nConcept Details (Note: Provided in Bahasa indonesia):\n- Name: Pola MVC Yii: Controller, Model, dan View\n\n- Description:\nPikirkan aplikasi seperti pertunjukan teater. Controller adalah sutradara (mengatur adegan dan alur), Model adalah naskah dan data pemain (isi cerita), sedangkan View adalah panggung dan dekorasi (tampilan). Di SABH, controller menerima permintaan (web atau API), meminta data melalui model, lalu merender view. Pola ini membuat kode mudah dibaca, diuji, dan dirawat. Bagi pemula, fokuslah mencari \u201cController\u201d untuk memahami pintu masuk fitur, \u201cModel\u201d untuk tahu data apa yang dipakai, dan \u201cView\u201d untuk mengubah tampilan ke pengguna.\n\n\nComplete Tutorial Structure (Note: Chapter names might be in Bahasa indonesia):\n1. [Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n](01_arsitektur_modul_sabh__sistem_administrasi_badan_hukum__.md)\n2. [Pola MVC Yii: Controller, Model, dan View\n](02_pola_mvc_yii__controller__model__dan_view_.md)\n3. [Pusat Pemetaan Enums & Konstanta Bisnis\n](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n4. [Standar Controller API (Tipis, Aman, Konsisten)\n](04_standar_controller_api__tipis__aman__konsisten__.md)\n5. [Standar Respons API & Penanganan Error\n](05_standar_respons_api___penanganan_error_.md)\n6. [Desain DTO (Data Transfer Object)\n](06_desain_dto__data_transfer_object__.md)\n7. [Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n](07_helper___utilitas_umum__requestcontext__arrayhelper__logger__.md)\n8. [Validasi & Filter Data (Validator Khusus)\n](08_validasi___filter_data__validator_khusus__.md)\n9. [Peta Status Permohonan (Konstanta Status)\n](09_peta_status_permohonan__konstanta_status__.md)\n10. [Standar Logging & Audit (History & LogSABH)\n](10_standar_logging___audit__history___logsabh__.md)\n11. [Standar Token Auth untuk Bridging User\n](11_standar_token_auth_untuk_bridging_user_.md)\n12. [Alur Pesan Nama (Name Reservation)\n](12_alur_pesan_nama__name_reservation__.md)\n13. [Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n](13_pemetaan_tipe_transaksi___jenis__mappingtipetransaksi__.md)\n14. [Sistem Voucher & Billing\n](14_sistem_voucher___billing_.md)\n15. [Public API Bakum (Akses Mitra)\n](15_public_api_bakum__akses_mitra__.md)\n16. [Layanan Perseroan Terbatas (PT)\n](16_layanan_perseroan_terbatas__pt__.md)\n17. [Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n](17_integrasi_djp__npwp__kswp____pajakapi_.md)\n18. [Alur Upload Akta & Hubungan ke Transaksi\n](18_alur_upload_akta___hubungan_ke_transaksi_.md)\n19. [Verifikasi Perubahan Perseroan (Workflow dan Voting)\n](19_verifikasi_perubahan_perseroan__workflow_dan_voting__.md)\n20. [Voting Pemegang Saham (Link Token)\n](20_voting_pemegang_saham__link_token__.md)\n21. [Peta Status & Riwayat Verifikasi\n](21_peta_status___riwayat_verifikasi_.md)\n22. [Generator PDF via Gotenberg (HTML ke PDF)\n](22_generator_pdf_via_gotenberg__html_ke_pdf__.md)\n23. [Komunikasi Email & Template Surat\n](23_komunikasi_email___template_surat_.md)\n24. [Email Service & Antrian Pengiriman\n](24_email_service___antrian_pengiriman_.md)\n25. [Upload File Terstandar (PDF) untuk Layanan\n](25_upload_file_terstandar__pdf__untuk_layanan_.md)\n26. [Reupload & Monitoring Bukti Setor Modal Dasar\n](26_reupload___monitoring_bukti_setor_modal_dasar_.md)\n27. [Pencarian & Profil Perusahaan (Profil PT)\n](27_pencarian___profil_perusahaan__profil_pt__.md)\n28. [UI Komponen & Widget (Dcl*)\n](28_ui_komponen___widget__dcl___.md)\n29. [Layanan Yayasan\n](29_layanan_yayasan_.md)\n30. [Integrasi Frontend Modern (Alpine.js untuk Wizard)\n](30_integrasi_frontend_modern__alpine_js_untuk_wizard__.md)\n31. [Layanan Perkumpulan\n](31_layanan_perkumpulan_.md)\n32. [Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n](32_penghapusan_pembubaran_perkumpulan__alur_2_tahap__.md)\n33. [Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n](33_pemblokiran_pembukaan_blokir_akses__pt__yayasan__perkumpulan__.md)\n34. [Proxy Backend Go & Token Kriptografi\n](34_proxy_backend_go___token_kriptografi_.md)\n35. [Permohonan Pemblokiran PT (Endpoint & DTO)\n](35_permohonan_pemblokiran_pt__endpoint___dto__.md)\n36. [Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n](36_berakhirnya_status_badan_hukum__permohonan___layanan__.md)\n37. [Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n](37_beneficial_ownership__bo____pemilik_manfaat_.md)\n38. [Monitoring Notaris & BO (Laporan dan Grafik)\n](38_monitoring_notaris___bo__laporan_dan_grafik__.md)\n39. [Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n](39_pemetaan_data___agregasi__mapper_berbasis_sql__.md)\n40. [Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n](40_komponen_helper_khusus_domain__no_transaksi_sk__dashboard_helper__.md)\n41. [Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n](41_dashboard___mapper_data__ringkasan_nasional_daerah__.md)\n42. [Monitoring & Laporan Transaksi Perseroan\n](42_monitoring___laporan_transaksi_perseroan_.md)\n43. [Peta Badan Hukum (Google Maps)\n](43_peta_badan_hukum__google_maps__.md)\n44. [Cleansing Data (Skema, Organ, Modal)\n](44_cleansing_data__skema__organ__modal__.md)\n\nContext from previous chapters (Note: This summary might be in Bahasa indonesia):\n# Chapter 1: Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\nBayangkan SABH seperti sebuah mal besar. Di dalamnya ada banyak \u201ctoko layanan\u201d: pesan nama, verifikasi, pemblokiran, sampai laporan. Modul SABH adalah \u201cpeta mal\u201d yang menata:\n- lorong (controller),\n- gudang (model),\n- etalase (view),\n- juga petugas pusat (service, mapper, helper).\n\nDengan peta ini, pendatang baru tahu pintu masuknya, ke mana bertanya, dan di rak mana suatu layanan tersedia. Tujuan bab ini: kamu paham arsitektur modul SABH, alur request\u2192respon, dan bisa membuat endpoint kecil yang rapi dan konsisten.\n\nUse case sederhana untuk memulai:\n- \u201cCek ketersediaan nama PT\u201d via endpoint API yang mengembalikan JSON.\n\nKita akan lihat bagaimana modul mengatur ini agar setiap layanan berperilaku sama, mudah dirawat, dan aman.\n\n---\n\n## Gambaran Besar: Peta Modul\n\nStruktur minimal yang akan sering kamu lihat:\n\n```\nsabh/\n  controllers/\n  models/\n  components/\n  services/\n  response/\n  exception/\n  mappers/\n```\n\n- controllers: pintu interaksi HTTP (lorong).\n- models: data/ORM (gudang).\n- views: tampilan HTML (etalase, jarang untuk API).\n- services: logika bisnis terpusat (petugas pusat).\n- mappers: agregasi/pemetaan data (bias SQL).\n- response/exception: standar respons & error JSON (kasir).\n- components, validators, widgets: alat bantu (alat & signage).\n\nSemua bagian ini disatukan oleh satu modul: SabhModule.\n\n---\n\n## Bagaimana Request Mengalir\n\nSaat pengguna memanggil endpoint, alurnya seperti ini:\n\n```mermaid\nsequenceDiagram\n  participant U as Pengguna\n  participant C as Controller (SABH)\n  participant S as Service\n  participant M as Mapper\n  participant R as Respons JSON\n\n  U->>C: HTTP request (cek nama)\n  C->>S: Panggil logika bisnis\n  S->>M: Ambil/olah data (SQL/DB)\n  M-->>S: Kembalikan hasil\n  S-->>C: Hasil final (DTO/array)\n  C-->>R: APIResponse::ok(...) JSON\n```\n\nIntinya: Controller tipis, Service yang kerja berat, Mapper mengolah data, Response konsisten.\n\n---\n\n## Modul SABH: Titik Sentral\n\nModul mendaftarkan apa saja yang bisa dipakai di dalamnya. Potongan inti dari SabhModule:\n\n```php\n// SabhModule::init (disederhanakan)\n$this->setImport(array(\n  'sabh.models.*',\n  'sabh.components.*',\n  'sabh.controllers.*',\n));\n```\n\nPenjelasan:\n- setImport membuat semua kelas di folder tersebut otomatis bisa dipakai (autoload).\n- Di proyek asli, daftar import lebih lengkap (services, mappers, validators, billing, dll).\n\nHook siklus modul:\n\n```php\n// SabhModule::beforeControllerAction\nif (parent::beforeControllerAction($controller, $action)) {\n  return true; // lanjut eksekusi action\n}\nreturn false;\n```\n\nPenjelasan:\n- Dipanggil sebelum action berjalan.\n- Tempat aman untuk cek global (mis. maintenance, auth dasar).\n\n---\n\n## Basis Controller: MyController\n\nSemua controller SABH biasakan mewarisi MyController (membawa pengaturan dasar).\n\n```php\nclass MyController extends CController {\n  public $layout = 'null';      // API: tidak pakai layout HTML\n  public $menu = array();       // placeholder\n  public $breadcrumbs = array();// placeholder\n}\n```\n\nPenjelasan:\n- layout null agar respons API tidak \u201cterbungkus\u201d HTML.\n- Sederhana dan konsisten di semua controller.\n\nPelajari pola layer MVC lebih dalam di: [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md)\n\n---\n\n## Standar Respons JSON: APIResponse\n\nUntuk menjaga konsistensi, SABH menyediakan APIResponse. Kamu cukup panggil ok(...) atau error(...).\n\n```php\n// Respons sukses\nAPIResponse::ok(['tersedia' => true], 'Nama tersedia');\n```\n\n```php\n// Respons error\nAPIResponse::error('Nama tidak valid', 400);\n```\n\nPenjelasan:\n- ok(...) mengirim JSON dengan status 200.\n- error(...) mengirim JSON error dengan status yang kamu berikan.\n- Header CORS dan Content-Type diatur otomatis.\n\nDetail format respons akan dibahas di: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md)\n\n---\n\n## Standar Exception JSON: APIExceptionThrower\n\nJika terjadi kesalahan, lempar error terstandar agar klien selalu menerima format yang sama.\n\n```php\n$thrower = new APIExceptionThrower();\n$thrower->throwBadRequest('Format data salah');\n```\n\n```php\n// Contoh lain\n$thrower->throwUnauthorized('Token tidak valid');\n```\n\nPenjelasan:\n- throwBadRequest \u2192 400, throwUnauthorized \u2192 401, dst.\n- Mengirim JSON dengan status HTTP sesuai.\n\n---\n\n## Membangun Endpoint Pertama: Cek Nama PT\n\nTujuan: Endpoint GET/POST sederhana yang jawab \u201ctersedia atau tidak\u201d.\n\nLangkah 1 \u2014 Buat controller:\n\n```php\nclass NamaController extends MyController {\n  public function actionCek() {\n    APIResponse::ok(['tersedia' => true], 'Nama tersedia');\n  }\n}\n```\n\nPenjelasan:\n- Controller tipis: hanya validasi ringan + panggil service + kirim respons.\n- Di tahap awal, kita mock hasilnya true.\n\nLangkah 2 \u2014 Tambah validasi singkat (opsional):\n\n```php\nclass NamaController extends MyController {\n  public function actionCek() {\n    $nama = Yii::app()->request->getParam('nama','');\n    if (trim($nama) === '') APIResponse::error('Nama kosong', 400);\n    APIResponse::ok(['tersedia' => true], 'OK');\n  }\n}\n```\n\nPenjelasan:\n- Ambil param nama dari query/body.\n- Jika kosong, kirim 400.\n- Jika ada, kembalikan hasil mock \u201ctersedia\u201d.\n\nNantinya, validasi yang lebih kaya akan dibahas di:\n- [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md)\n- [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n\n---\n\n## Contoh Input & Output\n\nPanggil:\n- GET /sabh/nama/cek?nama=PT%20MAJU\n\nOutput sukses:\n\n```json\n{\n  \"success\": true,\n  \"message\": \"OK\",\n  \"data\": { \"tersedia\": true },\n  \"status\": 200\n}\n```\n\nOutput error (nama kosong):\n\n```json\n{\n  \"success\": false,\n  \"message\": \"Nama kosong\",\n  \"data\": null,\n  \"status\": 400\n}\n```\n\nPenjelasan:\n- Struktur selalu sama, memudahkan frontend/mitra membaca.\n\n---\n\n## Di Balik Layar: Apa yang Terjadi?\n\nUrutannya saat kamu memanggil /sabh/nama/cek:\n\n1) Router Yii menemukan modul sabh \u2192 controller NamaController \u2192 actionCek.\n2) SabhModule::beforeControllerAction dipanggil. Jika oke, lanjut.\n3) actionCek dijalankan. Ambil param, validasi singkat.\n4) Panggil layanan (nanti di fase advanced), misalnya NamaService::cek().\n5) APIResponse mengirim JSON + header HTTP. Eksekusi berhenti aman.\n\nRekap singkat dengan diagram alur:\n\n```mermaid\nflowchart TD\n  A[HTTP Request /sabh/nama/cek] --> B[Router Yii]\n  B --> C[SabhModule.beforeControllerAction]\n  C --> D[NamaController.actionCek]\n  D --> E[Service/Mapper (opsional)]\n  E --> F[APIResponse::ok/error]\n  F --> G[JSON ke klien]\n```\n\n---\n\n## Mengapa Controller Harus \u201cTipis\u201d?\n\n- Mudah dites: logika bisnis dipindah ke Service.\n- Aman: satu pintu standar untuk validasi, auth, dan error.\n- Konsisten: semua endpoint punya bentuk respons yang sama.\n\nBaca panduan lengkapnya: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)\n\n---\n\n## Kapan Memakai Service dan Mapper?\n\n- Service: mengatur alur bisnis (cek nama, booking, bayar, dsb).\n- Mapper: query/aggregasi data (SQL kompleks, ringkasan laporan).\n\nContoh panggilan di controller (konsep):\n\n```php\n$hasil = NamaService::cekKetersediaan($nama); // logika bisnis\nAPIResponse::ok($hasil, 'OK');\n```\n\nDetail pemetaan data akan kamu temukan di: [Pemetaan Data & Agregasi (Mapper Berbasis SQL)](39_pemetaan_data___agregasi__mapper_berbasis_sql__.md)\n\n---\n\n## Komponen Lain yang Terhubung\n\n- Enums & konstanta bisnis: satu tempat untuk nilai-nilai status/tipe \u2192 [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n- DTO: format data masuk/keluar agar bersih \u2192 [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n- Helper umum (request context, array, logging) \u2192 [Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)](07_helper___utilitas_umum__requestcontext__arrayhelper__logger__.md)\n- Status permohonan (workflow) \u2192 [Peta Status Permohonan (Konstanta Status)](09_peta_status_permohonan__konstanta_status__.md)\n- Logging & audit \u2192 [Standar Logging & Audit (History & LogSABH)](10_standar_logging___audit__history___logsabh__.md)\n- Token auth bridging user \u2192 [Standar Token Auth untuk Bridging User](11_standar_token_auth_untuk_bridging_user_.md)\n\nSemua itu adalah \u201caturan main\u201d yang membuat setiap \u201ctoko layanan\u201d di mal SABH terasa seragam dan mudah dirawat.\n\n---\n\n## Rangkuman\n\nYang kamu pelajari:\n- Gambaran arsitektur Modul SABH seperti \u201cmal layanan\u201d.\n- Alur request\u2192controller\u2192service\u2192mapper\u2192response JSON.\n- Peran SabhModule, MyController, APIResponse, dan APIExceptionThrower.\n- Cara membuat endpoint API sederhana yang konsisten.\n\nSelanjutnya, kita akan membedah lapisan MVC agar kamu semakin mantap menaruh berkas dan logika pada tempatnya: [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 321 # controllers/api/PermohonanPemblokiranPTController.php ---\n<?php\n\nYii::import('application.modules.sabh.dto.CreatePermohonanPemblokiranPTDto');\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.ArrayHelper');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.PermohonanPemblokiranPTService');\n\nclass PermohonanPemblokiranPTController extends Controller\n{\n    private $exceptionThrower;\n    private $permohonanPemblokiranPTService;\n    \n    public function init()\n    {\n        parent::init();\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->permohonanPemblokiranPTService = new PermohonanPemblokiranPTService();\n    }\n\n    public function actionCreate()\n    {\n        // 1. Throw if method is not POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Get the JSON body\n        try {\n            $body = RequestContext::getJsonBody();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 3. Convert the data into DTO\n        $createPermohonanPemblokiranPT = CreatePermohonanPemblokiranPTDto::fromArray($body);\n\n        // 4. Validate the DTO\n        try {\n            $createPermohonanPemblokiranPT->isValid();\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n\n        // 5. Create the Permohonan Pemblokiran PT\n        try {\n            $this->permohonanPemblokiranPTService->createPermohonanPemblokiranPT($createPermohonanPemblokiranPT);\n        } catch (Exception $e) {\n            $this->exceptionThrower->throwInternalServerError($e->getMessage());\n        }\n\n        APIResponse::ok();\n    }\n}\n\n\n--- File: 401 # response/APIResponse.php ---\n<?php\n\nYii::import('application.modules.sabh.response.IResponse');\n\n/**\n * API Response Implementation\n * \n * Concrete implementation of IResponse interface for API controllers.\n * Provides consistent JSON response handling with proper headers.\n */\nclass APIResponse implements IResponse\n{\n    \n    /**\n     * Send a success response\n     * \n     * @param string $message The success message\n     * @return void\n     */\n    private static function send($success, $message, $data = null, $status = 200) \n    {\n        $response = array(\n            'success' => $success,\n            'message' => $message,\n            'data' => $data,\n            'status' => $status\n        );\n\n        // Map status code to text\n        $statusText = array(\n            200 => 'Success',\n            400 => 'Bad Request',\n            401 => 'Unauthorized',\n            403 => 'Forbidden',\n            404 => 'Not Found',\n            500 => 'Internal Server Error'\n        );\n        \n        $text = isset($statusText[$status]) ? $statusText[$status] : 'Error';\n        \n        // Set headers\n        header($_SERVER['SERVER_PROTOCOL'] . \" $status $text\");\n        header('Content-Type: application/json; charset=utf-8');\n        header('Access-Control-Allow-Origin: *');\n        header('Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS');\n        header('Access-Control-Allow-Headers: Content-Type, Authorization, X-Requested-With');\n        \n        // Send JSON response\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n\n    public static function ok($data = null, $message = 'Success')\n    {\n        self::send(true, $message, $data, 200);\n    }\n\n    /**\n     * Send an error response\n     * \n     * @param string $message The error message\n     * @param int $status HTTP status code\n     * @param mixed $data Optional error data\n     * @return void\n     */\n    public static function error($message, $status = 500, $data = null)\n    {\n        self::send(false, $message, $data, $status);\n    }\n}\n\n\n--- File: 322 # controllers/api/FileController.php ---\n<?php\n\nYii::import('application.modules.sabh.exception.APIExceptionThrower');\nYii::import('application.modules.sabh.response.APIResponse');\nYii::import('application.modules.sabh.utils.RequestContext');\nYii::import('application.modules.sabh.services.api.FileService');\nYii::import('application.modules.sabh.enums.FileType');\n\nclass FileController extends Controller\n{\n    private $exceptionThrower;\n    private $fileService;\n    \n    public function init()\n    {\n        $this->exceptionThrower = new APIExceptionThrower();\n        $this->fileService = new FileService();\n    }\n    \n    public function actionIndex()\n    {\n        // 1. Throw if method is not POST\n        if (!RequestContext::isMethod('POST')) {\n            $this->exceptionThrower->throwMethodNotAllowed();\n        }\n\n        // 2. Set upload limits for large files\n        set_time_limit(0);\n        @ini_set('memory_limit', '-1');\n        @ini_set('upload_max_size', '10M');\n        @ini_set('post_max_size', '10M');\n\n        // 3. Check if file was uploaded\n        if (!isset($_FILES['file'])) {\n            $this->exceptionThrower->throwBadRequest('Tidak ada file yang diupload');\n        }\n\n        if ($_FILES['file']['error'] !== UPLOAD_ERR_OK) {\n            $errorMessages = [\n                UPLOAD_ERR_INI_SIZE => 'Ukuran file melebihi batas upload_max_filesize',\n                UPLOAD_ERR_FORM_SIZE => 'Ukuran file melebihi MAX_FILE_SIZE',\n                UPLOAD_ERR_PARTIAL => 'File hanya terupload sebagian',\n                UPLOAD_ERR_NO_FILE => 'Tidak ada file yang diupload',\n                UPLOAD_ERR_NO_TMP_DIR => 'Folder temporary tidak ditemukan',\n                UPLOAD_ERR_CANT_WRITE => 'Gagal menulis file ke disk',\n                UPLOAD_ERR_EXTENSION => 'Ekstensi PHP menghentikan upload file'\n            ];\n            $errorMessage = isset($errorMessages[$_FILES['file']['error']]) ? $errorMessages[$_FILES['file']['error']] : 'Error upload tidak diketahui';\n            $this->exceptionThrower->throwBadRequest('Error upload: ' . $errorMessage);\n        }\n\n        // 4. Get and validate file type from query parameters\n        $fileType = Yii::app()->request->getQuery('file_type');\n        \n        if (empty($fileType)) {\n            $this->exceptionThrower->throwBadRequest('Parameter file_type wajib diisi');\n        }\n        \n        if (!FileType::isValid($fileType)) {\n            $this->exceptionThrower->throwBadRequest('Tipe file tidak valid. Tipe yang diizinkan: ' . implode(', ', FileType::getAllTypes()));\n        }\n        \n        // 5. Process file upload\n        try {\n            $uploadedFile = $_FILES['file'];\n            \n            $fileInfo = $this->fileService->createFile($fileType, $uploadedFile);\n            \n            // Log successful upload\n            Yii::log(\n                'File berhasil diupload: ' . $fileInfo['original_name'] . \n                ' -> ' . $fileInfo['file_path'] . \n                ' (Ukuran: ' . $fileInfo['file_size'] . ' bytes)',\n                'info',\n                'application.modules.sabh.controllers.api.FileController'\n            );\n            \n            APIResponse::ok($fileInfo, 'File berhasil diupload');\n        } catch (Exception $e) {\n            // Log upload error\n            Yii::log(\n                'Upload file gagal: ' . $e->getMessage() . \n                ' (File: ' . (isset($uploadedFile['name']) ? $uploadedFile['name'] : 'tidak diketahui') . ')',\n                'error',\n                'application.modules.sabh.controllers.api.FileController'\n            );\n            \n            $this->exceptionThrower->throwBadRequest($e->getMessage());\n        }\n    }\n}\n\n\n--- File: 244 # controllers/BoController.php ---\n<?php\n\n/**\n * Semua action di BoController ini diakses via ajax\n *\n */\nclass BoController extends Controller\n{\n    /**\n     * Cek apakah semua action adalah ajax request\n     *\n     */\n    public function beforeAction($action)\n    {\n        if (!Yii::app()->request->isAjaxRequest) {\n            return false;\n        }\n        return parent::beforeAction($action);\n    }\n\n    /**\n     * @return array default response\n     *\n     */\n    protected function initResponse()\n    {\n        return array('success' => false, 'content' => '', 'message' => '');\n    }\n\n    /**\n     * Echo response result berupa string berformat json\n     *\n     */\n    protected function sendResponse($response)\n    {\n        echo CJSON::encode($response);\n        Yii::app()->end();\n    }\n\n    /**\n     * Direquest saat pilihan 'YA' pernyataan penerima manfaat dipilih\n     *\n     * @return string\n     */\n    public function actionSetuju()\n    {\n        $response = array(\n            'success' => false,\n            'content' => array('disclaimer' => '', 'details' => ''),\n            'message' => ''\n        );\n        $post = Yii::app()->request->getPost('BoForm');\n        $hasBo = Yii::app()->request->getPost('has_bo');\n        if (!empty($post) && $hasBo == 1) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if ($model->validate()) {\n                $details = $this->renderPartial('_details', array(\n                    'model' => $model\n                ), true, true);\n                $response['content']['details'] = $details;\n                $response['success'] = true;\n            } else {\n                $response['content']['details'] = '';\n            }\n            $disclaimer = $this->renderPartial('_disclaimer', array(\n                'model' => $model\n            ),true, true);\n            $response['content']['disclaimer'] = $disclaimer;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'Tambah Data' Bo\n     *\n     * @return string\n     */\n    public function actionCreate()\n    {\n        $response = $this->initResponse();\n        $hasBo = Yii::app()->request->getPost('has_bo');\n        $post = Yii::app()->request->getPost('BoForm');\n        if (!empty($post) && $hasBo == 1) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if ($model->validate()) {\n                $detail = new BoDetailForm();\n                $detail->base = $model->base;\n                $content = $this->renderPartial(\n                    'popupCreate',\n                    array('detail' => $detail, 'validationDukcapilMsg' => null),\n                    true, true\n                );\n                $response['content'] = $content;\n                $response['success'] = true;\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'OK' di form popup Tambah Data BO\n     * untuk cek pengisian pilihan kriteria BO\n     *\n     * @return string\n     */\n    public function actionCekKriteria()\n    {\n        $response = array(\n            'success' => false,\n            'content' => array('kriteria' => '', 'form' => ''),\n            'message' => ''\n        );\n        $post = Yii::app()->request->getPost('BoDetailForm');\n        if (!empty($post)) {\n            $model = new BoDetailForm();\n            $model->attributes = $post;\n            $model->validate();\n            $error = $model->getError('kriteria');\n            if (empty($error)) {\n                $response['success'] = true;\n                $model = new BoDetailForm();\n                $model->attributes = $post;\n                $model->cekPemegangSaham();\n            }\n            $content = $this->renderPartial('_create', array(\n                'detail' => $model\n            ), true, true);\n            $response['content'] = $content;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat pilihan jenis BO ('Perorangan', 'Badan Hukum')\n     *\n     * @return string\n     */\n    public function actionPilihJenis()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoDetailForm');\n        if (!empty($post)) {\n            $model = new BoDetailForm();\n            $model->attributes = $post;\n            if (in_array($model->jenis, $model->listJenis())) {\n                $content = $this->renderPartial(\n                    '_create',\n                    array('detail' => $model),\n                    true, true\n                );\n                $response['content'] = $content;\n                $response['success'] = true;\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'SIMPAN' di form popup Tambah Data BO\n     * untuk ditambahkan di list tabel BO\n     *\n     * @return string\n     */\n    public function actionSimpan()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        $postDetail = Yii::app()->request->getPost('BoDetailForm');\n        $postPerorangan = Yii::app()->request->getPost('BoPeroranganForm');\n        $postBadanHukum = Yii::app()->request->getPost('BoBadanHukumForm');\n        if (\n            !empty($post) &&\n            !empty($postDetail) &&\n            (!empty($postPerorangan) || !empty($postBadanHukum))\n        ) {\n            $model = new BoForm();\n            $model->attributes = $post;\n\n            $detail = new BoDetailForm();\n            $detail->attributes = $postDetail;\n            if (!empty($postPerorangan)) {\n                $detail->perorangan->attributes = $postPerorangan;\n                if ($detail->perorangan->kewarganegaraan == \"WNA\") {\n                    $detail->perorangan->scenario = 'wna';\n                }\n            }\n            if (!empty($postBadanHukum)) {\n                $detail->badan_hukum->attributes = $postBadanHukum;\n            }\n            if ($detail->validate()) {\n                $validationDukcapilMsg = $detail->validateDukcapil();\n\n                /*\n                $idPesaham = \"\";\n                if (in_array('saham', $detail->kriteria)) {\n                    $pengurus = $model->addPengurus($detail);\n                    $response['pengurus'] = $pengurus['json'];\n                    $response['nomor'] = $pengurus['no'];\n                    $response['trPengurus'] = $this->renderPartial('_pengurus', array(\n                        'no' => $pengurus['no'],\n                        'nama' => $pengurus['nama'],\n                        'jenis' => $pengurus['jenis'],\n                    ), true);\n                    $idPesaham = $pengurus['no'];\n                }\n                $detail->id_pesaham = $idPesaham;\n                */\n                if ($validationDukcapilMsg) {\n                    $content = $this->renderPartial('_create', array(\n                        'detail' => $detail, 'validationDukcapilMsg' => $validationDukcapilMsg\n                    ), true, true);\n\n                } else {\n                    $model->tambahDetails($detail);\n                    $content = $this->renderPartial('_details', array(\n                        'model' => $model\n                    ), true);\n                    $response['success'] = true;\n                }\n\n            } else {\n                $content = $this->renderPartial('_create', array(\n                    'detail' => $detail\n                ), true, true);\n            }\n            $response['content'] = $content;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik link 'Edit' di list table BO\n     * untuk menampilkan popup form Edit BO\n     *\n     * @return string\n     */\n    public function actionLoadUpdate($id)\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        if (!empty($post)) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if (!empty($model->temp_details) && $model->validate()) {\n                $detail = $model->findDetailById($id);\n                if ($detail !== null) {\n                    $detail->base = $model->base;\n                    $detail->state = BoDetailForm::STATE_UPDATE;\n                    $content = $this->renderPartial(\n                        'popupUpdate',\n                        array('detail' => $detail),\n                        true, true\n                    );\n                    $response['content'] = $content;\n                    $response['success'] = true;\n                }\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik tombol 'SIMPAN PERUBAHAN' di form popup Edit Data BO\n     * untuk diupdate di list tabel BO\n     *\n     * @return string\n     */\n    public function actionUpdate()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        $postDetail = Yii::app()->request->getPost('BoDetailForm');\n        $postPerorangan = Yii::app()->request->getPost('BoPeroranganForm');\n        $postBadanHukum = Yii::app()->request->getPost('BoBadanHukumForm');\n        if (\n            !empty($post) &&\n            !empty($postDetail) &&\n            (!empty($postPerorangan) || !empty($postBadanHukum))\n        ) {\n            $model = new BoForm();\n            $model->attributes = $post;\n\n            $detail = new BoDetailForm();\n            $detail->attributes = $postDetail;\n            if (!empty($postPerorangan)) {\n                $detail->perorangan->attributes = $postPerorangan;\n            }\n            if (!empty($postBadanHukum)) {\n                $detail->badan_hukum->attributes = $postBadanHukum;\n            }\n            if ($detail->validate()) {\n                $validationDukcapilMsg = $detail->validateDukcapil();\n                /*\n                $idPesaham = \"\";\n                if (in_array('saham', $detail->kriteria)) {\n                    $pengurus = $model->updatePengurus($detail);\n                    if (!empty($pengurus)) {\n                        $response['pengurus'] = $pengurus['json'];\n                        $response['nomor'] = $pengurus['no'];\n                        $response['trPengurus'] = $this->renderPartial('_pengurus', array(\n                            'no' => $pengurus['no'],\n                            'nama' => $pengurus['nama'],\n                            'jenis' => $pengurus['jenis'],\n                        ), true);\n                        $idPesaham = $pengurus['no'];\n                    }\n                }\n                $detail->id_pesaham = $idPesaham;\n                */\n                if ($validationDukcapilMsg) {\n                    $content = $this->renderPartial('_create', array(\n                        'detail' => $detail, 'validationDukcapilMsg' => $validationDukcapilMsg\n                    ), true, true);\n\n                } else {\n                    $model->updateDetails($detail);\n                    $content = $this->renderPartial('_details', array(\n                        'model' => $model,\n                    ), true);\n                    $response['success'] = true;\n                }\n            } else {\n                $content = $this->renderPartial('_create', array(\n                    'detail' => $detail\n                ), true, true);\n            }\n            $response['content'] = $content;\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat klik link 'Hapus' di list table BO\n     * untuk menghapus data di table BO\n     *\n     * @return string\n     */\n    public function actionDelete($id)\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('BoForm');\n        if (!empty($post)) {\n            $model = new BoForm('load');\n            $model->attributes = $post;\n            if (!empty($model->temp_details) && $model->validate()) {\n                $detail = $model->findDetailById($id);\n                if ($detail !== null) {\n                    $model->deleteDetails($detail);\n                    $content = $this->renderPartial('_details', array(\n                        'model' => $model,\n                    ), true);\n                    $response['content'] = $content;\n                    $response['success'] = true;\n                }\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     * Direquest saat pilih base badan hukum pada monitoring BO\n     *\n     */\n    public function actionPilihKriteria()\n    {\n        $response = $this->initResponse();\n        $post = Yii::app()->request->getPost('base');\n        if (!empty($post)) {\n            $model = new BoDetailForm();\n            $model->base = $post;\n            if (in_array($model->base, array('perseroan', 'yayasan', 'perkumpulan'))) {\n                $monitoring = new BoMonitoring();\n                $monitoring->bakum = $model->base;\n                $content = $this->renderPartial('monitoring/_filterKriteria', array(\n                    'model' => $monitoring,\n                ), true);\n                $response['content'] = $content;\n                $response['success'] = true;\n            }\n        }\n        $this->sendResponse($response);\n    }\n\n    /**\n     *\n     */\n    public function actionCariBadanHukum()\n    {\n        $response = array('status' => 200, 'record' => '');\n        $base = Yii::app()->request->getQuery('base');\n        $nama = Yii::app()->request->getQuery('name');\n        if (in_array($base, array('perseroan', 'yayasan', 'perkumpulan')) && !empty($nama)) {\n            $model = new BoBadanHukumForm();\n            $model->base = $base;\n            $response['record'] = $model->listBadanHukum($nama);\n        }\n        $this->sendResponse($response);\n    }\n\n    public function actionDownloadFile()\n    {\n        $fullpath = Yii::getPathOfAlias('webroot').\"/uploads/bo/Perpres-13-tahun-2018-tentang-Beneficial-Ownership.pdf\";\n        if(!empty($fullpath)){ \n            header(\"Content-type:application/pdf\"); //for pdf file\n            //header('Content-Type:text/plain; charset=ISO-8859-15');\n            //if you want to read text file using text/plain header \n            header('Content-Disposition: attachment; filename=\"'.basename($fullpath).'\"'); \n            header('Content-Length: ' . filesize($fullpath));\n            readfile($fullpath);\n            Yii::app()->end();\n        }\n    }\n}\n\n\n--- File: 238 # controllers/DashboardController.php ---\n<?php\n\nclass DashboardController extends Controller\n{\n    public $defaultAction = 'bakum';\n\n    public function actionBakum()\n    {\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListBase();\n        $listJenisTransaksi = BaseEnum::getListJenis(\"perseroan\");\n        $tipe = DashboardHelper::TYPE_BAKUM;\n        $model = new DashboardFilterForm($tipe);\n        $this->render('index', array(\n            'model' => $model,\n            'report' => $listReport[$tipe],\n            'listKategori' => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'tipe' => $tipe,\n            'listProvinsi' => $listProvinsi,\n            'listKabupaten'=>$listKabupaten,\n        ));\n    }\n\n    public function actionJenisPerseroan(){\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListJenisPerseroan();\n        $listJenisTransaksi = BaseEnum::getListJenis(\"perseroan\");\n        $tipe = DashboardHelper::TYPE_PERSEROAN;\n        $model = new DashboardFilterForm($tipe);\n\n        $this->render('index', array(\n            'model' => $model,\n            'report' => $listReport[$tipe],\n            'listKategori' => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'tipe' => $tipe,\n            'listProvinsi' => $listProvinsi,\n            'listKabupaten' => $listKabupaten,\n            'tampil_kolom' => $this->renderPartial('_collapsibleColumn', array('tipe' => 'perseroan'), true, true),\n        ));\n    }\n\n    public function actionJenisYayasan(){\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListJenisYayasan();\n        $listJenisTransaksi = BaseEnum::getListJenisTransaksiYayasan();\n        $listJenisTransaksiPerseroan = BaseEnum::getListJenis(\"yayasan\");\n        $tipe = DashboardHelper::TYPE_YAYASAN;\n        $model = new DashboardFilterForm($tipe);\n\n        $this->render('index', array(\n            'model' => $model,\n            'report' => $listReport[$tipe],\n            'listKategori' => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'listJenisTransaksiPerseroan' => $listJenisTransaksiPerseroan,\n            'tipe' => $tipe,\n            'listProvinsi' => $listProvinsi,\n            'listKabupaten'=>$listKabupaten,\n            'tampil_kolom' => $this->renderPartial('_collapsibleColumn', array('tipe' => 'yayasan'), true, true),\n        ));\n    }\n\n    /**\n     * An ajax action\n     * for get html dropdownlist with dynamic value kabupaten by provinsi\n     * @return string\n     */\n    public function actionAjaxGetKabupaten()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $json = array('success'=>false, 'content'=>'', 'message'=>'', 'addition'=>array('name'=>''));\n            $dataPost = Yii::app()->request->getPost('DashboardFilterForm');\n            if ($dataPost) {\n                $model = new DashboardFilterForm();\n                $model->attributes = $dataPost;\n                $listKabupaten = Wilayah::model()->getKabupaten($model->provinsi_id);\n                $modelProvinsi = Wilayah::model()->findByPk($model->provinsi_id);\n                $content = $this->renderPartial('_fieldKabupatenForm', \n                    array('tipe'=>$model->tipe, 'model'=>$model, 'listKabupaten'=>$listKabupaten), true);\n                $json['success'] = true;\n                $json['content'] = $content;\n                $json['addition']['name'] = $modelProvinsi !== null ? $modelProvinsi->NAMA : '';\n            }\n            echo CJSON::encode($json);\n        }\n    }\n\n    public function actionAjaxChart(){\n        if (Yii::app()->request->isAjaxRequest) {\n            $dataPost = Yii::app()->request->getPost('DashboardFilterForm');\n            if ($dataPost) {\n                $model = new DashboardFilterForm();\n                $model->attributes = $dataPost;\n                if ($model->validate()) {\n                    $result = DashboardHelper::generateChart($model);\n                    $this->renderJSON($result['chart']);\n                }\n            }\n        }\n    }\n\n    public function actionAjaxGrid(){\n        if (Yii::app()->request->isAjaxRequest) {\n\n            $modelSearch = new DashboardFilterDataForm('search');\n            $getSearch = Yii::app()->request->getQuery('DashboardFilterDataForm');\n\n            $jenis_transaksi = Yii::app()->request->getQuery('jenis_transaksi');\n            $id_aksi_transaksi = Yii::app()->request->getQuery('id_aksi_transaksi');\n            $tipe = Yii::app()->request->getQuery('tipe');\n            $kategori = Yii::app()->request->getQuery('kategori');\n            $provinsi_id = Yii::app()->request->getQuery('provinsi_id');\n            $kabupaten_id = Yii::app()->request->getQuery('kabupaten_id');\n            $tanggal_awal = Yii::app()->request->getQuery('tanggal_awal');\n            $tanggal_akhir = Yii::app()->request->getQuery('tanggal_akhir');\n            $maksud = Yii::app()->request->getQuery('maksud');\n            $tujuan = Yii::app()->request->getQuery('tujuan');\n            // IDS, Filter berdasarkan id_aksi_transaksi\n            // pencarian berdasarkan jenis transaksi\n            $getSearch['id_aksi_transaksi'] = ($tipe == 2) ? $id_aksi_transaksi : $jenis_transaksi;\n\n            if ($maksud != null && $tujuan != null) {\n                if ($kategori == 'perseroan') {\n                    $getSearch['kegiatan'] = '{\"maksud\":\"'. $maksud .'\"%'. $tujuan;\n                } elseif ($kategori == 'yayasan') {\n                    $getSearch['keterangan_' . strtolower($maksud)] = '%'. $tujuan .'%';\n                } else {\n                    $getSearch['maksud'] = '%{\"'. $maksud .'\":\"'. $tujuan .'%';\n                }\n            }\n\n            if (!empty($getSearch)) {\n                $modelSearch->unsetAttributes();\n                $modelSearch->attributes = $getSearch;\n            }\n\n            if (\n                $tipe !== null &&\n                ($kategori !== null || $jenis_transaksi !== null) &&\n                ($provinsi_id !== null || ($tanggal_awal !== null && $tanggal_akhir !== null))\n            ) {\n                $model = new DashboardFilterForm();\n                $model->setAttributesManual(\n                    array(\n                        'tipe'=>$tipe, 'kategori'=>$kategori, 'jenis_transaksi' => $jenis_transaksi, \n                        'provinsi_id'=>$provinsi_id,'kabupaten_id'=>$kabupaten_id,\n                        'tanggal_awal'=>$tanggal_awal, 'tanggal_akhir'=>$tanggal_akhir,\n                        'id_aksi_transaksi' => $jenis_transaksi,\n                    )\n                );\n                if ($model->validate()) {\n                    $model->search = $modelSearch;\n                    $result = DashboardHelper::generateGrid($model);\n                    $gridContent = $this->renderPartial($result['view'], array('model'=>$result['grid'], 'modelSearch'=>$modelSearch), true, true);\n                    $this->renderJSON($gridContent);\n                }\n            }\n        }\n    }\n\n    public function actionDownloadExcel()\n    {\n        $dataPost = Yii::app()->request->getPost('DashboardFilterForm');\n        $header = Yii::app()->request->getPost('header');\n        $base = 'perseroan';\n\n        // IDS, Ambil filter berdasarkan gridview\n        $get_grid_filter = $_POST['DashboardFilterDataForm'];\n        $dataPost = array_merge($dataPost, $get_grid_filter);\n\n\n        if (!empty($dataPost)) {\n            $modelSearch = new DashboardFilterDataForm('search');\n            $modelSearch->attributes = $dataPost;\n            $model = new DashboardFilterForm();\n\n            // IDS, Filter berdasarkan id_aksi_transaksi\n            // untuk filter berdasarkan jenis_transaksi\n            $modelSearch->jenis_transaksi = '';\n            $modelSearch->id_aksi_transaksi = $dataPost['tipe'] == 2 ? $dataPost['id_aksi_transaksi'] : $dataPost['jenis_transaksi'];\n\n            if ($dataPost['maksud'] != null && $dataPost['tujuan'] != null) {\n                if ($dataPost['kategori'] == 'perseroan') {\n                    $modelSearch->kegiatan = '{\"maksud\":\"'. $dataPost['maksud'] .'\"%'. $dataPost['tujuan'];\n                    $modelSearch->maksud = '';\n                    $modelSearch->tujuan = '';\n                } elseif ($dataPost['kategori'] == 'yayasan') {\n                    $variable_ket = 'keterangan_' . strtolower($dataPost['maksud']);\n\n                    $modelSearch->{$variable_ket} = '%'.  $dataPost['tujuan'] .'%';\n                    $modelSearch->maksud = '';\n                    $modelSearch->tujuan = '';\n                } elseif ($dataPost['kategori'] == 'perkumpulan') {\n                    $modelSearch->maksud = '%{\"'. $dataPost['maksud'] .'\":\"'. $dataPost['tujuan'] .'%';\n                    $modelSearch->kegiatan = '';\n                    $modelSearch->tujuan = '';\n                }\n            }\n            // menentukan base laporan untuk nama pemilik manfaat\n            if ($dataPost['kategori'] == 'perkumpulan') {\n                $base = 'perkumpulan';\n            } elseif ($dataPost['kategori'] == 'yayasan' || $dataPost['kategori'] == 'perorangan' || $dataPost['kategori'] == 'badan_hukum') {\n                $base = 'yayasan';\n            }\n\n            $model->attributes = $dataPost;\n            $model->jenis_transaksi = $dataPost['jenis_transaksi'];\n\n            if ($model->validate()) {\n                $model->search = $modelSearch;\n                $model->pagination = false;\n                $result = DashboardHelper::generateGrid($model);\n                if (empty($result['grid'])) {\n                    throw new CHttpException(404, \"Page requested does not exist.\");\n                    \n                }\n                $dataProvider = $result['grid']->getData();\n                Yii::import('system.docotel.cms.extensions.phpexcel.XPHPExcel');\n                $objPHPExcel= XPHPExcel::createPHPExcel();\n                $objPHPExcel->getProperties()->setCreator('Aplikasi Ditjen AHU Online')\n                     ->setLastModifiedBy('AHU Online System')\n                     ->setTitle('Download Dashboard Badan Hukum')\n                     ->setSubject('Download Dashboard Badan Hukum Excel')\n                     ->setDescription('Monitoring Dashboard')\n                     ->setKeywords('office 2007 openxml php')\n                     ->setCategory('Export Excel');\n                $title = $result['excel']['title'];\n                $subtitle = $result['excel']['subtitle'];\n                $namaFile = 'Monitoring Badan Hukum';\n                SabhHelpers::generateExcelForMonitoringPerseroan(\n                    $title, \n                    $subtitle, \n                    $model->getListHeaderExcel($header), \n                    $dataProvider, \n                    array('total_modal_dasar', 'total_modal_ditempatkan', 'modal_disetorkan'), \n                    $objPHPExcel, \n                    $namaFile,\n                    [],\n                    $base\n                );\n                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n                $objWriter->save('php://output');\n                Yii::app()->end();\n            }\n        }\n    }\n\n    public function actionAjaxGetJenisTransaksi()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $kategori = Yii::app()->request->getPost('kategori');\n\n            $data = array(\n                'jenis_transaksi' => BaseEnum::getListJenis($kategori),\n                'column' => $this->renderPartial('_collapsibleColumn', array('tipe' => $kategori), true, true)\n            );\n            echo CJSON::encode($data);exit;\n        }\n    }\n\n    public function actionMaksudTujuan()\n    {\n        $listProvinsi = Wilayah::model()->getAll();\n        $listKabupaten = array();\n        $listReport = DashboardHelper::getTypeReports();\n        $listKategori = BaseEnum::getListBase();\n        $listJenisTransaksi = array();\n        $tipe = DashboardHelper::TYPE_MAKSUD_TUJUAN;\n        $model = new DashboardFilterForm(0);\n        $this->render('index', array(\n            'model'              => $model,\n            'report'             => $listReport[$tipe],\n            'listKategori'       => $listKategori,\n            'listJenisTransaksi' => $listJenisTransaksi,\n            'tipe'               => $tipe,\n            'listProvinsi'       => $listProvinsi,\n            'listKabupaten'      => $listKabupaten,\n            'maksud'             => Perseroan::model()->getKBLI(),\n            'tujuan'             => array(),\n        ));\n    }\n\n    public function actionGetTujuan($id = false)\n    {\n        if ($id && is_string($id) & strlen($id) == 1) {\n            $condition = \"kategori = '{$id}' and char_length(kode) = 5\";\n            $query = \"select id_kbli, judul from m_kbli\";\n            $query = $query . \" where \" . $condition;\n\n            $result = Yii::app()->dbBadanHukum->createCommand($query)->queryAll();\n            $data = [];\n            foreach ($result as $key => $value) {\n                $data[$value['judul']] = $value['judul'];\n            }\n            $this->jsonReturn($data);\n        } elseif ($id && is_string($id)) {\n            $this->jsonReturn(TransaksiYayasan::model()->arrKegiatan[$id]);\n        } else {\n            $this->jsonReturn(FALSE);\n        }\n    }\n\n    public function actionGetMaksud()\n    {\n        if (Yii::app()->request->isAjaxRequest) {\n            $kategori = Yii::app()->request->getPost('kategori');\n\n            if ($kategori == 'perseroan') {\n                $this->jsonReturn(Perseroan::getNewKbli());\n            } elseif ($kategori == 'yayasan') {\n                $this->jsonReturn([\n                    'sosial' => 'Sosial',\n                    'kemanusiaan' => 'Kemanusiaan',\n                    'keagamaan' => 'Keagamaan',\n                ]);\n            } elseif ($kategori == 'perkumpulan') {\n                $this->jsonReturn([\n                    'asas_tujuan' => 'Asas, Tujuan dan Fungsi',\n                    'hak_kewajiban' => 'Hak dan Kewajiban Anggota',\n                    'pengelola' => 'Pengelola Keuangan',\n                    'mekanisme' => 'Mekanisme Penyelesaian Sengketa dan Pengawasan Internal',\n                    'pembubaran' => 'Pembubaran Organisasi',\n                ]);\n            } else {\n                $this->jsonReturn(FALSE);\n            }\n        }\n    }\n\n    private function jsonReturn($val) {\n        $data = array(\n            'status' => 500,\n            'message' => 'no data',\n            'value' => ''\n        );\n        if ($val) {\n            $data['status'] = 200;\n            $data['message'] = 'success';\n            $data['value'] = $val;\n        }\n        header('Content-Type: application/json');\n        echo json_encode($data);\n        exit;\n    }\n}\n\n\n--- File: 250 # controllers/BadanhukumController.php ---\n<?php\n\nClass BadanhukumController extends Controller {\n\n    const STATUS_BLOKIR = 2;\n    public function actionUpdateKabupaten($id) {\n        if (empty($_POST) or empty($_POST) or empty($_POST['id_prov']) or empty($_POST['id_kabupaten']) or false == preg_match('/^\\d+$/', $id) or false == preg_match('/^\\d+$/', $_POST['id_prov']) or false == preg_match('/^\\d+$/', $_POST['id_kabupaten'])) {\n            $this->renderPartial('/perseroan/_isiKabErr');\n            exit;\n        }\n\n\n        $prov_id = $_POST['id_prov'];\n        $prov_name = $this->escapeSQL_c($_POST['nama_prov']);\n        $kab_id = $_POST['id_kabupaten'];\n\n        $kab_list = Wilayah::model()->getKabupaten($prov_id);\n        if (empty($kab_list[$kab_id])) {\n            $this->renderPartial('/perseroan/_isiKabErr');\n            exit;\n        }\n\n        $kab_name = $kab_list[$kab_id];\n\n        if (empty($kab_name)) {\n            $this->renderPartial('/perseroan/_isiKabErr');\n            exit;\n        }\n\n        Yii::app()->dbBadanHukum->createCommand(\"update tbl_transaksi_perseroan_2014 set kabupaten_id_perseroan = '$kab_id', kabupaten_nama_perseroan = '$kab_name' where nomor_transaksi = '$id' and id_notaris = '\" . Yii::app()->user->profilid . \"' and provinsi_id_perseroan = '$prov_id' and provinsi_nama_perseroan = '$prov_name'\")->execute();\n\n        header(\"Location: /sabh/perseroan/cetakSKPendirian/id/$id\");\n    }\n\n    private function escapeSQL_c($t) {\n        $t = str_replace(\"'\", \"''\", $t);\n        $t = str_replace(\"\\\\\", \"\\\\\\\\\", $t);\n        return $t;\n    }\n\n    /* function untuk generate random kode/untuk nomerpesannama */\n\n    protected function randomCode() {\n        /* buat karakter yang akan di random */\n        $RANDCODE = \"023456789\";\n        /* untuk mengacak kode */\n        srand((double) microtime() * 1000000);\n        $i = 0;\n        $generateCode = '';\n        /* lopping sebanyak 7kali */\n        while ($i <= 7) {\n            /* kode random */\n            $num = rand() % 7;\n            /* ambil karaktar dari $RANDCODE dengan posisi nya\n             * diacak oleh $num */\n            $tmp = substr($RANDCODE, $num, 1);\n            /* hasil generate kode ditampung ke $generateCode */\n            $generateCode = $generateCode . $tmp;\n            $i++;\n        }\n        /* kembalikan nilai function ke $generateCode */\n        return strtoupper($generateCode);\n    }\n\n    public function actionListordername() {\n        if (isset($_POST['BadanHukum'])) {\n            $base = $_POST['BadanHukum']['base'];\n            if ($base == 'perseroan') {\n                $this->perseroanListordername();\n                return;\n            } elseif ($base == 'yayasan') {\n                $this->yayasanListordername();\n                return;\n            } elseif ($base == 'perkumpulan') {\n                $this->perkumpulanListordername();\n                return;\n            }\n        }\n        $this->perseroanListordername();\n    }\n\n    public function actionYayasanListordername() {\n        $jumlah = \"\";\n        $model = New OrderName('search');\n        $list_keterangan = SabhHelpers::getKeteranganPesanNama();\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->condition = 'base=\"yayasan\"';\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        $data_get = Yii::app()->request->getQuery(get_class($model));\n        $data_post = Yii::app()->request->getPost(get_class($model));\n        if (!empty($data_post)) {\n            $model->tanggal_mulai = $data_post['tanggal_mulai'];\n            $model->tanggal_selesai = $data_post['tanggal_selesai'];\n            $tgl_mulai = date('Y-m-d',strtotime($data_post['tanggal_mulai']));\n            $tgl_selesai = date('Y-m-d',strtotime($data_post['tanggal_selesai']));\n            if (!empty($data_post['tanggal_mulai']) || !empty($data_post['tanggal_selesai'])) {\n                $model->dbCriteria->addCondition('DATE(tgl_pesan) >= \\''.$tgl_mulai.'\\' and DATE(tgl_pesan) <= \\''.$tgl_selesai.'\\'');\n            }\n        }\n        if (!empty($data_get)) {\n            $model->attributes = $data_get;\n            if (!empty($data_get['keterangan'])) {\n                if ($data_get['keterangan'] == 1) { // expired\n                    $model->dbCriteria->addCondition('is_active = 0');\n                } elseif ($data_get['keterangan'] == 2) {\n                    $model->dbCriteria->addCondition('is_proses = 0');\n                } else {\n                    $model->dbCriteria->addCondition('is_proses = 1');\n                }\n            }\n        }\n        $jumlah = OrderName::model()->count($model->dbCriteria);\n        $this->render('/yayasan/listordername', array(\n            'model' => $model,\n            'selectYayasan' => ' selected=\"selected\"',\n            'base' => 'YAYASAN',\n            'jumlah'=>$jumlah,\n            'list_keterangan'=>$list_keterangan\n        ));\n        return;\n    }\n\n    public function actionVerifikasiPesanNamaYayasan()\n    {\n        $modelFilter = new FormFilterVerifikasiPesanNama();\n\n        $title = null;\n        $showAksi = false;\n        $fieldSetuju = false;\n        $fieldHapus = false;\n        $fieldTolakPendirian = false;\n\n        $model = new OrderName('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->order = 't.kegiatan desc, t.tgl_pesan desc';\n        $model->dbCriteria->condition = 't.base=\"yayasan\" AND DATE(t.tgl_pesan) >= \"2017-01-29\"';\n\n        $data_get = Yii::app()->request->getQuery(get_class($model));\n\n        if (!empty($data_get)) {\n            $model->attributes = $data_get;\n            $model->kegiatan = $data_get['kegiatan'];\n            $model->nama_wilayah = $data_get['nama_wilayah'];\n        }\n\n        if (isset($_GET['FormFilterVerifikasiPesanNama'])) {\n            $modelFilter->attributes = $_GET['FormFilterVerifikasiPesanNama'];\n            $params = [];\n            if ($modelFilter->validate()) {\n                if( !empty($modelFilter->tanggal_mulai) && !empty($modelFilter->tanggal_akhir)) {\n                    $model->dbCriteria->addCondition(\n                        'DATE(t.tgl_pesan) >= :tanggal_mulai AND DATE(t.tgl_pesan) <= :tanggal_akhir'\n                    );\n                    $params[':tanggal_mulai'] = date('Y-m-d', strtotime($modelFilter->tanggal_mulai));\n                    $params[':tanggal_akhir'] = date('Y-m-d', strtotime($modelFilter->tanggal_akhir));\n                }\n\n\n\n                if (isset($_GET['submit_verifikasi'])) {\n                    if ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::BELUM_DIPERIKSA) {\n                        $showAksi = true;\n                        $model->dbCriteria->order = 't.tgl_pesan desc';\n                        \n                        // Check if user has verification records\n                        $hasVerificationRecords = VerifikasiPesanNama::model()->exists(\n                            'id_user = :id_user AND base = :base AND status = 0',\n                            array(':id_user' => Yii::app()->user->id, ':base' => 'yayasan')\n                        );\n                        \n                        if ($hasVerificationRecords) {\n                            // Use JOIN instead of IN clause for better performance\n                            $model->dbCriteria->join .= ' INNER JOIN tbl_verifikasi_pesan_nama vpn ON t.id_pesan = vpn.id_kendali';\n                            $model->dbCriteria->addCondition('vpn.id_user = :user_id AND vpn.base = :vpn_base AND vpn.status = 0');\n                            $model->dbCriteria->params[':user_id'] = Yii::app()->user->id;\n                            $model->dbCriteria->params[':vpn_base'] = 'yayasan';\n                        } else {\n                            $isVerifikator = VerifikatorFlag::model()->isVerifikator(Yii::app()->user->id);\n                            if ($isVerifikator) {\n                                $model->dbCriteria->addCondition('FALSE');\n                            }\n                        }\n                        $model->dbCriteria->addCondition('t.is_proses = 0 AND t.is_active = 1 AND t.status_verifikasi = 0');\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_DISETUJUI) {\n                        $model->dbCriteria->order = 't.tgl_pesan desc';\n                        $model->dbCriteria->addCondition('t.is_active = 1 AND t.status_verifikasi = 1');\n                        $showAksi = false;\n                        $fieldSetuju = true;\n                        $title = 'DAFTAR LIST SUDAH DISETUJUI';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_DIHAPUS) {\n                        $model->dbCriteria->order = 't.tgl_pesan desc';\n                        $criteria = $model->dbCriteria;\n                        $model = null;\n                        $model = new OrderNameHapus('search');\n                        $model->unsetAttributes();\n                        $model->dbCriteria = $criteria;\n                        $model->dbCriteria->addCondition('DATE(tgl_hapus) >= :tgl_hapus AND base = \"yayasan\"');\n                        $data_get_hapus = Yii::app()->request->getQuery(get_class($model));\n                        if (!empty($data_get_hapus)) {\n                            $model->attributes = $data_get_hapus;\n                        }\n                        $params[':tgl_hapus'] = FormFilterVerifikasiPesanNama::MINIMUM_DATE;\n                        $showAksi = false;\n                        $fieldHapus = true;\n                        $title = 'DAFTAR LIST SUDAH DIHAPUS';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_PENDIRIAN) {\n                        $model->dbCriteria->order = 't.tgl_pesan desc';\n                        $model->dbCriteria->addCondition('is_proses = 1');\n                        $showAksi = false;\n                        $title = 'DAFTAR LIST SUDAH PENDIRIAN';\n                    }\n                }\n                if(!empty($params)) {\n                    $model->dbCriteria->params = $params;\n                }\n            }\n        }\n        $this->render('/badanhukum/verifikasi_ordername', array(\n            'model' => $model,\n            'base' => 'YAYASAN',\n            'modelFilter' => $modelFilter,\n            'showAksi' => $showAksi,\n            'fieldSetuju' => $fieldSetuju,\n            'fieldHapus' => $fieldHapus,\n            'fieldTolakPendirian' => $fieldTolakPendirian,\n            'title' => $title\n        ));\n    }\n\n    public function actionYayasanListordernameCompare()\n    {\n        $model = new OrderName('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->condition = 'base=\"yayasan\"';\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        if (isset($_GET['OrderName'])) {\n            $model->attributes = $_GET['OrderName'];\n        }\n        $this->render(\n            '/yayasan/listordernamecompare',\n            array(\n                'model' => $model\n            )\n        );\n        return;\n    }\n\n    /*monitoring pesan nama*/\n    public function actionMonitoringPesanNama() {\n        $model = New VerifikasiPesanNama('search');\n        $model->unsetAttributes();\n        $model->dbCriteria->order = 'created_date desc';\n        $tanggal = array('mulai'=>null, 'selesai'=>null);\n        $jenis = null;\n\n        if (isset($_POST['tanggal'])) {\n            $tanggal = $_POST['tanggal'];\n        }\n        if (isset($_POST['jenis'])) {\n            $jenis = $_POST['jenis'];\n        }\n        if (in_array('pt-monitoring', Yii::app()->user->group)) {\n            $jenis = 'perseroan';\n        }\n        if (in_array('bhs-monitoring', Yii::app()->user->group)) {\n            $jenis = 'bakum';\n        }\n\n        $statistik = VerifikasiPesanNama::model()->getStatistik($tanggal, $jenis);\n        $opt = array(\n                    'perseroan' => 'Perseroan',\n                    'perkumpulan' => 'Perkumpulan',\n                    'yayasan' => 'Yayasan',\n                );\n\n        $this->render('/perseroan/monitoring_ordername', array(\n            'model' => $model,\n            'statistik' => $statistik,\n            'tanggal' => $tanggal,\n            'jenis' => $jenis,\n            'opt' => $opt,\n        ));\n    }\n\n    protected function getMonitoringDataProvider($id, $tanggal, $jenis, $paging=true)\n    {\n        $list = VerifikasiPesanNama::model()->getListVerifikasi($tanggal, $id, $jenis);\n        $sort = new CSort();\n        $sort->attributes = array(\n            'id_pesan',\n            'nama',\n            'singkatan',\n            'voucher',\n            'status_verifikasi',\n        );\n        $pageSize = $paging ? array('pageSize'=>30) : false;\n        $arrayDataProvider=new CArrayDataProvider($list, array(\n            'keyField'=>'id_pesan',\n            'sort' => $sort,\n            'pagination'=>$pageSize\n        ));\n        return $arrayDataProvider;\n    }\n\n    public function actionDetailMonitoring() {\n        $id = Yii::app()->request->getQuery('id');\n        $mulai = $tgl_mulai = Yii::app()->request->getQuery('mulai');\n        $selesai = $tgl_selesai = Yii::app()->request->getQuery('selesai');\n        $jenis = Yii::app()->request->getQuery('jenis');\n        $arrayDataProvider = $tanggal = array();\n        if(!empty($id)) {\n            $user = User::model()->find('user_id=:id', array(':id' => $id));\n            if($user) {\n                if(!empty($mulai) && !empty($selesai)) {\n                    $mulai = explode(\"-\", $mulai);\n                    $tanggal['mulai'] = $mulai[2] . \"-\" . $mulai[1] . \"-\" . $mulai[0];\n\n                    $selesai = explode(\"-\", $selesai);\n                    $tanggal['selesai'] = $selesai[2] . \"-\" . $selesai[1] . \"-\" . $selesai[0];\n                }\n\n        $arrayDataProvider = $this->getMonitoringDataProvider($id, $tanggal, $jenis);\n            }\n        }\n        echo $this->renderPartial('/perseroan/detail_monitoring', get_defined_vars(), true, true);\n        Yii::app()->end();\n    }\n\n    public function actionExcelMonitoring()\n    {\n        $id = Yii::app()->request->getPost('id');\n        $mulai = $tgl_mulai = Yii::app()->request->getPost('tgl_mulai');\n        $selesai = $tgl_selesai = Yii::app()->request->getPost('tgl_selesai');\n        $jenis = Yii::app()->request->getPost('jenis');\n        $arrayDataProvider = $tanggal = array();\n        $subtitle = '';\n        if(!empty($id)) {\n            $user = User::model()->find('user_id=:id', array(':id' => $id));\n            if($user) {\n                $subtitle .= 'Verifikator : ' . $user->name;\n                if(!empty($mulai) && !empty($selesai)) {\n                    $mulai = explode(\"-\", $mulai);\n                    $tanggal['mulai'] = $mulai[2] . \"-\" . $mulai[1] . \"-\" . $mulai[0];\n\n                    $selesai = explode(\"-\", $selesai);\n                    $tanggal['selesai'] = $selesai[2] . \"-\" . $selesai[1] . \"-\" . $selesai[0];\n                    $subtitle .= ' Tanggal : '. $tgl_mulai . ' s/d '. $tgl_selesai;\n                }\n                $arrayDataProvider = $this->getMonitoringDataProvider($id, $tanggal, $jenis, false);\n                $dataProvider = $arrayDataProvider->getData();\n                Yii::import('system.docotel.cms.extensions.phpexcel.XPHPExcel');\n                $objPHPExcel= XPHPExcel::createPHPExcel();\n                $objPHPExcel->getProperties()->setCreator('Aplikasi Ditjen AHU Online')\n                     ->setLastModifiedBy('AHU Online System')\n                     ->setTitle('Monitoring Pesan Nama')\n                     ->setSubject('Monitoring Pesan Nama')\n                     ->setDescription('Monitoring Pesan Nama')\n                     ->setKeywords('office 2007 openxml php')\n                     ->setCategory('Export Excel');\n                $title = 'Monitoring Pesan Nama';\n                $namaFile = 'Monitoring Pesan Nama';\n                SabhHelpers::generateExcelForMonitoringPerseroan(\n                    $title,\n                    $subtitle,\n                    array(\n                        'no'=>'No',\n                        'id_pesan'=>'Nomor Pemesanan',\n                        'nama'=>'Nama',\n                        'singkatan'=>'Singkatan',\n                        'tgl_pesan'=>'Tanggal Pesan',\n                        'nama_pemohon'=>'Nama Pemohon',\n                        'telepon_pemohon'=>'Telepon Pemohon',\n                        'email_pemohon'=>'Email Pemohon',\n                        'tgl_verifikasi'=>'Tanggal Verifikasi',\n                        'status_verifikasi'=>'Status Verifikasi',\n                        'keterangan'=>'Keterangan'\n                    ), $dataProvider, array(), $objPHPExcel, $namaFile);\n                $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');\n                $objWriter->save('php://output');\n                Yii::app()->end();\n            }\n        }\n    }\n\n    public function actionPdfMonitoring()\n    {\n        $id = Yii::app()->request->getPost('id');\n        $mulai = $tgl_mulai = Yii::app()->request->getPost('tgl_mulai');\n        $selesai = $tgl_selesai = Yii::app()->request->getPost('tgl_selesai');\n        $jenis = Yii::app()->request->getPost('jenis');\n        $arrayDataProvider = $tanggal = array();\n        $subtitle = '';\n        if(!empty($id)) {\n            $user = User::model()->find('user_id=:id', array(':id' => $id));\n            if($user) {\n                $subtitle .= 'Verifikator : ' . $user->name;\n                if(!empty($mulai) && !empty($selesai)) {\n                    $mulai = explode(\"-\", $mulai);\n                    $tanggal['mulai'] = $mulai[2] . \"-\" . $mulai[1] . \"-\" . $mulai[0];\n\n                    $selesai = explode(\"-\", $selesai);\n                    $tanggal['selesai'] = $selesai[2] . \"-\" . $selesai[1] . \"-\" . $selesai[0];\n                    $subtitle .= '<br>Tanggal : '. $tgl_mulai . ' s/d '. $tgl_selesai;\n                }\n                $arrayDataProvider = $this->getMonitoringDataProvider($id, $tanggal, $jenis, false);\n                $dataProvider = $arrayDataProvider->getData();\n                $title = 'Monitoring Pesan Nama';\n                $namaFile = 'Monitoring Pesan Nama';\n                $content = $this->renderPartial('_pdfMonitoring', array(\n                    'datas'=>$dataProvider,\n                    'title'=>$title,\n                    'subtitle'=>$subtitle\n                ), true);\n                SabhHelpers::cetakPdf($content, $namaFile, true, '', '', 'D', 'L');\n                Yii::app()->end();\n            }\n        }\n    }\n\n    public function actionPerseroanListordername() {\n        $jumlah = \"\";\n        $list_keterangan = SabhHelpers::getKeteranganPesanNama();\n        $model = New OrderNamePerseroan('search');\n        $model->unsetAttributes();\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        $model->limitRow = 20;\n        $data_get = Yii::app()->request->getQuery(get_class($model));\n        $data_post = Yii::app()->request->getPost(get_class($model));\n        if (!empty($data_post)) {\n            $model->tanggal_mulai = $data_post['tanggal_mulai'];\n            $model->tanggal_selesai = $data_post['tanggal_selesai'];\n            $tgl_mulai = date('Y-m-d',strtotime($data_post['tanggal_mulai']));\n            $tgl_selesai = date('Y-m-d',strtotime($data_post['tanggal_selesai']));\n            if (!empty($data_post['tanggal_mulai']) || !empty($data_post['tanggal_selesai'])) {\n                $model->dbCriteria->addCondition('DATE(tgl_pesan) >= \\''.$tgl_mulai.'\\' and DATE(tgl_pesan) <= \\''.$tgl_selesai.'\\'');\n            }\n        }\n        if (!empty($data_get)) {\n            $model->attributes = $data_get;\n            if (!empty($data_get['keterangan'])) {\n                if ($data_get['keterangan'] == 1) { // expired\n                    $model->dbCriteria->addCondition('is_active = 0');\n                } elseif ($data_get['keterangan'] == 2) {\n                    $model->dbCriteria->addCondition('is_proses = 0');\n                } else {\n                    $model->dbCriteria->addCondition('is_proses = 1');\n                }\n            }\n        }\n        $jumlah = OrderNamePerseroan::model()->count($model->dbCriteria);\n        $this->render('/perseroan/listordername', array(\n            'model' => $model,\n            'selectPerseroan' => ' selected=\"selected\"',\n            'base' => 'PT',\n            'jumlah'=>$jumlah,\n            'list_keterangan'=>$list_keterangan\n        ));\n        return;\n    }\n\n    public function actionVerifikasiPesanNamaPerseroan()\n    {\n        $model = new OrderNamePerseroan('search');\n        $modelFilter = new FormFilterVerifikasiPesanNama();\n\n        $showAksi = false;\n        $fieldSetuju = false;\n        $fieldHapus = false;\n        $fieldTolakPendirian = false;\n        $title = null;\n\n        $model->unsetAttributes();\n        $model->dbCriteria->condition = 'tgl_pesan >= \"2017-01-29 00:00:00\"';\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        $model->limitRow = 20;\n        $data_get = Yii::app()->request->getQuery(get_class($model));\n        if (!empty($data_get)) {\n            $model->attributes = $data_get;\n        }\n\n        if (isset($_GET['FormFilterVerifikasiPesanNama'])) {\n            $modelFilter->attributes = $_GET['FormFilterVerifikasiPesanNama'];\n            $params = [];\n            if ($modelFilter->validate()) {\n                if( !empty($modelFilter->tanggal_mulai) && !empty($modelFilter->tanggal_akhir)) {\n                    $model->dbCriteria->addCondition(\n                        'tgl_pesan BETWEEN :tanggal_mulai AND :tanggal_akhir'\n                    );\n                    $params[':tanggal_mulai'] = date('Y-m-d 00:00:00', strtotime($modelFilter->tanggal_mulai));\n                    $params[':tanggal_akhir'] = date('Y-m-d 23:59:59', strtotime($modelFilter->tanggal_akhir));\n                }\n                if (isset($_GET['submit_verifikasi'])) {\n                    if ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::BELUM_DIPERIKSA) {\n                        $showAksi = true;\n                        $inCondition = VerifikasiPesanNama::model()->getIdKendali(Yii::app()->user->id, 'perseroan');\n                        if (!empty($inCondition)) {\n                            $model->dbCriteria->addCondition('id_pesan IN ('.$inCondition.')');\n                        } else {\n                            $isVerifikator = VerifikatorFlag::model()->isVerifikator(Yii::app()->user->id);\n                            if ($isVerifikator) {\n                                $model->dbCriteria->addCondition('FALSE');\n                            }\n                        }\n                        $model->dbCriteria->addCondition('is_proses = 0 AND is_active = 1 AND status_verifikasi = 0');\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_DISETUJUI) {\n                        $model->dbCriteria->addCondition('is_active = 1 AND status_verifikasi = 1');\n                        $showAksi = false;\n                        $fieldSetuju = true;\n                        $title = 'DAFTAR LIST SUDAH DISETUJUI';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_DIHAPUS) {\n                        $criteria = $model->dbCriteria;\n                        $model = null;\n                        $model = new OrderNameHapus('search');\n                        $model->unsetAttributes();\n                        $model->dbCriteria = $criteria;\n                        $model->dbCriteria->addCondition('tgl_hapus >= :tgl_hapus AND base = \"perseroan\"');\n                        $data_get_hapus = Yii::app()->request->getQuery(get_class($model));\n                        if (!empty($data_get_hapus)) {\n                            $model->attributes = $data_get_hapus;\n                        }\n                        $params[':tgl_hapus'] = FormFilterVerifikasiPesanNama::MINIMUM_DATE . ' 00:00:00';\n                        $showAksi = false;\n                        $fieldHapus = true;\n                        $title = 'DAFTAR LIST SUDAH DIHAPUS';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_PENDIRIAN) {\n                        $model->dbCriteria->addCondition('is_proses = 1');\n                        $showAksi = false;\n                        $title = 'DAFTAR LIST SUDAH PENDIRIAN';\n                    }\n                }\n                if(!empty($params)) {\n                    $model->dbCriteria->params = $params;\n                }\n            }\n        }\n        //echo sprintf('%0.5f',Yii::getLogger()->getExecutionTime());exit;\n        $this->render('/badanhukum/verifikasi_ordername', array(\n            'model' => $model,\n            'base' => 'PT',\n            'modelFilter' => $modelFilter,\n            'showAksi' => $showAksi,\n            'fieldSetuju' => $fieldSetuju,\n            'fieldHapus' => $fieldHapus,\n            'fieldTolakPendirian' => $fieldTolakPendirian,\n            'title' => $title\n        ));\n    }\n\n    public function actionPerseroanListordernameCompare()\n    {\n        $model = new OrderNamePerseroan('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        if (isset($_GET['OrderNamePerseroan'])) {\n            $model->attributes = $_GET['OrderNamePerseroan'];\n        }\n        $this->render(\n            '/perseroan/listordernamecompare',\n            array(\n                'model' => $model\n            )\n        );\n        return;\n    }\n\n    public function actionPerkumpulanListordername() {\n        $jumlah = \"\";\n        $model = New OrderName('search');\n        $list_keterangan = SabhHelpers::getKeteranganPesanNama();\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->condition = 'base=\"perkumpulan\"';\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        $data_get = Yii::app()->request->getQuery(get_class($model));\n        $data_post = Yii::app()->request->getPost(get_class($model));\n        if (!empty($data_post)) {\n            $model->tanggal_mulai = $data_post['tanggal_mulai'];\n            $model->tanggal_selesai = $data_post['tanggal_selesai'];\n            $tgl_mulai = date('Y-m-d',strtotime($data_post['tanggal_mulai']));\n            $tgl_selesai = date('Y-m-d',strtotime($data_post['tanggal_selesai']));\n            if (!empty($data_post['tanggal_mulai']) || !empty($data_post['tanggal_selesai'])) {\n                $model->dbCriteria->addCondition('DATE(tgl_pesan) >= \\''.$tgl_mulai.'\\' and DATE(tgl_pesan) <= \\''.$tgl_selesai.'\\'');\n            }\n        }\n        if (!empty($data_get)) {\n            $model->attributes = $data_get;\n            if (!empty($data_get['keterangan'])) {\n                if ($data_get['keterangan'] == 1) { // expired\n                    $model->dbCriteria->addCondition('is_active = 0');\n                } elseif ($data_get['keterangan'] == 2) {\n                    $model->dbCriteria->addCondition('is_proses = 0');\n                } else {\n                    $model->dbCriteria->addCondition('is_proses = 1');\n                }\n            }\n        }\n\n        $jumlah = OrderName::model()->count($model->dbCriteria);\n        $this->render('/perkumpulan/listordername', array(\n            'model' => $model,\n            'selectPerkumpulan' => ' selected=\"selected\"',\n            'base' => 'PERKUMPULAN',\n            'jumlah'=>$jumlah,\n            'list_keterangan'=>$list_keterangan\n            ));\n        return;\n    }\n\n    public function actionVerifikasiPesanNamaPerkumpulan()\n    {\n        $model = new OrderName('search');\n        $modelFilter = new FormFilterVerifikasiPesanNama();\n\n        $showAksi = false;\n        $fieldSetuju = false;\n        $fieldHapus = false;\n        $fieldTolakPendirian = false;\n        $title = null;\n\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->condition = 't.base=\"perkumpulan\" AND DATE(tgl_pesan) >= \"2017-01-29\"';\n\n        // 2020-03-20, m.afandy, verifikator pesan nama bisa melihat data dari verifikator lain juga\n        // $group = CHtml::value(Yii::app(), 'user.group', []);\n        // if(in_array(\"monitoring-pesan-nama\", $group)){\n        //     $id_verifikator = CHtml::value(Yii::app(), 'user.id', '-1');\n        //     $model->dbCriteria->addCondition('v.id_user = \"'.$id_verifikator.'\"');\n        // }\n        $model->dbCriteria->join = 'left join tbl_verifikasi_pesan_nama v ON t.id_pesan=v.id_kendali';\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        $data_get = Yii::app()->request->getQuery(get_class($model));\n        if (!empty($data_get)) {\n            $model->attributes = $data_get;\n        }\n\n        if (isset($_GET['FormFilterVerifikasiPesanNama'])) {\n            $modelFilter->attributes = $_GET['FormFilterVerifikasiPesanNama'];\n            $params = [];\n            if ($modelFilter->validate()) {\n                if( !empty($modelFilter->tanggal_mulai) && !empty($modelFilter->tanggal_akhir)) {\n                    $model->dbCriteria->addCondition(\n                        'DATE(t.tgl_pesan) >= :tanggal_mulai AND DATE(t.tgl_pesan) <= :tanggal_akhir'\n                    );\n                    $params[':tanggal_mulai'] = date('Y-m-d', strtotime($modelFilter->tanggal_mulai));\n                    $params[':tanggal_akhir'] = date('Y-m-d', strtotime($modelFilter->tanggal_akhir));\n                }\n\n                if (isset($_GET['submit_verifikasi'])) {\n                    if ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::BELUM_DIPERIKSA) {\n                        $showAksi = true;\n                        $inCondition = VerifikasiPesanNama::model()->getIdKendali(Yii::app()->user->id, 'perkumpulan');\n                        if (!empty($inCondition)) {\n                            $model->dbCriteria->addCondition('id_pesan IN ('.$inCondition.')');\n                        } else {\n                            $isVerifikator = VerifikatorFlag::model()->isVerifikator(Yii::app()->user->id);\n                            if ($isVerifikator) {\n                                $model->dbCriteria->addCondition('FALSE');\n                            }\n                        }\n                        $model->dbCriteria->addCondition('is_proses = 0 AND is_active = 1 AND status_verifikasi = 0');\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_DISETUJUI) {\n                        $model->dbCriteria->addCondition('is_active = 1 AND status_verifikasi = 1');\n                        $showAksi = false;\n                        $fieldSetuju = true;\n                        $title = 'DAFTAR LIST SUDAH DISETUJUI';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_DIHAPUS) {\n                        $criteria = $model->dbCriteria;\n                        $model = null;\n                        $model = new OrderNameHapus('search');\n                        $model->unsetAttributes();\n                        $model->dbCriteria = $criteria;\n                        $model->dbCriteria->addCondition('DATE(tgl_hapus) >= :tgl_hapus AND t.base = \"perkumpulan\"');\n                        $data_get_hapus = Yii::app()->request->getQuery(get_class($model));\n                        if (!empty($data_get_hapus)) {\n                            $model->attributes = $data_get_hapus;\n                        }\n                        $params[':tgl_hapus'] = FormFilterVerifikasiPesanNama::MINIMUM_DATE;\n                        $showAksi = false;\n                        $fieldHapus = true;\n                        $title = 'DAFTAR LIST SUDAH DIHAPUS';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::SUDAH_PENDIRIAN) {\n                        $model->dbCriteria->addCondition('is_proses = 1');\n                        $showAksi = false;\n                        $title = 'DAFTAR LIST SUDAH PENDIRIAN';\n                    } elseif ($_GET['submit_verifikasi'] == FormFilterVerifikasiPesanNama::TOLAK_PENDIRIAN) {\n                        $criteria = $model->dbCriteria;\n                        $model = null;\n                        $model = new OrderNameBackup('search');\n                        $model->unsetAttributes();\n                        $model->dbCriteria = $criteria;\n                        $model->dbCriteria->addCondition('t.base = \"perkumpulan\"');\n                        $data_get_hapus = Yii::app()->request->getQuery(get_class($model));\n                        if (!empty($data_get_hapus)) {\n                            $model->attributes = $data_get_hapus;\n                        }\n                        $showAksi = false;\n                        $fieldTolakPendirian = true;\n                        $title = 'DAFTAR PENDIRIAN DITOLAK KARENA NAMA/SINGKATAN';\n                    }\n                }\n                if(!empty($params)) {\n                    $model->dbCriteria->params = $params;\n                }\n            }\n        }\n\n        $this->render('/badanhukum/verifikasi_ordername', array(\n            'model' => $model,\n            'base' => 'PERKUMPULAN',\n            'modelFilter' => $modelFilter,\n            'showAksi' => $showAksi,\n            'fieldSetuju' => $fieldSetuju,\n            'fieldHapus' => $fieldHapus,\n            'fieldTolakPendirian' => $fieldTolakPendirian,\n            'title' => $title\n        ));\n    }\n\n    public function actionPerkumpulanListordernameCompare()\n    {\n        $model = new OrderName('search');\n        $model->unsetAttributes();\n        $model->limitRow = 20;\n        $model->dbCriteria->condition = 'base=\"perkumpulan\"';\n        $model->dbCriteria->order = 'tgl_pesan desc';\n        if (isset($_GET['OrderName'])) {\n            $model->attributes = $_GET['OrderName'];\n        }\n        $this->render(\n            '/perkumpulan/listordernamecompare',\n            array(\n                'model' => $model\n            )\n        );\n        return;\n    }\n\n     /**\n     * @param integer $id id pesan nama\n     * @param string $base\n     * @param string||null $start tanggal mulai search\n     * @param string||null $end tanggal akhir search\n     */\n    public function actionVerifikasiSetuju($id, $base, $start, $end)\n    {\n        if (!empty($id) && !empty($base)) {\n            if ($base == 'perseroan') {\n                $model = OrderNamePerseroan::model()->findByAttributes(array('id' => $id));\n            } else {\n                $model = OrderName::model()->findByAttributes(array('id' => $id, 'base' =>$base));\n            }\n            if ($model === null) {\n                throw new CHttpException(404, 'The requested page does not exist.');\n            }\n            \n            // Auto-reset status_verifikasi ke 0 jika bukan 0 (untuk handle kasus restore/koreksi)\n            if ($model->status_verifikasi != 0) {\n                $model->status_verifikasi = 0;\n                $model->save(false);\n            }\n            $model->status_verifikasi = 1;\n            $model->tgl_verifikasi = date('Y-m-d H:i:s');\n            $model->verifikasi_by = Yii::app()->user->name;\n\n            if ($model->save(false)) {\n\n                // update status to 1\n                VerifikasiPesanNama::model()->updateVerifikasi($model->id_pesan, $base, 1);\n                if (in_array($base, ['perkumpulan', 'yayasan'])) {\n                    // send mail\n                    $logo = CHtml::image('https://ahu.go.id/images/banner_ahu_large.jpg', 'Logo Ditjen AHU');\n                    // get init content email body without logo\n                    $emailBody = $this->renderPartial('/badanhukum/_formEmailBodySetuju', array('model' => $model, 'base' => $base), true);\n                    $body = $logo . $emailBody;\n\n                    // send notif\n                    $subject = 'Verifikasi Sukses dan Di Setujui';\n                    if (!empty($model->id_notaris)) {\n                        $profil = MsNotarisProfile::model()->find(\n                            \"ID_NOTARIS =:id_notaris\", array(':id_notaris'=>$model->id_notaris)\n                        );\n\n                        if (!empty($profil)) {\n                            $return = VerifikasiPesanNama::model()->sendNotifTolak($profil->USERNAME, $subject, $body);\n                        }\n                    }\n\n                    $setting = DclSetting::model()->find('`name` = ?', array('email_verifikator'));\n                    if ($setting !== null) {\n                        $from = $setting->value;\n                        $result = Helpers::sendMails(\n                            $model->email_pemohon,\n                            $subject,\n                            $body,\n                            array('email' => $from, 'name' => 'Ditjen AHU'),\n                            false,\n                            array('email' => $from, 'name' => 'Ditjen AHU')\n                        );\n                    }\n                }\n\n                $urlRedirect = $this->createUrl('verifikasiPesanNama' . ucfirst(strtolower($base)), array(\n                    'FormFilterVerifikasiPesanNama' => array(\n                        'tanggal_mulai' => $start,\n                        'tanggal_akhir' => $end\n                    ),\n                    'submit_verifikasi' => 'Sudah Disetujui'\n                ));\n                $this->redirect($urlRedirect);\n            }\n        }\n    }\n\n    public function actionVerifikasiHapus($id, $base)\n    {\n        try {\n            // Inisialisasi Elasticsearch client\n            $client = Yii::app()->elkSoundex->getClientInstance();\n            $elasticIndex = array_keys(Yii::app()->elkSoundex->es_index_type)[0];\n        } catch (Exception $e) {\n            Yii::log(\"Failed to initialize Elasticsearch client: {$e->getMessage()}\", 'error');\n            RestApi::response(500, 'Failed to initialize Elasticsearch client');\n        }\n\n        if (!empty($id) && !empty($base)) {\n            if ($base == 'perseroan') {\n                $model = OrderNamePerseroan::model()->findByAttributes(array('id' => $id));\n            } else {\n                $model = OrderName::model()->findByAttributes(array('id' => $id, 'base' =>$base));\n            }\n            if ($model === null) {\n                throw new CHttpException(404, 'The requested page does not exist.');\n            }\n            \n            // Auto-reset status_verifikasi ke 0 jika bukan 0 (untuk handle kasus restore/koreksi)\n            if ($model->status_verifikasi != 0) {\n                $model->status_verifikasi = 0;\n                $model->save(false);\n            }\n\n            $isAjax = Yii::app()->request->getPost('ajax');\n            $tidakSesuai = Yii::app()->request->getPost('tidak_sesuai');\n            $strTidakSesuai = $tidakSesuai == 1 ? 'Nama | ' : 'Singkatan | ';\n\n            $transactionBadanHukum = Yii::app()->dbBadanHukum->beginTransaction();\n            $updateSuccess = false;\n            $arr = [];\n            $arr['status'] = \"Silahkan coba lagi\";\n            $keteranganHapus = isset($_POST['keterangan']) ? $_POST['keterangan'] : null;\n\n            try {\n                $modelHapusExist = OrderNameHapus::model()->find('id_pesan =:id AND base =:base', array(':id' => $model->id_pesan, ':base' => $base));\n                // 2023-09-04, arya sumano, kalo ditolak hanya karena singkatan, soundex juga ikut dihapus agar bisa pesan dengan nama yg sama\n                $soundexBakum = Yii::app()->dbBadanHukum->createCommand(\"SELECT * FROM {{soundex}} WHERE nama='{$model->nama}' AND base='{$base}' AND is_active = 1\")->queryAll();\n            } catch (Exception $e) {\n                Yii::log(\"Failed to query soundex: {$e->getMessage()}\", 'error');\n                RestApi::response(500, 'Failed to query soundex');\n            }\n\n            try {\n                $soundexBakumElk = $client->search([\n                    'index' => $elasticIndex,\n                    'body' => [\n                        'query' => [\n                            'bool' => [\n                                'must' => [\n                                    ['match_phrase' => ['nama' => $model->nama]],\n                                    ['term' => ['base' => $base]],\n                                    ['term' => ['is_active' => 1]]\n                                ]\n                            ]\n                        ]\n                    ]\n                ]);\n            } catch (Exception $e) {\n                Yii::log(\"Failed to query soundex from elastic search: {$e->getMessage()}\", 'error');\n                RestApi::response(500, 'Failed to query soundex from elastic search');\n            }\n\n            if($model->is_proses == 0 && $modelHapusExist === null) {\n                try {\n                    // insert to tbl pesan nama hapus\n                    $modelHapus = new OrderNameHapus();\n                    $modelHapus->attributes = $model->attributes;\n                    $modelHapus->base = $base;\n                    $modelHapus->tgl_hapus = date('Y-m-d H:i:s');\n                    $modelHapus->deleted_by = Yii::app()->user->name;\n                    $modelHapus->keterangan = $strTidakSesuai . $keteranganHapus;\n                    if (!$modelHapus->save()) {\n                        $updateSuccess = false;\n                        $arr['hapus'] = 'Gagal simpan ke tabel pesan nama hapus';\n                        Yii::log(\"Failed to save pesan nama hapus data: {$modelHapus->getErrors()}\", 'error');\n                    } else {\n                        VerifikasiPesanNama::model()->updateVerifikasi($model->id_pesan, $base, 2, $modelHapus->keterangan, $tidakSesuai);\n                        $updateSuccess = true;\n                        $arr['hapus'] = 'Berhasil simpan ke tabel pesan nama hapus';\n                    }\n\n                    if ($base != 'perseroan') {\n                        //Unflag Terpakai Voucher PNBP\n                        $mapping = ApiBilling::model()->getMappingDetail($model->id_aksi, $base);\n\n                        $id_produk = ($base == 'yayasan') ? 50 : 60;\n                        $kode_pembayaran = $model->no_voucher;\n                        $tipe_transaksi = !empty($mapping['TIPE_TRANSAKSI']) ? $mapping['TIPE_TRANSAKSI'] : 30;\n                        $id_mapping = !empty($mapping['ID_MAPPING']) ? $mapping['ID_MAPPING'] : 1;\n\n                        $u_simponi = false;\n\n                        $s_simponi = BillingHelper::unflagVoucherSafe($kode_pembayaran, $id_produk, $tipe_transaksi, $id_mapping);\n\n                        //Unflag Terpakai Voucher PNBP Lama\n                        if (!$s_simponi) {\n                            $tipe_transaksi = 30;\n                            $id_mapping = 1;\n                            $s_simponi = BillingHelper::unflagVoucherSafe($kode_pembayaran, $id_produk, $tipe_transaksi, $id_mapping);\n                        }\n\n                        if(!empty($s_simponi)) {\n                            $u_simponi = true;\n                        }\n\n                        if (!$u_simponi) {\n                            $updateSuccess = false;\n                            $arr['status'] = \"Terjadi  kesalahan update voucher PNBP\";\n                        }\n                    }\n\n                    if ($updateSuccess) {\n                        $transactionBadanHukum->commit();\n                    } else {\n                        $transactionBadanHukum->rollback();\n                    }\n                } catch (Exception $ex) {\n                    $transactionBadanHukum->rollback();\n                    Yii::log(\"Failed to update data: {$ex->getMessage()}\", 'error');\n                }\n            } else {\n                $arr['status'] = \"Pendirian sudah dilakukan\";\n            }\n\n            $arr['result'] = $updateSuccess;\n            if ($updateSuccess) {\n                // send email\n                $logo = CHtml::image('https://ahu.go.id/images/banner_ahu_large.jpg', 'Logo Ditjen AHU');\n                // get init content email body without logo\n                $emailBody = $this->renderPartial('/badanhukum/_formEmailBody', array('model' => $model, 'base' => $base), true);\n                $body = $logo . $emailBody;\n                $strTidakSesuai = $tidakSesuai == 1 ? 'nama' : 'singkatan';\n                $body = str_replace(\n                    array('[alasan]', '[tidak_sesuai]'),\n                    array($keteranganHapus, $strTidakSesuai),\n                    $body\n                );\n                // send notif\n                $subject = 'Pembatalan pesan nama';\n                if (!empty($model->id_notaris)) {\n                    $profil = MsNotarisProfile::model()->find(\n                        \"ID_NOTARIS =:id_notaris\", array(':id_notaris'=>$model->id_notaris)\n                    );\n                    if (!empty($profil)) {\n                        VerifikasiPesanNama::model()->sendNotifTolak($profil->USERNAME, $subject, $body);\n                    }\n                }\n\n                $setting = DclSetting::model()->find('`name` = ?', array('email_verifikator'));\n                if ($setting !== null) {\n                    $from = $setting->value;\n                    $result = Helpers::sendMails(\n                        $model->email_pemohon,\n                        $subject,\n                        $body,\n                        array('email' => $from, 'name' => 'Ditjen AHU'),\n                        false,\n                        array('email' => $from, 'name' => 'Ditjen AHU')\n                    );\n                }\n\n                // Jika singkatan. hapus soundex\n                // 2023-09-19, arya sumano, kalo ditolak hanya karena singkatan, soundex juga ikut dihapus agar bisa pesan dengan nama yg sama\n                if(!empty($soundexBakum) && $strTidakSesuai == 'singkatan'){\n                    Yii::app()->dbBadanHukum->createCommand()->delete('{{soundex}}',\"nama=:nama and base=:base and is_active = 1\",array(\n                        ':nama' => $model->nama,\n                        ':base' => $base,\n                    ));\n                }\n\n                if(!empty($soundexBakumElk['hits']['hits']) && $strTidakSesuai == 'singkatan'){\n                    try {\n                        $client->delete([\n                            'index' => $elasticIndex,\n                            'type' => '_doc',\n                            'id' => $soundexBakumElk['hits']['hits'][0]['_id']\n                        ]);\n                    } catch (Exception $e) {\n                        Yii::log(\"Failed to delete soundex from elastic search: {$e->getMessage()}\", 'error');\n                    }\n                }\n\n                // delete model\n                $model->delete();\n            }\n            if ($isAjax) {\n                RestApi::response(200, $arr);\n            }\n        }\n    }\n\n    public function actionOrder($nama) {\n        if ($nama == 'perseroan') {\n            $model = New OrderNamePerseroan;\n            if (isset($_POST['OrderNamePerseroan'])) {\n                $model->attributes = $_POST['OrderNamePerseroan'];\n                $model->nama = strtoupper($_POST['OrderNamePerseroan']['nama']);\n                $model->tgl_pesan = date('Y-m-d');\n                $model->tgl_exp_pesan = date('Y-m-d H:i:s', strtotime('+60 days'));\n                $model->is_proses = 0;\n                $model->id_pesan = date('Ymdhis') . $this->randomCode();\n                //echo '<pre>',(CActiveForm::validate($model));\n                //exit;\n                $no_voucher = $_POST['OrderNamePerseroan']['no_voucher'];\n                if ($model->save()) {\n                    Yii::app()->dbVoucher->createCommand(\"UPDATE tbl_voucher SET terpakai=1 WHERE no_voucher=\" . $no_voucher . \"\")->query();\n                    $this->redirect(array('badanhukum/perseroanListordername'));\n                }\n            }\n            $this->render('_formAddOrder', array('model' => $model));\n            return;\n        }\n        if ($nama == 'yayasan') {\n            $model = New OrderName;\n            if (isset($_POST['OrderName'])) {\n                $model->attributes = $_POST['OrderName'];\n                //$model->addError('no_voucher', 'Maaf, Nomor Voucher yang anda gunakan telah diperpanjang. <br>Silahkan gunakan Nomor Voucher yang baru!');\n                $model->nama = strtoupper($_POST['OrderName']['nama']);\n                $model->tgl_pesan = date('Y-m-d');\n                $model->tgl_exp_pesan = date('Y-m-d H:i:s', strtotime('+60 days'));\n                $model->is_proses = 0;\n                $model->base = 'yayasan';\n                $model->id_pesan = date('Ymdhis') . $this->randomCode();\n                //echo '<pre>',(CActiveForm::validate($model));\n                //exit;\n                $no_voucher = $_POST['OrderName']['no_voucher'];\n                if ($model->save()) {\n                    Yii::app()->dbVoucher->createCommand(\"UPDATE tbl_voucher SET terpakai=1 WHERE no_voucher=\" . $no_voucher . \"\")->query();\n                    $this->redirect(array('badanhukum/yayasanListordername'));\n                }\n            }\n            $this->render('_formAddOrder', array('model' => $model));\n            return;\n        }\n        if ($nama == 'perkumpulan') {\n            $model = New OrderName;\n            if (isset($_POST['OrderName'])) {\n                $model->attributes = $_POST['OrderName'];\n                $model->nama = strtoupper($_POST['OrderName']['nama']);\n                $model->tgl_pesan = date('Y-m-d');\n                $model->tgl_exp_pesan = date('Y-m-d H:i:s', strtotime('+60 days'));\n                $model->is_proses = 0;\n                $model->base = 'perkumpulan';\n                $model->id_pesan = date('Ymdhis') . $this->randomCode();\n                //echo '<pre>',(CActiveForm::validate($model));\n                //exit;\n                $no_voucher = $_POST['OrderName']['no_voucher'];\n                if ($model->save()) {\n                    Yii::app()->dbVoucher->createCommand(\"UPDATE tbl_voucher SET terpakai=1 WHERE no_voucher=\" . $no_voucher . \"\")->query();\n                    $this->redirect(array('badanhukum/perkumpulanListordername'));\n                }\n            }\n            $this->render('_formAddOrder', array('model' => $model));\n            return;\n        }\n    }\n\n    public function actionCheckNameBadanHukum(){\n        $data = array(\"code\"=>\"500\",\"data\"=>\"\");\n        $val = Yii::app()->request->getPost(\"nama\");\n        $base = Yii::app()->request->getPost(\"base\");\n        if($val && $base){\n            $model = BadanHukum::model()->find(\"nama=:nama and status_transaksi = 1 and base=:base\", array(\":nama\"=>strtoupper($val), \":base\"=>$base));\n            if($model){\n                $transaksi = \"\";\n                if($base == \"perkumpulan\")\n                    $transaksi = TransaksiPerkumpulan::model($model->tahun)->find(\"nomor_transaksi=:no_trans AND id_badan_hukum=:id order by created_date desc\", array(\":no_trans\"=>$model->no_transaksi,\":id\"=>$model->badan_hukum_id));\n                if($base == \"yayasan\")\n                    $transaksi = TransaksiYayasan::model($model->tahun)->find(\"nomor_transaksi=:no_trans AND id_badan_hukum=:id order by created_date desc\", array(\":no_trans\"=>$model->no_transaksi,\":id\"=>$model->badan_hukum_id));\n                if($transaksi){\n                    $data[\"code\"]=\"200\";\n                    $transaksi->created_date = Helpers::getDateFormatId($transaksi->created_date);\n                    $data[\"data\"]=$transaksi->attributes;\n                }\n            }\n        }\n        Header('Content-Type: application/json; charset=UTF8');\n        echo json_encode($data);\n        exit;\n    }\n\n    private function getListBolong($rest){\n        $awal = 0;\n        $tmp = array();\n        if($rest){\n            foreach($rest as $nomor_sp){\n                if(preg_match(\"/AHU\\-(\\d{5})\\.\\d{2}\\.\\d{2}\\.\\d{4}/\", $nomor_sp, $match)){\n                    $digit = (int)$match[1];\n    //                var_dump($digit);\n                    if(($digit-1) > $awal){\n                        while($awal++ < $digit-1){\n                            if($awal != $digit)\n                                $tmp[]=$awal;\n                        }\n                    }\n                    $awal = $digit;\n                }\n            }\n        }\n        return $tmp;\n    }\n\n    public function actionDaftarBh() {\n        $model = new BadanHukum('search');\n        $model->dbCriteria->order = 'badan_hukum_id DESC';\n        $model->unsetAttributes();\n        if($get = Yii::app()->request->getQuery(get_class($model))) {\n            $model->attributes = $get;\n        }\n        $this->render('daftarbh', array(\n            'model' => $model\n        ));\n    }\n\n    /**\n     * @param $model - data detail badan hukum yang diblokir\n     * @throws CException\n     * akan mengirimkan kepada seluruh user yang groupya sama dengan pemblockir\n     */\n    public function kirimEmail($model){\n        //ambil user yang groupnya sama\n        $other_users = Helpers::getUserSameGroup();\n        //jadikan kedalam array\n        $to_emails = Helpers::convertToArrayByKey('email',$other_users);\n        $messages = $this->renderPartial('email_block',array('model'=>$model),true);\n\n        foreach($to_emails as $email){\n            if(!empty($email))\n                Helpers::mailsend($email,'Badan Hukum Yang Diblokir',$messages, Yii::app()->user->email);\n            //echo $messages;\n        }\n    }\n\n    public function actionBlockir($id) {\n        if(!empty($id)) {\n            $this->pageTitle = \"Blokir Badan Hukum\";\n            $model = new BadanHukumBlokir();\n            if (isset($_POST['token']) && $tokenValue = $_POST['token']) {\n                if (Yii::app()->session['var'] != $tokenValue) {\n                    Yii::log('Invalid session when blokir badan hukum', 'error');\n                    unset(Yii::app()->session['var']);\n                    return $this->redirect(array('blockir', 'id' => $id));\n                }\n                unset(Yii::app()->session['var']);\n            }\n            $data  = BadanHukum::model()->find('badan_hukum_id =:id AND status_transaksi <> 2', array(\n                ':id' => $id\n            ));\n            $form_token = uniqid();\n            Yii::app()->session['var'] = $form_token;\n            if($data) {\n                $this->pageTitle = \"Blokir \".ucfirst($data->base).\" \".$data->nama;\n                $last_status = $data->status_transaksi;\n                $last_update = $data->updated;\n\n                $model->id_badan_hukum = $data->badan_hukum_id;\n                $model->nama = $data->nama;\n                $model->base = $data->base;\n                $bh_blokir = BadanHukumBlokir::model()->getBlokirMasterById($data->badan_hukum_id, $data->base);\n                $post = Yii::app()->request->getPost(get_class($model));\n                if($post && $bh_blokir == false) {\n                    $model->attributes = $post;\n                    $model->blokir_by = Yii::app()->user->name;\n                    $model->action = 'blokir';\n                    $model->blokir_date = date('Y-m-d H:i:s');\n                    $model->ip_addr = Yii::app()->request->userHostAddress; //ambil ip address client\n                    $model->last_status = $last_status;\n                    if($model->validate()) {\n                        $data->status_transaksi = self::STATUS_BLOKIR;\n                        $data->updated = date('Y-m-d H:i:s');\n                        if ($data->save(false) && $model->save(false)) {\n                            $model->notifBlokir($model);\n                            $this->redirect(array('listblokir'));\n                        }\n                    }\n                }\n                $this->render('_formblokirbh', array(\n                    'model' => $model,\n                    'data'=>$data,\n                    'flagedit' => false,\n                    '_token' => $form_token,\n                ));\n                Yii::app()->end();\n            }\n        }\n    }\n\n    public function actionUnblockir($id) {\n        if(!empty($id)) {\n            $this->pageTitle = \"Unblokir Badan Hukum\";\n            $model = new BadanHukumBlokir;\n            if (isset($_POST['token']) && $tokenValue = $_POST['token']) {\n                if (Yii::app()->session['var'] != $tokenValue) {\n                    Yii::log('Invalid session when unblokir badan hukum', 'error');\n                    unset(Yii::app()->session['var']);\n                    return $this->redirect(array('unblockir', 'id' => $id));\n                }\n                unset(Yii::app()->session['var']);\n            }\n            $data  = BadanHukum::model()->find('badan_hukum_id =:id AND status_transaksi = 2', array(\n                ':id' => $id\n            ));\n            $form_token = uniqid();\n            Yii::app()->session['var'] = $form_token;\n            if(!empty($data)) {\n                $this->pageTitle = \"Unblokir \".ucfirst($data->base).\" \".$data->nama;\n                $last_status = 0;\n                $oldblokir = $model->find('id_badan_hukum=:id order by blokir_date desc', array(\n                    ':id' => $id\n                ));\n                $ls = $data->status_transaksi; // 2\n                $last_modified = $data->updated;\n\n                $model->id_badan_hukum = $data->badan_hukum_id;\n                $model->nama = $data->nama;\n                $model->base = $data->base;\n                $bh_blokir = BadanHukumBlokir::model()->getBlokirMasterById($data->badan_hukum_id, $data->base);\n                $post = Yii::app()->request->getPost(get_class($model));\n                if($post && $ls == 2 && $bh_blokir == true) {\n                    $model->setScenario('unblokir');\n                    $model->attributes = $post;\n                    $model->blokir_by = Yii::app()->user->name;\n                    $model->action = 'unblokir';\n                    $model->blokir_date = date('Y-m-d H:i:s');\n                    $model->ip_addr = Yii::app()->request->userHostAddress; //ambil ip address client\n                    $model->last_status = $ls;\n\n                    if($model->validate()) {\n                        $data->status_transaksi = $oldblokir->last_status;\n                        $data->updated = date('Y-m-d H:i:s');\n                        if ($data->save(false) && $model->save(false)) {\n                            $model->notifBlokir($model);\n                            $this->redirect(array('listblokir'));\n                        }\n                    }\n                }\n                $this->render('_formblokirbh', array(\n                    'model' => $model,\n                    'flag' => true,\n                    'data'=>$data,\n                    'flagedit' => false,\n                    '_token' => $form_token\n                ));\n                Yii::app()->end();\n            }\n        }\n    }\n\n    public function actionRiwayatBlokir($id)\n    {\n        $adp = [];\n        if(!empty($id)) {\n            $model = BadanHukumBlokir::model()->findAll('id_badan_hukum=:id order by blokir_date desc', array(\n                'id' => $id\n            ));\n            if(!empty($model)) {\n                $adp = new CArrayDataProvider($model, array(\n                    'id' => 'id',\n                    'pagination' => false\n                ));\n            }\n            $this->pageTitle = !empty($model[0]->nama) ? \"RIWAYAT BLOKIR \".strtoupper($model[0]->base).\" \".$model[0]->nama : \"RIWAYAT BLOKIR\";\n            $this->render('riwayat_blokir', array(\n                'model' => $model,\n                'dp' => $adp\n            ));\n        }\n    }\n\n    public function actionEditBlokir($id) {\n        if(!empty($id)) {\n            $this->pageTitle = \"Edit Keterangan Blokir\";\n            $model = BadanHukumBlokir::model()->findByPk($id);\n            if(!empty($model)) {\n                $this->pageTitle = \"Edit Keterangan Blokir \".ucfirst($model->base). \" \".$model->nama;\n            }\n            $post = Yii::app()->request->getPost(get_class($model));\n            if($post) {\n                $editket = $model->saveAttributes(\n                    array(\n                        'keterangan' => $post['keterangan'],\n                        'blokir_by' => Yii::app()->user->name\n                    )\n                );\n                if($editket){\n                     $model->notifBlokir($model, true);\n                }\n                $this->redirect(array('listblokir'));\n            }\n            $this->render('_formblokirbh', array(\n                'model' => $model,\n                'flagedit' => true\n            ));\n        }\n    }\n\n    public function actionListBlokir() {\n        $this->pageTitle = \"DAFTAR BLOKIR/UNBLOKIR YAYASAN & PERKUMPULAN\";\n        $model = New BadanHukumBlokir('search');\n        $model->unsetAttributes();\n        $filterForm = new BadanHukumFilters;\n        if ($get = Yii::app()->request->getQuery(get_class($filterForm))) {\n            $filterForm->filters = $get;\n        }\n        $rawData = $model->getAllData();\n        $filterData = $filterForm->filter($rawData);\n        $arrDp = new CArrayDataProvider($filterData, array(\n            'id' => 'id_badan_hukum',\n            'keyField' => 'id',\n            'pagination' => array(\n                'pageSize' => 20\n            )\n        ));\n        $this->render('listblokir', array(\n            'model' => $model,\n            'dp' => $arrDp,\n            'filtersForm' => $filterForm\n        ));\n    }\n    public function actionList(){\n\n        if(!Yii::app()->user->isGuest){\n\n            $model = new BadanHukum;\n            $model->dbCriteria->order = 'no_transaksi DESC';\n                        //$model->dbCriteria->addCondition('kode is not null'); // ubah manual\n\n            $model->unsetAttributes();\n            if (isset($_GET['BadanHukum'])) {\n                $model->attributes = $_GET['BadanHukum'];\n\n                if(!empty($_GET['BadanHukum']['base'])) {\n                    if($_GET['BadanHukum']['base']==\"yayasan\") {\n                        $model->dbCriteria->addCondition('base=\"yayasan\"');\n                    }\n                    if($_GET['BadanHukum']['base']==\"perkumpulan\") {\n                        $model->dbCriteria->addCondition('base=\"perkumpulan\"');\n                    }\n                }\n\n                if(!empty($_GET['BadanHukum']['status_transaksi'])) {\n                    if($_GET['BadanHukum']['status_transaksi']==\"1\"):\n                        //bila nomor sk tidak null maka sudah bayar\n                        $model->dbCriteria->addCondition('nomor_sk IS NOT NULL');\n                    else:\n                        //bila nomor sk null maka belum bayar\n                        $model->dbCriteria->addCondition('nomor_sk IS NULL');\n                        $model->dbCriteria->order = 'no_transaksi';\n                    endif;\n\n                    if($_GET['BadanHukum']['status_transaksi']==\"1\"):\n                        $model->status_transaksi = 1;\n                    else:\n                        $model->status_transaksi = 2;\n                    endif;\n                }\n                $model->dbCriteria->order = 'no_transaksi DESC';\n            }\n\n            $this->render('list', array(\n                'model'=>$model,\n                //'year_now'=>$year_now,\n            ));\n            exit;\n        }\n        throw new CHttpException(404, 'The requested page does not exist.');\n    }\n\n    public function actionDetails($id) {\n        if(!Yii::app()->user->isGuest){\n            $check = BadanHukum::model()->find('badan_hukum_id=\"'.$id.'\"');\n            //var_dump($check); exit;\n            if($check) {\n                $base = $check->base;\n\n                //ambil semua data dari tabel transaksi yang ada\n                $tables = Yii::app()->dbBadanHukum->createCommand(\"Show tables like 'tbl\\_transaksi\\_\".$base.\"\\_____'\")->queryColumn();\n                $transaksi = array();\n\n                foreach($tables as $tbl_transaksi){\n                                $tmp = Yii::app()->dbBadanHukum->createCommand()\n                                                ->select('*')\n                                                ->from($tbl_transaksi)\n                                                ->where('id_badan_hukum=\"'.$id.'\"')\n                                                ->order('id_transaksi asc')\n                                                ->queryAll();\n                                if(count($tmp) < 1)\n                                                continue;\n                                $transaksi = array_merge($transaksi, $tmp);\n                }\n                if(count($transaksi) > 0){\n                                $last = end($transaksi);\n                                $nama = $last['nama_'.$base];\n                                //header('Content-type: text/plain');var_dump($transaksi, $nama);exit;\n                } else {\n                        $nama = $check->nama;\n                }\n            } else {\n                $check = NULL;\n                $transaksi = NULL;\n                $nama = NULL;\n            }\n\n            $this->render('detail_bh', array(\n                    'transaksi'=>$transaksi,\n                    'check'=>$check,\n                    'nama'=>$nama\n            ));\n            exit;\n        }\n        throw new CHttpException(404, 'The requested page does not exist.');\n    }\n\n    public function actionGetNamaBadanHukum() {\n        if (!Yii::app()->user->isGuest) {\n            $data = array('code' => '500', 'result' => '');\n            $no_pesan = Yii::app()->request->getPost('no_pesan');\n            $voucher = Yii::app()->request->getPost('kode_voucher');\n            $base = Yii::app()->request->getPost('base');\n            if($base == 'perkumpulan' && $no_pesan){\n                $order = OrderName::model()->find('id_pesan=:no_pesan AND no_voucher=:kode_voucher AND base=:base AND is_proses=0 AND is_active=1', array(':no_pesan' => $no_pesan, ':kode_voucher' => empty($voucher) ? 9999 : $voucher, ':base' => $base));\n                if ($order) {\n                    $data['code'] = '200';\n                    $data['result'] = strtoupper($order->nama);\n                    $data['singkat'] = strtoupper($order->nama_singkat);\n                    $data['kegiatan'] = strtoupper($order->kegiatan);\n                }\n            }\n            else{\n                if ($no_pesan && $voucher) {\n                    $order = OrderName::model()->find('id_pesan=:no_pesan AND no_voucher=:kode_voucher AND is_proses=0 AND is_active=1', array(':no_pesan' => $no_pesan, ':kode_voucher' => $voucher));\n                    if ($order) {\n                        $data['code'] = '200';\n                        $data['result'] = strtoupper($order->nama);\n                        $data['singkat'] = strtoupper($order->nama_singkat);\n                        $data['kegiatan'] = strtoupper($order->kegiatan);\n                    }\n                }\n            }\n            header('Content-type: text/json');\n            echo json_encode($data);\n            exit;\n        }\n        throw new CHttpException(404, 'The requested page does not exist.');\n    }\n\n    public function actionUpdatePerseroanListOrdername($id)\n    {\n        $model = OrderNamePerseroan::model()->find(\"id_pesan=:id_pesan\", array(':id_pesan' => $id));\n\n        if(isset($_POST['OrderNamePerseroan']))\n        {\n            $model->attributes=$_POST['OrderNamePerseroan'];\n            if($model->saveAttributes(array('nama', 'nama_singkat', 'nama_pemohon', 'telepon_pemohon', 'email_pemohon')))\n                $this->redirect(array('perseroanListordername'));\n        }\n\n        $this->render('/perseroan/update_ordername_perseroan', array(\n            'model'=>$model\n        ));\n    }\n\n    public function actionUpdateYayasanListordername($id)\n    {\n        $model = OrderName::model()->findByPk($id);\n\n        if(isset($_POST['OrderName']))\n        {\n            $model->attributes=$_POST['OrderName'];\n            if($model->saveAttributes(array('nama', 'nama_singkat', 'nama_pemohon', 'telepon_pemohon', 'email_pemohon')))\n                $this->redirect(array('yayasanListordername'));\n        }\n\n        $this->render('/yayasan/update_ordername_yayasan', array(\n            'model'=>$model\n        ));\n    }\n\n    public function actionUpdatePerkumpulanListordername($id)\n    {\n        $model = OrderName::model()->findByPk($id);\n\n        if(isset($_POST['OrderName']))\n        {\n            $model->attributes=$_POST['OrderName'];\n            if($model->saveAttributes(array('nama', 'nama_singkat', 'nama_pemohon', 'telepon_pemohon', 'email_pemohon')))\n                $this->redirect(array('perkumpulanListordername'));\n        }\n\n        $this->render('/perkumpulan/update_ordername_perkumpulan', array(\n            'model'=>$model\n        ));\n    }\n\n    public function actionHapusBlokirPesanNama($id, $type='perseroan') {\n        if($type == 'perseroan')\n            $model = OrderNamePerseroan::model()->find(\"id_pesan=:id_pesan\", array(\":id_pesan\" => $id));\n        else\n            $model = OrderName::model()->find(\"id_pesan=:id_pesan\", array(\":id_pesan\" => $id));\n        if($model) {\n            if($model->saveAttributes(array('is_active' => 1)))\n            {\n                Yii::app()->dbBadanHukum->createCommand(\"DELETE FROM tbl_order_name__blokir WHERE id_pesan=:id_pesan\")\n                        ->bindValue(\":id_pesan\", $id)\n                        ->execute();\n            }\n        }\n        $this->redirect(array('/sabh/badanhukum/'.$type.'Listordername'));\n    }\n\n    public function actionBlokirPesanNama($id, $type='perseroan') {\n        if($type == 'perseroan')\n            $model = OrderNamePerseroan::model()->find(\"id_pesan=:id_pesan\", array(\":id_pesan\" => $id));\n        else\n            $model = OrderName::model()->find(\"id_pesan=:id_pesan\", array(\":id_pesan\" => $id));\n        if($model) {\n            $keterangan = Yii::app()->request->getPost('keterangan');\n            $isAjax = Yii::app()->request->getPost('ajax');\n            if(!empty($keterangan)) {\n                if($model->saveAttributes(array('is_active' => 2))) {\n                    $blokir = new OrderNameBlokir;\n                    $blokir->id_pesan = $id;\n                    $blokir->base = $type;\n                    $blokir->keterangan = $keterangan;\n                    $blokir->blokir_by = Yii::app()->user->name;\n                    $blokir->blokir_date = date('Y-m-d H:i:s');\n                    if($blokir->save()) {\n                        $this->redirect(array('/sabh/badanhukum/'.$type.'Listordername'));\n                    }\n                }\n            }\n            else{\n                if($isAjax)\n                    echo '0^Keterangan harus diisi.';\n                else $this->redirect(array('/sabh/badanhukum/'.$type.'Listordername'));\n                return;\n            }\n        }\n        else {\n            $this->redirect(array('/sabh/badanhukum/'.$type.'Listordername'));\n        }\n        return;\n    }\n\n    public function actionUpdateBH() {\n        $nama = Yii::app()->request->getPost('nama');\n        $base = Yii::app()->request->getPost('base');\n        $msg = '';\n        if($nama && $base) {\n            $db_live = \"AHU_BADAN_HUKUM.tbl_badan_hukum\";\n            $db_pnri = \"AHU_BADAN_HUKUM.tbl_badan_hukum_pnri\";\n            $sql = \"select * from {$db_pnri} where TRIM(nama)=:nama and status_transaksi = 1 and base='{$base}'\";\n            $data_pnri = Yii::app()->dbBadanHukum->createCommand($sql)\n            ->bindValue(':nama', $nama)\n            ->queryAll();\n            $cada=0; $ctada=0;\n            if($data_pnri) {\n                foreach($data_pnri as $v_pnri) {\n                    $sql = \"select * from {$db_live} where TRIM(nama)=:nama and base='{$base}' and nama_notaris is null and status_transaksi is null and nomor_sk is null and pengurus is null\";\n                    $data_live = Yii::app()->dbBadanHukum->createCommand($sql)\n                    ->bindValue(':nama', $v_pnri['nama'])\n                    ->queryRow();\n                    if($data_live){\n                        $attrValue = array();\n                        $bindValue = array();\n                        $values = array();\n                        foreach($v_pnri as $k=>$v) {\n                            if($k != 'badan_hukum_id' && $k != 'upload_akta') {\n                                if($v) {\n                                    $attrValue[] = $k . \"=:\" . $k;\n                                    $bindValue[] = \":\".$k;\n                                    if($k == 'other')\n                                        $values[] = 'data migrasi:' . date('Y-m-d H:i:s');\n                                    else\n                                        $values[] = trim($v);\n                                }\n                            }\n                        }\n                        $sql_update = \"update {$db_live} set \" . implode(\", \", $attrValue) . \" where badan_hukum_id=:idbh\";\n                        $update_live = Yii::app()->dbBadanHukum->createCommand($sql_update);\n                        $update_live->bindValue(':idbh', $data_live['badan_hukum_id']);\n                        foreach($bindValue as $k => $bind) {\n                            $update_live->bindValue($bind, $values[$k]);\n                        }\n                        //var_dump($update_live->execute());exit;\n                        if($update_live->execute())\n                        {\n                            $msg = \"Updated: \" . $v_pnri['badan_hukum_id'] . \" - \". $v_pnri['nama'];\n                        }\n                        else\n                            $msg = \"Gagal silahkan coba lagi\";\n                    }\n                    else\n                        $msg = \"Data LIVE tidak ditemukan\";\n                }\n            }\n            else\n                $msg = \"Data PNRI tidak ditemukan\";\n        }\n        $this->render('_formMasterBH', get_defined_vars());\n    }\n\n    public function actionHistoryPesanNama() {\n       $model = new HistoryPesanNama('search');\n       $model->unsetAttributes();\n       if($get = Yii::app()->request->getQuery(get_class($model))) {\n           $model->attributes = $get;\n       }\n\n       $this->render('listhistory', get_defined_vars());\n\n    }\n\n    public function actionRestoreTransaksi() {\n        $model = new AuditTrailDetail;\n        $result = null;\n        $flag = false;\n        $post = Yii::app()->request->getPost('AuditTrailDetail');\n        if($post) {\n            $flag = true;\n            $model->scenario = 'search';\n            if(!empty($post['valuex'])) {\n                $cmd = Yii::app()->db->createCommand();\n                $cmd->select('*');\n                $cmd->from('AHU_NOTARIAT.ahu_audit_trail_detail');\n                $cmd->where('new_value=:nv', array(':nv' => $post['valuex']));\n                if(!empty($post['modelid'])) {\n                    $cmd->andWhere('model=:mdl', array(':mdl' => $post['modelid']));\n                }\n                if(!empty($post['action'])) {\n                    $cmd->andWhere('action=:a', array(':a' => $post['action']));\n                }\n                $result = $cmd->queryAll();\n            }\n        }\n        $this->render('restore_trans', get_defined_vars());\n    }\n\n    public function actionRestoreTrans($id) {\n        $dp = null;\n        $bs = null;\n        if(!empty($id)) {\n            $model = AuditTrailDetail::model()->findAll('audit_trail_id=:id', array(':id' => $id));\n            if(!empty($model)) {\n                $dp = new CArrayDataProvider($model, array(\n                    'id' => 'audit_trail_id',\n                    'pagination' => array(\n                        'pageSize' => 10\n                    )\n                ));\n            }\n            if(Yii::app()->request->getPost('restore')){\n                $id = Yii::app()->request->getPost('audit_id');\n                if(!empty($id)) {\n                    $mdlaudit = AuditTrailDetail::model()->findAll(array(\n                        'select' => 'new_value, model, field',\n                        'condition' => 'audit_trail_id=:id and action=\"CHANGE\"',\n                        'params' => array(':id' => $id)\n                    ));\n                    if(!empty($mdlaudit)) {\n                        $mdlname = !empty($mdlaudit[0]->model) ? $mdlaudit[0]->model : null;\n                        $attr = $this->generateAttr($mdlaudit);\n                        if(!empty($mdlname)) {\n                            if(class_exists($mdlname) && !empty($attr)){\n                                if(!empty($attr['id_transaksi']) && !empty($attr['nomor_transaksi'])) {\n                                    if(isset($attr['jumlah_billing']) && $attr['jumlah_billing'] <= 0) {\n                                        if(!empty($attr['kode_voucher'])) {\n                                            $bs = BillingSimponi::model()->getDetailByKode($attr['kode_voucher']);\n                                        }\n                                    }\n\n                                    if($mdlname == 'TransaksiYayasan' || $mdlname == 'TransaksiPerkumpulan') {\n                                        $urlredirect = '/sabh/history/allListtransaksi/id/'.$attr['id_badan_hukum'];\n                                    }\n                                    else {\n                                        $urlredirect = '/sabh/history/list_transaksi/id/'.$attr['id_perseroan'];\n                                    }\n                                    $mdltrans = new $mdlname();\n                                    $mdltrans->validatorList->add(\n                                        CValidator::createValidator('safe', $mdltrans, 'id_transaksi')\n                                    );\n                                    $mdltrans->id_transaksi = $attr['id_transaksi'];\n                                    if(!empty($bs)) {\n                                        $mdltrans->status_billing = 1;\n                                        $mdltrans->jumlah_billing = !empty($bs['JUMLAH_BILLING']) ? $bs['JUMLAH_BILLING'] : 0;\n                                        $mdltrans->tanggal_pembayaran = !empty($bs['TGL_PEMBAYARAN']) ? date('Y-m-d', strtotime($bs['TGL_PEMBAYARAN'])) : null;\n                                    }\n                                    $mdltrans->attributes = $attr;\n                                    if($mdltrans->save()) {\n                                        if(!empty($bs)) {\n                                            $updateterpakai = BillingSimponi::model()->updateTerpakai($bs['KODE_PEMBAYARAN'], $bs['KD_TARIF'], $mdltrans->nomor_transaksi);\n                                        }\n                                        $this->redirect(array($urlredirect));\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        $this->render('restore_detail', get_defined_vars());\n    }\n\n    private function generateAttr($data) {\n        $arr = array();\n        if(!empty($data)){\n            foreach ($data as $key => $val) {\n                $arr[$val->field] = $val->new_value;\n            }\n        }\n        return $arr;\n    }\n\n    /**\n     * Tool untuk hapus master data badan hukum yang tidak ada transaksinya\n     *\n     * Hendi A\n     * 2018-06-22\n     */\n    public function actionToolDeleteMaster()\n    {\n        $nama = Yii::app()->request->getPost('nama');\n        $base = Yii::app()->request->getPost('base');\n        $delete = Yii::app()->request->getPost('btn_delete');\n        $error_message = '';\n        $result = array(\n            'transaksi' => array(),\n            'master' => null,\n            'sql' => ''\n        );\n        if (!empty($nama) && !empty($base)) {\n            if ($base === 'perseroan') {\n                $master = Perseroan::model()->findByAttributes(array('nama_perseroan' => $nama));\n            } else {\n                $master = BadanHukum::model()->findByAttributes(array('nama' => $nama, 'base' => $base));\n            }\n            if ($master === null) {\n                // data master pt tidak ada\n                $error_message = \"Data {$base} dengan nama {$nama} tidak ditemukan.\";\n            } elseif (!empty($delete) && !empty($master)) {\n                // backup\n                $values = $attributes = array();\n                foreach ($master->attributes as $key => $value) {\n                    if ($value !== null) {\n                        $attributes[] = $key;\n                        $values[] = $value;\n                    }\n                }\n                if ($base === 'perseroan') {\n                    $result['sql'] = \"INSERT INTO AHU_BADAN_HUKUM.tbl_perseroan (\".implode(',', $attributes).\") VALUES (\".implode(',', $values).\")\";\n                    $deleteMaster = Perseroan::model()->deleteByPk($master->id_perseroan);\n                } else {\n                    $result['sql'] = \"INSERT INTO AHU_BADAN_HUKUM.tbl_badan_hukum (\".implode(',', $attributes).\") VALUES (\".implode(\"','\", $values).\")\";\n                    $deleteMaster = BadanHukum::model()->deleteByPk($master->badan_hukum_id);\n                }\n                if ($deleteMaster) {\n                    $error_message = 'Sukses delete!.';\n                } else {\n                    $error_message = 'Gagal delete!.';\n                }\n            } else {\n                // data master ada\n                $result['master'] = $master;\n                if ($base === 'perseroan') {\n                    $transaksi = HistoryController::get_transaction($master->id_perseroan);\n                } elseif ($base === 'yayasan') {\n                    $transaksi = HistoryController::get_transaction_yayasan($master->badan_hukum_id);\n                } else {\n                    $transaksi = HistoryController::get_transaction_perkumpulan($master->badan_hukum_id);\n                }\n\n                if (!empty($transaksi)) {\n                    $error_message = 'Data transaksi ada!.';\n                    $result['transaksi'] = $transaksi;\n                } else {\n                    $error_message = 'Data transaksi TIDAK ada!.';\n                }\n            }\n        } elseif (Yii::app()->request->isPostRequest) {\n            $error_message = 'Nama atau base badan hukum tidak boleh kosong!.';\n        }\n\n        return $this->render('toolDeleteMaster', array(\n            'error_message' => $error_message,\n            'nama' => $nama,\n            'base' => $base,\n            'result' => $result,\n        ));\n    }\n\n    /**\n     *\n     */\n    public function actionNonActive()\n    {\n        $nama = Yii::app()->request->getPost('nama');\n        $error_message = '';\n        $result = null;\n        if (!empty($nama)) {\n            // check nama di master PT\n            $pt = Perseroan::model()->findByAttributes(array('nama_perseroan' => $nama));\n            if ($pt !== null) {\n                if ($pt->status_transaksi == 3) {\n                    // check order name pt\n                    $orderName = OrderNamePerseroan::model()->findByAttributes(array('nama' => $nama));\n                    if ($orderName !== null) {\n                        if ($orderName->is_active == 1) {\n                            $orderName->is_active = 0;\n                            if ($orderName->save(false)) {\n                                $error_message = 'Sukses upate non aktif!.';\n                            } else {\n                                $error_message = 'Gagal upate non aktif!.';\n                            }\n                        } else {\n                            $error_message = 'Nama tersebut sudah dalam status tidak aktif!';\n                        }\n                    } else {\n                        $error_message = 'Nama tersebut tidak ada di pesan nama PT!';\n                    }\n                } else {\n                    $error_message = 'PT sedang tidak dalam status pembubaran!';\n                }\n            } else {\n                $error_message = 'Nama tersebut tidak ada di master PT!';\n            }\n        } elseif (Yii::app()->request->isPostRequest) {\n            $error_message = 'Nama pesan nama PT tidak boleh kosong!.';\n        }\n\n        return $this->render('nonActive', array(\n            'error_message' => $error_message,\n            'nama' => $nama,\n            'result' => $result\n        ));\n    }\n}\n\n\nInstructions for the chapter (Generate content in Bahasa indonesia unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 2: Pola MVC Yii: Controller, Model, dan View\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter (in Bahasa indonesia), referencing it with a proper Markdown link using its name (Use the Bahasa indonesia chapter title from the structure above).\n\n- Begin with a high-level motivation explaining what problem this abstraction solves (in Bahasa indonesia). Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way (in Bahasa indonesia).\n\n- Explain how to use this abstraction to solve the use case (in Bahasa indonesia). Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen (in Bahasa indonesia)).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments (Translate to Bahasa indonesia if possible, otherwise keep minimal English for clarity) to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it (in Bahasa indonesia).\n\n- Describe the internal implementation to help understand what's under the hood (in Bahasa indonesia). First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called (in Bahasa indonesia). It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`.  (Use Bahasa indonesia for labels/text if appropriate).\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain (in Bahasa indonesia).\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title (Use the Bahasa indonesia chapter title from the structure above). Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format).  (Use Bahasa indonesia for labels/text if appropriate).\n\n- Heavily use analogies and examples throughout (in Bahasa indonesia) to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned (in Bahasa indonesia) and provides a transition to the next chapter (in Bahasa indonesia). If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename) (Use the Bahasa indonesia chapter title from the structure above).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand (appropriate for Bahasa indonesia readers).\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 2: Pola MVC Yii: Controller, Model, dan View\n\nDi bab sebelumnya, kamu sudah melihat peta besar modul di SABH dan membuat endpoint kecil. Jika kamu melewatkannya, baca dulu: [Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)](01_arsitektur_modul_sabh__sistem_administrasi_badan_hukum__.md).\n\nBab ini akan memantapkan dasar paling penting ketika bekerja di SABH: memahami pola MVC di Yii (Controller\u2013Model\u2013View). Anggap ini sebagai \u201ckunci arah\u201d supaya kamu cepat menemukan file yang tepat, mengubah perilaku dengan aman, dan tidak tersesat.\n\n---\n\n## Mengapa MVC? Masalah Apa yang Diselesaikan?\n\nUse case sederhana: \u201cCek ketersediaan nama PT\u201d. Tanpa pola yang jelas, kode mudah berantakan:\n- validasi bercampur dengan query DB dan HTML,\n- susah dites,\n- sulit dicari \u201cyang mana harus diubah\u201d.\n\nDengan MVC:\n- Controller jadi \u201cpintu masuk\u201d yang rapi,\n- Model jadi \u201csumber data\u201d yang jelas,\n- View jadi \u201ctampilan\u201d yang terpisah.\n\nHasilnya: mudah dibaca, mudah diuji, mudah dirawat.\n\n---\n\n## Analogi Teater\n\n- Controller = Sutradara. Mengatur adegan: \u201cambil data ini, tampilkan itu\u201d.\n- Model = Naskah dan data pemain. Menyimpan cerita: tabel, validasi, query.\n- View = Panggung. Menampilkan apa yang penonton lihat: HTML atau JSON.\n\nDi SABH, sering ada \u201ckru produksi\u201d tambahan bernama Service/Mapper (logika bisnis dan agregasi SQL). Ini akan sering disebut, meski bukan bagian formal MVC, karena sangat membantu membuat Controller tetap tipis.\n\n---\n\n## Cara Yii Mengatur MVC di SABH\n\nStruktur direktori yang perlu kamu kenal:\n- controllers/ \u2192 aksi HTTP (API/halaman).\n- models/ \u2192 ActiveRecord, form model, query.\n- views/ \u2192 berkas tampilan HTML (jarang dipakai untuk API JSON).\n\nKamu juga akan sering melihat:\n- services/ \u2192 logika bisnis.\n- mappers/ \u2192 agregasi/pemetaan data.\n\nTip pemula:\n- Cari Controller untuk menemukan \u201cpintu masuk\u201d fitur.\n- Buka Model jika ingin tahu datanya dari mana.\n- Buka View jika ingin mengubah tampilan halaman.\n\n---\n\n## Alur Singkat di Kepala\n\nKetika endpoint dipanggil, kira-kira begini:\n\n```mermaid\nsequenceDiagram\n  participant U as Pengguna\n  participant R as Router Yii\n  participant C as Controller\n  participant M as Model/Service\n  participant V as View/JSON\n  U->>R: HTTP request\n  R->>C: Temukan controller/action\n  C->>M: Ambil/olah data\n  M-->>C: Kembalikan hasil\n  C-->>V: Render View / kirim JSON\n```\n\nKamu akan sering melihat Controller \u201ctipis\u201d, dan Service/Model yang \u201cbekerja keras\u201d.\n\n---\n\n## Controller: Pintu Masuk yang Tipis\n\nTugas Controller:\n- Menerima request, cek metode (GET/POST/\u2026).\n- Ambil parameter (query/body).\n- Validasi ringan.\n- Panggil Service/Model.\n- Pilih cara keluaran (JSON/HTML).\n\nContoh nyata (dipendekkan) dari API di SABH:\n\n```php\n// controllers/api/FileController.php (dipotong)\nclass FileController extends Controller {\n  public function actionIndex() {\n    if (!RequestContext::isMethod('POST')) (new APIExceptionThrower())->throwMethodNotAllowed();\n    if (!isset($_FILES['file'])) (new APIExceptionThrower())->throwBadRequest('Tidak ada file');\n    $info = (new FileService())->createFile(Yii::app()->request->getQuery('file_type'), $_FILES['file']);\n    APIResponse::ok($info, 'File berhasil diupload');\n  }\n}\n```\n\nPenjelasan singkat:\n- Cek HTTP method (harus POST).\n- Validasi input minimal (ada file?).\n- Delegasikan ke Service.\n- Balas JSON terstandar menggunakan APIResponse.\n- Standar format JSON dan error dibahas di: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n\nContoh Controller untuk halaman HTML (render View):\n\n```php\n// controllers/DashboardController.php (dipotong)\nclass DashboardController extends Controller {\n  public function actionBakum() {\n    $model = new DashboardFilterForm(DashboardHelper::TYPE_BAKUM);\n    $this->render('index', ['model' => $model, 'tipe' => DashboardHelper::TYPE_BAKUM]);\n  }\n}\n```\n\nPenjelasan:\n- Siapkan data (model filter, konstanta tipe).\n- Tampilkan View \u2018index\u2019 dengan data yang dibutuhkan.\n\nMembatasi akses hanya Ajax (contoh pola beforeAction):\n\n```php\n// controllers/BoController.php (dipotong)\nclass BoController extends Controller {\n  public function beforeAction($action) {\n    if (!Yii::app()->request->isAjaxRequest) return false;\n    return parent::beforeAction($action);\n  }\n}\n```\n\nPenjelasan:\n- Semua aksi di BoController wajib via Ajax.\n- Pola seperti ini menjaga konsistensi dan keamanan UI.\n\n---\n\n## Model: Sumber Data dan Aturan\n\nModel di Yii biasanya ActiveRecord (koneksi DB) atau Form Model (validasi input). Model berisi:\n- Aturan validasi,\n- Relasi,\n- Query, helper untuk pengambilan data,\n- Terkadang logika kecil terkait data.\n\nContoh singkat mengambil data wilayah:\n\n```php\n// contoh penggunaan model\n$provinsi = Wilayah::model()->getAll();\n$kab = Wilayah::model()->getKabupaten($provinsiId);\n```\n\nPenjelasan:\n- Model \u201cWilayah\u201d menyembunyikan detail SQL. Controller cukup memanggil metode yang mudah dimengerti.\n\nContoh count data dengan kriteria:\n\n```php\n// contoh menghitung jumlah order name\n$criteria = OrderName::model()->dbCriteria;\n$criteria->condition = 'base=\"yayasan\"';\n$jumlah = OrderName::model()->count($criteria);\n```\n\nPenjelasan:\n- ActiveRecord Yii memudahkan membuat kriteria dinamis tanpa menulis SQL panjang.\n\n---\n\n## View: Panggung Tampilan (HTML) dan Alternatif JSON\n\n- Untuk halaman web, Controller memanggil $this->render('namaView', $data).\n- Untuk potongan UI (modal/tabel Ajax), gunakan renderPartial.\n\nContoh render potongan tampilan:\n\n```php\n// controllers/BoController.php (dipotong)\n$content = $this->renderPartial('_details', ['model' => $model], true, true);\n```\n\nPenjelasan:\n- _details.php adalah berkas View kecil (partial) yang dikirim kembali untuk diisi ke halaman via Ajax.\n\nUntuk API, SABH jarang menggunakan View HTML. Kita menggunakan \u201cView\u201d dalam arti keluaran: JSON. Standarnya melalui APIResponse:\n\n```php\n// response\nAPIResponse::ok(['tersedia' => true], 'OK');\n// atau error\nAPIResponse::error('Nama kosong', 400);\n```\n\nPenjelasan:\n- Mudah, konsisten, otomatis set header. Detail format JSON: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n\n---\n\n## Contoh Lengkap Mini: \u201cCek Ketersediaan Nama PT\u201d (Versi API JSON)\n\nTujuan: GET /sabh/nama/cek?nama=PT%20MAJU \u2192 jawab tersedia atau tidak.\n\n1) Controller tipis:\n\n```php\nclass NamaController extends Controller {\n  public function actionCek() {\n    $nama = Yii::app()->request->getParam('nama','');\n    if (trim($nama)==='') return APIResponse::error('Nama kosong',400);\n    $hasil = NamaService::cekKetersediaan($nama); // delegasi\n    APIResponse::ok($hasil,'OK');\n  }\n}\n```\n\nPenjelasan:\n- Ambil parameter, validasi singkat, lempar ke Service, balas JSON.\n\n2) Contoh Service sederhana (logika bisnis):\n\n```php\nclass NamaService {\n  public static function cekKetersediaan($nama) {\n    $ada = OrderNamePerseroan::model()->findByAttributes(['nama'=>strtoupper($nama)]);\n    return ['tersedia'=> $ada ? false : true];\n  }\n}\n```\n\nPenjelasan:\n- Cek ke data pesan nama PT. Jika sudah ada, berarti tidak tersedia.\n\n3) Contoh input/output\n\n- Panggil: GET /sabh/nama/cek?nama=PT%20MAJU\n- Hasil sukses:\n\n```json\n{\n  \"success\": true,\n  \"message\": \"OK\",\n  \"data\": { \"tersedia\": true },\n  \"status\": 200\n}\n```\n\n- Hasil error (nama kosong):\n\n```json\n{\n  \"success\": false,\n  \"message\": \"Nama kosong\",\n  \"data\": null,\n  \"status\": 400\n}\n```\n\nPenjelasan:\n- Struktur konsisten, mudah diolah di frontend.\n\nCatatan:\n- Ketika butuh validasi yang lebih kaya, gunakan DTO/Validator: lihat [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md) dan [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md).\n\n---\n\n## Di Balik Layar: Apa yang Terjadi di Yii?\n\nLangkah sederhana saat endpoint dipanggil:\n1) Router Yii menemukan modul sabh \u2192 controller \u2192 action.\n2) SabhModule memanggil beforeControllerAction (cek global).\n3) Controller membaca parameter, validasi ringan.\n4) Controller memanggil Service/Model untuk data.\n5) Controller merender View (HTML) atau kirim JSON via APIResponse.\n\nContoh minimal hook modul (gambaran):\n\n```php\n// SabhModule::beforeControllerAction (gambaran)\nif (parent::beforeControllerAction($c,$a)) return true;\nreturn false;\n```\n\nPenjelasan:\n- Titik sentral untuk pengecekan global (maintenance, auth dasar, dll).\n\n---\n\n## Melihat Pola MVC di Kode Nyata SABH\n\n- Controller memanggil Service dan balas JSON:\n\n```php\n// controllers/api/PermohonanPemblokiranPTController.php (dipotong)\nclass PermohonanPemblokiranPTController extends Controller {\n  public function actionCreate() {\n    if (!RequestContext::isMethod('POST')) (new APIExceptionThrower())->throwMethodNotAllowed();\n    $body = RequestContext::getJsonBody();\n    $dto = CreatePermohonanPemblokiranPTDto::fromArray($body);\n    $dto->isValid(); // validasi DTO\n    (new PermohonanPemblokiranPTService())->createPermohonanPemblokiranPT($dto);\n    APIResponse::ok();\n  }\n}\n```\n\nApa yang bisa kamu pelajari:\n- Controller tipis, cek method, parsing JSON, validasi, delegasi ke Service, hasil konsisten via APIResponse.\n- DTO menjaga bentuk data masuk: lihat [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md).\n\n- Controller yang merender View (HTML dashboard):\n\n```php\n// controllers/DashboardController.php (dipotong)\nclass DashboardController extends Controller {\n  public function actionJenisPerseroan(){\n    $model = new DashboardFilterForm(DashboardHelper::TYPE_PERSEROAN);\n    $this->render('index', ['model'=>$model,'tipe'=>DashboardHelper::TYPE_PERSEROAN]);\n  }\n}\n```\n\nIntinya:\n- Controller menyiapkan data untuk panggung View. View-lah yang membentuk HTML-nya.\n\n- Controller yang membatasi akses Ajax dan mengirim potongan View:\n\n```php\n// controllers/BoController.php (dipotong)\nclass BoController extends Controller {\n  protected function sendResponse($r){ echo CJSON::encode($r); Yii::app()->end(); }\n  public function actionPilihJenis(){\n    $m = new BoDetailForm(); $m->attributes = Yii::app()->request->getPost('BoDetailForm');\n    if (in_array($m->jenis, $m->listJenis())) {\n      $html = $this->renderPartial('_create', ['detail'=>$m], true, true);\n      $this->sendResponse(['success'=>true,'content'=>$html]);\n    }\n  }\n}\n```\n\nPelajaran:\n- View partial (mis. _create.php) dipakai untuk update UI via Ajax, tanpa reload halaman.\n\n---\n\n## Pola Emas: \u201cController Tipis\u201d\n\nKenapa harus tipis?\n- Mudah dites: logika bisnis bisa diuji terpisah.\n- Aman: satu pintu standar untuk validasi dasar dan error.\n- Konsisten: semua endpoint terasa sama.\n\nPanduan detail ada di: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)\n\n---\n\n## Checklist Praktis Saat Mengerjakan Fitur\n\n- Cari Controller-nya:\n  - Pastikan method HTTP benar (GET/POST/\u2026).\n  - Ambil parameter via RequestContext/Yii::app()->request.\n  - Validasi ringan (kosong/tidak, format sederhana).\n\n- Pindahkan logika ke Service/Model:\n  - Query DB, cek bisnis, transformasi data.\n\n- Pilih keluaran:\n  - API \u2192 APIResponse::ok/error (JSON).\n  - Halaman \u2192 render()/renderPartial().\n\n- Gunakan standar:\n  - Respons dan error: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n  - DTO dan validator: [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md), [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md).\n  - Enum/konstanta: [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md).\n\n---\n\n## Ringkasan\n\nDi bab ini kamu telah mempelajari:\n- Inti pola MVC di Yii melalui analogi teater.\n- Peran Controller (sutradara), Model (naskah/data), View (panggung).\n- Pola \u201cController tipis\u201d dan delegasi ke Service/Model.\n- Contoh nyata di SABH: API JSON dan halaman HTML.\n- Alur di balik layar mulai dari Router hingga View/JSON.\n\nSelanjutnya, kita akan menata \u201ckamus nilai\u201d agar kode bisnis tidak bertebaran angka/teks ajaib. Lanjut ke: [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md)", "\nIMPORTANT: Write this ENTIRE tutorial chapter in **Bahasa indonesia**. Some input context (like concept name, description, chapter list, previous summary) might already be in Bahasa indonesia, but you MUST translate ALL other generated content including explanations, examples, technical terms, and potentially code comments into Bahasa indonesia. DO NOT use English anywhere except in code syntax, required proper nouns, or when specified. The entire output MUST be in Bahasa indonesia.\n\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `sabh-openai-bahasa` about the concept: \"Pusat Pemetaan Enums & Konstanta Bisnis\n\". This is Chapter 3.\n\nConcept Details (Note: Provided in Bahasa indonesia):\n- Name: Pusat Pemetaan Enums & Konstanta Bisnis\n\n- Description:\nSeperti kamus istilah, enums menstandarkan nilai bisnis: jenis layanan permohonan, kategori permohonan, kewarganegaraan, pemegang saham, sampai tipe file. Daripada string bebas, developer memakai konstanta agar validasi dan UI konsisten. Ini mengurangi typo dan memudahkan refactor.\n\n\nComplete Tutorial Structure (Note: Chapter names might be in Bahasa indonesia):\n1. [Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n](01_arsitektur_modul_sabh__sistem_administrasi_badan_hukum__.md)\n2. [Pola MVC Yii: Controller, Model, dan View\n](02_pola_mvc_yii__controller__model__dan_view_.md)\n3. [Pusat Pemetaan Enums & Konstanta Bisnis\n](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n4. [Standar Controller API (Tipis, Aman, Konsisten)\n](04_standar_controller_api__tipis__aman__konsisten__.md)\n5. [Standar Respons API & Penanganan Error\n](05_standar_respons_api___penanganan_error_.md)\n6. [Desain DTO (Data Transfer Object)\n](06_desain_dto__data_transfer_object__.md)\n7. [Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)\n](07_helper___utilitas_umum__requestcontext__arrayhelper__logger__.md)\n8. [Validasi & Filter Data (Validator Khusus)\n](08_validasi___filter_data__validator_khusus__.md)\n9. [Peta Status Permohonan (Konstanta Status)\n](09_peta_status_permohonan__konstanta_status__.md)\n10. [Standar Logging & Audit (History & LogSABH)\n](10_standar_logging___audit__history___logsabh__.md)\n11. [Standar Token Auth untuk Bridging User\n](11_standar_token_auth_untuk_bridging_user_.md)\n12. [Alur Pesan Nama (Name Reservation)\n](12_alur_pesan_nama__name_reservation__.md)\n13. [Pemetaan Tipe Transaksi & Jenis (MappingTipeTransaksi)\n](13_pemetaan_tipe_transaksi___jenis__mappingtipetransaksi__.md)\n14. [Sistem Voucher & Billing\n](14_sistem_voucher___billing_.md)\n15. [Public API Bakum (Akses Mitra)\n](15_public_api_bakum__akses_mitra__.md)\n16. [Layanan Perseroan Terbatas (PT)\n](16_layanan_perseroan_terbatas__pt__.md)\n17. [Integrasi DJP (NPWP, KSWP) \u2013 PajakAPI\n](17_integrasi_djp__npwp__kswp____pajakapi_.md)\n18. [Alur Upload Akta & Hubungan ke Transaksi\n](18_alur_upload_akta___hubungan_ke_transaksi_.md)\n19. [Verifikasi Perubahan Perseroan (Workflow dan Voting)\n](19_verifikasi_perubahan_perseroan__workflow_dan_voting__.md)\n20. [Voting Pemegang Saham (Link Token)\n](20_voting_pemegang_saham__link_token__.md)\n21. [Peta Status & Riwayat Verifikasi\n](21_peta_status___riwayat_verifikasi_.md)\n22. [Generator PDF via Gotenberg (HTML ke PDF)\n](22_generator_pdf_via_gotenberg__html_ke_pdf__.md)\n23. [Komunikasi Email & Template Surat\n](23_komunikasi_email___template_surat_.md)\n24. [Email Service & Antrian Pengiriman\n](24_email_service___antrian_pengiriman_.md)\n25. [Upload File Terstandar (PDF) untuk Layanan\n](25_upload_file_terstandar__pdf__untuk_layanan_.md)\n26. [Reupload & Monitoring Bukti Setor Modal Dasar\n](26_reupload___monitoring_bukti_setor_modal_dasar_.md)\n27. [Pencarian & Profil Perusahaan (Profil PT)\n](27_pencarian___profil_perusahaan__profil_pt__.md)\n28. [UI Komponen & Widget (Dcl*)\n](28_ui_komponen___widget__dcl___.md)\n29. [Layanan Yayasan\n](29_layanan_yayasan_.md)\n30. [Integrasi Frontend Modern (Alpine.js untuk Wizard)\n](30_integrasi_frontend_modern__alpine_js_untuk_wizard__.md)\n31. [Layanan Perkumpulan\n](31_layanan_perkumpulan_.md)\n32. [Penghapusan/Pembubaran Perkumpulan (Alur 2 Tahap)\n](32_penghapusan_pembubaran_perkumpulan__alur_2_tahap__.md)\n33. [Pemblokiran/Pembukaan Blokir Akses (PT, Yayasan, Perkumpulan)\n](33_pemblokiran_pembukaan_blokir_akses__pt__yayasan__perkumpulan__.md)\n34. [Proxy Backend Go & Token Kriptografi\n](34_proxy_backend_go___token_kriptografi_.md)\n35. [Permohonan Pemblokiran PT (Endpoint & DTO)\n](35_permohonan_pemblokiran_pt__endpoint___dto__.md)\n36. [Berakhirnya Status Badan Hukum (Permohonan & Layanan)\n](36_berakhirnya_status_badan_hukum__permohonan___layanan__.md)\n37. [Beneficial Ownership (BO) \u2013 Pemilik Manfaat\n](37_beneficial_ownership__bo____pemilik_manfaat_.md)\n38. [Monitoring Notaris & BO (Laporan dan Grafik)\n](38_monitoring_notaris___bo__laporan_dan_grafik__.md)\n39. [Pemetaan Data & Agregasi (Mapper Berbasis SQL)\n](39_pemetaan_data___agregasi__mapper_berbasis_sql__.md)\n40. [Komponen Helper Khusus Domain (No Transaksi/SK, Dashboard Helper)\n](40_komponen_helper_khusus_domain__no_transaksi_sk__dashboard_helper__.md)\n41. [Dashboard & Mapper Data (Ringkasan Nasional\u2013Daerah)\n](41_dashboard___mapper_data__ringkasan_nasional_daerah__.md)\n42. [Monitoring & Laporan Transaksi Perseroan\n](42_monitoring___laporan_transaksi_perseroan_.md)\n43. [Peta Badan Hukum (Google Maps)\n](43_peta_badan_hukum__google_maps__.md)\n44. [Cleansing Data (Skema, Organ, Modal)\n](44_cleansing_data__skema__organ__modal__.md)\n\nContext from previous chapters (Note: This summary might be in Bahasa indonesia):\n# Chapter 1: Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)\n\nBayangkan SABH seperti sebuah mal besar. Di dalamnya ada banyak \u201ctoko layanan\u201d: pesan nama, verifikasi, pemblokiran, sampai laporan. Modul SABH adalah \u201cpeta mal\u201d yang menata:\n- lorong (controller),\n- gudang (model),\n- etalase (view),\n- juga petugas pusat (service, mapper, helper).\n\nDengan peta ini, pendatang baru tahu pintu masuknya, ke mana bertanya, dan di rak mana suatu layanan tersedia. Tujuan bab ini: kamu paham arsitektur modul SABH, alur request\u2192respon, dan bisa membuat endpoint kecil yang rapi dan konsisten.\n\nUse case sederhana untuk memulai:\n- \u201cCek ketersediaan nama PT\u201d via endpoint API yang mengembalikan JSON.\n\nKita akan lihat bagaimana modul mengatur ini agar setiap layanan berperilaku sama, mudah dirawat, dan aman.\n\n---\n\n## Gambaran Besar: Peta Modul\n\nStruktur minimal yang akan sering kamu lihat:\n\n```\nsabh/\n  controllers/\n  models/\n  components/\n  services/\n  response/\n  exception/\n  mappers/\n```\n\n- controllers: pintu interaksi HTTP (lorong).\n- models: data/ORM (gudang).\n- views: tampilan HTML (etalase, jarang untuk API).\n- services: logika bisnis terpusat (petugas pusat).\n- mappers: agregasi/pemetaan data (bias SQL).\n- response/exception: standar respons & error JSON (kasir).\n- components, validators, widgets: alat bantu (alat & signage).\n\nSemua bagian ini disatukan oleh satu modul: SabhModule.\n\n---\n\n## Bagaimana Request Mengalir\n\nSaat pengguna memanggil endpoint, alurnya seperti ini:\n\n```mermaid\nsequenceDiagram\n  participant U as Pengguna\n  participant C as Controller (SABH)\n  participant S as Service\n  participant M as Mapper\n  participant R as Respons JSON\n\n  U->>C: HTTP request (cek nama)\n  C->>S: Panggil logika bisnis\n  S->>M: Ambil/olah data (SQL/DB)\n  M-->>S: Kembalikan hasil\n  S-->>C: Hasil final (DTO/array)\n  C-->>R: APIResponse::ok(...) JSON\n```\n\nIntinya: Controller tipis, Service yang kerja berat, Mapper mengolah data, Response konsisten.\n\n---\n\n## Modul SABH: Titik Sentral\n\nModul mendaftarkan apa saja yang bisa dipakai di dalamnya. Potongan inti dari SabhModule:\n\n```php\n// SabhModule::init (disederhanakan)\n$this->setImport(array(\n  'sabh.models.*',\n  'sabh.components.*',\n  'sabh.controllers.*',\n));\n```\n\nPenjelasan:\n- setImport membuat semua kelas di folder tersebut otomatis bisa dipakai (autoload).\n- Di proyek asli, daftar import lebih lengkap (services, mappers, validators, billing, dll).\n\nHook siklus modul:\n\n```php\n// SabhModule::beforeControllerAction\nif (parent::beforeControllerAction($controller, $action)) {\n  return true; // lanjut eksekusi action\n}\nreturn false;\n```\n\nPenjelasan:\n- Dipanggil sebelum action berjalan.\n- Tempat aman untuk cek global (mis. maintenance, auth dasar).\n\n---\n\n## Basis Controller: MyController\n\nSemua controller SABH biasakan mewarisi MyController (membawa pengaturan dasar).\n\n```php\nclass MyController extends CController {\n  public $layout = 'null';      // API: tidak pakai layout HTML\n  public $menu = array();       // placeholder\n  public $breadcrumbs = array();// placeholder\n}\n```\n\nPenjelasan:\n- layout null agar respons API tidak \u201cterbungkus\u201d HTML.\n- Sederhana dan konsisten di semua controller.\n\nPelajari pola layer MVC lebih dalam di: [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md)\n\n---\n\n## Standar Respons JSON: APIResponse\n\nUntuk menjaga konsistensi, SABH menyediakan APIResponse. Kamu cukup panggil ok(...) atau error(...).\n\n```php\n// Respons sukses\nAPIResponse::ok(['tersedia' => true], 'Nama tersedia');\n```\n\n```php\n// Respons error\nAPIResponse::error('Nama tidak valid', 400);\n```\n\nPenjelasan:\n- ok(...) mengirim JSON dengan status 200.\n- error(...) mengirim JSON error dengan status yang kamu berikan.\n- Header CORS dan Content-Type diatur otomatis.\n\nDetail format respons akan dibahas di: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md)\n\n---\n\n## Standar Exception JSON: APIExceptionThrower\n\nJika terjadi kesalahan, lempar error terstandar agar klien selalu menerima format yang sama.\n\n```php\n$thrower = new APIExceptionThrower();\n$thrower->throwBadRequest('Format data salah');\n```\n\n```php\n// Contoh lain\n$thrower->throwUnauthorized('Token tidak valid');\n```\n\nPenjelasan:\n- throwBadRequest \u2192 400, throwUnauthorized \u2192 401, dst.\n- Mengirim JSON dengan status HTTP sesuai.\n\n---\n\n## Membangun Endpoint Pertama: Cek Nama PT\n\nTujuan: Endpoint GET/POST sederhana yang jawab \u201ctersedia atau tidak\u201d.\n\nLangkah 1 \u2014 Buat controller:\n\n```php\nclass NamaController extends MyController {\n  public function actionCek() {\n    APIResponse::ok(['tersedia' => true], 'Nama tersedia');\n  }\n}\n```\n\nPenjelasan:\n- Controller tipis: hanya validasi ringan + panggil service + kirim respons.\n- Di tahap awal, kita mock hasilnya true.\n\nLangkah 2 \u2014 Tambah validasi singkat (opsional):\n\n```php\nclass NamaController extends MyController {\n  public function actionCek() {\n    $nama = Yii::app()->request->getParam('nama','');\n    if (trim($nama) === '') APIResponse::error('Nama kosong', 400);\n    APIResponse::ok(['tersedia' => true], 'OK');\n  }\n}\n```\n\nPenjelasan:\n- Ambil param nama dari query/body.\n- Jika kosong, kirim 400.\n- Jika ada, kembalikan hasil mock \u201ctersedia\u201d.\n\nNantinya, validasi yang lebih kaya akan dibahas di:\n- [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md)\n- [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n\n---\n\n## Contoh Input & Output\n\nPanggil:\n- GET /sabh/nama/cek?nama=PT%20MAJU\n\nOutput sukses:\n\n```json\n{\n  \"success\": true,\n  \"message\": \"OK\",\n  \"data\": { \"tersedia\": true },\n  \"status\": 200\n}\n```\n\nOutput error (nama kosong):\n\n```json\n{\n  \"success\": false,\n  \"message\": \"Nama kosong\",\n  \"data\": null,\n  \"status\": 400\n}\n```\n\nPenjelasan:\n- Struktur selalu sama, memudahkan frontend/mitra membaca.\n\n---\n\n## Di Balik Layar: Apa yang Terjadi?\n\nUrutannya saat kamu memanggil /sabh/nama/cek:\n\n1) Router Yii menemukan modul sabh \u2192 controller NamaController \u2192 actionCek.\n2) SabhModule::beforeControllerAction dipanggil. Jika oke, lanjut.\n3) actionCek dijalankan. Ambil param, validasi singkat.\n4) Panggil layanan (nanti di fase advanced), misalnya NamaService::cek().\n5) APIResponse mengirim JSON + header HTTP. Eksekusi berhenti aman.\n\nRekap singkat dengan diagram alur:\n\n```mermaid\nflowchart TD\n  A[HTTP Request /sabh/nama/cek] --> B[Router Yii]\n  B --> C[SabhModule.beforeControllerAction]\n  C --> D[NamaController.actionCek]\n  D --> E[Service/Mapper (opsional)]\n  E --> F[APIResponse::ok/error]\n  F --> G[JSON ke klien]\n```\n\n---\n\n## Mengapa Controller Harus \u201cTipis\u201d?\n\n- Mudah dites: logika bisnis dipindah ke Service.\n- Aman: satu pintu standar untuk validasi, auth, dan error.\n- Konsisten: semua endpoint punya bentuk respons yang sama.\n\nBaca panduan lengkapnya: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)\n\n---\n\n## Kapan Memakai Service dan Mapper?\n\n- Service: mengatur alur bisnis (cek nama, booking, bayar, dsb).\n- Mapper: query/aggregasi data (SQL kompleks, ringkasan laporan).\n\nContoh panggilan di controller (konsep):\n\n```php\n$hasil = NamaService::cekKetersediaan($nama); // logika bisnis\nAPIResponse::ok($hasil, 'OK');\n```\n\nDetail pemetaan data akan kamu temukan di: [Pemetaan Data & Agregasi (Mapper Berbasis SQL)](39_pemetaan_data___agregasi__mapper_berbasis_sql__.md)\n\n---\n\n## Komponen Lain yang Terhubung\n\n- Enums & konstanta bisnis: satu tempat untuk nilai-nilai status/tipe \u2192 [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n- DTO: format data masuk/keluar agar bersih \u2192 [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n- Helper umum (request context, array, logging) \u2192 [Helper & Utilitas Umum (RequestContext, ArrayHelper, Logger)](07_helper___utilitas_umum__requestcontext__arrayhelper__logger__.md)\n- Status permohonan (workflow) \u2192 [Peta Status Permohonan (Konstanta Status)](09_peta_status_permohonan__konstanta_status__.md)\n- Logging & audit \u2192 [Standar Logging & Audit (History & LogSABH)](10_standar_logging___audit__history___logsabh__.md)\n- Token auth bridging user \u2192 [Standar Token Auth untuk Bridging User](11_standar_token_auth_untuk_bridging_user_.md)\n\nSemua itu adalah \u201caturan main\u201d yang membuat setiap \u201ctoko layanan\u201d di mal SABH terasa seragam dan mudah dirawat.\n\n---\n\n## Rangkuman\n\nYang kamu pelajari:\n- Gambaran arsitektur Modul SABH seperti \u201cmal layanan\u201d.\n- Alur request\u2192controller\u2192service\u2192mapper\u2192response JSON.\n- Peran SabhModule, MyController, APIResponse, dan APIExceptionThrower.\n- Cara membuat endpoint API sederhana yang konsisten.\n\nSelanjutnya, kita akan membedah lapisan MVC agar kamu semakin mantap menaruh berkas dan logika pada tempatnya: [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md)\n---\n# Chapter 2: Pola MVC Yii: Controller, Model, dan View\n\nDi bab sebelumnya, kamu sudah melihat peta besar modul di SABH dan membuat endpoint kecil. Jika kamu melewatkannya, baca dulu: [Arsitektur Modul SABH (Sistem Administrasi Badan Hukum)](01_arsitektur_modul_sabh__sistem_administrasi_badan_hukum__.md).\n\nBab ini akan memantapkan dasar paling penting ketika bekerja di SABH: memahami pola MVC di Yii (Controller\u2013Model\u2013View). Anggap ini sebagai \u201ckunci arah\u201d supaya kamu cepat menemukan file yang tepat, mengubah perilaku dengan aman, dan tidak tersesat.\n\n---\n\n## Mengapa MVC? Masalah Apa yang Diselesaikan?\n\nUse case sederhana: \u201cCek ketersediaan nama PT\u201d. Tanpa pola yang jelas, kode mudah berantakan:\n- validasi bercampur dengan query DB dan HTML,\n- susah dites,\n- sulit dicari \u201cyang mana harus diubah\u201d.\n\nDengan MVC:\n- Controller jadi \u201cpintu masuk\u201d yang rapi,\n- Model jadi \u201csumber data\u201d yang jelas,\n- View jadi \u201ctampilan\u201d yang terpisah.\n\nHasilnya: mudah dibaca, mudah diuji, mudah dirawat.\n\n---\n\n## Analogi Teater\n\n- Controller = Sutradara. Mengatur adegan: \u201cambil data ini, tampilkan itu\u201d.\n- Model = Naskah dan data pemain. Menyimpan cerita: tabel, validasi, query.\n- View = Panggung. Menampilkan apa yang penonton lihat: HTML atau JSON.\n\nDi SABH, sering ada \u201ckru produksi\u201d tambahan bernama Service/Mapper (logika bisnis dan agregasi SQL). Ini akan sering disebut, meski bukan bagian formal MVC, karena sangat membantu membuat Controller tetap tipis.\n\n---\n\n## Cara Yii Mengatur MVC di SABH\n\nStruktur direktori yang perlu kamu kenal:\n- controllers/ \u2192 aksi HTTP (API/halaman).\n- models/ \u2192 ActiveRecord, form model, query.\n- views/ \u2192 berkas tampilan HTML (jarang dipakai untuk API JSON).\n\nKamu juga akan sering melihat:\n- services/ \u2192 logika bisnis.\n- mappers/ \u2192 agregasi/pemetaan data.\n\nTip pemula:\n- Cari Controller untuk menemukan \u201cpintu masuk\u201d fitur.\n- Buka Model jika ingin tahu datanya dari mana.\n- Buka View jika ingin mengubah tampilan halaman.\n\n---\n\n## Alur Singkat di Kepala\n\nKetika endpoint dipanggil, kira-kira begini:\n\n```mermaid\nsequenceDiagram\n  participant U as Pengguna\n  participant R as Router Yii\n  participant C as Controller\n  participant M as Model/Service\n  participant V as View/JSON\n  U->>R: HTTP request\n  R->>C: Temukan controller/action\n  C->>M: Ambil/olah data\n  M-->>C: Kembalikan hasil\n  C-->>V: Render View / kirim JSON\n```\n\nKamu akan sering melihat Controller \u201ctipis\u201d, dan Service/Model yang \u201cbekerja keras\u201d.\n\n---\n\n## Controller: Pintu Masuk yang Tipis\n\nTugas Controller:\n- Menerima request, cek metode (GET/POST/\u2026).\n- Ambil parameter (query/body).\n- Validasi ringan.\n- Panggil Service/Model.\n- Pilih cara keluaran (JSON/HTML).\n\nContoh nyata (dipendekkan) dari API di SABH:\n\n```php\n// controllers/api/FileController.php (dipotong)\nclass FileController extends Controller {\n  public function actionIndex() {\n    if (!RequestContext::isMethod('POST')) (new APIExceptionThrower())->throwMethodNotAllowed();\n    if (!isset($_FILES['file'])) (new APIExceptionThrower())->throwBadRequest('Tidak ada file');\n    $info = (new FileService())->createFile(Yii::app()->request->getQuery('file_type'), $_FILES['file']);\n    APIResponse::ok($info, 'File berhasil diupload');\n  }\n}\n```\n\nPenjelasan singkat:\n- Cek HTTP method (harus POST).\n- Validasi input minimal (ada file?).\n- Delegasikan ke Service.\n- Balas JSON terstandar menggunakan APIResponse.\n- Standar format JSON dan error dibahas di: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n\nContoh Controller untuk halaman HTML (render View):\n\n```php\n// controllers/DashboardController.php (dipotong)\nclass DashboardController extends Controller {\n  public function actionBakum() {\n    $model = new DashboardFilterForm(DashboardHelper::TYPE_BAKUM);\n    $this->render('index', ['model' => $model, 'tipe' => DashboardHelper::TYPE_BAKUM]);\n  }\n}\n```\n\nPenjelasan:\n- Siapkan data (model filter, konstanta tipe).\n- Tampilkan View \u2018index\u2019 dengan data yang dibutuhkan.\n\nMembatasi akses hanya Ajax (contoh pola beforeAction):\n\n```php\n// controllers/BoController.php (dipotong)\nclass BoController extends Controller {\n  public function beforeAction($action) {\n    if (!Yii::app()->request->isAjaxRequest) return false;\n    return parent::beforeAction($action);\n  }\n}\n```\n\nPenjelasan:\n- Semua aksi di BoController wajib via Ajax.\n- Pola seperti ini menjaga konsistensi dan keamanan UI.\n\n---\n\n## Model: Sumber Data dan Aturan\n\nModel di Yii biasanya ActiveRecord (koneksi DB) atau Form Model (validasi input). Model berisi:\n- Aturan validasi,\n- Relasi,\n- Query, helper untuk pengambilan data,\n- Terkadang logika kecil terkait data.\n\nContoh singkat mengambil data wilayah:\n\n```php\n// contoh penggunaan model\n$provinsi = Wilayah::model()->getAll();\n$kab = Wilayah::model()->getKabupaten($provinsiId);\n```\n\nPenjelasan:\n- Model \u201cWilayah\u201d menyembunyikan detail SQL. Controller cukup memanggil metode yang mudah dimengerti.\n\nContoh count data dengan kriteria:\n\n```php\n// contoh menghitung jumlah order name\n$criteria = OrderName::model()->dbCriteria;\n$criteria->condition = 'base=\"yayasan\"';\n$jumlah = OrderName::model()->count($criteria);\n```\n\nPenjelasan:\n- ActiveRecord Yii memudahkan membuat kriteria dinamis tanpa menulis SQL panjang.\n\n---\n\n## View: Panggung Tampilan (HTML) dan Alternatif JSON\n\n- Untuk halaman web, Controller memanggil $this->render('namaView', $data).\n- Untuk potongan UI (modal/tabel Ajax), gunakan renderPartial.\n\nContoh render potongan tampilan:\n\n```php\n// controllers/BoController.php (dipotong)\n$content = $this->renderPartial('_details', ['model' => $model], true, true);\n```\n\nPenjelasan:\n- _details.php adalah berkas View kecil (partial) yang dikirim kembali untuk diisi ke halaman via Ajax.\n\nUntuk API, SABH jarang menggunakan View HTML. Kita menggunakan \u201cView\u201d dalam arti keluaran: JSON. Standarnya melalui APIResponse:\n\n```php\n// response\nAPIResponse::ok(['tersedia' => true], 'OK');\n// atau error\nAPIResponse::error('Nama kosong', 400);\n```\n\nPenjelasan:\n- Mudah, konsisten, otomatis set header. Detail format JSON: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n\n---\n\n## Contoh Lengkap Mini: \u201cCek Ketersediaan Nama PT\u201d (Versi API JSON)\n\nTujuan: GET /sabh/nama/cek?nama=PT%20MAJU \u2192 jawab tersedia atau tidak.\n\n1) Controller tipis:\n\n```php\nclass NamaController extends Controller {\n  public function actionCek() {\n    $nama = Yii::app()->request->getParam('nama','');\n    if (trim($nama)==='') return APIResponse::error('Nama kosong',400);\n    $hasil = NamaService::cekKetersediaan($nama); // delegasi\n    APIResponse::ok($hasil,'OK');\n  }\n}\n```\n\nPenjelasan:\n- Ambil parameter, validasi singkat, lempar ke Service, balas JSON.\n\n2) Contoh Service sederhana (logika bisnis):\n\n```php\nclass NamaService {\n  public static function cekKetersediaan($nama) {\n    $ada = OrderNamePerseroan::model()->findByAttributes(['nama'=>strtoupper($nama)]);\n    return ['tersedia'=> $ada ? false : true];\n  }\n}\n```\n\nPenjelasan:\n- Cek ke data pesan nama PT. Jika sudah ada, berarti tidak tersedia.\n\n3) Contoh input/output\n\n- Panggil: GET /sabh/nama/cek?nama=PT%20MAJU\n- Hasil sukses:\n\n```json\n{\n  \"success\": true,\n  \"message\": \"OK\",\n  \"data\": { \"tersedia\": true },\n  \"status\": 200\n}\n```\n\n- Hasil error (nama kosong):\n\n```json\n{\n  \"success\": false,\n  \"message\": \"Nama kosong\",\n  \"data\": null,\n  \"status\": 400\n}\n```\n\nPenjelasan:\n- Struktur konsisten, mudah diolah di frontend.\n\nCatatan:\n- Ketika butuh validasi yang lebih kaya, gunakan DTO/Validator: lihat [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md) dan [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md).\n\n---\n\n## Di Balik Layar: Apa yang Terjadi di Yii?\n\nLangkah sederhana saat endpoint dipanggil:\n1) Router Yii menemukan modul sabh \u2192 controller \u2192 action.\n2) SabhModule memanggil beforeControllerAction (cek global).\n3) Controller membaca parameter, validasi ringan.\n4) Controller memanggil Service/Model untuk data.\n5) Controller merender View (HTML) atau kirim JSON via APIResponse.\n\nContoh minimal hook modul (gambaran):\n\n```php\n// SabhModule::beforeControllerAction (gambaran)\nif (parent::beforeControllerAction($c,$a)) return true;\nreturn false;\n```\n\nPenjelasan:\n- Titik sentral untuk pengecekan global (maintenance, auth dasar, dll).\n\n---\n\n## Melihat Pola MVC di Kode Nyata SABH\n\n- Controller memanggil Service dan balas JSON:\n\n```php\n// controllers/api/PermohonanPemblokiranPTController.php (dipotong)\nclass PermohonanPemblokiranPTController extends Controller {\n  public function actionCreate() {\n    if (!RequestContext::isMethod('POST')) (new APIExceptionThrower())->throwMethodNotAllowed();\n    $body = RequestContext::getJsonBody();\n    $dto = CreatePermohonanPemblokiranPTDto::fromArray($body);\n    $dto->isValid(); // validasi DTO\n    (new PermohonanPemblokiranPTService())->createPermohonanPemblokiranPT($dto);\n    APIResponse::ok();\n  }\n}\n```\n\nApa yang bisa kamu pelajari:\n- Controller tipis, cek method, parsing JSON, validasi, delegasi ke Service, hasil konsisten via APIResponse.\n- DTO menjaga bentuk data masuk: lihat [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md).\n\n- Controller yang merender View (HTML dashboard):\n\n```php\n// controllers/DashboardController.php (dipotong)\nclass DashboardController extends Controller {\n  public function actionJenisPerseroan(){\n    $model = new DashboardFilterForm(DashboardHelper::TYPE_PERSEROAN);\n    $this->render('index', ['model'=>$model,'tipe'=>DashboardHelper::TYPE_PERSEROAN]);\n  }\n}\n```\n\nIntinya:\n- Controller menyiapkan data untuk panggung View. View-lah yang membentuk HTML-nya.\n\n- Controller yang membatasi akses Ajax dan mengirim potongan View:\n\n```php\n// controllers/BoController.php (dipotong)\nclass BoController extends Controller {\n  protected function sendResponse($r){ echo CJSON::encode($r); Yii::app()->end(); }\n  public function actionPilihJenis(){\n    $m = new BoDetailForm(); $m->attributes = Yii::app()->request->getPost('BoDetailForm');\n    if (in_array($m->jenis, $m->listJenis())) {\n      $html = $this->renderPartial('_create', ['detail'=>$m], true, true);\n      $this->sendResponse(['success'=>true,'content'=>$html]);\n    }\n  }\n}\n```\n\nPelajaran:\n- View partial (mis. _create.php) dipakai untuk update UI via Ajax, tanpa reload halaman.\n\n---\n\n## Pola Emas: \u201cController Tipis\u201d\n\nKenapa harus tipis?\n- Mudah dites: logika bisnis bisa diuji terpisah.\n- Aman: satu pintu standar untuk validasi dasar dan error.\n- Konsisten: semua endpoint terasa sama.\n\nPanduan detail ada di: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)\n\n---\n\n## Checklist Praktis Saat Mengerjakan Fitur\n\n- Cari Controller-nya:\n  - Pastikan method HTTP benar (GET/POST/\u2026).\n  - Ambil parameter via RequestContext/Yii::app()->request.\n  - Validasi ringan (kosong/tidak, format sederhana).\n\n- Pindahkan logika ke Service/Model:\n  - Query DB, cek bisnis, transformasi data.\n\n- Pilih keluaran:\n  - API \u2192 APIResponse::ok/error (JSON).\n  - Halaman \u2192 render()/renderPartial().\n\n- Gunakan standar:\n  - Respons dan error: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n  - DTO dan validator: [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md), [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md).\n  - Enum/konstanta: [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md).\n\n---\n\n## Ringkasan\n\nDi bab ini kamu telah mempelajari:\n- Inti pola MVC di Yii melalui analogi teater.\n- Peran Controller (sutradara), Model (naskah/data), View (panggung).\n- Pola \u201cController tipis\u201d dan delegasi ke Service/Model.\n- Contoh nyata di SABH: API JSON dan halaman HTML.\n- Alur di balik layar mulai dari Router hingga View/JSON.\n\nSelanjutnya, kita akan menata \u201ckamus nilai\u201d agar kode bisnis tidak bertebaran angka/teks ajaib. Lanjut ke: [Pusat Pemetaan Enums & Konstanta Bisnis](03_pusat_pemetaan_enums___konstanta_bisnis_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 1149 # enums/FileType.php ---\n<?php\n\nclass FileType\n{\n    const PEMBLOKIRAN = 'PEMBLOKIRAN';\n    const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n\n\n    public static function getAllTypes()\n    {\n        return [\n            self::PEMBLOKIRAN,\n            self::PEMBUKAAN_BLOKIR\n        ];\n    }\n\n    public static function isValid($fileType)\n    {\n        return in_array($fileType, self::getAllTypes());\n    }\n} \n\n--- File: 1150 # enums/JenisKewarganegaraan.php ---\n<?php\n\nclass JenisKewarganegaraan {\n    const WNI = 'WNI';\n    const WNA = 'WNA';\n    \n    public static function values() {\n        return array(\n            self::WNI,\n            self::WNA\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'WNI' => self::WNI,\n            'WNA' => self::WNA\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 1153 # enums/KategoriPermohonan.php ---\n<?php\n\nclass KategoriPermohonan {\n    const SELURUHNYA = 'SELURUHNYA';\n    const SEBAGIAN = 'SEBAGIAN';\n    \n    public static function values() {\n        return array(\n            self::SELURUHNYA,\n            self::SEBAGIAN\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'SELURUHNYA' => self::SELURUHNYA,\n            'SEBAGIAN' => self::SEBAGIAN\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 1152 # enums/JenisPemegangSaham.php ---\n<?php\n\nclass JenisPemegangSaham {\n    const PERORANGAN = 'PERORANGAN';\n    const BADAN_HUKUM = 'BADAN_HUKUM';\n    \n    public static function values() {\n        return array(\n            self::PERORANGAN,\n            self::BADAN_HUKUM\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'PERORANGAN' => self::PERORANGAN,\n            'BADAN_HUKUM' => self::BADAN_HUKUM\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n} \n\n--- File: 1151 # enums/JenisLayananPermohonan.php ---\n<?php\n\nclass JenisLayananPermohonan {\n    const PEMBLOKIRAN = 'PEMBLOKIRAN';\n    const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n    \n    public static function values() {\n        return array(\n            self::PEMBLOKIRAN,\n            self::PEMBUKAAN_BLOKIR\n        );\n    }\n\n    public static function labels() {\n        return array(\n            'PEMBLOKIRAN' => self::PEMBLOKIRAN,\n            'PEMBUKAAN_BLOKIR' => self::PEMBUKAAN_BLOKIR\n        );\n    }\n\n    public static function isValid($value) {\n        return in_array($value, self::values(), true);\n    }\n\n    public static function getValue($label) {\n        $map = self::labels();\n        return isset($map[$label]) ? $map[$label] : null;\n    }\n}\n\n\n--- File: 385 # components/enum/BaseEnum.php ---\n<?php\n\nclass BaseEnum\n{\n    const PERSEROAN = 'perseroan';\n    const YAYASAN = 'yayasan';\n    const PERKUMPULAN = 'perkumpulan';\n\n    const PERSEROAN_SWASTA_NASIONAL = 'swasta_nasional';\n    const PERSEROAN_PMDN_FASILITAS = 'pmdn_fasilitas';\n    const PERSEROAN_PMDN_NON_FASILITAS = 'pmdn_non_fasilitas';\n    const PERSEROAN_BUMN = 'bumn';\n    const PERSEROAN_BUMD = 'bumd';\n    const PERSEROAN_PMA = 'pma';\n\n    const YAYASAN_PERORANGAN = 'perorangan';\n    const YAYASAN_BADAN_HUKUM = 'badan_hukum';\n\n    const YAYASAN_NASIONAL = 'nasional';\n    const YAYASAN_ASING = 'asing';\n\n    const VIEW_GRID_PERSEROAN = '_viewGridPerseroan';\n    const VIEW_GRID_YAYASAN = '_viewGridYayasan';\n    const VIEW_GRID_PERKUMPULAN = '_viewGridPerkumpulan';\n    const VIEW_GRID_RANGE_DATE_PERSEROAN = '_viewGridRangeDatePerseroan';\n    const VIEW_GRID_RANGE_DATE_YAYASAN = '_viewGridRangeDateYayasan';\n    const VIEW_GRID_RANGE_DATE_PERKUMPULAN = '_viewGridRangeDatePerkumpulan';\n\n    // MULAI JENIS TRANSAKSI\n    const JENIS_PENDIRIAN    = 'pendirian';\n    const JENIS_PEMBUBARAN   = 'pembubaran';\n    const JENIS_PENYESUAIAN  = 'penyesuaian';\n    const JENIS_PERUBAHAN    = 'perubahan';\n    const JENIS_PENGGABUNGAN = 'penggabungan';\n    // SELESAI JENIS TRANSAKSI\n    \n\n    public static function getListBase($method = 'ucfirst')\n    {\n        return array(\n            self::PERSEROAN=>$method(self::PERSEROAN),\n            self::YAYASAN=>$method(self::YAYASAN),\n            self::PERKUMPULAN=>$method(self::PERKUMPULAN)\n        );\n    }\n\n    public static function getListMaksudTujuan($method = 'ucfirst')\n    {\n        return array(\n            self::PERSEROAN => $method(self::PERSEROAN),\n            self::YAYASAN_PERORANGAN => $method(self::YAYASAN_PERORANGAN),\n        );\n    }\n\n    public static function getListJenisPerseroan($method = 'strtoupper')\n    {\n        return array(\n            self::PERSEROAN_SWASTA_NASIONAL => $method(str_replace('_', ' ', self::PERSEROAN_SWASTA_NASIONAL)),\n            self::PERSEROAN_PMDN_FASILITAS =>$method(str_replace('_', ' ', self::PERSEROAN_PMDN_FASILITAS)),\n            self::PERSEROAN_PMDN_NON_FASILITAS => $method(str_replace('_', ' ', self::PERSEROAN_PMDN_NON_FASILITAS)),\n            self::PERSEROAN_BUMN => $method(str_replace('_', ' ', self::PERSEROAN_BUMN)),\n            self::PERSEROAN_BUMD => $method(str_replace('_', ' ', self::PERSEROAN_BUMD)),\n            self::PERSEROAN_PMA => $method(str_replace('_', ' ', self::PERSEROAN_PMA)),\n        );\n    }\n\n    public static function getListJenisYayasan($method = 'ucwords')\n    {\n        return array(\n            self::YAYASAN_PERORANGAN => $method(self::YAYASAN_PERORANGAN),\n            self::YAYASAN_BADAN_HUKUM => $method(str_replace('_', ' ', self::YAYASAN_BADAN_HUKUM))\n        );\n    }\n\n    public static function getListJenisTransaksiYayasan($method = 'ucwords')\n    {\n        return array(\n            self::YAYASAN_NASIONAL => $method(self::YAYASAN_NASIONAL),\n            self::YAYASAN_ASING => $method(self::YAYASAN_ASING)\n        );\n    }\n\n    public static function changeFormatJenisYayasan(&$jenis)\n    {\n        $arrInDb = array(\n            self::YAYASAN_PERORANGAN => self::YAYASAN_PERORANGAN,\n            self::YAYASAN_BADAN_HUKUM => ucwords(str_replace('_', ' ', self::YAYASAN_BADAN_HUKUM)),\n        );\n        $jenis = $arrInDb[$jenis];\n    }\n\n    public static function getListJenis($tipe = 'perseroan')\n    {\n        $perseroan = array(\n            TransaksiPerseroan::$id_aksi_transaksi_pendirian => 'Pendirian',\n            TransaksiPerseroan::$id_aksi_transaksi_perubahan => 'Perubahan',\n            TransaksiPerseroan::$id_aksi_transaksi_pembubaran => 'Pembubaran',\n            TransaksiPerseroan::$id_aksi_transaksi_marger => 'Penggabungan',\n            TransaksiPerseroan::$penyesuaian => 'Penyesuaian',\n        );\n\n        $yayasan = array(\n            2 => 'Pendirian',\n            3 => 'Perubahan',\n            28 => 'Pembubaran',\n            29 => 'Penggabungan',\n        );\n\n        $perkumpulan = array(\n            TransaksiPerkumpulan::model()->id_aksi_transaksi_pendirian => ucwords(self::JENIS_PENDIRIAN),\n            TransaksiPerkumpulan::model()->id_aksi_transaksi_perubahan => ucwords(self::JENIS_PERUBAHAN),\n        );\n\n        return isset($$tipe) ? $$tipe : array();\n    }\n}\n\n\nInstructions for the chapter (Generate content in Bahasa indonesia unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 3: Pusat Pemetaan Enums & Konstanta Bisnis\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter (in Bahasa indonesia), referencing it with a proper Markdown link using its name (Use the Bahasa indonesia chapter title from the structure above).\n\n- Begin with a high-level motivation explaining what problem this abstraction solves (in Bahasa indonesia). Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way (in Bahasa indonesia).\n\n- Explain how to use this abstraction to solve the use case (in Bahasa indonesia). Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen (in Bahasa indonesia)).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments (Translate to Bahasa indonesia if possible, otherwise keep minimal English for clarity) to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it (in Bahasa indonesia).\n\n- Describe the internal implementation to help understand what's under the hood (in Bahasa indonesia). First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called (in Bahasa indonesia). It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`.  (Use Bahasa indonesia for labels/text if appropriate).\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain (in Bahasa indonesia).\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title (Use the Bahasa indonesia chapter title from the structure above). Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format).  (Use Bahasa indonesia for labels/text if appropriate).\n\n- Heavily use analogies and examples throughout (in Bahasa indonesia) to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned (in Bahasa indonesia) and provides a transition to the next chapter (in Bahasa indonesia). If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename) (Use the Bahasa indonesia chapter title from the structure above).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand (appropriate for Bahasa indonesia readers).\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 3: Pusat Pemetaan Enums & Konstanta Bisnis\n\nTransisi cepat dari bab sebelumnya: di [Pola MVC Yii: Controller, Model, dan View](02_pola_mvc_yii__controller__model__dan_view_.md) kamu sudah melihat \u201calur sutradara\u2013naskah\u2013panggung\u201d. Sekarang, kita rapikan \u201ckamus istilah\u201d supaya semua pemain memakai bahasa yang sama: Enums & Konstanta Bisnis.\n\nBayangkan kamu membuat endpoint upload berkas. Klien mengirim file_type=PEMBLOKIRAN. Tanpa standar, ada yang kirim \"pemb\", \"block\", atau \"pemblokiran\". Hasilnya? Validasi sulit, UI tidak konsisten, typo tak terdeteksi. Dengan Enums, kita punya satu kamus resmi yang dipakai semua bagian sistem.\n\n---\n\n## Mengapa Perlu \u201cPusat Pemetaan\u201d Enums?\n\n- Satu sumber kebenaran untuk nilai bisnis (jenis layanan, kategori permohonan, kewarganegaraan, tipe file).\n- Mencegah typo string bebas.\n- Memudahkan refactor: ganti di satu tempat, aman di seluruh sistem.\n- UI konsisten: label dropdown selalu sama.\n\nUse case utama bab ini:\n- Menerima parameter file_type saat upload, validasi dengan Enum FileType, dan menampilkan dropdown yang konsisten.\n\n---\n\n## Konsep Inti (sangat singkat)\n\n- Konstanta: nilai tetap yang mewakili kode bisnis (contoh: 'WNI', 'PEMBLOKIRAN').\n- Enum (gaya PHP di Yii 1): kelas sederhana berisi konstanta + helper:\n  - values(): daftar seluruh nilai yang valid.\n  - labels(): peta kode\u2192label untuk UI.\n  - isValid($v): cek valid/tidak.\n  - getValue($label): ambil kode dari label (opsional).\n\nStruktur praktis di SABH:\n- Folder enum: sabh/enums/*\n- Kelas umum domain: sabh/components/enum/BaseEnum.php\n\n---\n\n## Lihat Contoh Nyata di Proyek\n\n1) Tipe berkas (FileType):\n\n```php\nclass FileType {\n  const PEMBLOKIRAN = 'PEMBLOKIRAN';\n  const PEMBUKAAN_BLOKIR = 'PEMBUKAAN_BLOKIR';\n  public static function isValid($t){ return in_array($t, self::getAllTypes()); }\n  public static function getAllTypes(){ return [self::PEMBLOKIRAN, self::PEMBUKAAN_BLOKIR]; }\n}\n```\n\nPenjelasan:\n- Dua nilai sah saja: PEMBLOKIRAN, PEMBUKAAN_BLOKIR.\n- isValid membuat validasi mudah dan konsisten.\n\n2) Kewarganegaraan:\n\n```php\nclass JenisKewarganegaraan {\n  const WNI = 'WNI'; const WNA = 'WNA';\n  public static function values(){ return [self::WNI, self::WNA]; }\n  public static function labels(){ return ['WNI'=>self::WNI,'WNA'=>self::WNA]; }\n  public static function isValid($v){ return in_array($v, self::values(), true); }\n}\n```\n\nPenjelasan:\n- Simpel: daftar nilai, label untuk UI, dan cek valid.\n\n3) Kategori Permohonan:\n\n```php\nclass KategoriPermohonan {\n  const SELURUHNYA='SELURUHNYA'; const SEBAGIAN='SEBAGIAN';\n  public static function values(){ return [self::SELURUHNYA, self::SEBAGIAN]; }\n  public static function labels(){ return ['SELURUHNYA'=>self::SELURUHNYA,'SEBAGIAN'=>self::SEBAGIAN]; }\n}\n```\n\nPenjelasan:\n- Dua pilihan jelas, siap dipakai di DTO, UI, dan validasi.\n\n4) Domain umum (BaseEnum):\n\n```php\nclass BaseEnum {\n  const PERSEROAN='perseroan'; const YAYASAN='yayasan'; const PERKUMPULAN='perkumpulan';\n  public static function getListBase($m='ucfirst'){\n    return [self::PERSEROAN=>$m(self::PERSEROAN), self::YAYASAN=>$m(self::YAYASAN), self::PERKUMPULAN=>$m(self::PERKUMPULAN)];\n  }\n}\n```\n\nPenjelasan:\n- Kode \u201cinti\u201d domain (basis badan hukum). Disiapkan juga helper label untuk UI.\n\n---\n\n## Cara Memakai di Controller (Use Case: Upload File)\n\nTujuan: validasi file_type agar hanya nilai sah yang lolos.\n\n```php\nclass FileController extends Controller {\n  public function actionUpload(){\n    $tipe = Yii::app()->request->getQuery('file_type');\n    if (!FileType::isValid($tipe)) return APIResponse::error('file_type tidak valid', 400);\n    APIResponse::ok(['file_type'=>$tipe], 'Tipe sah, lanjut proses');\n  }\n}\n```\n\nPenjelasan:\n- Ambil file_type dari request.\n- Cek dengan FileType::isValid.\n- Jawab JSON standar. Format JSON-nya dibahas di: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md).\n- Pola controller tipisnya ada di: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md).\n\nContoh input:\n- GET /sabh/file/upload?file_type=PEMBLOKIRAN\n\nContoh keluaran sukses:\n- data: { \"file_type\": \"PEMBLOKIRAN\" }, message: \"Tipe sah, lanjut proses\", status: 200.\n\nContoh keluaran error:\n- message: \"file_type tidak valid\", status: 400.\n\n---\n\n## Cara Memakai di UI (Dropdown yang Konsisten)\n\nTujuan: isi pilihan form tanpa hardcode string.\n\n```php\n$opsi = JenisPemegangSaham::labels(); // ['PERORANGAN'=>'PERORANGAN', ...]\n// render <option> berdasarkan $opsi\n```\n\nPenjelasan:\n- labels() memberi peta siap render. Kamu bisa format label jika perlu (mis. str_replace atau ucwords).\n\nContoh lain (basis badan hukum):\n\n```php\n$opsi = BaseEnum::getListBase(); // ['perseroan'=>'Perseroan',...]\n// tampilkan ke dropdown tipe badan hukum\n```\n\nPenjelasan:\n- getListBase memberi label rapi (huruf depan kapital) untuk UI.\n\n---\n\n## Cara Memakai di DTO/Service (Filter dan Keamanan)\n\nTujuan: sebelum menyimpan ke DB, pastikan kode bisnis sah.\n\n```php\nclass UploadDto {\n  public $file_type;\n  public function validate(){\n    if (!FileType::isValid($this->file_type)) throw new Exception('Tipe tidak sah');\n  }\n}\n```\n\nPenjelasan:\n- DTO mengunci bentuk data masuk. Lihat desain DTO di: [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md).\n- Validasi yang lebih kaya akan dibahas di: [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md).\n\n---\n\n## Di Balik Layar: Apa yang Terjadi Saat Kamu Memanggil Enum?\n\n- Kamu panggil FileType::isValid('PEMBLOKIRAN').\n- Enum mengambil daftar tipe sah (getAllTypes()).\n- Dibandingkan pakai in_array, hasilnya true/false.\n- Controller memutuskan: lanjut proses atau kirim error JSON.\n\nDiagram mini:\n\n```mermaid\nsequenceDiagram\n  participant U as Pengguna\n  participant C as Controller\n  participant E as Enum\n  participant R as Respons\n  U->>C: file_type=PEMBLOKIRAN\n  C->>E: isValid(file_type)\n  E-->>C: true/false\n  C-->>R: APIResponse::ok/error\n```\n\nSingkat, jelas, dan seragam.\n\n---\n\n## Implementasi: Pola Sederhana yang Berulang\n\n1) Kelas Enum dengan konstanta:\n\n```php\nclass JenisLayananPermohonan {\n  const PEMBLOKIRAN='PEMBLOKIRAN'; const PEMBUKAAN_BLOKIR='PEMBUKAAN_BLOKIR';\n}\n```\n\n2) Tambah daftar nilai + validasi:\n\n```php\npublic static function values(){ return [self::PEMBLOKIRAN, self::PEMBUKAAN_BLOKIR]; }\npublic static function isValid($v){ return in_array($v, self::values(), true); }\n```\n\n3) Tambah labels() untuk UI (opsional):\n\n```php\npublic static function labels(){\n  return ['PEMBLOKIRAN'=>self::PEMBLOKIRAN,'PEMBUKAAN_BLOKIR'=>self::PEMBUKAAN_BLOKIR];\n}\n```\n\nKenapa begini?\n- Kode pendek, mudah dibaca pemula.\n- Tidak bergantung fitur enum versi PHP terbaru (cocok untuk Yii 1).\n\n---\n\n## Contoh End-to-End: Upload File Tipe Terstandar\n\nController (tipis):\n\n```php\nclass FileController extends Controller {\n  public function actionCreate(){\n    $t = Yii::app()->request->getQuery('file_type');\n    if (!FileType::isValid($t)) return APIResponse::error('Tipe tidak valid', 400);\n    $info = (new FileService())->createFile($t, $_FILES['file']); \n    APIResponse::ok($info, 'Berhasil');\n  }\n}\n```\n\nService (logika ringkas):\n\n```php\nclass FileService {\n  public function createFile($t, $f){\n    // ... simpan file sesuai tipe\n    return ['tipe'=>$t,'size'=>$f['size']??0];\n  }\n}\n```\n\nPenjelasan:\n- Controller hanya validasi + delegasi.\n- Service melakukan kerja (simpan file, catat metadata).\n- Jawaban konsisten via APIResponse (lihat: [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md)).\n\n---\n\n## Menambah Enum Baru: Langkah Aman\n\n- Tentukan kode bisnis (huruf besar, tanpa spasi, pakai underscore).\n- Buat kelas baru di sabh/enums.\n- Isi konstanta, values(), labels(), isValid().\n- Pakai di Controller/Service/DTO, jangan string bebas lagi.\n- Tambah opsi UI dari labels().\n\nContoh mini:\n\n```php\nclass JenisDokumen {\n  const AKTA='AKTA'; const SK='SK';\n  public static function values(){ return [self::AKTA, self::SK]; }\n  public static function isValid($v){ return in_array($v, self::values(), true); }\n}\n```\n\n---\n\n## Praktik Baik dan Anti-Pattern\n\nPraktik baik:\n- Simpan ke DB pakai \u201ckode\u201d enum (mis. 'WNI'), bukan label manusia.\n- Untuk tampilan, ambil dari labels() atau format helper.\n- Tempatkan semua enum di satu folder agar mudah dicari.\n\nAnti-pattern:\n- Menulis string literal di banyak tempat: \"PEMblokiran\", \"blokir\".\n- Mencampur \u201clabel manusia\u201d ke dalam DB (sulit i18n dan konsistensi).\n- Mengulang daftar nilai di berbagai file (sumber ganda kebenaran).\n\n---\n\n## Kapan Memakai BaseEnum?\n\n- Untuk nilai \u201clintas-layanan\u201d seperti jenis badan hukum, jenis transaksi.\n- BaseEnum juga punya helper label siap pakai untuk UI.\n- Untuk status permohonan yang lebih kompleks, baca: [Peta Status Permohonan (Konstanta Status)](09_peta_status_permohonan__konstanta_status__.md)\n\nContoh cepat:\n\n```php\n$tipe = BaseEnum::getListBase(); // ['perseroan'=>'Perseroan', ...]\n// gunakan untuk filter dashboard atau form global\n```\n\n---\n\n## Hubungan dengan Bab Lain\n\n- Controller tipis + konsisten pakai Enum \u2192 [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)\n- Respons error/sukses saat validasi enum \u2192 [Standar Respons API & Penanganan Error](05_standar_respons_api___penanganan_error_.md)\n- Enum sebagai bagian kontrak data \u2192 [Desain DTO (Data Transfer Object)](06_desain_dto__data_transfer_object__.md)\n- Validasi lanjutan di luar isValid \u2192 [Validasi & Filter Data (Validator Khusus)](08_validasi___filter_data__validator_khusus__.md)\n\n---\n\n## Ringkasan\n\n- Enums & Konstanta Bisnis adalah \u201ckamus resmi\u201d nilai bisnis.\n- Mengurangi typo, mempermudah refactor, dan menjaga UI konsisten.\n- Pola dasarnya sederhana: konstanta + values() + labels() + isValid().\n- Dipakai di Controller, Service, DTO, UI, sampai DB.\n\nSiap membuat controller lebih rapi dan aman? Lanjut ke: [Standar Controller API (Tipis, Aman, Konsisten)](04_standar_controller_api__tipis__aman__konsisten__.md)"}