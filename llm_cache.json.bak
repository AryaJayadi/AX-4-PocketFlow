{"\nFor the project `koperasi`:\n\nCodebase Context:\n--- File Index 0: LICENSE.md ---\nThe Yii framework is free software. It is released under the terms of\nthe following BSD License.\n\nCopyright \u00a9 2008 by Yii Software LLC (http://www.yiisoft.com)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n * Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in\n   the documentation and/or other materials provided with the\n   distribution.\n * Neither the name of Yii Software LLC nor the names of its\n   contributors may be used to endorse or promote products derived\n   from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\nFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\nANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\n\n--- File Index 1: README.md ---\n# Before We Get Started\n\nTools yang harus disiapkan:\n\n1. Laragon\n2. Sourcetree / CLI\n3. GIT\n4. PHP v7.2.9\n5. Composer\n6. File lain yang di butuhkan: [Core Akses AHU.rar](https://drive.google.com/file/d/1_g_kpoRL1v4YvrwrxIGhOr2NqFpa8kle/view?usp=sharing), [package.json](https://drive.google.com/file/d/1KVHh1VDsgNGfrP-17xnB62Fr9aFb_c9E/view?usp=sharing)\n\n## SETUP\n\n### Clone repo\n\nClone repo AHU Koperasi ke dalam folder ```www```, bisa menggunakan Sourcetree atau CLI:\n\n```ssh\n#Link repo\n\nhttps://gitlab.microvac.co.id/microvac-ahu/koperasi.git\n````\n\n```ssh\n#Jika menggunakan CLI, bisa menggunakan syntax dibawah ini\n\ngit clone https://gitlab.microvac.co.id/microvac-ahu/koperasi.git\n```\n\n##\n\n### Core Akses AHU\n\nEkstrak **Core Akses AHU.rar**, setelah itu buka folder ```Folder Config/AHU Koperasi```\n\n1. Copy-kan folder ```config``` dan ```web``` ke folder root ```Koperasi```.\n2. package.json yg sudah didownload di atas dan letakan pada folder root ```Koperasi```.\n\n\n##\n\n### Config\n\n1. Buka file ```web.php``` di dalam folder ```config``` lalu ubah keterangan database seperti dibawah ini:\n```ssh\nDatabase Staging\n\nIP:Port = 192.168.47.154:3306\nUsername = rommy\nPassword = P4ssword!\n```\n\n2. Buka file ```web.php``` di dalam folder ```config``` dan ubah properties ```params``` pada line ```162``` seperti di bawah ini:\n```ssh\n'params' => [\n//        'urlAhu' => 'http://ditjenAHU:gorengan5000tiga@beta-kta.ahu.go.id/service/loginSabu',\n//        'urlAhu' => 'http://AHU:AHUspartan@beta-kta.ahu.go.id/service/loginSabu',\n        'urlAhu' => 'https://ahu.go.id/service/loginSabu',\n    ],\n```\n\n##\n\n### Library\nLakukan composer update dengan syntax di bawah ini:\n```ssh\ncomposer update\n```\n\n**Selesai**.\n\n\n--- File Index 2: codeception.yml ---\nactor: Tester\npaths:\n    tests: tests\n    log: tests/_output\n    data: tests/_data\n    helpers: tests/_support\nsettings:\n    bootstrap: _bootstrap.php\n    memory_limit: 1024M\n    colors: true\nmodules:\n    config:\n        Yii2:\n            configFile: 'config/test.php'\n            cleanup: false\n\n# To enable code coverage:\n#coverage:\n#    #c3_url: http://localhost:8080/index-test.php/\n#    enabled: true\n#    #remote: true\n#    #remote_config: '../codeception.yml'\n#    whitelist:\n#        include:\n#            - models/*\n#            - controllers/*\n#            - commands/*\n#            - mail/*\n#    blacklist:\n#        include:\n#            - assets/*\n#            - config/*\n#            - runtime/*\n#            - vendor/*\n#            - views/*\n#            - web/*\n#            - tests/*\n\n\n--- File Index 3: docker-compose.yml ---\nversion: '2'\nservices:\n  php:\n    image: yiisoftware/yii2-php:7.1-apache\n    volumes:\n      - ~/.composer-docker/cache:/root/.composer/cache:delegated\n      - ./:/app:delegated\n    ports:\n      - '8000:80'\n\n--- File Index 4: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.travis.yml ---\nlanguage: php\n\njdk:\n  - oraclejdk8\n\naddons:\n  apt:\n    packages:\n      - oracle-java8-installer\n\nbranches:\n  except:\n    - 0.4\n\nsudo: true\n\nmatrix:\n  fast_finish: true\n  include:\n    - php: 7.0\n      env: ES_VERSION=\"6.0\"\n    - php: 7.0\n      env: ES_VERSION=\"6.x\"\n\n    - php: 7.1\n      env: ES_VERSION=\"6.0\"\n    - php: 7.1\n      env: ES_VERSION=\"6.x\"\n\n    - php: 7.2\n      env: ES_VERSION=\"6.0\"\n\n  allow_failures:\n    - env: ES_VERSION=\"6.x\"\n\nenv:\n  global:\n    - ES_TEST_HOST=http://localhost:9200\n    - JAVA_HOME=\"/usr/lib/jvm/java-8-oracle/jre\"\n\nbefore_install:\n  - sudo update-java-alternatives -s java-8-oracle\n  - ./travis/download_and_run_es.sh\n\ninstall:\n  - composer install --prefer-source\n\nbefore_script:\n  - if [ $TRAVIS_PHP_VERSION = '7.0' ]; then PHPUNIT_FLAGS=\"--coverage-clover ./build/logs/clover.xml\"; fi\n  - php util/RestSpecRunner.php\n  - php util/EnsureClusterAlive.php\n\nscript:\n  - composer run-script phpcs\n  - composer run-script phpstan\n  - vendor/bin/phpunit $PHPUNIT_FLAGS\n  - vendor/bin/phpunit -c phpunit-integration.xml --group sync $PHPUNIT_FLAGS\n\nafter_script:\n  - if [ $TRAVIS_PHP_VERSION = '7.0' ]; then php vendor/bin/coveralls; fi\n\n\n--- File Index 5: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/BREAKING_CHANGES.md ---\n# 6.0\n\n- [Search Templates]: PutTemplate endpoint has been removed (see [Elasticsearch Breaking Changes](https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_60_scripting_changes.html#_stored_search_template_apis_removed)),\nuse PutScript instead.\n\n--- File Index 6: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/CHANGELOG.md ---\n## Release 6.0.1\n\n- Fix imports [[0106351]](http://github.com/elasticsearch/elasticsearch-php/commit/0106351)\n- ClientBuilder: setLogger() and setTracer() only accept \\Psr\\Log\\LoggerInterface (#673) [[0270c4f]](http://github.com/elasticsearch/elasticsearch-php/commit/0270c4f)\n- fix for invalid GET /_aliases route. (#663) [[6d467fa]](http://github.com/elasticsearch/elasticsearch-php/commit/6d467fa)\n- Remove PutTemplate endpoint, lang param of PutScript no longer used [[a13544f]](http://github.com/elasticsearch/elasticsearch-php/commit/a13544f)\n  Note: I'm considering PutTemplate removal a bugfix, since the API doesn't exist in ES Core anymore. Using the endpoint throws an error,\n  so the removal is just fixing an existing bug, hence `6.0.1` instead of `6.1.0`\n\n### Docs\n- [DOCS] Add note about separate X-Pack library to README (#694) [[6ffdef8]](http://github.com/elasticsearch/elasticsearch-php/commit/6ffdef8)\n- [DOCS] add link to community index helper (#681) [[644f7f7]](http://github.com/elasticsearch/elasticsearch-php/commit/644f7f7)\n- [DOCS] Add missing content for breaking changes page [[5a515ac]](http://github.com/elasticsearch/elasticsearch-php/commit/5a515ac)\n- [DOCS] update autogenerated api docs [[7f2cd0b]](http://github.com/elasticsearch/elasticsearch-php/commit/7f2cd0b)\n- [DOCS] Update version tables [[b824bb7]](http://github.com/elasticsearch/elasticsearch-php/commit/b824bb7)\n\n## Release 6.0.0\n\n\n- Add Ingest\\ProcessorGrok endpoint [[800b1ec]](http://github.com/elasticsearch/elasticsearch-php/commit/800b1ec)\n- Add Cluster\\RemoteInfo endoint [[dfd8c3c]](http://github.com/elasticsearch/elasticsearch-php/commit/dfd8c3c)\n- Add Unauthorized401Exception [[cc68efd]](http://github.com/elasticsearch/elasticsearch-php/commit/cc68efd)\n- Add verify as acceptable query string parameter for createRepository (#665) [[885bfea]](http://github.com/elasticsearch/elasticsearch-php/commit/885bfea)\n- Fix parsing of NodesInfo for Sniffing [[e22f67f]](http://github.com/elasticsearch/elasticsearch-php/commit/e22f67f)\n- Do not schedule connection pool checks on 4xx level errors [[fd75e99]](http://github.com/elasticsearch/elasticsearch-php/commit/fd75e99)\n- Add 'terminate_after' to Count endpoint whitelist (#634) [[c3cacd7]](http://github.com/elasticsearch/elasticsearch-php/commit/c3cacd7)\n\n### Docs\n- [DOCS] Flip Branch / PHP Version table (#656) [[fa7bfb3]](http://github.com/elasticsearch/elasticsearch-php/commit/fa7bfb3)\n\n### Testing\n- [TEST] use proper TestCase parent clsas [[766b440]](http://github.com/elasticsearch/elasticsearch-php/commit/766b440)\n- [TEST] add PHPStan to build (#628) [[946cd65]](http://github.com/elasticsearch/elasticsearch-php/commit/946cd65)\n- [TEST] Fix some PHPCS violations in tests [[18a38dd]](http://github.com/elasticsearch/elasticsearch-php/commit/18a38dd)\n- [src] add PHP_CodeSniffer (#647) [[24900ef]](http://github.com/elasticsearch/elasticsearch-php/commit/24900ef)\n- [TEST] add PHP_CodeSniffer to build (#638) [[088a509]](http://github.com/elasticsearch/elasticsearch-php/commit/088a509)\n- [TEST] Use tests from corresponding ES version (#649) [[75c6680]](http://github.com/elasticsearch/elasticsearch-php/commit/75c6680)\n- [TEST] Add support for `bad_request` in yaml runner [[ad86f91]](http://github.com/elasticsearch/elasticsearch-php/commit/ad86f91)\n- [TEST] `max_compilations_per_minute` is now `max_compilations_rate` [[ebdba06]](http://github.com/elasticsearch/elasticsearch-php/commit/ebdba06)\n- [TEST] print elasticsearch.log if cluster fails to start [[fe796aa]](http://github.com/elasticsearch/elasticsearch-php/commit/fe796aa)\n- [TEST] move integration test to dedicated test file [[71ccfc1]](http://github.com/elasticsearch/elasticsearch-php/commit/71ccfc1)\n- [TEST] Client does not support accepting Yaml format responses [[fc9a9f9]](http://github.com/elasticsearch/elasticsearch-php/commit/fc9a9f9)\n\n\n\n## Release 6.0.0-beta1\n\nWoo!\n\n- Use upper-case \"Host\" header [[045aac4]](http://github.com/elasticsearch/elasticsearch-php/commit/045aac4)\n- Add 'allow_no_indices' param to Indices\\Delete whitelist [[3a3a5ab]](http://github.com/elasticsearch/elasticsearch-php/commit/3a3a5ab)\n- Add 'verbose' param to Snapshot\\Get whitelist [[b70b933]](http://github.com/elasticsearch/elasticsearch-php/commit/b70b933)\n- Add 'pre_filter_shard_size' param to Search whitelist [[f708d9d]](http://github.com/elasticsearch/elasticsearch-php/commit/f708d9d)\n- Add 'ignore_unavailable' param to Indices\\Delete whitelist [[8133021]](http://github.com/elasticsearch/elasticsearch-php/commit/8133021)\n- Add 'include_defaults' param to Cluster\\Settings\\Get whitelist [[8e5ab38]](http://github.com/elasticsearch/elasticsearch-php/commit/8e5ab38)\n\n### Docs\n- [DOCS] Remove Sami from composer.json and update docs (#619) [[fcd5ff1]](http://github.com/elasticsearch/elasticsearch-php/commit/fcd5ff1)\n- [Docs] recommend composer/ca-bundle instead of Kdyby/CurlCaBundle (#613) [[7f43b2e]](http://github.com/elasticsearch/elasticsearch-php/commit/7f43b2e)\n\n\n### Testing\n\n- [TEST] Fix content-type assertions in test to match case [[5b37117]](http://github.com/elasticsearch/elasticsearch-php/commit/5b37117)\n- Capitalize 'Content-Type' for maximum compatibility [[b8ad96c]](http://github.com/elasticsearch/elasticsearch-php/commit/b8ad96c)\n- [TEST] Use percentage watermarks to be compatible with default flood [[95d2f89]](http://github.com/elasticsearch/elasticsearch-php/commit/95d2f89)\n- [TEST] remove watermark flood from static config [[9b71940]](http://github.com/elasticsearch/elasticsearch-php/commit/9b71940)\n- Shrink API was not setting body correctly [[e0f0985]](http://github.com/elasticsearch/elasticsearch-php/commit/e0f0985)\n- [TEST] Add some missing and required static configs [[38febbe]](http://github.com/elasticsearch/elasticsearch-php/commit/38febbe)\n- [TEST] Allow skipping individual tests inside of test file [[51b9b9b]](http://github.com/elasticsearch/elasticsearch-php/commit/51b9b9b)\n- Travis: add PHP 7.2 + ES 6.0 to build matrix (#622) [[061f100]](http://github.com/elasticsearch/elasticsearch-php/commit/061f100)\n- [TEST] tests code cleanup (#618) [[dc5d18c]](http://github.com/elasticsearch/elasticsearch-php/commit/dc5d18c)\n- [TEST] Fix RoundRobinSelector Tests (#617) [[23a0ba8]](http://github.com/elasticsearch/elasticsearch-php/commit/23a0ba8)\n- [TEST] skip new percentile tests for now [[b5d9613]](http://github.com/elasticsearch/elasticsearch-php/commit/b5d9613)\n- [TEST] drop HHVM from build [#611] (#616) [[21a2d24]](http://github.com/elasticsearch/elasticsearch-php/commit/21a2d24)\n- [TEST] Skip cat.aliases/20_headers.yml [[c83ca74]](http://github.com/elasticsearch/elasticsearch-php/commit/c83ca74)\n- [TEST] YamlRunnerTest should run both .yml and .yaml files [[98c2646]](http://github.com/elasticsearch/elasticsearch-php/commit/98c2646)\n- [TEST] build against ES 6 on Travis [[b5886a8]](http://github.com/elasticsearch/elasticsearch-php/commit/b5886a8)\n- [TEST] drop HHVM from build [#611] [[0a7b402]](http://github.com/elasticsearch/elasticsearch-php/commit/0a7b402)\n- [TEST] test tweaks to appease stricter types [[51f189e]](http://github.com/elasticsearch/elasticsearch-php/commit/51f189e)\n- Fix ClientBuilder - pass correct argument for Elasticsearch\\Endpoints\\MsearchTemplate::__construct. (#605) [[5f83b52]](http://github.com/elasticsearch/elasticsearch-php/commit/5f83b52)\n- [TEST] improve code quality of tests (#610) [[9ea2156]](http://github.com/elasticsearch/elasticsearch-php/commit/9ea2156)\n- [TEST] Support headers in yaml runner, do some bad-comment cleaning [[57b5489]](http://github.com/elasticsearch/elasticsearch-php/commit/57b5489)\n- [TEST] fix handling of format for Cat tests [[a24b7d1]](http://github.com/elasticsearch/elasticsearch-php/commit/a24b7d1)\n- [TEST] test files are now .yml instead of .yaml [[ceac5bd]](http://github.com/elasticsearch/elasticsearch-php/commit/ceac5bd)\n\n\n--- File Index 7: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/README.md ---\nelasticsearch-php\n=================\n\n[![Build Status](https://img.shields.io/travis/elastic/elasticsearch-php.svg?style=flat-square)](https://travis-ci.org/elastic/elasticsearch-php)\n\n\nOfficial low-level client for Elasticsearch. Its goal is to provide common ground for all Elasticsearch-related code in PHP; because of this it tries to be opinion-free and very extendable.\n\nTo maintain consistency across all the low-level clients (Ruby, Python, etc.), clients accept simple associative arrays as parameters.  All parameters, from the URI to the document body, are defined in the associative array.\n\n\nFeatures\n--------\n\n - One-to-one mapping with REST API and other language clients\n - Configurable, automatic discovery of cluster nodes\n - Persistent, Keep-Alive connections (within the lifetime of the script)\n - Load balancing (with pluggable selection strategy) across all available nodes. Defaults to round-robin\n - Pluggable connection pools to offer different connection strategies\n - Generalized, pluggable architecture - most components can be replaced with your own custom class if specialized behavior is required\n - Option to use asynchronous future, which enables parallel execution of curl requests to multiple nodes\n \n \n**Note:** If you want to use X-Pack API, you need to install an optional extension [elasticsearch/xpack](https://github.com/elastic/elasticsearch-x-pack-php). \n\n\nVersion Matrix\n--------------\n\n| Elasticsearch Version | Elasticsearch-PHP Branch |\n| --------------------- | ------------------------ |\n| >= 6.0                | 6.0                      |\n| >= 5.0, < 6.0         | 5.0                      |\n| >= 2.0, < 5.0         | 1.0 or 2.0               |\n| >= 1.0, < 2.0         | 1.0 or 2.0               |\n| <= 0.90.x             | 0.4                      |\n\n - If you are using Elasticsearch 6.0+ , use Elasticsearch-PHP 6.0 branch.\n - If you are using Elasticsearch 5.x , use Elasticsearch-PHP 5.0 branch.\n - If you are using Elasticsearch 1.x or 2.x, prefer using the Elasticsearch-PHP 2.0 branch.  The 1.0 branch is compatible however.\n - If you are using a version older than 1.0, you must install the `0.4` Elasticsearch-PHP branch. Since ES 0.90.x and below is now EOL, the corresponding `0.4` branch will not receive any more development or bugfixes.  Please upgrade.\n - You should never use Elasticsearch-PHP Master branch, as it tracks Elasticsearch master and may contain incomplete features or breaks in backwards compatibility. Only use ES-PHP master if you are developing against ES master for some reason.\n\nDocumentation\n--------------\n[Full documentation can be found here.](http://www.elasticsearch.org/guide/en/elasticsearch/client/php-api/5.0/index.html)  Docs are stored within the repo under /docs/, so if you see a typo or problem, please submit a PR to fix it!\n\nInstallation via Composer\n-------------------------\nThe recommended method to install _Elasticsearch-PHP_ is through [Composer](http://getcomposer.org).\n\n1. Add `elasticsearch/elasticsearch` as a dependency in your project's `composer.json` file (change version to suit your version of Elasticsearch):\n\n    ```json\n        {\n            \"require\": {\n                \"elasticsearch/elasticsearch\": \"~6.0\"\n            }\n        }\n    ```\n\n2. Download and install Composer:\n\n    ```bash\n        curl -s http://getcomposer.org/installer | php\n    ```\n\n3. Install your dependencies:\n\n    ```bash\n        php composer.phar install\n    ```\n\n4. Require Composer's autoloader\n\n    Composer also prepares an autoload file that's capable of autoloading all the classes in any of the libraries that it downloads. To use it, just add the following line to your code's bootstrap process:\n\n    ```php\n        <?php\n\n        use Elasticsearch\\ClientBuilder;\n\n        require 'vendor/autoload.php';\n\n        $client = ClientBuilder::create()->build();\n    ```\nYou can find out more on how to install Composer, configure autoloading, and other best-practices for defining dependencies at [getcomposer.org](http://getcomposer.org).\n\nPHP Version Requirement\n----\nVersion 6.0 of this library requires at least PHP version 7.0.0 to function.  In addition, it requires the native JSON\nextension to be version 1.3.7 or higher.\n\n| Elasticsearch-PHP Branch | PHP Version |\n| ----------- | ------------------------ |\n| 6.0         | >= 7.0.0                 |\n| 5.0         | >= 5.6.6                 |\n| 2.0         | >= 5.4.0                 |\n| 0.4, 1.0    | >= 5.3.9                 |\n\n\nQuickstart\n----\n\n\n### Index a document\n\nIn elasticsearch-php, almost everything is configured by associative arrays.  The REST endpoint, document and optional parameters - everything is an associative array.\n\nTo index a document, we need to specify four pieces of information: index, type, id and a document body. This is done by\nconstructing an associative array of key:value pairs.  The request body is itself an associative array with key:value pairs\ncorresponding to the data in your document:\n\n```php\n$params = [\n    'index' => 'my_index',\n    'type' => 'my_type',\n    'id' => 'my_id',\n    'body' => ['testField' => 'abc']\n];\n\n$response = $client->index($params);\nprint_r($response);\n```\n\nThe response that you get back indicates the document was created in the index that you specified.  The response is an\nassociative array containing a decoded version of the JSON that Elasticsearch returns:\n\n```php\nArray\n(\n    [_index] => my_index\n    [_type] => my_type\n    [_id] => my_id\n    [_version] => 1\n    [created] => 1\n)\n\n```\n\n### Get a document\n\nLet's get the document that we just indexed.  This will simply return the document:\n\n```php\n$params = [\n    'index' => 'my_index',\n    'type' => 'my_type',\n    'id' => 'my_id'\n];\n\n$response = $client->get($params);\nprint_r($response);\n```\n\nThe response contains some metadata (index, type, etc.) as well as a `_source` field...this is the original document\nthat you sent to Elasticsearch.\n\n```php\nArray\n(\n    [_index] => my_index\n    [_type] => my_type\n    [_id] => my_id\n    [_version] => 1\n    [found] => 1\n    [_source] => Array\n        (\n            [testField] => abc\n        )\n\n)\n```\n\nIf you want to retrieve the `_source` field directly, there is the `getSource` method:\n\n```php\n$params = [\n    'index' => 'my_index',\n    'type' => 'my_type',\n    'id' => 'my_id'\n];\n\n$source = $client->getSource($params);\ndoSomething($source);\n```\n\n### Search for a document\n\nSearching is a hallmark of Elasticsearch, so let's perform a search.  We are going to use the Match query as a demonstration:\n\n```php\n$params = [\n    'index' => 'my_index',\n    'type' => 'my_type',\n    'body' => [\n        'query' => [\n            'match' => [\n                'testField' => 'abc'\n            ]\n        ]\n    ]\n];\n\n$response = $client->search($params);\nprint_r($response);\n```\n\nThe response is a little different from the previous responses.  We see some metadata (`took`, `timed_out`, etc.) and\nan array named `hits`.  This represents your search results.  Inside of `hits` is another array named `hits`, which contains\nindividual search results:\n\n```php\nArray\n(\n    [took] => 1\n    [timed_out] =>\n    [_shards] => Array\n        (\n            [total] => 5\n            [successful] => 5\n            [failed] => 0\n        )\n\n    [hits] => Array\n        (\n            [total] => 1\n            [max_score] => 0.30685282\n            [hits] => Array\n                (\n                    [0] => Array\n                        (\n                            [_index] => my_index\n                            [_type] => my_type\n                            [_id] => my_id\n                            [_score] => 0.30685282\n                            [_source] => Array\n                                (\n                                    [testField] => abc\n                                )\n                        )\n                )\n        )\n)\n```\n\n### Delete a document\n\nAlright, let's go ahead and delete the document that we added previously:\n\n```php\n$params = [\n    'index' => 'my_index',\n    'type' => 'my_type',\n    'id' => 'my_id'\n];\n\n$response = $client->delete($params);\nprint_r($response);\n```\n\nYou'll notice this is identical syntax to the `get` syntax.  The only difference is the operation: `delete` instead of\n`get`.  The response will confirm the document was deleted:\n\n```php\nArray\n(\n    [found] => 1\n    [_index] => my_index\n    [_type] => my_type\n    [_id] => my_id\n    [_version] => 2\n)\n```\n\n\n### Delete an index\n\nDue to the dynamic nature of Elasticsearch, the first document we added automatically built an index with some default settings.  Let's delete that index because we want to specify our own settings later:\n\n```php\n$deleteParams = [\n    'index' => 'my_index'\n];\n$response = $client->indices()->delete($deleteParams);\nprint_r($response);\n```\n\nThe response:\n\n\n```php\nArray\n(\n    [acknowledged] => 1\n)\n```\n\n### Create an index\n\nNow that we are starting fresh (no data or index), let's add a new index with some custom settings:\n\n```php\n$params = [\n    'index' => 'my_index',\n    'body' => [\n        'settings' => [\n            'number_of_shards' => 2,\n            'number_of_replicas' => 0\n        ]\n    ]\n];\n\n$response = $client->indices()->create($params);\nprint_r($response);\n```\n\nElasticsearch will now create that index with your chosen settings, and return an acknowledgement:\n\n```php\nArray\n(\n    [acknowledged] => 1\n)\n```\n\nUnit Testing using Mock a Elastic Client\n========================================\n```php\nuse GuzzleHttp\\Ring\\Client\\MockHandler;\nuse Elasticsearch\\ClientBuilder;\n\n// The connection class requires 'body' to be a file stream handle\n// Depending on what kind of request you do, you may need to set more values here\n$handler = new MockHandler([\n  'status' => 200,\n  'transfer_stats' => [\n     'total_time' => 100\n  ],\n  'body' => fopen('somefile.json')\n]);\n$builder = ClientBuilder::create();\n$builder->setHosts(['somehost']);\n$builder->setHandler($handler);\n$client = $builder->build();\n// Do a request and you'll get back the 'body' response above\n```\n\nWrap up\n=======\n\nThat was just a crash-course overview of the client and its syntax.  If you are familiar with Elasticsearch, you'll notice that the methods are named just like REST endpoints.\n\nYou'll also notice that the client is configured in a manner that facilitates easy discovery via the IDE.  All core actions are available under the `$client` object (indexing, searching, getting, etc.).  Index and cluster management are located under the `$client->indices()` and `$client->cluster()` objects, respectively.\n\nCheck out the rest of the [Documentation](http://www.elasticsearch.org/guide/en/elasticsearch/client/php-api/current/index.html) to see how the entire client works.\n\n\nAvailable Licenses\n-------\n\nStarting with version 1.3.1, Elasticsearch-PHP is available under two licenses: Apache v2.0 and LGPL v2.1.  Versions\nprior to 1.3.1 are still licensed with only Apache v2.0.\n\nThe user may choose which license they wish to use.  Since there is no discriminating executable or distribution bundle\nto differentiate licensing, the user should document their license choice externally, in case the library is re-distributed.\nIf no explicit choice is made, assumption is that redistribution obeys rules of both licenses.\n\n### Contributions\nAll contributions to the library are to be so that they can be licensed under both licenses.\n\nApache v2.0 License:\n>Copyright 2013-2016 Elasticsearch\n>\n>Licensed under the Apache License, Version 2.0 (the \"License\");\n>you may not use this file except in compliance with the License.\n>You may obtain a copy of the License at\n>\n>    http://www.apache.org/licenses/LICENSE-2.0\n>\n>Unless required by applicable law or agreed to in writing, software\n>distributed under the License is distributed on an \"AS IS\" BASIS,\n>WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n>See the License for the specific language governing permissions and\n>limitations under the License.\n\nLGPL v2.1 Notice:\n>Copyright (C) 2013-2016 Elasticsearch\n>\n>This library is free software; you can redistribute it and/or\n>modify it under the terms of the GNU Lesser General Public\n>License as published by the Free Software Foundation; either\n>version 2.1 of the License, or (at your option) any later version.\n>\n>This library is distributed in the hope that it will be useful,\n>but WITHOUT ANY WARRANTY; without even the implied warranty of\n>MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n>Lesser General Public License for more details.\n>\n>You should have received a copy of the GNU Lesser General Public\n>License along with this library; if not, write to the Free Software\n>Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\n\n--- File Index 8: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.github/CONTRIBUTING.md ---\nIf you have a bugfix or new feature that you would like to contribute to elasticsearch-php, please find or open an issue about it first. Talk about what you would like to do. It may be that somebody is already working on it, or that there are particular issues that you should know about before implementing the change.\n\nWe enjoy working with contributors to get their code accepted. There are many approaches to fixing a problem and it is important to find the best approach before writing too much code.\n\nThe process for contributing to any of the Elasticsearch repositories is similar.\n\n1. Sign the contributor license agreement\n\n    Please make sure you have signed the [Contributor License Agreement](http://www.elasticsearch.org/contributor-agreement/). We are not asking you to assign copyright to us, but to give us the right to distribute your code without restriction. We ask this of all contributors in order to assure our users of the origin and continuing existence of the code. You only need to sign the CLA once.\n\n2. Set up your fork for development\n\n        $> git clone https://github.com/elasticsearch/elasticsearch-php.git\n        $> cd elasticsearch-php\n        $> git submodule update --init --recursive\n        $> curl -s http://getcomposer.org/installer | php\n        $> php composer.phar install --dev\n\n3. Ensure a version of Elasticsearch is running on your machine.  Recommended \"test\" configuration is:\n\n        $> bin/elasticsearch -Des.gateway.type=none -Des.http.port=9200 \\\n            -Des.index.store.type=memory -Des.discovery.zen.ping.multicast.enabled=false \\\n            -Des.node.bench=true -Des.script.disable_dynamic=false\n\n4. Run the unit and yaml integration tests to ensure your changes do not break existing code. The `util/RestSpecRunner.php` script will automatically checkout the tests for the exact same build as is the Elasticsearch you are running on your machine (since tests are specific to the server version):\n\n        $> export ES_TEST_HOST='http://localhost:9200'\n\n    Then proceed to initialize the REST yaml tests and run the package. **WARNING: the unit tests will clear your cluster\n    and data..._do not_ run the tests on a production cluster!**\n\n        $> php util/RestSpecRunner.php\n        $> php vendor/bin/phpunit\n\n5. Ensure your changes follow the [PSR-2 Coding Style Guide](http://www.php-fig.org/psr/psr-2/). You can run tools such as [PHP-CS-Fixer](http://cs.sensiolabs.org/) or [PHP_CodeSniffer](http://pear.php.net/package/PHP_CodeSniffer) to enforce PSR-2 automatically.\n\n6. Rebase your changes\n\n    Update your local repository with the most recent code from the main elasticsearch-php repository, and rebase your branch on top of the latest master branch. We prefer your changes to be squashed into a single commit.\n\n7. Submit a pull request\n\n    Push your local changes to your forked copy of the repository and submit a pull request. In the pull request, describe what your changes do and mention the number of the issue where discussion has taken place, eg \u201cCloses #123\u2033.  Please consider adding or modifying tests related to your changes.\n\n\nThen sit back and wait. There will probably be discussion about the pull request and, if any changes are needed, we would love to work with you to get your pull request merged into elasticsearch-php.\n\n\n\n--- File Index 9: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.github/ISSUE_TEMPLATE.md ---\n\n### Summary of problem or feature request\n\n<!-- Please describe your problem/feature request here. -->\n\n\n### Code snippet of problem\n\n<!--\nIf applicable, please include a copy of your code\nwhich triggers the suspected bug.\n\nYou may use the markdown php code tags to format your paste:\n\n```php\n$params = ['foo'];\n```\n-->\n\n### System details\n\n<!--\nPlease include these details about your system!\nIf they are omitted, the ticket will be deprioritized\nover other users requests/tickets.\n-->\n\n- Operating System\n- PHP Version\n- ES-PHP client version\n- Elasticsearch version\n\n--- File Index 10: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.github/PULL_REQUEST_TEMPLATE.md ---\n<!--\n\nThanks for the Pull Request!  Before you submit the PR, please\nlook over this checklist:\n\n- Have you signed [Contributor License Agreement](http://www.elasticsearch.org/contributor-agreement/)?\nPR's (no matter how small) cannot be merged until the CLA has been signed.  It only needs to be signed once,\nhowever.\n\n- Have you read the [Contributing Guidelines](https://github.com/elastic/elasticsearch-php/blob/master/.github/CONTRIBUTING.md)?\n\nIf you answered yes to both, thanks for the PR and we'll get to it ASAP! :)\n\n-->\n\n--- File Index 11: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/docstheme/manifest.yml ---\nname: asciidoc\n\nglobal:\n    \"pages/namespaces.twig\": \"namespaces.asciidoc\"\n    \"pages/interfaces.twig\": \"interfaces.asciidoc\"\n    \"pages/classes.twig\": \"classes.asciidoc\"\n\nclass:\n    \"pages/class.twig\": \"%s.asciidoc\"\n\n\n--- File Index 12: extensions/elasticSearch/vendor/guzzlehttp/ringphp/.travis.yml ---\nlanguage: php\n\nphp:\n  - 5.4\n  - 5.5\n  - 5.6\n  - 7.0\n  - hhvm\n\nbefore_script:\n  - composer self-update\n  - composer install --no-interaction --prefer-source --dev\n  - ~/.nvm/nvm.sh install v0.6.14\n  - ~/.nvm/nvm.sh run v0.6.14\n\nscript:\n  - make test\n\nmatrix:\n  allow_failures:\n    - php: hhvm\n  fast_finish: true\n\n\n--- File Index 13: extensions/elasticSearch/vendor/guzzlehttp/ringphp/CHANGELOG.md ---\n# CHANGELOG\n\n## 1.1.0 - 2015-05-19\n\n* Added `CURL_HTTP_VERSION_2_0`\n* The PHP stream wrapper handler now sets `allow_self_signed` to `false` to\n  match the cURL handler when `verify` is set to `true` or a certificate file.\n* Ensuring that a directory exists before using the `save_to` option.\n* Response protocol version is now correctly extracted from a response.\n* Fixed a bug in which the result of `CurlFactory::retryFailedRewind` did not\n  return an array.\n\n## 1.0.7 - 2015-03-29\n\n* PHP 7 fixes.\n\n## 1.0.6 - 2015-02-26\n\n* Bug fix: futures now extend from React's PromiseInterface to ensure that they\n  are properly forwarded down the promise chain.\n* The multi handle of the CurlMultiHandler is now created lazily.\n\n## 1.0.5 - 2014-12-10\n\n* Adding more error information to PHP stream wrapper exceptions.\n* Added digest auth integration test support to test server.\n\n## 1.0.4 - 2014-12-01\n\n* Added support for older versions of cURL that do not have CURLOPT_TIMEOUT_MS.\n* Setting debug to `false` does not enable debug output.\n* Added a fix to the StreamHandler to return a `FutureArrayInterface` when an\n  error occurs.\n\n## 1.0.3 - 2014-11-03\n\n* Setting the `header` stream option as a string to be compatible with GAE.\n* Header parsing now ensures that header order is maintained in the parsed\n  message.\n\n## 1.0.2 - 2014-10-28\n\n* Now correctly honoring a `version` option is supplied in a request.\n  See https://github.com/guzzle/RingPHP/pull/8\n\n## 1.0.1 - 2014-10-26\n\n* Fixed a header parsing issue with the `CurlHandler` and `CurlMultiHandler`\n  that caused cURL requests with multiple responses to merge repsonses together\n  (e.g., requests with digest authentication).\n\n## 1.0.0 - 2014-10-12\n\n* Initial release.\n\n\n--- File Index 14: extensions/elasticSearch/vendor/guzzlehttp/ringphp/Makefile ---\nall: clean coverage docs\n\ndocs:\n\tcd docs && make html\n\nview-docs:\n\topen docs/_build/html/index.html\n\nstart-server: stop-server\n\tnode tests/Client/server.js &> /dev/null &\n\nstop-server:\n\t@PID=$(shell ps axo pid,command \\\n\t  | grep 'tests/Client/server.js' \\\n\t  | grep -v grep \\\n\t  | cut -f 1 -d \" \"\\\n\t) && [ -n \"$$PID\" ] && kill $$PID || true\n\ntest: start-server\n\tvendor/bin/phpunit $(TEST)\n\t$(MAKE) stop-server\n\ncoverage: start-server\n\tvendor/bin/phpunit --coverage-html=build/artifacts/coverage $(TEST)\n\t$(MAKE) stop-server\n\nview-coverage:\n\topen build/artifacts/coverage/index.html\n\nclean:\n\trm -rf build/artifacts/*\n\tcd docs && make clean\n\ntag:\n\t$(if $(TAG),,$(error TAG is not defined. Pass via \"make tag TAG=4.2.1\"))\n\t@echo Tagging $(TAG)\n\tchag update -m '$(TAG) ()'\n\tgit add -A\n\tgit commit -m '$(TAG) release'\n\tchag tag\n\nperf: start-server\n\tphp tests/perf.php\n\t$(MAKE) stop-server\n\n.PHONY: docs\n\n\n--- File Index 15: extensions/elasticSearch/vendor/guzzlehttp/ringphp/README.rst ---\n=======\nRingPHP\n=======\n\nProvides a simple API and specification that abstracts away the details of HTTP\ninto a single PHP function. RingPHP be used to power HTTP clients and servers\nthrough a PHP function that accepts a request hash and returns a response hash\nthat is fulfilled using a `promise <https://github.com/reactphp/promise>`_,\nallowing RingPHP to support both synchronous and asynchronous workflows.\n\nBy abstracting the implementation details of different HTTP clients and\nservers, RingPHP allows you to utilize pluggable HTTP clients and servers\nwithout tying your application to a specific implementation.\n\n.. code-block:: php\n\n    <?php\n    require 'vendor/autoload.php';\n\n    use GuzzleHttp\\Ring\\Client\\CurlHandler;\n\n    $handler = new CurlHandler();\n    $response = $handler([\n        'http_method' => 'GET',\n        'uri'         => '/',\n        'headers'     => [\n            'host'  => ['www.google.com'],\n            'x-foo' => ['baz']\n        ]\n    ]);\n\n    $response->then(function (array $response) {\n        echo $response['status'];\n    });\n\n    $response->wait();\n\nRingPHP is inspired by Clojure's `Ring <https://github.com/ring-clojure/ring>`_,\nwhich, in turn, was inspired by Python's WSGI and Ruby's Rack. RingPHP is\nutilized as the handler layer in `Guzzle <http://guzzlephp.org>`_ 5.0+ to send\nHTTP requests.\n\nDocumentation\n-------------\n\nSee http://ringphp.readthedocs.org/ for the full online documentation.\n\n\n--- File Index 16: extensions/elasticSearch/vendor/guzzlehttp/streams/.travis.yml ---\nlanguage: php\n\nphp:\n  - 5.4\n  - 5.5\n  - 5.6\n  - hhvm\n\nbefore_script:\n  - composer self-update\n  - composer install --no-interaction --prefer-source --dev\n\nscript: vendor/bin/phpunit\n\nmatrix:\n  allow_failures:\n    - php: hhvm\n\n\n--- File Index 17: extensions/elasticSearch/vendor/guzzlehttp/streams/CHANGELOG.rst ---\n=========\nChangelog\n=========\n\n3.0.0 (2014-10-12)\n------------------\n\n* Now supports creating streams from functions and iterators.\n* Supports creating buffered streams and asynchronous streams.\n* Removed ``functions.php``. Use the corresponding functions provided by\n  ``GuzzleHttp\\Streams\\Utils`` instead.\n* Moved ``GuzzleHttp\\Stream\\MetadataStreamInterface::getMetadata`` to\n  ``GuzzleHttp\\Stream\\StreamInterface``. MetadataStreamInterface is no longer\n  used and is marked as deprecated.\n* Added ``attach()`` to ``GuzzleHttp\\Stream\\StreamInterface`` for PSR-7\n  compatibility.\n* Removed ``flush()`` from StreamInterface.\n* Removed the ``$maxLength`` parameter from\n  ``GuzzleHttp\\Stream\\StreamInterface::getContents()``. This function now\n  returns the entire remainder of the stream. If you want to limit the maximum\n  amount of data read from the stream, use the\n  ``GuzzleHttp\\Stream\\Utils::copyToString()`` function.\n* Streams that return an empty string, ``''``, are no longer considered a\n  failure. You MUST return ``false`` to mark the read as a failure, and ensure\n  that any decorators you create properly return ``true`` in response to the\n  ``eof()`` method when the stream is consumed.\n* ``GuzzleHttp\\Stream\\Stream::__construct``,\n  ``GuzzleHttp\\Stream\\Stream::factory``, and\n  ``GuzzleHttp\\Stream\\Utils::create`` no longer accept a size in the second\n  argument. They now accept an associative array of options, including the\n  \"size\" key and \"metadata\" key which can be used to provide custom metadata.\n* Added ``GuzzleHttp\\Stream\\BufferStream`` to add support for buffering data,\n  and when read, shifting data off of the buffer.\n* Added ``GuzzleHttp\\Stream\\NullBuffer`` which can be used as a buffer that\n  does not actually store any data.\n* Added ``GuzzleHttp\\Stream\\AsyncStream`` to provide support for non-blocking\n  streams that can be filled by a remote source (e.g., an event-loop). If a\n  ``drain`` option is provided, the stream can also act as if it is a blocking\n  stream.\n\n2.1.0 (2014-08-17)\n------------------\n\n* Added an InflateStream to inflate gzipped or deflated content.\n* Added ``flush`` to stream wrapper.\n* Added the ability to easily register the GuzzleStreamWrapper if needed.\n\n2.0.0 (2014-08-16)\n------------------\n\n* Deprecated functions.php and moved all of those methods to\n  ``GuzzleHttp\\Streams\\Utils``. Use ``GuzzleHttp\\Stream\\Stream::factory()``\n  instead of ``GuzzleHttp\\Stream\\create()`` to create new streams.\n* Added ``flush()`` to ``StreamInterface``. This method is used to flush any\n  underlying stream write buffers.\n* Added ``FnStream`` to easily decorate stream behavior with callables.\n* ``Utils::hash`` now throws an exception when the stream cannot seek to 0.\n\n1.5.1 (2014-09-10)\n------------------\n\n* Stream metadata is grabbed from the underlying stream each time\n  ``getMetadata`` is called rather than returning a value from a cache.\n* Properly closing all underlying streams when AppendStream is closed.\n* Seek functions no longer throw exceptions.\n* LazyOpenStream now correctly returns the underlying stream resource when\n  detached.\n\n1.5.0 (2014-08-07)\n------------------\n\n* Added ``Stream\\safe_open`` to open stream resources and throw exceptions\n  instead of raising errors.\n\n1.4.0 (2014-07-19)\n------------------\n\n* Added a LazyOpenStream\n\n1.3.0 (2014-07-15)\n------------------\n\n* Added an AppendStream to stream over multiple stream one after the other.\n\n1.2.0 (2014-07-15)\n------------------\n\n* Updated the ``detach()`` method to return the underlying stream resource or\n  ``null`` if it does not wrap a resource.\n* Multiple fixes for how streams behave when the underlying resource is\n  detached\n* Do not clear statcache when a stream does not have a 'uri'\n* Added a fix to LimitStream\n* Added a condition to ensure that functions.php can be required multiple times\n\n\n--- File Index 18: extensions/elasticSearch/vendor/guzzlehttp/streams/Makefile ---\nall: clean coverage\n\nrelease: tag\n\tgit push origin --tags\n\ntag:\n\tchag tag --sign --debug CHANGELOG.rst\n\ntest:\n\tvendor/bin/phpunit\n\ncoverage:\n\tvendor/bin/phpunit --coverage-html=artifacts/coverage\n\nview-coverage:\n\topen artifacts/coverage/index.html\n\nclean:\n\trm -rf artifacts/*\n\n\n--- File Index 19: extensions/elasticSearch/vendor/guzzlehttp/streams/README.rst ---\n==============\nGuzzle Streams\n==============\n\nProvides a simple abstraction over streams of data.\n\nThis library is used in `Guzzle 5 <https://github.com/guzzle/guzzle>`_, and is\n(currently) compatible with the WIP PSR-7.\n\nInstallation\n============\n\nThis package can be installed easily using `Composer <http://getcomposer.org>`_.\nSimply add the following to the composer.json file at the root of your project:\n\n.. code-block:: javascript\n\n    {\n      \"require\": {\n        \"guzzlehttp/streams\": \"~3.0\"\n      }\n    }\n\nThen install your dependencies using ``composer.phar install``.\n\nDocumentation\n=============\n\nThe documentation for this package can be found on the main Guzzle website at\nhttp://docs.guzzlephp.org/en/guzzle4/streams.html.\n\nTesting\n=======\n\nThis library is tested using PHPUnit. You'll need to install the dependencies\nusing `Composer <http://getcomposer.org>`_ then run ``make test``.\n\n\n--- File Index 20: extensions/elasticSearch/vendor/monolog/monolog/CHANGELOG.md ---\n### 1.23.0 (2017-06-19)\n\n  * Improved SyslogUdpHandler's support for RFC5424 and added optional `$ident` argument\n  * Fixed GelfHandler truncation to be per field and not per message\n  * Fixed compatibility issue with PHP <5.3.6\n  * Fixed support for headless Chrome in ChromePHPHandler\n  * Fixed support for latest Aws SDK in DynamoDbHandler\n  * Fixed support for SwiftMailer 6.0+ in SwiftMailerHandler\n\n### 1.22.1 (2017-03-13)\n\n  * Fixed lots of minor issues in the new Slack integrations\n  * Fixed support for allowInlineLineBreaks in LineFormatter when formatting exception backtraces\n\n### 1.22.0 (2016-11-26)\n\n  * Added SlackbotHandler and SlackWebhookHandler to set up Slack integration more easily\n  * Added MercurialProcessor to add mercurial revision and branch names to log records\n  * Added support for AWS SDK v3 in DynamoDbHandler\n  * Fixed fatal errors occuring when normalizing generators that have been fully consumed\n  * Fixed RollbarHandler to include a level (rollbar level), monolog_level (original name), channel and datetime (unix)\n  * Fixed RollbarHandler not flushing records automatically, calling close() explicitly is not necessary anymore\n  * Fixed SyslogUdpHandler to avoid sending empty frames\n  * Fixed a few PHP 7.0 and 7.1 compatibility issues\n\n### 1.21.0 (2016-07-29)\n\n  * Break: Reverted the addition of $context when the ErrorHandler handles regular php errors from 1.20.0 as it was causing issues\n  * Added support for more formats in RotatingFileHandler::setFilenameFormat as long as they have Y, m and d in order\n  * Added ability to format the main line of text the SlackHandler sends by explictly setting a formatter on the handler\n  * Added information about SoapFault instances in NormalizerFormatter\n  * Added $handleOnlyReportedErrors option on ErrorHandler::registerErrorHandler (default true) to allow logging of all errors no matter the error_reporting level\n\n### 1.20.0 (2016-07-02)\n\n  * Added FingersCrossedHandler::activate() to manually trigger the handler regardless of the activation policy\n  * Added StreamHandler::getUrl to retrieve the stream's URL\n  * Added ability to override addRow/addTitle in HtmlFormatter\n  * Added the $context to context information when the ErrorHandler handles a regular php error\n  * Deprecated RotatingFileHandler::setFilenameFormat to only support 3 formats: Y, Y-m and Y-m-d\n  * Fixed WhatFailureGroupHandler to work with PHP7 throwables\n  * Fixed a few minor bugs\n\n### 1.19.0 (2016-04-12)\n\n  * Break: StreamHandler will not close streams automatically that it does not own. If you pass in a stream (not a path/url), then it will not close it for you. You can retrieve those using getStream() if needed\n  * Added DeduplicationHandler to remove duplicate records from notifications across multiple requests, useful for email or other notifications on errors\n  * Added ability to use `%message%` and other LineFormatter replacements in the subject line of emails sent with NativeMailHandler and SwiftMailerHandler\n  * Fixed HipChatHandler handling of long messages\n\n### 1.18.2 (2016-04-02)\n\n  * Fixed ElasticaFormatter to use more precise dates\n  * Fixed GelfMessageFormatter sending too long messages\n\n### 1.18.1 (2016-03-13)\n\n  * Fixed SlackHandler bug where slack dropped messages randomly\n  * Fixed RedisHandler issue when using with the PHPRedis extension\n  * Fixed AmqpHandler content-type being incorrectly set when using with the AMQP extension\n  * Fixed BrowserConsoleHandler regression\n\n### 1.18.0 (2016-03-01)\n\n  * Added optional reduction of timestamp precision via `Logger->useMicrosecondTimestamps(false)`, disabling it gets you a bit of performance boost but reduces the precision to the second instead of microsecond\n  * Added possibility to skip some extra stack frames in IntrospectionProcessor if you have some library wrapping Monolog that is always adding frames\n  * Added `Logger->withName` to clone a logger (keeping all handlers) with a new name\n  * Added FluentdFormatter for the Fluentd unix socket protocol\n  * Added HandlerWrapper base class to ease the creation of handler wrappers, just extend it and override as needed\n  * Added support for replacing context sub-keys using `%context.*%` in LineFormatter\n  * Added support for `payload` context value in RollbarHandler\n  * Added setRelease to RavenHandler to describe the application version, sent with every log\n  * Added support for `fingerprint` context value in RavenHandler\n  * Fixed JSON encoding errors that would gobble up the whole log record, we now handle those more gracefully by dropping chars as needed\n  * Fixed write timeouts in SocketHandler and derivatives, set to 10sec by default, lower it with `setWritingTimeout()`\n  * Fixed PHP7 compatibility with regard to Exception/Throwable handling in a few places\n\n### 1.17.2 (2015-10-14)\n\n  * Fixed ErrorHandler compatibility with non-Monolog PSR-3 loggers\n  * Fixed SlackHandler handling to use slack functionalities better\n  * Fixed SwiftMailerHandler bug when sending multiple emails they all had the same id\n  * Fixed 5.3 compatibility regression\n\n### 1.17.1 (2015-08-31)\n\n  * Fixed RollbarHandler triggering PHP notices\n\n### 1.17.0 (2015-08-30)\n\n  * Added support for `checksum` and `release` context/extra values in RavenHandler\n  * Added better support for exceptions in RollbarHandler\n  * Added UidProcessor::getUid\n  * Added support for showing the resource type in NormalizedFormatter\n  * Fixed IntrospectionProcessor triggering PHP notices\n\n### 1.16.0 (2015-08-09)\n\n  * Added IFTTTHandler to notify ifttt.com triggers\n  * Added Logger::setHandlers() to allow setting/replacing all handlers\n  * Added $capSize in RedisHandler to cap the log size\n  * Fixed StreamHandler creation of directory to only trigger when the first log write happens\n  * Fixed bug in the handling of curl failures\n  * Fixed duplicate logging of fatal errors when both error and fatal error handlers are registered in monolog's ErrorHandler\n  * Fixed missing fatal errors records with handlers that need to be closed to flush log records\n  * Fixed TagProcessor::addTags support for associative arrays\n\n### 1.15.0 (2015-07-12)\n\n  * Added addTags and setTags methods to change a TagProcessor\n  * Added automatic creation of directories if they are missing for a StreamHandler to open a log file\n  * Added retry functionality to Loggly, Cube and Mandrill handlers so they retry up to 5 times in case of network failure\n  * Fixed process exit code being incorrectly reset to 0 if ErrorHandler::registerExceptionHandler was used\n  * Fixed HTML/JS escaping in BrowserConsoleHandler\n  * Fixed JSON encoding errors being silently suppressed (PHP 5.5+ only)\n\n### 1.14.0 (2015-06-19)\n\n  * Added PHPConsoleHandler to send record to Chrome's PHP Console extension and library\n  * Added support for objects implementing __toString in the NormalizerFormatter\n  * Added support for HipChat's v2 API in HipChatHandler\n  * Added Logger::setTimezone() to initialize the timezone monolog should use in case date.timezone isn't correct for your app\n  * Added an option to send formatted message instead of the raw record on PushoverHandler via ->useFormattedMessage(true)\n  * Fixed curl errors being silently suppressed\n\n### 1.13.1 (2015-03-09)\n\n  * Fixed regression in HipChat requiring a new token to be created\n\n### 1.13.0 (2015-03-05)\n\n  * Added Registry::hasLogger to check for the presence of a logger instance\n  * Added context.user support to RavenHandler\n  * Added HipChat API v2 support in the HipChatHandler\n  * Added NativeMailerHandler::addParameter to pass params to the mail() process\n  * Added context data to SlackHandler when $includeContextAndExtra is true\n  * Added ability to customize the Swift_Message per-email in SwiftMailerHandler\n  * Fixed SwiftMailerHandler to lazily create message instances if a callback is provided\n  * Fixed serialization of INF and NaN values in Normalizer and LineFormatter\n\n### 1.12.0 (2014-12-29)\n\n  * Break: HandlerInterface::isHandling now receives a partial record containing only a level key. This was always the intent and does not break any Monolog handler but is strictly speaking a BC break and you should check if you relied on any other field in your own handlers.\n  * Added PsrHandler to forward records to another PSR-3 logger\n  * Added SamplingHandler to wrap around a handler and include only every Nth record\n  * Added MongoDBFormatter to support better storage with MongoDBHandler (it must be enabled manually for now)\n  * Added exception codes in the output of most formatters\n  * Added LineFormatter::includeStacktraces to enable exception stack traces in logs (uses more than one line)\n  * Added $useShortAttachment to SlackHandler to minify attachment size and $includeExtra to append extra data\n  * Added $host to HipChatHandler for users of private instances\n  * Added $transactionName to NewRelicHandler and support for a transaction_name context value\n  * Fixed MandrillHandler to avoid outputing API call responses\n  * Fixed some non-standard behaviors in SyslogUdpHandler\n\n### 1.11.0 (2014-09-30)\n\n  * Break: The NewRelicHandler extra and context data are now prefixed with extra_ and context_ to avoid clashes. Watch out if you have scripts reading those from the API and rely on names\n  * Added WhatFailureGroupHandler to suppress any exception coming from the wrapped handlers and avoid chain failures if a logging service fails\n  * Added MandrillHandler to send emails via the Mandrillapp.com API\n  * Added SlackHandler to log records to a Slack.com account\n  * Added FleepHookHandler to log records to a Fleep.io account\n  * Added LogglyHandler::addTag to allow adding tags to an existing handler\n  * Added $ignoreEmptyContextAndExtra to LineFormatter to avoid empty [] at the end\n  * Added $useLocking to StreamHandler and RotatingFileHandler to enable flock() while writing\n  * Added support for PhpAmqpLib in the AmqpHandler\n  * Added FingersCrossedHandler::clear and BufferHandler::clear to reset them between batches in long running jobs\n  * Added support for adding extra fields from $_SERVER in the WebProcessor\n  * Fixed support for non-string values in PrsLogMessageProcessor\n  * Fixed SwiftMailer messages being sent with the wrong date in long running scripts\n  * Fixed minor PHP 5.6 compatibility issues\n  * Fixed BufferHandler::close being called twice\n\n### 1.10.0 (2014-06-04)\n\n  * Added Logger::getHandlers() and Logger::getProcessors() methods\n  * Added $passthruLevel argument to FingersCrossedHandler to let it always pass some records through even if the trigger level is not reached\n  * Added support for extra data in NewRelicHandler\n  * Added $expandNewlines flag to the ErrorLogHandler to create multiple log entries when a message has multiple lines\n\n### 1.9.1 (2014-04-24)\n\n  * Fixed regression in RotatingFileHandler file permissions\n  * Fixed initialization of the BufferHandler to make sure it gets flushed after receiving records\n  * Fixed ChromePHPHandler and FirePHPHandler's activation strategies to be more conservative\n\n### 1.9.0 (2014-04-20)\n\n  * Added LogEntriesHandler to send logs to a LogEntries account\n  * Added $filePermissions to tweak file mode on StreamHandler and RotatingFileHandler\n  * Added $useFormatting flag to MemoryProcessor to make it send raw data in bytes\n  * Added support for table formatting in FirePHPHandler via the table context key\n  * Added a TagProcessor to add tags to records, and support for tags in RavenHandler\n  * Added $appendNewline flag to the JsonFormatter to enable using it when logging to files\n  * Added sound support to the PushoverHandler\n  * Fixed multi-threading support in StreamHandler\n  * Fixed empty headers issue when ChromePHPHandler received no records\n  * Fixed default format of the ErrorLogHandler\n\n### 1.8.0 (2014-03-23)\n\n  * Break: the LineFormatter now strips newlines by default because this was a bug, set $allowInlineLineBreaks to true if you need them\n  * Added BrowserConsoleHandler to send logs to any browser's console via console.log() injection in the output\n  * Added FilterHandler to filter records and only allow those of a given list of levels through to the wrapped handler\n  * Added FlowdockHandler to send logs to a Flowdock account\n  * Added RollbarHandler to send logs to a Rollbar account\n  * Added HtmlFormatter to send prettier log emails with colors for each log level\n  * Added GitProcessor to add the current branch/commit to extra record data\n  * Added a Monolog\\Registry class to allow easier global access to pre-configured loggers\n  * Added support for the new official graylog2/gelf-php lib for GelfHandler, upgrade if you can by replacing the mlehner/gelf-php requirement\n  * Added support for HHVM\n  * Added support for Loggly batch uploads\n  * Added support for tweaking the content type and encoding in NativeMailerHandler\n  * Added $skipClassesPartials to tweak the ignored classes in the IntrospectionProcessor\n  * Fixed batch request support in GelfHandler\n\n### 1.7.0 (2013-11-14)\n\n  * Added ElasticSearchHandler to send logs to an Elastic Search server\n  * Added DynamoDbHandler and ScalarFormatter to send logs to Amazon's Dynamo DB\n  * Added SyslogUdpHandler to send logs to a remote syslogd server\n  * Added LogglyHandler to send logs to a Loggly account\n  * Added $level to IntrospectionProcessor so it only adds backtraces when needed\n  * Added $version to LogstashFormatter to allow using the new v1 Logstash format\n  * Added $appName to NewRelicHandler\n  * Added configuration of Pushover notification retries/expiry\n  * Added $maxColumnWidth to NativeMailerHandler to change the 70 chars default\n  * Added chainability to most setters for all handlers\n  * Fixed RavenHandler batch processing so it takes the message from the record with highest priority\n  * Fixed HipChatHandler batch processing so it sends all messages at once\n  * Fixed issues with eAccelerator\n  * Fixed and improved many small things\n\n### 1.6.0 (2013-07-29)\n\n  * Added HipChatHandler to send logs to a HipChat chat room\n  * Added ErrorLogHandler to send logs to PHP's error_log function\n  * Added NewRelicHandler to send logs to NewRelic's service\n  * Added Monolog\\ErrorHandler helper class to register a Logger as exception/error/fatal handler\n  * Added ChannelLevelActivationStrategy for the FingersCrossedHandler to customize levels by channel\n  * Added stack traces output when normalizing exceptions (json output & co)\n  * Added Monolog\\Logger::API constant (currently 1)\n  * Added support for ChromePHP's v4.0 extension\n  * Added support for message priorities in PushoverHandler, see $highPriorityLevel and $emergencyLevel\n  * Added support for sending messages to multiple users at once with the PushoverHandler\n  * Fixed RavenHandler's support for batch sending of messages (when behind a Buffer or FingersCrossedHandler)\n  * Fixed normalization of Traversables with very large data sets, only the first 1000 items are shown now\n  * Fixed issue in RotatingFileHandler when an open_basedir restriction is active\n  * Fixed minor issues in RavenHandler and bumped the API to Raven 0.5.0\n  * Fixed SyslogHandler issue when many were used concurrently with different facilities\n\n### 1.5.0 (2013-04-23)\n\n  * Added ProcessIdProcessor to inject the PID in log records\n  * Added UidProcessor to inject a unique identifier to all log records of one request/run\n  * Added support for previous exceptions in the LineFormatter exception serialization\n  * Added Monolog\\Logger::getLevels() to get all available levels\n  * Fixed ChromePHPHandler so it avoids sending headers larger than Chrome can handle\n\n### 1.4.1 (2013-04-01)\n\n  * Fixed exception formatting in the LineFormatter to be more minimalistic\n  * Fixed RavenHandler's handling of context/extra data, requires Raven client >0.1.0\n  * Fixed log rotation in RotatingFileHandler to work with long running scripts spanning multiple days\n  * Fixed WebProcessor array access so it checks for data presence\n  * Fixed Buffer, Group and FingersCrossed handlers to make use of their processors\n\n### 1.4.0 (2013-02-13)\n\n  * Added RedisHandler to log to Redis via the Predis library or the phpredis extension\n  * Added ZendMonitorHandler to log to the Zend Server monitor\n  * Added the possibility to pass arrays of handlers and processors directly in the Logger constructor\n  * Added `$useSSL` option to the PushoverHandler which is enabled by default\n  * Fixed ChromePHPHandler and FirePHPHandler issue when multiple instances are used simultaneously\n  * Fixed header injection capability in the NativeMailHandler\n\n### 1.3.1 (2013-01-11)\n\n  * Fixed LogstashFormatter to be usable with stream handlers\n  * Fixed GelfMessageFormatter levels on Windows\n\n### 1.3.0 (2013-01-08)\n\n  * Added PSR-3 compliance, the `Monolog\\Logger` class is now an instance of `Psr\\Log\\LoggerInterface`\n  * Added PsrLogMessageProcessor that you can selectively enable for full PSR-3 compliance\n  * Added LogstashFormatter (combine with SocketHandler or StreamHandler to send logs to Logstash)\n  * Added PushoverHandler to send mobile notifications\n  * Added CouchDBHandler and DoctrineCouchDBHandler\n  * Added RavenHandler to send data to Sentry servers\n  * Added support for the new MongoClient class in MongoDBHandler\n  * Added microsecond precision to log records' timestamps\n  * Added `$flushOnOverflow` param to BufferHandler to flush by batches instead of losing\n    the oldest entries\n  * Fixed normalization of objects with cyclic references\n\n### 1.2.1 (2012-08-29)\n\n  * Added new $logopts arg to SyslogHandler to provide custom openlog options\n  * Fixed fatal error in SyslogHandler\n\n### 1.2.0 (2012-08-18)\n\n  * Added AmqpHandler (for use with AMQP servers)\n  * Added CubeHandler\n  * Added NativeMailerHandler::addHeader() to send custom headers in mails\n  * Added the possibility to specify more than one recipient in NativeMailerHandler\n  * Added the possibility to specify float timeouts in SocketHandler\n  * Added NOTICE and EMERGENCY levels to conform with RFC 5424\n  * Fixed the log records to use the php default timezone instead of UTC\n  * Fixed BufferHandler not being flushed properly on PHP fatal errors\n  * Fixed normalization of exotic resource types\n  * Fixed the default format of the SyslogHandler to avoid duplicating datetimes in syslog\n\n### 1.1.0 (2012-04-23)\n\n  * Added Monolog\\Logger::isHandling() to check if a handler will\n    handle the given log level\n  * Added ChromePHPHandler\n  * Added MongoDBHandler\n  * Added GelfHandler (for use with Graylog2 servers)\n  * Added SocketHandler (for use with syslog-ng for example)\n  * Added NormalizerFormatter\n  * Added the possibility to change the activation strategy of the FingersCrossedHandler\n  * Added possibility to show microseconds in logs\n  * Added `server` and `referer` to WebProcessor output\n\n### 1.0.2 (2011-10-24)\n\n  * Fixed bug in IE with large response headers and FirePHPHandler\n\n### 1.0.1 (2011-08-25)\n\n  * Added MemoryPeakUsageProcessor and MemoryUsageProcessor\n  * Added Monolog\\Logger::getName() to get a logger's channel name\n\n### 1.0.0 (2011-07-06)\n\n  * Added IntrospectionProcessor to get info from where the logger was called\n  * Fixed WebProcessor in CLI\n\n### 1.0.0-RC1 (2011-07-01)\n\n  * Initial release\n\n\n--- File Index 21: extensions/elasticSearch/vendor/monolog/monolog/README.md ---\n# Monolog - Logging for PHP [![Build Status](https://img.shields.io/travis/Seldaek/monolog.svg)](https://travis-ci.org/Seldaek/monolog)\n\n[![Total Downloads](https://img.shields.io/packagist/dt/monolog/monolog.svg)](https://packagist.org/packages/monolog/monolog)\n[![Latest Stable Version](https://img.shields.io/packagist/v/monolog/monolog.svg)](https://packagist.org/packages/monolog/monolog)\n[![Reference Status](https://www.versioneye.com/php/monolog:monolog/reference_badge.svg)](https://www.versioneye.com/php/monolog:monolog/references)\n\n\nMonolog sends your logs to files, sockets, inboxes, databases and various\nweb services. See the complete list of handlers below. Special handlers\nallow you to build advanced logging strategies.\n\nThis library implements the [PSR-3](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md)\ninterface that you can type-hint against in your own libraries to keep\na maximum of interoperability. You can also use it in your applications to\nmake sure you can always use another compatible logger at a later time.\nAs of 1.11.0 Monolog public APIs will also accept PSR-3 log levels.\nInternally Monolog still uses its own level scheme since it predates PSR-3.\n\n## Installation\n\nInstall the latest version with\n\n```bash\n$ composer require monolog/monolog\n```\n\n## Basic Usage\n\n```php\n<?php\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\n\n// create a log channel\n$log = new Logger('name');\n$log->pushHandler(new StreamHandler('path/to/your.log', Logger::WARNING));\n\n// add records to the log\n$log->addWarning('Foo');\n$log->addError('Bar');\n```\n\n## Documentation\n\n- [Usage Instructions](doc/01-usage.md)\n- [Handlers, Formatters and Processors](doc/02-handlers-formatters-processors.md)\n- [Utility classes](doc/03-utilities.md)\n- [Extending Monolog](doc/04-extending.md)\n\n## Third Party Packages\n\nThird party handlers, formatters and processors are\n[listed in the wiki](https://github.com/Seldaek/monolog/wiki/Third-Party-Packages). You\ncan also add your own there if you publish one.\n\n## About\n\n### Requirements\n\n- Monolog works with PHP 5.3 or above, and is also tested to work with HHVM.\n\n### Submitting bugs and feature requests\n\nBugs and feature request are tracked on [GitHub](https://github.com/Seldaek/monolog/issues)\n\n### Framework Integrations\n\n- Frameworks and libraries using [PSR-3](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md)\n  can be used very easily with Monolog since it implements the interface.\n- [Symfony2](http://symfony.com) comes out of the box with Monolog.\n- [Silex](http://silex.sensiolabs.org/) comes out of the box with Monolog.\n- [Laravel 4 & 5](http://laravel.com/) come out of the box with Monolog.\n- [Lumen](http://lumen.laravel.com/) comes out of the box with Monolog.\n- [PPI](http://www.ppi.io/) comes out of the box with Monolog.\n- [CakePHP](http://cakephp.org/) is usable with Monolog via the [cakephp-monolog](https://github.com/jadb/cakephp-monolog) plugin.\n- [Slim](http://www.slimframework.com/) is usable with Monolog via the [Slim-Monolog](https://github.com/Flynsarmy/Slim-Monolog) log writer.\n- [XOOPS 2.6](http://xoops.org/) comes out of the box with Monolog.\n- [Aura.Web_Project](https://github.com/auraphp/Aura.Web_Project) comes out of the box with Monolog.\n- [Nette Framework](http://nette.org/en/) can be used with Monolog via [Kdyby/Monolog](https://github.com/Kdyby/Monolog) extension.\n- [Proton Micro Framework](https://github.com/alexbilbie/Proton) comes out of the box with Monolog.\n\n### Author\n\nJordi Boggiano - <j.boggiano@seld.be> - <http://twitter.com/seldaek><br />\nSee also the list of [contributors](https://github.com/Seldaek/monolog/contributors) which participated in this project.\n\n### License\n\nMonolog is licensed under the MIT License - see the `LICENSE` file for details\n\n### Acknowledgements\n\nThis library is heavily inspired by Python's [Logbook](http://packages.python.org/Logbook/)\nlibrary, although most concepts have been adjusted to fit to the PHP world.\n\n\n--- File Index 22: extensions/elasticSearch/vendor/monolog/monolog/doc/01-usage.md ---\n# Using Monolog\n\n- [Installation](#installation)\n- [Core Concepts](#core-concepts)\n- [Log Levels](#log-levels)\n- [Configuring a logger](#configuring-a-logger)\n- [Adding extra data in the records](#adding-extra-data-in-the-records)\n- [Leveraging channels](#leveraging-channels)\n- [Customizing the log format](#customizing-the-log-format)\n\n## Installation\n\nMonolog is available on Packagist ([monolog/monolog](http://packagist.org/packages/monolog/monolog))\nand as such installable via [Composer](http://getcomposer.org/).\n\n```bash\ncomposer require monolog/monolog\n```\n\nIf you do not use Composer, you can grab the code from GitHub, and use any\nPSR-0 compatible autoloader (e.g. the [Symfony2 ClassLoader component](https://github.com/symfony/ClassLoader))\nto load Monolog classes.\n\n## Core Concepts\n\nEvery `Logger` instance has a channel (name) and a stack of handlers. Whenever\nyou add a record to the logger, it traverses the handler stack. Each handler\ndecides whether it fully handled the record, and if so, the propagation of the\nrecord ends there.\n\nThis allows for flexible logging setups, for example having a `StreamHandler` at\nthe bottom of the stack that will log anything to disk, and on top of that add\na `MailHandler` that will send emails only when an error message is logged.\nHandlers also have a `$bubble` property which defines whether they block the\nrecord or not if they handled it. In this example, setting the `MailHandler`'s\n`$bubble` argument to false means that records handled by the `MailHandler` will\nnot propagate to the `StreamHandler` anymore.\n\nYou can create many `Logger`s, each defining a channel (e.g.: db, request,\nrouter, ..) and each of them combining various handlers, which can be shared\nor not. The channel is reflected in the logs and allows you to easily see or\nfilter records.\n\nEach Handler also has a Formatter, a default one with settings that make sense\nwill be created if you don't set one. The formatters normalize and format\nincoming records so that they can be used by the handlers to output useful\ninformation.\n\nCustom severity levels are not available. Only the eight\n[RFC 5424](http://tools.ietf.org/html/rfc5424) levels (debug, info, notice,\nwarning, error, critical, alert, emergency) are present for basic filtering\npurposes, but for sorting and other use cases that would require\nflexibility, you should add Processors to the Logger that can add extra\ninformation (tags, user ip, ..) to the records before they are handled.\n\n## Log Levels\n\nMonolog supports the logging levels described by [RFC 5424](http://tools.ietf.org/html/rfc5424).\n\n- **DEBUG** (100): Detailed debug information.\n\n- **INFO** (200): Interesting events. Examples: User logs in, SQL logs.\n\n- **NOTICE** (250): Normal but significant events.\n\n- **WARNING** (300): Exceptional occurrences that are not errors. Examples:\n  Use of deprecated APIs, poor use of an API, undesirable things that are not\n  necessarily wrong.\n\n- **ERROR** (400): Runtime errors that do not require immediate action but\n  should typically be logged and monitored.\n\n- **CRITICAL** (500): Critical conditions. Example: Application component\n  unavailable, unexpected exception.\n\n- **ALERT** (550): Action must be taken immediately. Example: Entire website\n  down, database unavailable, etc. This should trigger the SMS alerts and wake\n  you up.\n\n- **EMERGENCY** (600): Emergency: system is unusable.\n\n## Configuring a logger\n\nHere is a basic setup to log to a file and to firephp on the DEBUG level:\n\n```php\n<?php\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Handler\\FirePHPHandler;\n\n// Create the logger\n$logger = new Logger('my_logger');\n// Now add some handlers\n$logger->pushHandler(new StreamHandler(__DIR__.'/my_app.log', Logger::DEBUG));\n$logger->pushHandler(new FirePHPHandler());\n\n// You can now use your logger\n$logger->addInfo('My logger is now ready');\n```\n\nLet's explain it. The first step is to create the logger instance which will\nbe used in your code. The argument is a channel name, which is useful when\nyou use several loggers (see below for more details about it).\n\nThe logger itself does not know how to handle a record. It delegates it to\nsome handlers. The code above registers two handlers in the stack to allow\nhandling records in two different ways.\n\nNote that the FirePHPHandler is called first as it is added on top of the\nstack. This allows you to temporarily add a logger with bubbling disabled if\nyou want to override other configured loggers.\n\n> If you use Monolog standalone and are looking for an easy way to\n> configure many handlers, the [theorchard/monolog-cascade](https://github.com/theorchard/monolog-cascade)\n> can help you build complex logging configs via PHP arrays, yaml or json configs.\n\n## Adding extra data in the records\n\nMonolog provides two different ways to add extra informations along the simple\ntextual message.\n\n### Using the logging context\n\nThe first way is the context, allowing to pass an array of data along the\nrecord:\n\n```php\n<?php\n\n$logger->addInfo('Adding a new user', array('username' => 'Seldaek'));\n```\n\nSimple handlers (like the StreamHandler for instance) will simply format\nthe array to a string but richer handlers can take advantage of the context\n(FirePHP is able to display arrays in pretty way for instance).\n\n### Using processors\n\nThe second way is to add extra data for all records by using a processor.\nProcessors can be any callable. They will get the record as parameter and\nmust return it after having eventually changed the `extra` part of it. Let's\nwrite a processor adding some dummy data in the record:\n\n```php\n<?php\n\n$logger->pushProcessor(function ($record) {\n    $record['extra']['dummy'] = 'Hello world!';\n\n    return $record;\n});\n```\n\nMonolog provides some built-in processors that can be used in your project.\nLook at the [dedicated chapter](https://github.com/Seldaek/monolog/blob/master/doc/02-handlers-formatters-processors.md#processors) for the list.\n\n> Tip: processors can also be registered on a specific handler instead of\n  the logger to apply only for this handler.\n\n## Leveraging channels\n\nChannels are a great way to identify to which part of the application a record\nis related. This is useful in big applications (and is leveraged by\nMonologBundle in Symfony2).\n\nPicture two loggers sharing a handler that writes to a single log file.\nChannels would allow you to identify the logger that issued every record.\nYou can easily grep through the log files filtering this or that channel.\n\n```php\n<?php\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Handler\\FirePHPHandler;\n\n// Create some handlers\n$stream = new StreamHandler(__DIR__.'/my_app.log', Logger::DEBUG);\n$firephp = new FirePHPHandler();\n\n// Create the main logger of the app\n$logger = new Logger('my_logger');\n$logger->pushHandler($stream);\n$logger->pushHandler($firephp);\n\n// Create a logger for the security-related stuff with a different channel\n$securityLogger = new Logger('security');\n$securityLogger->pushHandler($stream);\n$securityLogger->pushHandler($firephp);\n\n// Or clone the first one to only change the channel\n$securityLogger = $logger->withName('security');\n```\n\n## Customizing the log format\n\nIn Monolog it's easy to customize the format of the logs written into files,\nsockets, mails, databases and other handlers. Most of the handlers use the\n\n```php\n$record['formatted']\n```\n\nvalue to be automatically put into the log device. This value depends on the\nformatter settings. You can choose between predefined formatter classes or\nwrite your own (e.g. a multiline text file for human-readable output).\n\nTo configure a predefined formatter class, just set it as the handler's field:\n\n```php\n// the default date format is \"Y-m-d H:i:s\"\n$dateFormat = \"Y n j, g:i a\";\n// the default output format is \"[%datetime%] %channel%.%level_name%: %message% %context% %extra%\\n\"\n$output = \"%datetime% > %level_name% > %message% %context% %extra%\\n\";\n// finally, create a formatter\n$formatter = new LineFormatter($output, $dateFormat);\n\n// Create a handler\n$stream = new StreamHandler(__DIR__.'/my_app.log', Logger::DEBUG);\n$stream->setFormatter($formatter);\n// bind it to a logger object\n$securityLogger = new Logger('security');\n$securityLogger->pushHandler($stream);\n```\n\nYou may also reuse the same formatter between multiple handlers and share those\nhandlers between multiple loggers.\n\n[Handlers, Formatters and Processors](02-handlers-formatters-processors.md) &rarr;\n\n\n--- File Index 23: extensions/elasticSearch/vendor/monolog/monolog/doc/02-handlers-formatters-processors.md ---\n# Handlers, Formatters and Processors\n\n- [Handlers](#handlers)\n  - [Log to files and syslog](#log-to-files-and-syslog)\n  - [Send alerts and emails](#send-alerts-and-emails)\n  - [Log specific servers and networked logging](#log-specific-servers-and-networked-logging)\n  - [Logging in development](#logging-in-development)\n  - [Log to databases](#log-to-databases)\n  - [Wrappers / Special Handlers](#wrappers--special-handlers)\n- [Formatters](#formatters)\n- [Processors](#processors)\n- [Third Party Packages](#third-party-packages)\n\n## Handlers\n\n### Log to files and syslog\n\n- _StreamHandler_: Logs records into any PHP stream, use this for log files.\n- _RotatingFileHandler_: Logs records to a file and creates one logfile per day.\n  It will also delete files older than `$maxFiles`. You should use\n  [logrotate](http://linuxcommand.org/man_pages/logrotate8.html) for high profile\n  setups though, this is just meant as a quick and dirty solution.\n- _SyslogHandler_: Logs records to the syslog.\n- _ErrorLogHandler_: Logs records to PHP's\n  [`error_log()`](http://docs.php.net/manual/en/function.error-log.php) function.\n\n### Send alerts and emails\n\n- _NativeMailerHandler_: Sends emails using PHP's\n  [`mail()`](http://php.net/manual/en/function.mail.php) function.\n- _SwiftMailerHandler_: Sends emails using a [`Swift_Mailer`](http://swiftmailer.org/) instance.\n- _PushoverHandler_: Sends mobile notifications via the [Pushover](https://www.pushover.net/) API.\n- _HipChatHandler_: Logs records to a [HipChat](http://hipchat.com) chat room using its API.\n- _FlowdockHandler_: Logs records to a [Flowdock](https://www.flowdock.com/) account.\n- _SlackHandler_: Logs records to a [Slack](https://www.slack.com/) account using the Slack API.\n- _SlackbotHandler_: Logs records to a [Slack](https://www.slack.com/) account using the Slackbot incoming hook.\n- _SlackWebhookHandler_: Logs records to a [Slack](https://www.slack.com/) account using Slack Webhooks.\n- _MandrillHandler_: Sends emails via the Mandrill API using a [`Swift_Message`](http://swiftmailer.org/) instance.\n- _FleepHookHandler_: Logs records to a [Fleep](https://fleep.io/) conversation using Webhooks.\n- _IFTTTHandler_: Notifies an [IFTTT](https://ifttt.com/maker) trigger with the log channel, level name and message.\n\n### Log specific servers and networked logging\n\n- _SocketHandler_: Logs records to [sockets](http://php.net/fsockopen), use this\n  for UNIX and TCP sockets. See an [example](sockets.md).\n- _AmqpHandler_: Logs records to an [amqp](http://www.amqp.org/) compatible\n  server. Requires the [php-amqp](http://pecl.php.net/package/amqp) extension (1.0+).\n- _GelfHandler_: Logs records to a [Graylog2](http://www.graylog2.org) server.\n- _CubeHandler_: Logs records to a [Cube](http://square.github.com/cube/) server.\n- _RavenHandler_: Logs records to a [Sentry](http://getsentry.com/) server using\n  [raven](https://packagist.org/packages/raven/raven).\n- _ZendMonitorHandler_: Logs records to the Zend Monitor present in Zend Server.\n- _NewRelicHandler_: Logs records to a [NewRelic](http://newrelic.com/) application.\n- _LogglyHandler_: Logs records to a [Loggly](http://www.loggly.com/) account.\n- _RollbarHandler_: Logs records to a [Rollbar](https://rollbar.com/) account.\n- _SyslogUdpHandler_: Logs records to a remote [Syslogd](http://www.rsyslog.com/) server.\n- _LogEntriesHandler_: Logs records to a [LogEntries](http://logentries.com/) account.\n\n### Logging in development\n\n- _FirePHPHandler_: Handler for [FirePHP](http://www.firephp.org/), providing\n  inline `console` messages within [FireBug](http://getfirebug.com/).\n- _ChromePHPHandler_: Handler for [ChromePHP](http://www.chromephp.com/), providing\n  inline `console` messages within Chrome.\n- _BrowserConsoleHandler_: Handler to send logs to browser's Javascript `console` with\n  no browser extension required. Most browsers supporting `console` API are supported.\n- _PHPConsoleHandler_: Handler for [PHP Console](https://chrome.google.com/webstore/detail/php-console/nfhmhhlpfleoednkpnnnkolmclajemef), providing\n  inline `console` and notification popup messages within Chrome.\n\n### Log to databases\n\n- _RedisHandler_: Logs records to a [redis](http://redis.io) server.\n- _MongoDBHandler_: Handler to write records in MongoDB via a\n  [Mongo](http://pecl.php.net/package/mongo) extension connection.\n- _CouchDBHandler_: Logs records to a CouchDB server.\n- _DoctrineCouchDBHandler_: Logs records to a CouchDB server via the Doctrine CouchDB ODM.\n- _ElasticSearchHandler_: Logs records to an Elastic Search server.\n- _DynamoDbHandler_: Logs records to a DynamoDB table with the [AWS SDK](https://github.com/aws/aws-sdk-php).\n\n### Wrappers / Special Handlers\n\n- _FingersCrossedHandler_: A very interesting wrapper. It takes a logger as\n  parameter and will accumulate log records of all levels until a record\n  exceeds the defined severity level. At which point it delivers all records,\n  including those of lower severity, to the handler it wraps. This means that\n  until an error actually happens you will not see anything in your logs, but\n  when it happens you will have the full information, including debug and info\n  records. This provides you with all the information you need, but only when\n  you need it.\n- _DeduplicationHandler_: Useful if you are sending notifications or emails\n  when critical errors occur. It takes a logger as parameter and will\n  accumulate log records of all levels until the end of the request (or\n  `flush()` is called). At that point it delivers all records to the handler\n  it wraps, but only if the records are unique over a given time period\n  (60seconds by default). If the records are duplicates they are simply\n  discarded. The main use of this is in case of critical failure like if your\n  database is unreachable for example all your requests will fail and that\n  can result in a lot of notifications being sent. Adding this handler reduces\n  the amount of notifications to a manageable level.\n- _WhatFailureGroupHandler_: This handler extends the _GroupHandler_ ignoring\n   exceptions raised by each child handler. This allows you to ignore issues\n   where a remote tcp connection may have died but you do not want your entire\n   application to crash and may wish to continue to log to other handlers.\n- _BufferHandler_: This handler will buffer all the log records it receives\n  until `close()` is called at which point it will call `handleBatch()` on the\n  handler it wraps with all the log messages at once. This is very useful to\n  send an email with all records at once for example instead of having one mail\n  for every log record.\n- _GroupHandler_: This handler groups other handlers. Every record received is\n  sent to all the handlers it is configured with.\n- _FilterHandler_: This handler only lets records of the given levels through\n   to the wrapped handler.\n- _SamplingHandler_: Wraps around another handler and lets you sample records\n   if you only want to store some of them.\n- _NullHandler_: Any record it can handle will be thrown away. This can be used\n  to put on top of an existing handler stack to disable it temporarily.\n- _PsrHandler_: Can be used to forward log records to an existing PSR-3 logger\n- _TestHandler_: Used for testing, it records everything that is sent to it and\n  has accessors to read out the information.\n- _HandlerWrapper_: A simple handler wrapper you can inherit from to create\n your own wrappers easily.\n\n## Formatters\n\n- _LineFormatter_: Formats a log record into a one-line string.\n- _HtmlFormatter_: Used to format log records into a human readable html table, mainly suitable for emails.\n- _NormalizerFormatter_: Normalizes objects/resources down to strings so a record can easily be serialized/encoded.\n- _ScalarFormatter_: Used to format log records into an associative array of scalar values.\n- _JsonFormatter_: Encodes a log record into json.\n- _WildfireFormatter_: Used to format log records into the Wildfire/FirePHP protocol, only useful for the FirePHPHandler.\n- _ChromePHPFormatter_: Used to format log records into the ChromePHP format, only useful for the ChromePHPHandler.\n- _GelfMessageFormatter_: Used to format log records into Gelf message instances, only useful for the GelfHandler.\n- _LogstashFormatter_: Used to format log records into [logstash](http://logstash.net/) event json, useful for any handler listed under inputs [here](http://logstash.net/docs/latest).\n- _ElasticaFormatter_: Used to format log records into an Elastica\\Document object, only useful for the ElasticSearchHandler.\n- _LogglyFormatter_: Used to format log records into Loggly messages, only useful for the LogglyHandler.\n- _FlowdockFormatter_: Used to format log records into Flowdock messages, only useful for the FlowdockHandler.\n- _MongoDBFormatter_: Converts \\DateTime instances to \\MongoDate and objects recursively to arrays, only useful with the MongoDBHandler.\n\n## Processors\n\n- _PsrLogMessageProcessor_: Processes a log record's message according to PSR-3 rules, replacing `{foo}` with the value from `$context['foo']`.\n- _IntrospectionProcessor_: Adds the line/file/class/method from which the log call originated.\n- _WebProcessor_: Adds the current request URI, request method and client IP to a log record.\n- _MemoryUsageProcessor_: Adds the current memory usage to a log record.\n- _MemoryPeakUsageProcessor_: Adds the peak memory usage to a log record.\n- _ProcessIdProcessor_: Adds the process id to a log record.\n- _UidProcessor_: Adds a unique identifier to a log record.\n- _GitProcessor_: Adds the current git branch and commit to a log record.\n- _TagProcessor_: Adds an array of predefined tags to a log record.\n\n## Third Party Packages\n\nThird party handlers, formatters and processors are\n[listed in the wiki](https://github.com/Seldaek/monolog/wiki/Third-Party-Packages). You\ncan also add your own there if you publish one.\n\n&larr; [Usage](01-usage.md) |  [Utility classes](03-utilities.md) &rarr;\n\n\n--- File Index 24: extensions/elasticSearch/vendor/monolog/monolog/doc/03-utilities.md ---\n# Utilities\n\n- _Registry_: The `Monolog\\Registry` class lets you configure global loggers that you\n  can then statically access from anywhere. It is not really a best practice but can\n  help in some older codebases or for ease of use.\n- _ErrorHandler_: The `Monolog\\ErrorHandler` class allows you to easily register\n  a Logger instance as an exception handler, error handler or fatal error handler.\n- _ErrorLevelActivationStrategy_: Activates a FingersCrossedHandler when a certain log\n  level is reached.\n- _ChannelLevelActivationStrategy_: Activates a FingersCrossedHandler when a certain\n  log level is reached, depending on which channel received the log record.\n\n&larr; [Handlers, Formatters and Processors](02-handlers-formatters-processors.md) |  [Extending Monolog](04-extending.md) &rarr;\n\n\n--- File Index 25: extensions/elasticSearch/vendor/monolog/monolog/doc/04-extending.md ---\n# Extending Monolog\n\nMonolog is fully extensible, allowing you to adapt your logger to your needs.\n\n## Writing your own handler\n\nMonolog provides many built-in handlers. But if the one you need does not\nexist, you can write it and use it in your logger. The only requirement is\nto implement `Monolog\\Handler\\HandlerInterface`.\n\nLet's write a PDOHandler to log records to a database. We will extend the\nabstract class provided by Monolog to keep things DRY.\n\n```php\n<?php\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\AbstractProcessingHandler;\n\nclass PDOHandler extends AbstractProcessingHandler\n{\n    private $initialized = false;\n    private $pdo;\n    private $statement;\n\n    public function __construct(PDO $pdo, $level = Logger::DEBUG, $bubble = true)\n    {\n        $this->pdo = $pdo;\n        parent::__construct($level, $bubble);\n    }\n\n    protected function write(array $record)\n    {\n        if (!$this->initialized) {\n            $this->initialize();\n        }\n\n        $this->statement->execute(array(\n            'channel' => $record['channel'],\n            'level' => $record['level'],\n            'message' => $record['formatted'],\n            'time' => $record['datetime']->format('U'),\n        ));\n    }\n\n    private function initialize()\n    {\n        $this->pdo->exec(\n            'CREATE TABLE IF NOT EXISTS monolog '\n            .'(channel VARCHAR(255), level INTEGER, message LONGTEXT, time INTEGER UNSIGNED)'\n        );\n        $this->statement = $this->pdo->prepare(\n            'INSERT INTO monolog (channel, level, message, time) VALUES (:channel, :level, :message, :time)'\n        );\n\n        $this->initialized = true;\n    }\n}\n```\n\nYou can now use this handler in your logger:\n\n```php\n<?php\n\n$logger->pushHandler(new PDOHandler(new PDO('sqlite:logs.sqlite')));\n\n// You can now use your logger\n$logger->addInfo('My logger is now ready');\n```\n\nThe `Monolog\\Handler\\AbstractProcessingHandler` class provides most of the\nlogic needed for the handler, including the use of processors and the formatting\nof the record (which is why we use ``$record['formatted']`` instead of ``$record['message']``).\n\n&larr; [Utility classes](03-utilities.md)\n\n\n--- File Index 26: extensions/elasticSearch/vendor/monolog/monolog/doc/sockets.md ---\nSockets Handler\n===============\n\nThis handler allows you to write your logs to sockets using [fsockopen](http://php.net/fsockopen)\nor [pfsockopen](http://php.net/pfsockopen).\n\nPersistent sockets are mainly useful in web environments where you gain some performance not closing/opening\nthe connections between requests.\n\nYou can use a `unix://` prefix to access unix sockets and `udp://` to open UDP sockets instead of the default TCP.\n\nBasic Example\n-------------\n\n```php\n<?php\n\nuse Monolog\\Logger;\nuse Monolog\\Handler\\SocketHandler;\n\n// Create the logger\n$logger = new Logger('my_logger');\n\n// Create the handler\n$handler = new SocketHandler('unix:///var/log/httpd_app_log.socket');\n$handler->setPersistent(true);\n\n// Now add the handler\n$logger->pushHandler($handler, Logger::DEBUG);\n\n// You can now use your logger\n$logger->addInfo('My logger is now ready');\n\n```\n\nIn this example, using syslog-ng, you should see the log on the log server:\n\n    cweb1 [2012-02-26 00:12:03] my_logger.INFO: My logger is now ready [] []\n\n\n\n--- File Index 27: extensions/elasticSearch/vendor/psr/log/README.md ---\nPSR Log\n=======\n\nThis repository holds all interfaces/classes/traits related to\n[PSR-3](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md).\n\nNote that this is not a logger of its own. It is merely an interface that\ndescribes a logger. See the specification for more details.\n\nUsage\n-----\n\nIf you need a logger, you can use the interface like this:\n\n```php\n<?php\n\nuse Psr\\Log\\LoggerInterface;\n\nclass Foo\n{\n    private $logger;\n\n    public function __construct(LoggerInterface $logger = null)\n    {\n        $this->logger = $logger;\n    }\n\n    public function doSomething()\n    {\n        if ($this->logger) {\n            $this->logger->info('Doing work');\n        }\n\n        // do something useful\n    }\n}\n```\n\nYou can then pick one of the implementations of the interface to get a logger.\n\nIf you want to implement the interface, you can require this package and\nimplement `Psr\\Log\\LoggerInterface` in your code. Please read the\n[specification text](https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md)\nfor details.\n\n\n--- File Index 28: extensions/elasticSearch/vendor/react/promise/.travis.yml ---\nlanguage: php\n\nphp:\n  - 5.4\n  - 5.5\n  - 5.6\n  - 7.0\n  - nightly\n  - hhvm\n\nbefore_install:\n  - composer self-update\n\ninstall:\n  - composer install\n\nscript:\n  - ./vendor/bin/phpunit -v --coverage-text --coverage-clover=./build/logs/clover.xml\n\nafter_script:\n  - if [ -f ./build/logs/clover.xml ]; then travis_retry composer require satooshi/php-coveralls --no-interaction --update-with-dependencies; fi\n  - if [ -f ./build/logs/clover.xml ]; then php vendor/bin/coveralls -v; fi\n\n\n--- File Index 29: extensions/elasticSearch/vendor/react/promise/CHANGELOG.md ---\nCHANGELOG for 2.x\n=================\n\n* 2.5.1 (2017-03-25)\n\n    * Fix circular references when resolving with a promise which follows\n      itself (#94).\n\n* 2.5.0 (2016-12-22)\n\n    * Revert automatic cancellation of pending collection promises once the\n      output promise resolves. This was introduced in 42d86b7 (PR #36, released\n      in [v2.3.0](https://github.com/reactphp/promise/releases/tag/v2.3.0)) and\n      was both unintended and backward incompatible.\n\n      If you need automatic cancellation, you can use something like:\n\n      ```php\n      function allAndCancel(array $promises)\n      {\n           return \\React\\Promise\\all($promises)\n               ->always(function() use ($promises) {\n                   foreach ($promises as $promise) {\n                       if ($promise instanceof \\React\\Promise\\CancellablePromiseInterface) {\n                           $promise->cancel();\n                       }\n                   }\n              });\n      }\n      ```\n    * `all()` and `map()` functions now preserve the order of the array (#77).\n    * Fix circular references when resolving a promise with itself (#71).\n\n* 2.4.1 (2016-05-03)\n\n    * Fix `some()` not cancelling pending promises when too much input promises\n      reject (16ff799).\n\n* 2.4.0 (2016-03-31)\n\n    * Support foreign thenables in `resolve()`.\n      Any object that provides a `then()` method is now assimilated to a trusted\n      promise that follows the state of this thenable (#52).\n    * Fix `some()` and `any()` for input arrays containing not enough items\n      (#34).\n\n* 2.3.0 (2016-03-24)\n\n    * Allow cancellation of promises returned by functions working on promise\n      collections (#36).\n    * Handle `\\Throwable` in the same way as `\\Exception` (#51 by @joshdifabio).\n\n* 2.2.2 (2016-02-26)\n\n    * Fix cancellation handlers called multiple times (#47 by @clue).\n\n* 2.2.1 (2015-07-03)\n\n    * Fix stack error when resolving a promise in its own fulfillment or\n      rejection handlers.\n\n* 2.2.0 (2014-12-30)\n\n    * Introduce new `ExtendedPromiseInterface` implemented by all promises.\n    * Add new `done()` method (part of the `ExtendedPromiseInterface`).\n    * Add new `otherwise()` method (part of the `ExtendedPromiseInterface`).\n    * Add new `always()` method (part of the `ExtendedPromiseInterface`).\n    * Add new `progress()` method (part of the `ExtendedPromiseInterface`).\n    * Rename `Deferred::progress` to `Deferred::notify` to avoid confusion with\n      `ExtendedPromiseInterface::progress` (a `Deferred::progress` alias is\n      still available for backward compatibility)\n    * `resolve()` now always returns a `ExtendedPromiseInterface`.\n\n* 2.1.0 (2014-10-15)\n\n    * Introduce new `CancellablePromiseInterface` implemented by all promises.\n    * Add new `cancel()` method (part of the `CancellablePromiseInterface`).\n\n* 2.0.0 (2013-12-10)\n\n    New major release. The goal is to streamline the API and to make it more\n    compliant with other promise libraries and especially with the new upcoming\n    [ES6 promises specification](https://github.com/domenic/promises-unwrapping/).\n\n    * Add standalone Promise class.\n    * Add new `race()` function.\n    * BC break: Bump minimum PHP version to PHP 5.4.\n    * BC break: Remove `ResolverInterface` and `PromiseInterface` from \n      `Deferred`.\n    * BC break: Change signature of `PromiseInterface`.\n    * BC break: Remove `When` and `Util` classes and move static methods to\n      functions.\n    * BC break: `FulfilledPromise` and `RejectedPromise` now throw an exception\n      when initialized with a promise instead of a value/reason.\n    * BC break: `Deferred::resolve()` and `Deferred::reject()` no longer return\n      a promise.\n\n\n--- File Index 30: extensions/elasticSearch/vendor/react/promise/README.md ---\nReact/Promise\n=============\n\nA lightweight implementation of\n[CommonJS Promises/A](http://wiki.commonjs.org/wiki/Promises/A) for PHP.\n\n[![Build Status](https://travis-ci.org/reactphp/promise.svg?branch=master)](http://travis-ci.org/reactphp/promise)\n[![Coverage Status](https://coveralls.io/repos/github/reactphp/promise/badge.svg?branch=master)](https://coveralls.io/github/reactphp/promise?branch=master)\n\nTable of Contents\n-----------------\n\n1. [Introduction](#introduction)\n2. [Concepts](#concepts)\n   * [Deferred](#deferred)\n   * [Promise](#promise)\n3. [API](#api)\n   * [Deferred](#deferred-1)\n     * [Deferred::promise()](#deferredpromise)\n     * [Deferred::resolve()](#deferredresolve)\n     * [Deferred::reject()](#deferredreject)\n     * [Deferred::notify()](#deferrednotify)\n   * [PromiseInterface](#promiseinterface)\n     * [PromiseInterface::then()](#promiseinterfacethen)\n   * [ExtendedPromiseInterface](#extendedpromiseinterface)\n        * [ExtendedPromiseInterface::done()](#extendedpromiseinterfacedone)\n        * [ExtendedPromiseInterface::otherwise()](#extendedpromiseinterfaceotherwise)\n        * [ExtendedPromiseInterface::always()](#extendedpromiseinterfacealways)\n        * [ExtendedPromiseInterface::progress()](#extendedpromiseinterfaceprogress)\n   * [CancellablePromiseInterface](#cancellablepromiseinterface)\n        * [CancellablePromiseInterface::cancel()](#cancellablepromiseinterfacecancel)\n   * [Promise](#promise-1)\n   * [FulfilledPromise](#fulfilledpromise)\n   * [RejectedPromise](#rejectedpromise)\n   * [LazyPromise](#lazypromise)\n   * [Functions](#functions)\n     * [resolve()](#resolve)\n     * [reject()](#reject)\n     * [all()](#all)\n     * [race()](#race)\n     * [any()](#any)\n     * [some()](#some)\n     * [map()](#map)\n     * [reduce()](#reduce)\n   * [PromisorInterface](#promisorinterface)\n4. [Examples](#examples)\n   * [How to use Deferred](#how-to-use-deferred)\n   * [How promise forwarding works](#how-promise-forwarding-works)\n     * [Resolution forwarding](#resolution-forwarding)\n     * [Rejection forwarding](#rejection-forwarding)\n     * [Mixed resolution and rejection forwarding](#mixed-resolution-and-rejection-forwarding)\n     * [Progress event forwarding](#progress-event-forwarding)\n   * [done() vs. then()](#done-vs-then)\n5. [Credits](#credits)\n6. [License](#license)\n\nIntroduction\n------------\n\nReact/Promise is a library implementing\n[CommonJS Promises/A](http://wiki.commonjs.org/wiki/Promises/A) for PHP.\n\nIt also provides several other useful promise-related concepts, such as joining\nmultiple promises and mapping and reducing collections of promises.\n\nIf you've never heard about promises before,\n[read this first](https://gist.github.com/3889970).\n\nConcepts\n--------\n\n### Deferred\n\nA **Deferred** represents a computation or unit of work that may not have\ncompleted yet. Typically (but not always), that computation will be something\nthat executes asynchronously and completes at some point in the future.\n\n### Promise\n\nWhile a deferred represents the computation itself, a **Promise** represents\nthe result of that computation. Thus, each deferred has a promise that acts as\na placeholder for its actual result.\n\nAPI\n---\n\n### Deferred\n\nA deferred represents an operation whose resolution is pending. It has separate\npromise and resolver parts.\n\n```php\n$deferred = new React\\Promise\\Deferred();\n\n$promise = $deferred->promise();\n\n$deferred->resolve(mixed $value = null);\n$deferred->reject(mixed $reason = null);\n$deferred->notify(mixed $update = null);\n```\n\nThe `promise` method returns the promise of the deferred.\n\nThe `resolve` and `reject` methods control the state of the deferred.\n\nThe `notify` method is for progress notification.\n\nThe constructor of the `Deferred` accepts an optional `$canceller` argument.\nSee [Promise](#promise-1) for more information.\n\n#### Deferred::promise()\n\n```php\n$promise = $deferred->promise();\n```\n\nReturns the promise of the deferred, which you can hand out to others while\nkeeping the authority to modify its state to yourself.\n\n#### Deferred::resolve()\n\n```php\n$deferred->resolve(mixed $value = null);\n```\n\nResolves the promise returned by `promise()`. All consumers are notified by\nhaving `$onFulfilled` (which they registered via `$promise->then()`) called with\n`$value`.\n\nIf `$value` itself is a promise, the promise will transition to the state of\nthis promise once it is resolved.\n\n#### Deferred::reject()\n\n```php\n$deferred->reject(mixed $reason = null);\n```\n\nRejects the promise returned by `promise()`, signalling that the deferred's\ncomputation failed.\nAll consumers are notified by having `$onRejected` (which they registered via\n`$promise->then()`) called with `$reason`.\n\nIf `$reason` itself is a promise, the promise will be rejected with the outcome\nof this promise regardless whether it fulfills or rejects.\n\n#### Deferred::notify()\n\n```php\n$deferred->notify(mixed $update = null);\n```\n\nTriggers progress notifications, to indicate to consumers that the computation\nis making progress toward its result.\n\nAll consumers are notified by having `$onProgress` (which they registered via\n`$promise->then()`) called with `$update`.\n\n### PromiseInterface\n\nThe promise interface provides the common interface for all promise\nimplementations.\n\nA promise represents an eventual outcome, which is either fulfillment (success)\nand an associated value, or rejection (failure) and an associated reason.\n\nOnce in the fulfilled or rejected state, a promise becomes immutable.\nNeither its state nor its result (or error) can be modified.\n\n#### Implementations\n\n* [Promise](#promise-1)\n* [FulfilledPromise](#fulfilledpromise)\n* [RejectedPromise](#rejectedpromise)\n* [LazyPromise](#lazypromise)\n\n#### PromiseInterface::then()\n\n```php\n$transformedPromise = $promise->then(callable $onFulfilled = null, callable $onRejected = null, callable $onProgress = null);\n```\n\nTransforms a promise's value by applying a function to the promise's fulfillment\nor rejection value. Returns a new promise for the transformed result.\n\nThe `then()` method registers new fulfilled, rejection and progress handlers\nwith a promise (all parameters are optional):\n\n  * `$onFulfilled` will be invoked once the promise is fulfilled and passed\n    the result as the first argument.\n  * `$onRejected` will be invoked once the promise is rejected and passed the\n    reason as the first argument.\n  * `$onProgress` will be invoked whenever the producer of the promise\n    triggers progress notifications and passed a single argument (whatever it\n    wants) to indicate progress.\n\nIt returns a new promise that will fulfill with the return value of either\n`$onFulfilled` or `$onRejected`, whichever is called, or will reject with\nthe thrown exception if either throws.\n\nA promise makes the following guarantees about handlers registered in\nthe same call to `then()`:\n\n  1. Only one of `$onFulfilled` or `$onRejected` will be called,\n     never both.\n  2. `$onFulfilled` and `$onRejected` will never be called more\n     than once.\n  3. `$onProgress` may be called multiple times.\n\n#### See also\n\n* [resolve()](#resolve) - Creating a resolved promise\n* [reject()](#reject) - Creating a rejected promise\n* [ExtendedPromiseInterface::done()](#extendedpromiseinterfacedone)\n* [done() vs. then()](#done-vs-then)\n\n### ExtendedPromiseInterface\n\nThe ExtendedPromiseInterface extends the PromiseInterface with useful shortcut\nand utility methods which are not part of the Promises/A specification.\n\n#### Implementations\n\n* [Promise](#promise-1)\n* [FulfilledPromise](#fulfilledpromise)\n* [RejectedPromise](#rejectedpromise)\n* [LazyPromise](#lazypromise)\n\n#### ExtendedPromiseInterface::done()\n\n```php\n$promise->done(callable $onFulfilled = null, callable $onRejected = null, callable $onProgress = null);\n```\n\nConsumes the promise's ultimate value if the promise fulfills, or handles the\nultimate error.\n\nIt will cause a fatal error if either `$onFulfilled` or `$onRejected` throw or\nreturn a rejected promise.\n\nSince the purpose of `done()` is consumption rather than transformation,\n`done()` always returns `null`.\n\n#### See also\n\n* [PromiseInterface::then()](#promiseinterfacethen)\n* [done() vs. then()](#done-vs-then)\n\n#### ExtendedPromiseInterface::otherwise()\n\n```php\n$promise->otherwise(callable $onRejected);\n```\n\nRegisters a rejection handler for promise. It is a shortcut for:\n\n```php\n$promise->then(null, $onRejected);\n```\n\nAdditionally, you can type hint the `$reason` argument of `$onRejected` to catch\nonly specific errors.\n\n```php\n$promise\n    ->otherwise(function (\\RuntimeException $reason) {\n        // Only catch \\RuntimeException instances\n        // All other types of errors will propagate automatically\n    })\n    ->otherwise(function ($reason) {\n        // Catch other errors\n    )};\n```\n\n#### ExtendedPromiseInterface::always()\n\n```php\n$newPromise = $promise->always(callable $onFulfilledOrRejected);\n```\n\nAllows you to execute \"cleanup\" type tasks in a promise chain.\n\nIt arranges for `$onFulfilledOrRejected` to be called, with no arguments,\nwhen the promise is either fulfilled or rejected.\n\n* If `$promise` fulfills, and `$onFulfilledOrRejected` returns successfully,\n  `$newPromise` will fulfill with the same value as `$promise`.\n* If `$promise` fulfills, and `$onFulfilledOrRejected` throws or returns a\n  rejected promise, `$newPromise` will reject with the thrown exception or\n  rejected promise's reason.\n* If `$promise` rejects, and `$onFulfilledOrRejected` returns successfully,\n  `$newPromise` will reject with the same reason as `$promise`.\n* If `$promise` rejects, and `$onFulfilledOrRejected` throws or returns a\n  rejected promise, `$newPromise` will reject with the thrown exception or\n  rejected promise's reason.\n\n`always()` behaves similarly to the synchronous finally statement. When combined\nwith `otherwise()`, `always()` allows you to write code that is similar to the familiar\nsynchronous catch/finally pair.\n\nConsider the following synchronous code:\n\n```php\ntry {\n  return doSomething();\n} catch(\\Exception $e) {\n    return handleError($e);\n} finally {\n    cleanup();\n}\n```\n\nSimilar asynchronous code (with `doSomething()` that returns a promise) can be\nwritten:\n\n```php\nreturn doSomething()\n    ->otherwise('handleError')\n    ->always('cleanup');\n```\n\n#### ExtendedPromiseInterface::progress()\n\n```php\n$promise->progress(callable $onProgress);\n```\n\nRegisters a handler for progress updates from promise. It is a shortcut for:\n\n```php\n$promise->then(null, null, $onProgress);\n```\n\n### CancellablePromiseInterface\n\nA cancellable promise provides a mechanism for consumers to notify the creator\nof the promise that they are not longer interested in the result of an\noperation.\n\n#### CancellablePromiseInterface::cancel()\n\n``` php\n$promise->cancel();\n```\n\nThe `cancel()` method notifies the creator of the promise that there is no\nfurther interest in the results of the operation.\n\nOnce a promise is settled (either fulfilled or rejected), calling `cancel()` on\na promise has no effect.\n\n#### Implementations\n\n* [Promise](#promise-1)\n* [FulfilledPromise](#fulfilledpromise)\n* [RejectedPromise](#rejectedpromise)\n* [LazyPromise](#lazypromise)\n\n### Promise\n\nCreates a promise whose state is controlled by the functions passed to\n`$resolver`.\n\n```php\n$resolver = function (callable $resolve, callable $reject, callable $notify) {\n    // Do some work, possibly asynchronously, and then\n    // resolve or reject. You can notify of progress events\n    // along the way if you want/need.\n\n    $resolve($awesomeResult);\n    // or $resolve($anotherPromise);\n    // or $reject($nastyError);\n    // or $notify($progressNotification);\n};\n\n$canceller = function (callable $resolve, callable $reject, callable $progress) {\n    // Cancel/abort any running operations like network connections, streams etc.\n\n    $reject(new \\Exception('Promise cancelled'));\n};\n\n$promise = new React\\Promise\\Promise($resolver, $canceller);\n```\n\nThe promise constructor receives a resolver function and an optional canceller\nfunction which both will be called with 3 arguments:\n\n  * `$resolve($value)` - Primary function that seals the fate of the\n    returned promise. Accepts either a non-promise value, or another promise.\n    When called with a non-promise value, fulfills promise with that value.\n    When called with another promise, e.g. `$resolve($otherPromise)`, promise's\n    fate will be equivalent to that of `$otherPromise`.\n  * `$reject($reason)` - Function that rejects the promise.\n  * `$notify($update)` - Function that issues progress events for the promise.\n\nIf the resolver or canceller throw an exception, the promise will be rejected\nwith that thrown exception as the rejection reason.\n\nThe resolver function will be called immediately, the canceller function only\nonce all consumers called the `cancel()` method of the promise.\n\n### FulfilledPromise\n\nCreates a already fulfilled promise.\n\n```php\n$promise = React\\Promise\\FulfilledPromise($value);\n```\n\nNote, that `$value` **cannot** be a promise. It's recommended to use\n[resolve()](#resolve) for creating resolved promises.\n\n### RejectedPromise\n\nCreates a already rejected promise.\n\n```php\n$promise = React\\Promise\\RejectedPromise($reason);\n```\n\nNote, that `$reason` **cannot** be a promise. It's recommended to use\n[reject()](#reject) for creating rejected promises.\n\n### LazyPromise\n\nCreates a promise which will be lazily initialized by `$factory` once a consumer\ncalls the `then()` method.\n\n```php\n$factory = function () {\n    $deferred = new React\\Promise\\Deferred();\n\n    // Do some heavy stuff here and resolve the deferred once completed\n\n    return $deferred->promise();\n};\n\n$promise = React\\Promise\\LazyPromise($factory);\n\n// $factory will only be executed once we call then()\n$promise->then(function ($value) {\n});\n```\n\n### Functions\n\nUseful functions for creating, joining, mapping and reducing collections of\npromises.\n\nAll functions working on promise collections (like `all()`, `race()`, `some()`\netc.) support cancellation. This means, if you call `cancel()` on the returned\npromise, all promises in the collection are cancelled. If the collection itself\nis a promise which resolves to an array, this promise is also cancelled.\n\n#### resolve()\n\n```php\n$promise = React\\Promise\\resolve(mixed $promiseOrValue);\n```\n\nCreates a promise for the supplied `$promiseOrValue`.\n\nIf `$promiseOrValue` is a value, it will be the resolution value of the\nreturned promise.\n\nIf `$promiseOrValue` is a thenable (any object that provides a `then()` method),\na trusted promise that follows the state of the thenable is returned.\n\nIf `$promiseOrValue` is a promise, it will be returned as is.\n\nNote: The promise returned is always a promise implementing\n[ExtendedPromiseInterface](#extendedpromiseinterface). If you pass in a custom\npromise which only implements [PromiseInterface](#promiseinterface), this\npromise will be assimilated to a extended promise following `$promiseOrValue`.\n\n#### reject()\n\n```php\n$promise = React\\Promise\\reject(mixed $promiseOrValue);\n```\n\nCreates a rejected promise for the supplied `$promiseOrValue`.\n\nIf `$promiseOrValue` is a value, it will be the rejection value of the\nreturned promise.\n\nIf `$promiseOrValue` is a promise, its completion value will be the rejected\nvalue of the returned promise.\n\nThis can be useful in situations where you need to reject a promise without\nthrowing an exception. For example, it allows you to propagate a rejection with\nthe value of another promise.\n\n#### all()\n\n```php\n$promise = React\\Promise\\all(array|React\\Promise\\PromiseInterface $promisesOrValues);\n```\n\nReturns a promise that will resolve only once all the items in\n`$promisesOrValues` have resolved. The resolution value of the returned promise\nwill be an array containing the resolution values of each of the items in\n`$promisesOrValues`.\n\n#### race()\n\n```php\n$promise = React\\Promise\\race(array|React\\Promise\\PromiseInterface $promisesOrValues);\n```\n\nInitiates a competitive race that allows one winner. Returns a promise which is\nresolved in the same way the first settled promise resolves.\n\n#### any()\n\n```php\n$promise = React\\Promise\\any(array|React\\Promise\\PromiseInterface $promisesOrValues);\n```\n\nReturns a promise that will resolve when any one of the items in\n`$promisesOrValues` resolves. The resolution value of the returned promise\nwill be the resolution value of the triggering item.\n\nThe returned promise will only reject if *all* items in `$promisesOrValues` are\nrejected. The rejection value will be an array of all rejection reasons.\n\nThe returned promise will also reject with a `React\\Promise\\Exception\\LengthException`\nif `$promisesOrValues` contains 0 items.\n\n#### some()\n\n```php\n$promise = React\\Promise\\some(array|React\\Promise\\PromiseInterface $promisesOrValues, integer $howMany);\n```\n\nReturns a promise that will resolve when `$howMany` of the supplied items in\n`$promisesOrValues` resolve. The resolution value of the returned promise\nwill be an array of length `$howMany` containing the resolution values of the\ntriggering items.\n\nThe returned promise will reject if it becomes impossible for `$howMany` items\nto resolve (that is, when `(count($promisesOrValues) - $howMany) + 1` items\nreject). The rejection value will be an array of\n`(count($promisesOrValues) - $howMany) + 1` rejection reasons.\n\nThe returned promise will also reject with a `React\\Promise\\Exception\\LengthException`\nif `$promisesOrValues` contains less items than `$howMany`.\n\n#### map()\n\n```php\n$promise = React\\Promise\\map(array|React\\Promise\\PromiseInterface $promisesOrValues, callable $mapFunc);\n```\n\nTraditional map function, similar to `array_map()`, but allows input to contain\npromises and/or values, and `$mapFunc` may return either a value or a promise.\n\nThe map function receives each item as argument, where item is a fully resolved\nvalue of a promise or value in `$promisesOrValues`.\n\n#### reduce()\n\n```php\n$promise = React\\Promise\\reduce(array|React\\Promise\\PromiseInterface $promisesOrValues, callable $reduceFunc , $initialValue = null);\n```\n\nTraditional reduce function, similar to `array_reduce()`, but input may contain\npromises and/or values, and `$reduceFunc` may return either a value or a\npromise, *and* `$initialValue` may be a promise or a value for the starting\nvalue.\n\n### PromisorInterface\n\nThe `React\\Promise\\PromisorInterface` provides a common interface for objects\nthat provide a promise. `React\\Promise\\Deferred` implements it, but since it\nis part of the public API anyone can implement it.\n\nExamples\n--------\n\n### How to use Deferred\n\n```php\nfunction getAwesomeResultPromise()\n{\n    $deferred = new React\\Promise\\Deferred();\n\n    // Execute a Node.js-style function using the callback pattern\n    computeAwesomeResultAsynchronously(function ($error, $result) use ($deferred) {\n        if ($error) {\n            $deferred->reject($error);\n        } else {\n            $deferred->resolve($result);\n        }\n    });\n\n    // Return the promise\n    return $deferred->promise();\n}\n\ngetAwesomeResultPromise()\n    ->then(\n        function ($value) {\n            // Deferred resolved, do something with $value\n        },\n        function ($reason) {\n            // Deferred rejected, do something with $reason\n        },\n        function ($update) {\n            // Progress notification triggered, do something with $update\n        }\n    );\n```\n\n### How promise forwarding works\n\nA few simple examples to show how the mechanics of Promises/A forwarding works.\nThese examples are contrived, of course, and in real usage, promise chains will\ntypically be spread across several function calls, or even several levels of\nyour application architecture.\n\n#### Resolution forwarding\n\nResolved promises forward resolution values to the next promise.\nThe first promise, `$deferred->promise()`, will resolve with the value passed\nto `$deferred->resolve()` below.\n\nEach call to `then()` returns a new promise that will resolve with the return\nvalue of the previous handler. This creates a promise \"pipeline\".\n\n```php\n$deferred = new React\\Promise\\Deferred();\n\n$deferred->promise()\n    ->then(function ($x) {\n        // $x will be the value passed to $deferred->resolve() below\n        // and returns a *new promise* for $x + 1\n        return $x + 1;\n    })\n    ->then(function ($x) {\n        // $x === 2\n        // This handler receives the return value of the\n        // previous handler.\n        return $x + 1;\n    })\n    ->then(function ($x) {\n        // $x === 3\n        // This handler receives the return value of the\n        // previous handler.\n        return $x + 1;\n    })\n    ->then(function ($x) {\n        // $x === 4\n        // This handler receives the return value of the\n        // previous handler.\n        echo 'Resolve ' . $x;\n    });\n\n$deferred->resolve(1); // Prints \"Resolve 4\"\n```\n\n#### Rejection forwarding\n\nRejected promises behave similarly, and also work similarly to try/catch:\nWhen you catch an exception, you must rethrow for it to propagate.\n\nSimilarly, when you handle a rejected promise, to propagate the rejection,\n\"rethrow\" it by either returning a rejected promise, or actually throwing\n(since promise translates thrown exceptions into rejections)\n\n```php\n$deferred = new React\\Promise\\Deferred();\n\n$deferred->promise()\n    ->then(function ($x) {\n        throw new \\Exception($x + 1);\n    })\n    ->otherwise(function (\\Exception $x) {\n        // Propagate the rejection\n        throw $x;\n    })\n    ->otherwise(function (\\Exception $x) {\n        // Can also propagate by returning another rejection\n        return React\\Promise\\reject(\n            new \\Exception($x->getMessage() + 1)\n        );\n    })\n    ->otherwise(function ($x) {\n        echo 'Reject ' . $x->getMessage(); // 3\n    });\n\n$deferred->resolve(1);  // Prints \"Reject 3\"\n```\n\n#### Mixed resolution and rejection forwarding\n\nJust like try/catch, you can choose to propagate or not. Mixing resolutions and\nrejections will still forward handler results in a predictable way.\n\n```php\n$deferred = new React\\Promise\\Deferred();\n\n$deferred->promise()\n    ->then(function ($x) {\n        return $x + 1;\n    })\n    ->then(function ($x) {\n        throw new \\Exception($x + 1);\n    })\n    ->otherwise(function (\\Exception $x) {\n        // Handle the rejection, and don't propagate.\n        // This is like catch without a rethrow\n        return $x->getMessage() + 1;\n    })\n    ->then(function ($x) {\n        echo 'Mixed ' . $x; // 4\n    });\n\n$deferred->resolve(1);  // Prints \"Mixed 4\"\n```\n\n#### Progress event forwarding\n\nIn the same way as resolution and rejection handlers, your progress handler\n**MUST** return a progress event to be propagated to the next link in the chain.\nIf you return nothing, `null` will be propagated.\n\nAlso in the same way as resolutions and rejections, if you don't register a\nprogress handler, the update will be propagated through.\n\nIf your progress handler throws an exception, the exception will be propagated\nto the next link in the chain. The best thing to do is to ensure your progress\nhandlers do not throw exceptions.\n\nThis gives you the opportunity to transform progress events at each step in the\nchain so that they are meaningful to the next step. It also allows you to choose\nnot to transform them, and simply let them propagate untransformed, by not\nregistering a progress handler.\n\n```php\n$deferred = new React\\Promise\\Deferred();\n\n$deferred->promise()\n    ->progress(function ($update) {\n        return $update + 1;\n    })\n    ->progress(function ($update) {\n        echo 'Progress ' . $update; // 2\n    });\n\n$deferred->notify(1);  // Prints \"Progress 2\"\n```\n\n### done() vs. then()\n\nThe golden rule is:\n\n    Either return your promise, or call done() on it.\n\nAt a first glance, `then()` and `done()` seem very similar. However, there are\nimportant distinctions.\n\nThe intent of `then()` is to transform a promise's value and to pass or return\na new promise for the transformed value along to other parts of your code.\n\nThe intent of `done()` is to consume a promise's value, transferring\nresponsibility for the value to your code.\n\nIn addition to transforming a value, `then()` allows you to recover from, or\npropagate intermediate errors. Any errors that are not handled will be caught\nby the promise machinery and used to reject the promise returned by `then()`.\n\nCalling `done()` transfers all responsibility for errors to your code. If an\nerror (either a thrown exception or returned rejection) escapes the\n`$onFulfilled` or `$onRejected` callbacks you provide to done, it will be\nrethrown in an uncatchable way causing a fatal error.\n\n```php\nfunction getJsonResult()\n{\n    return queryApi()\n        ->then(\n            // Transform API results to an object\n            function ($jsonResultString) {\n                return json_decode($jsonResultString);\n            },\n            // Transform API errors to an exception\n            function ($jsonErrorString) {\n                $object = json_decode($jsonErrorString);\n                throw new ApiErrorException($object->errorMessage);\n            }\n        );\n}\n\n// Here we provide no rejection handler. If the promise returned has been\n// rejected, the ApiErrorException will be thrown\ngetJsonResult()\n    ->done(\n        // Consume transformed object\n        function ($jsonResultObject) {\n            // Do something with $jsonResultObject\n        }\n    );\n\n// Here we provide a rejection handler which will either throw while debugging\n// or log the exception\ngetJsonResult()\n    ->done(\n        function ($jsonResultObject) {\n            // Do something with $jsonResultObject\n        },\n        function (ApiErrorException $exception) {\n            if (isDebug()) {\n                throw $exception;\n            } else {\n                logException($exception);\n            }\n        }\n    );\n```\n\nNote that if a rejection value is not an instance of `\\Exception`, it will be\nwrapped in an exception of the type `React\\Promise\\UnhandledRejectionException`.\n\nYou can get the original rejection reason by calling `$exception->getReason()`.\n\nCredits\n-------\n\nReact/Promise is a port of [when.js](https://github.com/cujojs/when)\nby [Brian Cavalier](https://github.com/briancavalier).\n\nAlso, large parts of the documentation have been ported from the when.js\n[Wiki](https://github.com/cujojs/when/wiki) and the\n[API docs](https://github.com/cujojs/when/blob/master/docs/api.md).\n\nLicense\n-------\n\nReact/Promise is released under the [MIT](https://github.com/reactphp/promise/blob/master/LICENSE) license.\n\n\n--- File Index 31: migrations/20231126_config_db_log.md ---\n# Configurasi LOG db \n\nbuka file yang ada di `root/protected/config/main.php`\n\ntambahkan config berikut \n\n```php\n        'dbLogSimpadhu' => [\n            'class' => 'yii\\db\\Connection',\n            'dsn' => 'mysql:host=192.168.191.126:3306;dbname=AHU_BILLING_LOG',\n            'username' => '',\n            'password' => '',\n            'charset' => 'utf8',\n            'tablePrefix' => 'ahu_',\n        ],\n```\n\n--- File Index 32: migrations/20240530_add_actions_questionnaire.md ---\nLogin menggunakan user Admin.\n\n## MENAMBAHKAN ROUTE\nTambahkan route di https://koperasi.ahu.go.id/dcms/route, lalu pindahkan route berikut ke assigned:\n- /pendirian/validasi-nik\n- /pendirian/kuisioner\n- /perubahan/validasi-nik\n- /perubahan/kuisioner\n\n## MENGATUR HAK AKSES\n1. Tambahkan route ke permission di https://koperasi.ahu.go.id/dcms/permission/view?id=pendirian-permission (pendirian-permission), lalu pindahkan route berikut ke assigned:\n   - /pendirian/validasi-nik\n   - /pendirian/kuisioner\n\n2. Tambahkan route ke permission di https://koperasi.ahu.go.id/dcms/permission/view?id=perubahan-permission (perubahan-permission), lalu pindahkan route berikut ke assigned:\n   - /perubahan/validasi-nik\n   - /perubahan/kuisioner\n\n--- File Index 33: migrations/20250616_add_new_routes_to_koperasi.md ---\n# Dokumentasi Penambahan untuk Fitur Upload Surat Kuasa\n\n## Overview\nDokumentasi ini menjelaskan proses penambahan route baru untuk fitur download surat kuasa dalam sistem Yii2 menggunakan Role-Based Access Control (RBAC). Penambahan route ini mencakup tiga modul utama: pendirian, perubahan, dan admin.\n\n## Database Schema\nSistem menggunakan dua tabel utama untuk RBAC:\n- `auth_item`: Menyimpan item autorisasi (permissions, roles)\n- `auth_item_child`: Menyimpan hubungan parent-child antar item autorisasi\n\n## Proses Penambahan Route\n\n### 1. Modul Pendirian\n# Dokumentasi Penambahan Route Surat Kuasa - Yii2 RBAC\n\n## Overview\nDokumentasi ini menjelaskan proses penambahan route baru untuk fitur download surat kuasa dalam sistem Yii2 menggunakan Role-Based Access Control (RBAC). Penambahan route ini mencakup tiga modul utama: pendirian, perubahan, dan admin.\n\n## Database Schema\nSistem menggunakan dua tabel utama untuk RBAC:\n- `auth_item`: Menyimpan item autorisasi (permissions, roles)\n- `auth_item_child`: Menyimpan hubungan parent-child antar item autorisasi\n\n## Proses Penambahan Route\n\n### 1. Modul Pendirian\n\n#### 1.1 Penambahan Permission\n```sql\nINSERT INTO auth_item (name, type) VALUES ('/pendirian/download-surat-kuasa', 2);\n```\n- **Nama Permission**: `/pendirian/download-surat-kuasa`\n- **Type**: `2`\n- **Fungsi**: Memberikan akses untuk download surat kuasa pada laman daftar transaksi pendirian\n\n#### 1.2 Assignment ke Parent Role\n```sql\nINSERT INTO auth_item_child (parent, child) VALUES ('listtransaksi-permission', '/pendirian/download-surat-kuasa');\n```\n- **Parent**: `listtransaksi-permission`\n- **Child**: `/pendirian/download-surat-kuasa`\n- **Tujuan**: User dengan role `listtransaksi-permission` dapat mengakses fitur download surat kuasa pesan nama dari laman daftar transaksi pendirian\n\n### 2. Modul Perubahan\n\n#### 2.1 Penambahan Permission\n```sql\nINSERT INTO auth_item (name, type) VALUES ('/perubahan/download-surat-kuasa', 2);\n```\n- **Nama Permission**: `/perubahan/download-surat-kuasa`\n- **Type**: `2` (Permission)\n- **Fungsi**: Memberikan akses untuk download surat kuasa pada laman daftar transaksi perubahan\n\n#### 2.2 Assignment ke Parent Role\n```sql\nINSERT INTO auth_item_child (parent, child) VALUES ('perubahan-permission', '/perubahan/download-surat-kuasa');\n```\n- **Parent**: `perubahan-permission`\n- **Child**: `/perubahan/download-surat-kuasa`\n- **Tujuan**: User dengan role `perubahan-permission` dapat mengakses fitur download surat kuasa pesan nama dari laman daftar transaksi perubahan\n\n### 3. Modul Admin\n\n#### 3.1 Penambahan Multiple Permissions\n```sql\nINSERT INTO auth_item (name, type) VALUES ('/admin/download-surat-kuasa', 2);\nINSERT INTO auth_item (name, type) VALUES ('/admin/download-surat-kuasa-terkini', 2);\n```\n\n**Permission 1**: `/admin/download-surat-kuasa`\n- **Type**: `2` (Permission)\n- **Fungsi**: Akses download surat kuasa dari laman daftar transaksi koperasi dari sisi admin\n\n**Permission 2**: `/admin/download-surat-kuasa-terkini`\n- **Type**: `2` (Permission)\n- **Fungsi**: Akses download surat kuasa terkini dari laman daftar koperasi dari sisi admin\n\n#### 3.2 Assignment ke Multiple Parent Roles\n```sql\nINSERT INTO auth_item_child (parent, child) VALUES ('admin-bakum-permission', '/admin/download-surat-kuasa');\nINSERT INTO auth_item_child (parent, child) VALUES ('admin-bakum-permission', '/admin/download-surat-kuasa-terkini');\nINSERT INTO auth_item_child (parent, child) VALUES ('admin-koperasi-permission', '/admin/download-surat-kuasa');\nINSERT INTO auth_item_child (parent, child) VALUES ('admin-koperasi-permission', '/admin/download-surat-kuasa-terkini');\n```\n\n**Admin BAKUM**:\n- Dapat mengakses `/admin/download-surat-kuasa`\n- Dapat mengakses `/admin/download-surat-kuasa-terkini`\n\n**Admin Koperasi**:\n- Dapat mengakses `/admin/download-surat-kuasa`\n- Dapat mengakses `/admin/download-surat-kuasa-terkini`\n\n## Struktur Permission yang Ditambahkan\n\n| Permission | Module | Parent Role | Deskripsi |\n|------------|--------|-------------|-----------|\n| `/pendirian/download-surat-kuasa` | Pendirian | `listtransaksi-permission` | Download surat kuasa dari laman daftar transaksi pendirian |\n| `/perubahan/download-surat-kuasa` | Perubahan | `perubahan-permission` | Download surat kuasa dari laman daftar transaksi perubahan |\n| `/admin/download-surat-kuasa` | Admin | `admin-bakum-permission`, `admin-koperasi-permission` | Download surat kuasa dari laman daftar transaksi koperasi dari sisi admin |\n| `/admin/download-surat-kuasa-terkini` | Admin | `admin-bakum-permission`, `admin-koperasi-permission` | Download surat kuasa terkini dari laman daftar koperasi dari sisi admin |\n\n\n--- File Index 34: migrations/20250808_add_new_routes_perbaikan_data.md ---\n1. list link backend menu\n2. add menu perbaikan data\n3. set notaris\n\n\n1. Add new routes.\n    - /perbaikan-data/index\n    - /perbaikan-data/checklist-form\n    - /perbaikan-data/surat-permohonan\n2. create new permission 'perbaikan-data-permission'\n3. add new routes to perbaikan data permission\n4. add 'perbaikan-data-permission' to role 'notaris'\n\n\n--- File Index 35: scripts/k6/login.js ---\nimport http from 'k6/http';\nimport { check, sleep } from 'k6';\nimport { parseHTML } from 'k6/html';\n\nconst BASE_URL = 'https://koperasi.ahu.go.id';\nconst USERNAME = '';\nconst PASSWORD = '';\n\nexport const options = {\n  stages: [\n    { duration: '5s', target: 10 },\n    // { duration: '1m', target: 10 },\n    // { duration: '30s', target: 50 },\n    // { duration: '1m', target: 50 },\n    // { duration: '30s', target: 70 },\n    // { duration: '1m', target: 70 },\n    { duration: '10s', target: 0 },\n  ],\n};\n\nexport default function () {\n  const jar = http.cookieJar();\n  // Step 1: GET login page\n  const loginPage = http.get(`${BASE_URL}/site/login`);\n  check(loginPage, {\n    'Login page loaded': (res) => res.status === 200,\n  });\n\n  const doc = parseHTML(loginPage.body);\n  const csrf = doc.find('input[name=\"_csrf\"]').attr('value');\n  console.log(\"This is a Token: \",csrf);\n  if (!csrf) {\n    console.error('\u274c CSRF token not found!');\n    return;\n  }\n\n  // Step 2: POST login\n  const loginRes = http.post(\n    `${BASE_URL}/site/login`,\n    {\n      'LoginForm[username]': USERNAME,\n      'LoginForm[password]': PASSWORD,\n      '_csrf': csrf,\n      'login-button': '',\n    },\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      cookies: jar.cookiesForURL(BASE_URL),\n    }\n  );\n\n  check(loginRes, {\n    'Login successful': (res) => res.status === 200,\n  });\n\n  sleep(3);\n}\n\n--- File Index 36: scripts/k6/pesan-nama.js ---\nimport http from \"k6/http\";\nimport { check, sleep } from \"k6\";\nimport { parseHTML } from \"k6/html\";\nimport encoding from \"k6/encoding\";\nimport {\n  randomItem,\n  uuidv4,\n} from \"https://jslib.k6.io/k6-utils/1.4.0/index.js\";\n\nexport const options = {\n  vus: 2,\n  duration: \"1m\",\n};\n\nconst BASE_URL = \"https://staging-koperasi.ahu.go.id\";\nconst LOGIN_URL = `${BASE_URL}/site/login`;\nconst PESAN_NAMA_URL = `${BASE_URL}/pesan-nama/index`;\n\nconst HTTP_ACCESS_USERNAME = \"\";\nconst HTTP_ACCESS_PASSWORD = \"\";\n\nconst USERNAME = \"\";\nconst PASSWORD = \"\";\n\nexport default function () {\n  const jar = http.cookieJar();\n\n  const credentials = `${HTTP_ACCESS_USERNAME}:${HTTP_ACCESS_PASSWORD}`;\n  const encodedCredentials = encoding.b64encode(credentials);\n  const options = {\n    headers: {\n      Authorization: `Basic ${encodedCredentials}`,\n    },\n  };\n\n  const loginPage = http.get(LOGIN_URL, options);\n  check(loginPage, {\n    \"Login page loaded\": (res) => res.status === 200,\n  });\n\n  const doc = parseHTML(loginPage.body);\n  const csrf = doc.find('input[name=\"_csrf\"]').attr(\"value\");\n\n  const loginRes = http.post(\n    LOGIN_URL,\n    {\n      \"LoginForm[username]\": USERNAME,\n      \"LoginForm[password]\": PASSWORD,\n      _csrf: csrf,\n      \"login-button\": \"\",\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Basic ${encodedCredentials}`,\n      },\n      jar: jar,\n    }\n  );\n\n  check(loginRes, {\n    \"login succeeded\": (res) => res.status === 200,\n  });\n\n  let pesanNamaRes = http.get(PESAN_NAMA_URL, {\n    headers: {\n      Authorization: `Basic ${encodedCredentials}`,\n    },\n    jar: jar,\n  });\n\n  check(pesanNamaRes, {\n    \"pesan-nama page loaded\": (res) =>\n      res.status === 200 && res.body.includes(\"Pesan Nama\"),\n  });\n\n  let formDoc = parseHTML(pesanNamaRes.body);\n  let pesanNamaCsrf = formDoc.find('input[name=\"_csrf\"]').attr(\"value\");\n\n  let jenisKoperasi = randomItem([8, 9]);\n  let polaId = 1;\n\n  let koperasiName = `StressTest${uuidv4().substring(0, 8)}`.replace(/\\d/g, \"\");\n  console.log(\n    \"Pesan Nama with: \",\n    \"koperasiName: \",\n    koperasiName,\n    \"jenisKoperasi: \",\n    jenisKoperasi,\n    \" polaId: \",\n    polaId\n  );\n  let cariRes = http.post(\n    PESAN_NAMA_URL,\n    {\n      \"PesanNamaForm[jenis_koperasi]\": jenisKoperasi,\n      \"PesanNamaForm[nama_koperasi]\": koperasiName,\n      \"PesanNamaForm[m_pola_id]\": polaId,\n      _csrf: pesanNamaCsrf,\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Basic ${encodedCredentials}`,\n      },\n    }\n  );\n\n  check(cariRes, {\n    \"cari succeeded\": (res) =>\n      res.status === 200 &&\n      res.body.includes(`Nama Koperasi yang anda pesan adalah`) &&\n      res.body.includes(`${koperasiName}`),\n  });\n\n  let cariDoc = parseHTML(cariRes.body);\n  let lanjutCsrf =\n    cariDoc.find('input[name=\"_csrf\"]').attr(\"value\") || pesanNamaCsrf;\n  let previewNama =\n    cariDoc.find('input[name=\"PesanNamaForm[preview_nama]\"]').attr(\"value\") ||\n    koperasiName;\n  let lanjutRes = http.post(\n    PESAN_NAMA_URL,\n    {\n      \"PesanNamaForm[jenis_koperasi]\": jenisKoperasi,\n      \"PesanNamaForm[nama_koperasi]\": koperasiName,\n      \"PesanNamaForm[m_pola_id]\": polaId,\n      \"PesanNamaForm[preview_nama]\": previewNama,\n      _csrf: lanjutCsrf,\n      \"submit-pratinjau\": \"Lanjutkan\",\n    },\n    {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Basic ${encodedCredentials}`,\n      },\n    }\n  );\n  check(lanjutRes, {\n    \"lanjutkan submitted\": (res) => res.status === 200 || res.status === 302,\n  });\n\n  sleep(3);\n}\n\n\n--- File Index 37: scripts/k6/staging-login.js ---\nimport http from 'k6/http';\nimport { check, sleep } from 'k6';\nimport { parseHTML } from 'k6/html';\nimport encoding from 'k6/encoding';\n\nconst BASE_URL = 'https://staging-koperasi.ahu.go.id';\nconst username = '';\nconst password = '';\n\nexport const options = {\n  stages: [\n    { duration: '30s', target: 10 },\n    { duration: '1m', target: 10 },\n    { duration: '15s', target: 50 },\n    { duration: '30s', target: 50 },\n    { duration: '15s', target: 70 },\n    { duration: '30s', target: 70 },\n    { duration: '10s', target: 0 },\n  ],\n};\n\nexport default function () {\n  const jar = http.cookieJar();\n\n  const credentials = `${username}:${password}`;\n  const encodedCredentials = encoding.b64encode(credentials);\n  const options = {\n    headers: {\n      Authorization: `Basic ${encodedCredentials}`,\n    },\n  };\n\n  // Step 1: GET login page\n  const loginPage = http.get(`${BASE_URL}/site/login`,options);\n\n  check(loginPage, {\n    'Login page loaded': (res) => res.status === 200,\n  });\n\n  const doc = parseHTML(loginPage.body);\n  const csrf = doc.find('input[name=\"_csrf\"]').attr('value');\n\n  console.log(\"This is a Token: \",csrf);\n  if (!csrf) {\n    console.error('\u274c CSRF token not found!');\n    return;\n  }\n\n  // Step 2: POST login\n  const loginRes = http.post(\n    `${BASE_URL}/site/login`,\n    {\n      'LoginForm[username]': USERNAME,\n      'LoginForm[password]': PASSWORD,\n      '_csrf': csrf,\n      'login-button': '',\n    },\n    {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${encodedCredentials}`,\n      },\n      cookies: jar.cookiesForURL(BASE_URL),\n    }\n  );\n\n  check(loginRes, {\n    'Login successful': (res) => res.status === 200,\n  });\n\n  sleep(3);\n}\n\n--- File Index 38: scripts/log/parse-log-cron-hit-ods.py ---\nimport re\n\nlog_file = \"cron.hit_ods.log\"\n\nwith open(log_file, encoding=\"utf-8\") as f:\n    lines = f.readlines()\n\ncron_summaries = []\ncurrent_cron = None\nsuccess_count = 0\nfailed_count = 0\n\nfor line in lines:\n    start_match = re.match(r\"==== START CRON (.+) =====\", line)\n    if start_match:\n        if current_cron is not None:\n            cron_summaries.append((current_cron, success_count, failed_count))\n        current_cron = start_match.group(1)\n        success_count = 0\n        failed_count = 0\n        continue\n\n    if \"Berhasil Terkirim\" in line:\n        success_count += 1\n    if \"Gagal Terkirim\" in line:\n        failed_count += 1\n\nif current_cron is not None:\n    cron_summaries.append((current_cron, success_count, failed_count))\n\nfor cron_time, success, failed in cron_summaries:\n    print(f\"CRON {cron_time}: {success} transaksi berhasil terkirim, {failed} gagal terkirim\")\n\n--- File Index 39: vagrant/config/vagrant-local.example.yml ---\n# Your personal GitHub token\ngithub_token: <your-personal-github-token>\n# Read more: https://github.com/blog/1509-personal-api-tokens\n# You can generate it here: https://github.com/settings/tokens\n\n# Guest OS timezone\ntimezone: Europe/London\n\n# Are we need check box updates for every 'vagrant up'?\nbox_check_update: false\n\n# Virtual machine name\nmachine_name: yii2basic\n\n# Virtual machine IP\nip: 192.168.83.137\n\n# Virtual machine CPU cores number\ncpus: 1\n\n# Virtual machine RAM\nmemory: 1024\n\n\n--- File Index 40: web/frontend/README.md ---\nGulp Frontend Development\n=========================\n\n## Install\n### Requirements Node & Gulp 4\n\n```bash\nnpm run install\n```\n\n\n### Tasks\n\n#### Launch it\n\nThis is the default task.\n\n```bash\nnpm run dev\n```\n\n#### Build\n\nWhen you are happy with your changes, run:\n\n```bash\nnpm run prod\n```\n\n#### Tests tasks\n\nQuick tests and stats with:\n\n\n\n--- File Index 41: web/frontend/src/.eslintrc.js ---\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"rules\": {\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n};\n\n--- File Index 42: web/frontend/src/eslintrc.js ---\n// http://eslint.org/docs/user-guide/configuring\n\nmodule.exports = {\n  root: true,\n  parser: 'babel-eslint',\n  parserOptions: {\n    sourceType: 'module'\n  },\n  env: {\n    browser: true,\n  },\n  // https://github.com/standard/standard/blob/master/docs/RULES-en.md\n  extends: 'standard',\n  // required to lint *.vue files\n  plugins: [\n    'html'\n  ],\n  // add your custom rules here\n  rules: {\n    'no-template-curly-in-string': 'error',\n    // allow paren-less arrow functions\n    'arrow-parens': 0,\n    // allow async-await\n    'generator-star-spacing': 0,\n  }\n};\n\n\n\n--- File Index 43: web/frontend/src/gulpfile.babel.js ---\nimport tasks from './boilerplate/tasks';\nmodule.exports = require('gulp');\n\n\n--- File Index 44: web/frontend/src/boilerplate/config.js ---\nimport * as fs from 'fs';\nimport minimist from 'minimist';\n\nlet config;\n\nconst options = {\n  string: 'env',\n  default: {\n    env: process.env.NODE_ENV || 'dev'\n  }\n};\n\nexport function updateConfig(done) {\n  const pkg = JSON.parse(fs.readFileSync('./package.json', { encoding: 'utf-8' }));\n\n  const banner =\n  `/**\n   * ${pkg.title}\n   * ${pkg.description}\n   * Compiled: ${Date()}\n   * @version v${pkg.version}\n   * @link ${pkg.homepage}\n   * @copyright ${pkg.license}\n   */\n  `;\n\n  config = Object.assign({\n    args: minimist(process.argv.slice(2), options),\n    banner\n  }, {\n    version: pkg.version,\n    title: pkg.title,\n    description: pkg.description,\n    author: pkg.author,\n    extensions: pkg.extensions,\n    vendors: pkg.vendors\n  }, pkg.config, pkg.directories);\n\n  done();\n}\n\nupdateConfig(() => {});\n\nexport default config;\n\nexport function getConfig() {\n  updateConfig(() => {});\n\n  return config;\n}\n\n\n--- File Index 45: web/frontend/src/boilerplate/init/choices.js ---\nimport fs from 'fs';\n\nexport default function getChoicesFiles(path) {\n  const results = [];\n\n  fs.readdirSync(path).forEach((choice) => {\n    results.push(JSON.parse(fs.readFileSync(path + choice, 'utf-8')));\n  });\n\n  return results;\n}\n\n\n\n--- File Index 46: web/frontend/src/boilerplate/init/index.js ---\nimport { exec } from 'child_process';\nimport fs from 'fs';\n\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport { Spinner } from 'cli-spinner';\nimport del from 'del';\n\nimport choices from './choices.js';\nimport pkg from '../../package.json';\n\nconst questions = [{\n  type: 'input',\n  name: 'app_name',\n  message: 'App name',\n  default: 'App'\n}, {\n  type: 'list',\n  name: 'language',\n  message: 'Script compiler/transpiler:',\n  choices: choices(`${__dirname}/language/`)\n}, {\n  type: 'list',\n  name: 'framework',\n  message: 'JS framework:',\n  choices: choices(`${__dirname}/framework/`)\n}, {\n  type: 'list',\n  name: 'preprocessor',\n  message: 'CSS preprocessor:',\n  choices: choices(`${__dirname}/preprocessor/`)\n}];\n\n// Inspired by https://github.com/mattdesl/shimbro/\nfunction hasTransform(transforms, key) {\n  for (let i = 0; i < transforms.length; i++) {\n    const t = transforms[i];\n    if (typeof t === 'string' && t === key) {\n      return true;\n    } else if (t[0] === key) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction updatePackageFile(appName, transform, extensions) {\n  pkg.title = appName;\n  pkg.extensions = extensions;\n\n  if (!pkg.browserify) {\n    pkg.browserify = {\n      transform\n    };\n    console.log(chalk.green(`Adding ${transform.join(' ')} transform(s) to package.json.`));\n  } else if (!pkg.browserify.transform) {\n    pkg.browserify.transform = transform;\n    console.log(chalk.green(`Adding ${transform.join(' ')} transform(s) to package.json.`));\n  } else {\n    let transforms = pkg.browserify.transform;\n\n    if (typeof transforms === 'string') {\n      transforms = [transforms];\n    }\n\n    if (!Array.isArray(transforms)) {\n      throw new Error('Browserify transform object should be a string or an array');\n    }\n\n    const newTransforms = [];\n    for (let i = 0; i < transform.length; i++) {\n      if (!hasTransform(transforms, transform[i])) {\n        newTransforms.push(transform[i]);\n      }\n    }\n\n    if (newTransforms.length === 0) {\n      console.log(chalk.yellow('All transforms already in package.json.'));\n      return;\n    }\n    transforms = transforms.concat(newTransforms);\n    pkg.browserify.transform = transforms;\n\n    console.log(chalk.green(`Adding ${newTransforms.join(' ')} transform(s) to package.json.`));\n  }\n\n  fs.writeFile(`${process.cwd()}/package.json`, JSON.stringify(pkg, undefined, 2));\n}\n\nfunction updateSourceFiles(extensions, cb) {\n  inquirer.prompt([{\n    type: 'confirm',\n    name: 'delete_sourcefiles',\n    message: `Remove files in source folder that don't have the following extensions: \\\n${extensions.styles} ${extensions.scripts}`,\n    default: true\n  }]).then((data) => {\n    if (data.delete_sourcefiles) {\n      del([\n        `${pkg.directories.src}/styles/**/*.!(${extensions.styles})`,\n        `${pkg.directories.src}/scripts/**/*.!(${extensions.scripts})`\n      ], cb());\n    } else {\n      cb();\n    }\n  });\n}\n\nfunction updateDependencies(dependencies, devDependencies) {\n  let command = '';\n\n  if (dependencies.join('') !== '') {\n    command += `npm install --save ${dependencies.join(' ')} && `;\n  }\n  if (devDependencies.join('') !== '') {\n    command += `npm install --save-dev ${devDependencies.join(' ')} && `;\n  }\n  command += 'npm install';\n  if (dependencies || devDependencies) {\n    const spinner = new Spinner('This may take a while.');\n    spinner.setSpinnerString('|/-\\\\');\n    spinner.start();\n\n    console.log(chalk.green(\n      'Installing dependencies and adding them to package.json...',\n      dependencies.join(' '),\n      devDependencies.join(' ')\n    ));\n\n    exec(command, (error, stdout) => {\n      spinner.stop();\n      console.log(stdout);\n      if (error !== null) {\n        console.log(error);\n      }\n    });\n  }\n}\n\ninquirer.prompt(questions).then((data) => {\n  const transform = [\n    ...(data.language.transform || []),\n    ...(data.framework.transform || [])\n  ];\n  const extensions = {\n    scripts: data.language.extension || 'js',\n    styles: data.preprocessor.extension || 'css'\n  };\n  updatePackageFile(data.app_name, transform, extensions);\n\n  updateSourceFiles(extensions, () => {\n    const dependencies = [\n      ...(data.language.dependencies || []),\n      ...(data.framework.dependencies || []),\n      ...(data.preprocessor.dependencies || [])\n    ];\n    const devDependencies = [\n      ...(data.language.devDependencies || []),\n      ...(data.framework.devDependencies || []),\n      ...(data.preprocessor.devDependencies || [])\n    ];\n    updateDependencies(dependencies, devDependencies);\n  });\n});\n\n\n--- File Index 47: web/frontend/src/boilerplate/tasks/build.js ---\nimport gulp from 'gulp';\n\nimport sitemap from 'gulp-sitemap';\n\nimport config from '../config';\n\nexport function buildSitemap(done) {\n  const isUrlDefinned = (typeof config.prodURL === 'string' && config.prodURL !== '');\n\n  if (isUrlDefinned) {\n    return gulp.src(`${config.dist}/*.html`).pipe(sitemap({\n      fileName: 'sitemap.xml',\n      siteUrl: config.prodURL\n    }))\n    .pipe(gulp.dest(config.dist));\n  }\n  return done();\n}\n\n\n--- File Index 48: web/frontend/src/boilerplate/tasks/clean.js ---\nimport del from 'del';\n\nimport cache from 'gulp-cache';\n\nimport config from '../config';\n\nexport function cleanDeleteFiles(done) {\n  return del([\n    `${config.dist}/**`,\n    `!${config.dist}`,\n    `!${config.dist}/static/**`,\n    '.sass-cache'\n  ], done);\n}\n\nexport function cleanClearCache(done) {\n  return cache.clearAll(done);\n}\n\n\n--- File Index 49: web/frontend/src/boilerplate/tasks/images.js ---\nimport fs from 'fs';\n\nimport gulp from 'gulp';\nimport chalk from 'chalk';\nimport pngquant from 'imagemin-pngquant';\nimport favicons from 'favicons';\nimport mkdirp from 'mkdirp';\n\nimport newer from 'gulp-newer';\nimport cache from 'gulp-cache';\nimport imagemin from 'gulp-imagemin';\nimport spritesmith from 'gulp.spritesmith';\n\nimport config from '../config';\n\nexport function optimizeImages() {\n  return gulp.src([`${config.src}/images/**/*`, `!${config.src}/images/{sprite,sprite/**}`])\n    .pipe(newer(`${config.dist}/images`))\n    .pipe(cache(imagemin({\n      progressive: true,\n      interlaced: true,\n      use: [pngquant()]\n    })))\n    .pipe(gulp.dest(`${config.dist}/images`));\n}\n\nexport function generateSpritesheet() {\n  const spriteData = gulp.src(`${config.src}/images/sprite/*.png`).pipe(spritesmith({\n    retinaSrcFilter: [`${config.src}/images/sprite/*@2x.png`],\n    retinaImgName: '../images/sprite@2x.png',\n    imgName: '../images/sprite.png',\n    cssName: `_sprite.${config.extensions.styles}`,\n    algorithm: 'binary-tree'\n  }));\n  spriteData.on('finish', () => {\n    console.log(chalk.yellow('Spritesheet ready to process....'));\n  });\n  spriteData.on('error', (err) => {\n    console.log(chalk.red('Spritesheet ', err));\n  });\n  spriteData.css.pipe(gulp.dest(`${config.src}/styles/`)).on('end', () => {\n    console.log(chalk.green('Spritesheet _sprite file written...'));\n  });\n  return spriteData.img.pipe(gulp.dest(`${config.dist}/images/`)).on('end', () => {\n    console.log(chalk.green('Spritesheet generated.'));\n  });\n}\n\nexport function generateFavicons(done) {\n  return favicons(`${config.src}/favicon.png`, {\n    appName: config.title,\n    appDescription: config.description,\n    developerName: config.author,\n    developerURL: config.developerURL,\n    background: 'transparent',\n    path: 'images/favicon/',\n    url: 'images/share.jpg',\n    display: 'standalone',\n    orientation: 'portrait',\n    version: config.version,\n    logging: config.verbose,\n    online: false,\n    icons: {\n      android: true,\n      appleIcon: true,\n      appleStartup: true,\n      coast: true,\n      favicons: true,\n      firefox: true,\n      opengraph: false,\n      twitter: false,\n      windows: true,\n      yandex: true\n    }\n  }, (error, response) => {\n    if (error) {\n      console.log(error.status);\n      console.log(error.name);\n      console.log(error.message);\n    }\n\n    const faviconFolder = `${config.dist}/images/favicon/`;\n\n    if (response.images) {\n      mkdirp.sync(faviconFolder);\n      response.images.forEach((image) =>\n        fs.writeFileSync(`${faviconFolder}${image.name}`, image.contents)\n      );\n    }\n\n    if (response.files) {\n      mkdirp.sync(faviconFolder);\n      response.files.forEach((file) =>\n        fs.writeFileSync(`${faviconFolder}${file.name}`, file.contents)\n      );\n    }\n\n    if (response.html) {\n      fs.writeFileSync(`${config.src}/inc/_favicons.html`, response.html.join('\\n'));\n    }\n\n    done();\n  });\n}\n\n\n--- File Index 50: web/frontend/src/boilerplate/tasks/index.js ---\n/**\n * Load tasks and export globals\n */\n\nimport gulp from 'gulp';\nimport chalk from 'chalk';\n\nimport config from '../config';\n\nimport { markup } from './markup';\nimport { bundleApp, bundleVendor } from './scripts';\nimport { processStyles, generateFonts } from './styles';\nimport { optimizeImages, generateSpritesheet, generateFavicons } from './images';\nimport { serve } from './serve';\nimport { watch } from './watch';\nimport { cleanClearCache, cleanDeleteFiles } from './clean';\nimport { buildSitemap } from './build';\nimport { testMarkup, testScripts, testPsiMobile, testPsiDesktop } from './test';\n\n// Content\ngulp.task(markup);\ngulp.task(bundleVendor);\n\ngulp.task(\n  'scripts',\n  gulp.parallel(bundleApp, bundleVendor)\n);\nconst scriptTask = gulp.task('scripts');\nscriptTask.description = 'Bundle app scripts with browserify (watchify) and concatenate vendors.';\n\ngulp.task(\n  'styles',\n  gulp.parallel(processStyles, generateFonts)\n);\nconst stylesTask = gulp.task('styles');\nstylesTask.description =\n  'Compile sass/less/stylus files with sourcemaps + autoprefixer and convert fonts.';\n\ngulp.task(\n  'images',\n  gulp.parallel(optimizeImages, generateSpritesheet, generateFavicons)\n);\nconst imagesTask = gulp.task('images');\nimagesTask.description =\n  'Optimize new images and cache them, create a spritesheet and generate favicons/metas.';\n\n// Utils\ngulp.task(serve);\ngulp.task(watch);\ngulp.task(\n  'clean',\n  gulp.parallel(cleanClearCache, cleanDeleteFiles)\n);\nconst cleanTask = gulp.task('clean');\ncleanTask.description = 'Clean dist folder, gulp all caches and sass cache.';\n\n// Build\ngulp.task(\n  'build',\n  gulp.parallel('scripts', 'styles', buildSitemap)\n);\nconst buildTask = gulp.task('build');\nbuildTask.description = 'Build scripts and styles with minification tasks.';\n\n// Tests\ngulp.task(\n  'testPsi',\n  gulp.parallel(testPsiMobile, testPsiDesktop)\n);\nconst testPsiTask = gulp.task('testPsi');\ntestPsiTask.description = 'PageSpeed Insights reportings.';\n\ngulp.task(testScripts);\ngulp.task(testMarkup);\n\n// Default task\nif (config.args.env === 'dev') {\n  gulp.task(\n    'default',\n    gulp.series(\n      gulp.parallel(markup, 'styles', 'scripts', 'images'),\n      gulp.parallel(serve, watch)\n    )\n  );\n} else if (config.args.env === 'prod') {\n  gulp.task(\n    'default',\n    gulp.series(\n      gulp.parallel(markup, 'images'),\n      'build'\n    )\n  );\n} else {\n  console.log(chalk.red('--env flag should be either dev or prod'));\n  process.exit(1);\n}\n\nconst defaultTask = gulp.task('default');\ndefaultTask.description = 'Launch dev or prod default task.';\n\n\n--- File Index 51: web/frontend/src/boilerplate/tasks/markup.js ---\nimport gulp from 'gulp';\n\nimport preprocess from 'gulp-preprocess';\n\nimport config from '../config';\n\nexport function markup() {\n  return gulp.src(`${config.src}/*.html`, {\n    base: config.src\n  })\n  .pipe(preprocess({\n    context: {\n      ENV: config.args.env,\n      META: {\n        title: config.title,\n        description: config.description,\n        url: config.prodURL,\n        image: config.shareImageURL,\n        twitterHandle: config.twitterHandle,\n        twitterImage: config.twitterImage,\n        themeColor: config.themeColor\n      },\n      UA: config.analyticsUA\n    }\n  }))\n  .pipe(gulp.dest(config.dist));\n}\n\nmarkup.description = 'Process html files with environment configuration.';\n\n\n--- File Index 52: web/frontend/src/boilerplate/tasks/scripts.js ---\nimport gulp from 'gulp';\nimport { exec } from 'child_process';\n\nimport source from 'vinyl-source-stream';\nimport buffer from 'vinyl-buffer';\nimport browserify from 'browserify';\nimport watchify from 'watchify';\nimport babelify from 'babelify';\n\nimport gutil from 'gulp-util';\nimport uglify from 'gulp-uglify';\nimport header from 'gulp-header';\nimport rename from 'gulp-rename';\n\nimport { reload } from './serve';\nimport config, { getConfig } from '../config';\nimport bundleLogger from '../utils/bundleLogger';\nimport handleErrors from '../utils/handleErrors';\nimport concatenateFiles from '../utils/concatenateFiles';\n\nconst envDev = config.args.env === 'dev';\n\nconst b = browserify({\n  transform: ['babelify'],\n  entries: [`${config.src}/scripts/main.${config.extensions.scripts}`],\n  extensions: [config.extensions.scripts],\n  debug: envDev,\n  cache: {},\n  packageCache: {},\n  fullPaths: envDev\n});\n\nconst bundler = envDev ? watchify(b) : b;\n\nconst bundle = (done) => {\n  bundleLogger.start();\n\n  return bundler\n    .bundle()\n    .on('error', handleErrors)\n    .pipe(source('main.js'))\n    .pipe(buffer())\n    .pipe(envDev ? gutil.noop() : uglify())\n    .on('error', handleErrors)\n    .pipe(envDev ? gutil.noop() : header(config.banner))\n    .pipe(envDev ? gutil.noop() : rename({\n      suffix: '.min'\n    }))\n    .on('end', () => {\n      if (envDev) {\n        reload(() => {});\n      } else {\n        done();\n      }\n      bundleLogger.end();\n    })\n    .pipe(gulp.dest(`${config.dist}/scripts`));\n};\n\nif (envDev) {\n  bundler.on('update', bundle);\n}\n\nexport function bundleApp(done) {\n  if (envDev) {\n    bundle();\n    done();\n  } else {\n    bundle(done);\n  }\n}\n\nexport function bundleVendor(done) {\n  const updatedConfig = getConfig();\n  // console.log('Aris Here', updatedConfig.vendors);\n  concatenateFiles({\n    src: updatedConfig.vendors,\n    dest: `${updatedConfig.dist}/scripts`,\n    fileName: 'vendor.js'\n  }, () => {\n    if (!envDev) {\n      const cmd = `./node_modules/.bin/uglifyjs ${updatedConfig.dist}/scripts/vendor.js \\\n        -o ${updatedConfig.dist}/scripts/vendor.min.js`;\n\n      exec(cmd, (error) => {\n        if (error !== null) {\n          console.log(`exec error: ${error}`);\n        } else {\n          done();\n        }\n      });\n    } else {\n      done();\n    }\n  });\n}\n\n\n--- File Index 53: web/frontend/src/boilerplate/tasks/serve.js ---\nimport browserSync from 'browser-sync';\n\nimport config from '../config';\n\nexport const server = browserSync.create();\n\nexport function reload(done) {\n  server.reload();\n  done();\n}\n\nexport function serve(done) {\n  const logLevel = config.verbose ? 'debug' : 'info';\n\n  server.init({\n    server: {\n      baseDir: config.dist,\n      directory: true\n    },\n    port: config.port,\n    logConnections: true,\n    logLevel\n  }, done);\n}\n\nserve.description = 'Serve dist directory using browserSync.';\n\n\n--- File Index 54: web/frontend/src/boilerplate/tasks/styles.js ---\nimport gulp from 'gulp';\n\nimport autoprefixer from 'autoprefixer';\nimport mqpacker from 'css-mqpacker';\nimport csswring from 'csswring';\nimport Fontmin from 'fontmin';\n\nimport gutil from 'gulp-util';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps';\nimport header from 'gulp-header';\nimport rename from 'gulp-rename';\n\nimport config from '../config';\nimport { server } from './serve';\nimport handleErrors from '../utils/handleErrors';\n\nlet preprocessor;\nlet processors;\nconst envDev = config.args.env === 'dev';\n\n// Processors\nif (envDev) {\n  processors = [\n    autoprefixer({\n      browsers: config.browsers\n    })\n  ];\n} else {\n  processors = [\n    autoprefixer({\n      browsers: config.browsers\n    }),\n    mqpacker,\n    csswring({\n      preserveHacks: true,\n      removeAllComments: true\n    })\n  ];\n}\n\n// Preprocessor\nlet sassGlob;\nlet lessGlob;\n\nswitch (config.extensions.styles) {\n  case 'scss': {\n    preprocessor = require('gulp-sass');\n    sassGlob = require('gulp-sass-glob');\n    break;\n  }\n\n  case 'less': {\n    preprocessor = require('gulp-less');\n    lessGlob = require('less-plugin-glob');\n    break;\n  }\n\n  case 'styl': {\n    preprocessor = require('gulp-stylus');\n    break;\n  }\n\n  case 'css': {\n    break;\n  }\n\n  default:\n    console.log('Wrong css extension in package.json');\n    break;\n}\n\nfunction getStylesStream(extension) {\n  switch (extension) {\n    case 'scss':\n      return gulp.src(`${config.src}/styles/main.scss`)\n        .pipe(sassGlob())\n        .pipe(sourcemaps.init())\n        .pipe(preprocessor());\n\n    case 'less':\n      return gulp.src(`${config.src}/styles/main.less`)\n        .pipe(sourcemaps.init())\n        .pipe(preprocessor({\n          plugins: [lessGlob]\n        }));\n\n    case 'styl':\n      return gulp.src(`${config.src}/styles/main.styl`)\n        .pipe(sourcemaps.init())\n        .pipe(preprocessor({\n          'include css': true\n        }));\n\n    default:\n      return gulp.src(`${config.src}/styles/**/*.css`);\n  }\n}\n\nexport function processStyles() {\n  return getStylesStream(config.extensions.styles)\n    .on('error', handleErrors)\n    .pipe(postcss(processors))\n    .pipe(envDev ? sourcemaps.write() : gutil.noop())\n    .pipe(envDev ? gutil.noop() : header(config.banner))\n    .pipe(envDev ? gutil.noop() : rename({\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(`${config.dist}/styles`))\n    .pipe(server.stream());\n}\n\nexport function generateFonts(done) {\n  const fontmin = new Fontmin()\n    .src(`${config.src}/styles/fonts/*.{ttf,otf}`)\n    .use(Fontmin.otf2ttf({\n      clone: true\n    }))\n    .use(Fontmin.ttf2eot({\n      clone: true\n    }))\n    .use(Fontmin.ttf2woff({\n      clone: true\n    }))\n    .use(Fontmin.ttf2svg({\n      clone: true\n    }))\n    .dest(`${config.dist}/styles/fonts`);\n\n  return fontmin.run((err) => {\n    if (err) {\n      console.log(err);\n    }\n    done();\n  });\n}\n\n\n--- File Index 55: web/frontend/src/boilerplate/tasks/watch.js ---\nimport gulp from 'gulp';\n\nimport path from 'path';\nimport chalk from 'chalk';\nimport del from 'del';\n\nimport config from '../config';\n\nimport { reload } from './serve';\nimport { markup } from './markup';\nimport { processStyles, generateFonts } from './styles';\nimport { bundleVendor } from './scripts';\nimport { optimizeImages, generateSpritesheet } from './images';\nimport { testScripts } from './test';\n\nfunction onWatchAdd(filePath) {\n  console.log(`File ${chalk.underline.green(filePath)} has been added.`);\n}\n\nfunction onWatchChange(filePath) {\n  console.log(`File ${chalk.underline.yellow(filePath)} was changed.`);\n}\n\nfunction onWatchRemove(filePath) {\n  const filePathFromSrc = path.relative(path.resolve(config.src), filePath);\n  const destFilePath = path.resolve(config.dist, filePathFromSrc);\n  del.sync(destFilePath);\n\n  console.log(`File ${chalk.underline.red(filePath)} has been removed.`);\n}\n\nfunction onWatchError(error) {\n  console.log(chalk.underline.red('Error happened', error));\n}\n\nfunction addEventsHandlers(watcher) {\n  return watcher\n    .on('add', onWatchAdd)\n    .on('change', onWatchChange)\n    .on('unlink', onWatchRemove)\n    .on('error', onWatchError);\n}\n\nexport function watch(done) {\n  const watchers = [\n    // Watch html files\n    gulp.watch(`${config.src}/*.html`, gulp.series(markup, reload)),\n    gulp.watch(`${config.src}/inc/**/*`, gulp.series(markup, reload)),\n\n    // Watch styles files\n    gulp.watch(\n      `${config.src}/styles/**/*.${config.extensions.styles}`,\n      processStyles\n    ),\n    gulp.watch(`${config.dist}/lib/**/*`),\n    // gulp.watch(`${config.dist}/scripts/bundle.js`, gulp.series(reload)),\n    // gulp.watch(`${config.dist}/scripts/tagihan.js`, gulp.series(reload)),\n    // gulp.watch(`${config.dist}/scripts/dashboard.js`, gulp.series(reload)),\n    // gulp.watch(`${config.dist}/scripts/dispensasi.js`, gulp.series(reload)),\n    gulp.watch(`${config.dist}/scripts/app-bundle.js`, gulp.series(reload)),\n    gulp.watch(`${config.src}/styles/fonts/**/*`, generateFonts),\n\n    // Watch package.json file\n    gulp.watch('package.json', bundleVendor),\n\n    // Watch images files\n    gulp.watch([`${config.src}/images/**/*`, `!${config.src}/images/sprite/**/*`], optimizeImages),\n    gulp.watch(`${config.src}/images/sprite/**/*`, generateSpritesheet),\n\n    // Watch test files\n    gulp.watch(`${config.test}/**/*.js`, testScripts)\n  ];\n\n  watchers.map(watcher => addEventsHandlers(watcher));\n\n  console.log(chalk.green('Watching changes...'));\n  done();\n}\n\nwatch.description = 'Watch all changes in source folder and launch task accordingly.';\n\n\n--- File Index 56: web/frontend/src/boilerplate/utils/bundleLogger.js ---\nimport prettyHrtime from 'pretty-hrtime';\nimport chalk from 'chalk';\n\nlet startTime;\n\nexport default {\n  start: () => {\n    startTime = process.hrtime();\n    console.log('Bundling...');\n  },\n\n  end: () => {\n    const taskTime = process.hrtime(startTime);\n    const prettyTime = prettyHrtime(taskTime);\n    console.log('Bundled in', chalk.magenta(prettyTime));\n  }\n};\n\n\n--- File Index 57: web/frontend/src/boilerplate/utils/concatenateFiles.js ---\nimport fs from 'fs';\nimport path from 'path';\n\nexport default function (opts, cb) {\n  const out = opts.src.map((filePath) => fs.readFileSync(filePath).toString());\n\n  fs.exists(opts.dest, (exists) => {\n    if (!exists) {\n      fs.mkdirSync(opts.dest);\n    }\n    fs.writeFile(path.join(opts.dest, opts.fileName), out.join('\\n'), (err) => {\n      if (err) {\n        console.log(err);\n      } else if (cb) {\n        cb();\n      }\n    });\n  });\n}\n\n\n--- File Index 58: web/frontend/src/boilerplate/utils/handleErrors.js ---\nimport notify from 'gulp-notify';\nimport gutil from 'gulp-util';\n\nexport default function (...args) {\n  gutil.beep();\n\n  // End the task\n  this.emit('end');\n\n  // Notify what's wrong\n  notify.onError({\n    title: 'Error',\n    message: '<%= error.message %>'\n  }).apply(this, args);\n}\n\n\n--- File Index 59: web/frontend/src/src/.eslintrc.js ---\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"globals\": {\n        \"window\": true,\n        \"document\": true,\n        \"console\": true,\n        \"$\": true\n    },\n    \"rules\": {\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n};\n\n--- File Index 60: web/frontend/src/src/scripts/.eslintrc.js ---\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"globals\": {\n        \"window\": true,\n        \"document\": true,\n        \"console\": true,\n        \"$\": true\n    },\n    \"rules\": {\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n};\n\n--- File Index 61: web/frontend/src/src/scripts/backup-main.js ---\n\nVue.use(BootstrapVue);\n// import DataPasar from 'components/data-pasar.page'\n\nif (self === top) {\n  let antiClickjack = document.getElementById('antiClickjack')\n  antiClickjack.parentNode.removeChild(antiClickjack)\n} else {\n  top.location = self.location\n}\n\nlet sidebarModule = {\n  resolution: 0,\n  open: true,\n  init: function () {\n    this.cacheDom()\n    this.findResolution()\n    this.bindEvents()\n    this.render()\n  },\n  findResolution: function () {\n    if (this.$window.width() < 520) {\n      this.open = false\n      this.render()\n    }\n  },\n  cacheDom: function () {\n    this.$sidebarWrapper = $('#sidebar-wrapper')\n    this.$sidebarButton = $('#sidebar-button')\n    this.$mainWrapper = $('#main-wrapper')\n    this.$window = $(window)\n  },\n  bindEvents: function () {\n    this.$sidebarButton.on('click', this.go.bind(this))\n  },\n  go: function () {\n    this.open = !this.open\n    this.render()\n  },\n  render: function () {\n    if(this.open) {\n      this.$sidebarWrapper.addClass('opened')\n      this.$mainWrapper.addClass('opened')\n    } else {\n      this.$sidebarWrapper.removeClass('opened')\n      this.$mainWrapper.removeClass('opened')\n    }\n  }\n\n}\n\nsidebarModule.init()\n\n// prevent sidebar accordion\n$('.ui.accordion .title').click(e => {\n  e.preventDefault()\n})\n\n\nlet notificationModule = {\n  open: false,\n  state: '',\n  init: function() {\n    this.cacheDom()\n    this.bindEvents()\n    this.render()\n  },\n  cacheDom: function() {\n    this.$mailWrapper = $('#mail-wrapper')\n    this.$alertWrapper = $('#alert-wrapper')\n    this.$mailButton= $('#mail-button')\n    this.$alertButton= $('#alert-button')\n    this.$window = $(window)\n  },\n  bindEvents: function() {\n    this.$mailButton.on('click', this.go.bind(this))\n    this.$alertButton.on('click', this.go.bind(this))\n    this.$window.on('click', this.close.bind(this))\n  },\n  go: function(e) {\n    e.stopPropagation()\n    let clicked = ($(e.target).hasClass('alert')) ? 'alert' : 'mail' \n    if(this.state === clicked) {\n      this.open = (this.open) ? false : true\n    } else {\n      this.open = true\n    }\n    this.state = clicked\n    this.render()\n  },\n  close: function(e) {\n    this.open = false\n    // $('#tooltip-dasboard').removeClass('show')\n    this.render()\n  },\n  render: function() {\n    if(this.open) {\n      if(this.state === 'alert') {\n        this.$alertWrapper.addClass('opened')\n        this.$mailWrapper.removeClass('opened')\n      } else {\n        this.$mailWrapper.addClass('opened')\n        this.$alertWrapper.removeClass('opened')\n      }\n    } else {\n      this.$mailWrapper.removeClass('opened')\n      this.$alertWrapper.removeClass('opened')\n    }\n  }\n\n}\n\nnotificationModule.init()\n\n$('.ui.accordion').accordion()\n$('.ui.dropdown.user.panel')\n  .dropdown({\n    action: 'hide'\n  })\n\n\n$('.ui.dropdown').not('.user').dropdown({\n  forceSelection: false,\n  placeholder: false\n})\n\n$('#example1').calendar()\n$('.checkbox').checkbox()\n\n$('a[data-content]')\n  .popup()\n\n\nwindow.bniSmartTenant = {\n  'line-lazy': {\n    strokepath: [\n      // start:path logo bni\n      {\n        'path': 'M70.1,10.9H6.8c-3.4,0-6.2,2.8-6.2,6.2v24.4c0,3.4,2.8,6.2,6.2,6.2h63.3c3.4,0,6.2-2.8,6.2-6.2V17.1    C76.3,13.7,73.5,10.9,70.1,10.9z M4.7,43.3v0.1H4.5L4.7,43.3z M54.5,44.7h1v0.5C55.2,45,54.8,44.9,54.5,44.7z',\n        'duration': 200\n      },\n      {\n        'path': 'M19.9,42.2h-7.8c-0.9,0.1-1.7-0.2-2.4-0.8C9.1,40.8,8.9,40,9,39.1V20c-0.1-0.9,0.2-1.7,0.7-2.4    c0.7-0.6,1.5-0.8,2.4-0.7h8.2c1.1,0,2.1,0.1,3.2,0.2c0.8,0.1,1.7,0.4,2.4,0.9c0.6,0.3,1.2,0.8,1.6,1.3c0.5,0.5,0.8,1.2,1.1,1.8    c0.2,0.7,0.4,1.4,0.4,2.1c0.1,2.5-1.5,4.8-3.8,5.6c3.3,1.1,5,3.1,5,6.2c0,1.4-0.4,2.7-1.1,3.8c-0.7,1.1-1.7,2-2.9,2.5    c-0.9,0.3-1.8,0.6-2.7,0.7C22.2,42.2,21.1,42.2,19.9,42.2z M14.2,20.7v6.5h4.7c1,0,2-0.1,3-0.4c0.7-0.2,1.3-0.7,1.6-1.4    c0.3-0.5,0.4-1.1,0.4-1.6c0.1-1.1-0.4-2.1-1.4-2.6c-1.3-0.5-2.8-0.7-4.2-0.6L14.2,20.7z M19.5,31h-5.3v7.4h5.5    c3.5,0,5.2-1.3,5.2-3.8c0.1-1.1-0.4-2.2-1.3-2.8C22.3,31.2,20.9,30.9,19.5,31L19.5,31z',\n        'duration': 200\n      },\n      {\n        'path': 'M41.3,19.5l9.9,15V19.3c-0.1-0.8,0.2-1.6,0.6-2.2c0.4-0.5,1.1-0.8,1.7-0.7c0.7,0,1.3,0.2,1.8,0.7    c0.5,0.6,0.7,1.4,0.6,2.2v20c0,2.2-0.9,3.3-2.8,3.3c-0.4,0-0.8-0.1-1.2-0.2c-0.4-0.1-0.7-0.4-1-0.6c-0.3-0.3-0.6-0.6-0.9-1    l-0.9-1.2l-9.7-14.8v14.9c0.1,0.8-0.2,1.6-0.7,2.2c-0.4,0.5-1.1,0.8-1.7,0.8c-0.7,0-1.3-0.2-1.8-0.8c-0.5-0.6-0.7-1.4-0.7-2.2    V20.1c0-0.7,0.1-1.4,0.3-2c0.2-0.5,0.6-1,1.1-1.3c0.5-0.3,1.1-0.5,1.7-0.5c0.8,0,1.5,0.3,2,0.8c0.3,0.3,0.5,0.6,0.8,1L41.3,19.5z',\n        'duration': 200\n      },\n      {\n        'path': 'M61.7,39.5v-20c-0.1-0.8,0.2-1.7,0.7-2.3c0.5-0.5,1.1-0.8,1.8-0.8c0.7,0,1.4,0.3,1.9,0.8    c0.5,0.7,0.8,1.5,0.7,2.4v20c0.1,0.8-0.2,1.7-0.7,2.4c-0.5,0.5-1.2,0.8-1.9,0.8c-0.7,0-1.4-0.3-1.8-0.8    C61.9,41.2,61.7,40.4,61.7,39.5z',\n        'duration': 200\n      },\n      // end:path logo bni\n      // start:path smart\n      {\n        'path': 'M90.9,7.9c0,0.6-0.2,1.1-0.5,1.6c-0.3,0.5-0.8,0.9-1.3,1.1C88.4,10.9,87.7,11,87,11c-0.8,0-1.7-0.2-2.4-0.6    c-0.4-0.3-0.8-0.6-1.1-1.1C83.2,9,83.1,8.6,83,8.1c0-0.5,0.4-0.9,0.9-0.9c0,0,0,0,0,0c0.2,0,0.4,0.1,0.5,0.2    c0.2,0.2,0.3,0.4,0.4,0.6c0.1,0.3,0.2,0.5,0.4,0.8c0.2,0.2,0.4,0.4,0.6,0.5c0.3,0.1,0.7,0.2,1,0.2c0.5,0,1-0.1,1.4-0.4    c0.3-0.2,0.5-0.6,0.6-1c0-0.3-0.1-0.6-0.3-0.8c-0.2-0.2-0.5-0.4-0.8-0.5c-0.3-0.1-0.7-0.2-1.3-0.3c-0.6-0.1-1.2-0.3-1.8-0.6    c-0.5-0.2-0.8-0.5-1.1-0.9c-0.3-0.4-0.4-0.9-0.4-1.4c0-0.5,0.2-1,0.4-1.4c0.3-0.5,0.8-0.8,1.3-1c0.6-0.2,1.3-0.4,2-0.3    c0.5,0,1.1,0.1,1.6,0.2c0.4,0.1,0.8,0.3,1.1,0.6c0.3,0.2,0.5,0.5,0.6,0.8c0.1,0.2,0.2,0.5,0.2,0.8c0,0.2-0.1,0.5-0.2,0.6    c-0.2,0.2-0.4,0.3-0.6,0.3c-0.2,0-0.4,0-0.5-0.2c-0.2-0.2-0.3-0.4-0.4-0.6c-0.2-0.3-0.4-0.6-0.7-0.9c-0.4-0.2-0.8-0.3-1.2-0.3    c-0.4,0-0.9,0.1-1.2,0.3c-0.3,0.2-0.5,0.5-0.5,0.8c0,0.2,0.1,0.4,0.2,0.5c0.1,0.2,0.3,0.3,0.4,0.4c0.2,0.1,0.4,0.2,0.6,0.2l1,0.3    c0.5,0.1,1,0.3,1.5,0.4c0.4,0.1,0.8,0.3,1.2,0.6c0.3,0.2,0.6,0.5,0.7,0.9C90.8,7,90.9,7.5,90.9,7.9z',\n        'duration': 200\n      },\n      {\n        'path': 'M102.9,9.4l-1.6-6.3v6.8c0,0.3-0.1,0.6-0.2,0.9c-0.4,0.4-0.9,0.4-1.3,0c0,0,0,0,0,0c-0.2-0.2-0.3-0.5-0.3-0.9    V2.1c0-0.3,0.1-0.7,0.3-0.9C100,1,100.4,1,100.7,1h0.6c0.3,0,0.5,0,0.8,0.1c0.2,0.1,0.3,0.2,0.4,0.4c0.1,0.3,0.2,0.6,0.3,0.9    l1.4,5.4l1.4-5.4c0.1-0.3,0.2-0.6,0.3-0.9c0.1-0.2,0.2-0.3,0.4-0.4c0.3-0.1,0.5-0.1,0.8-0.1h0.6c0.3,0,0.6,0.1,0.9,0.2    c0.3,0.2,0.4,0.5,0.3,0.9v7.8c0,0.3-0.1,0.6-0.2,0.9c-0.2,0.2-0.4,0.3-0.7,0.3c-0.2,0-0.5-0.1-0.6-0.3c-0.2-0.2-0.3-0.5-0.3-0.9    V3.1l-1.6,6.3c-0.1,0.4-0.2,0.7-0.2,0.9c-0.1,0.2-0.2,0.4-0.4,0.5c-0.2,0.2-0.5,0.3-0.7,0.2c-0.4,0-0.8-0.2-1-0.5    c-0.1-0.2-0.2-0.3-0.2-0.5L102.9,9.4z',\n        'duration': 200\n      },\n      {\n        'path': 'M124.3,9.7l-0.5-1.2h-4l-0.5,1.3c-0.1,0.4-0.3,0.7-0.5,1c-0.2,0.2-0.4,0.3-0.6,0.3c-0.3,0-0.5-0.1-0.7-0.3    c-0.2-0.2-0.3-0.4-0.3-0.6c0-0.1,0-0.3,0.1-0.4c0-0.1,0.1-0.3,0.2-0.6l2.5-6.4l0.3-0.7c0.1-0.2,0.2-0.4,0.3-0.6    c0.1-0.2,0.3-0.3,0.4-0.4c0.2-0.1,0.5-0.2,0.7-0.2c0.2,0,0.5,0,0.7,0.2c0.2,0.1,0.3,0.2,0.4,0.4c0.1,0.2,0.2,0.4,0.3,0.5l0.3,0.8    l2.6,6.4c0.2,0.3,0.3,0.7,0.3,1.1c0,0.2-0.1,0.5-0.3,0.6c-0.2,0.2-0.4,0.3-0.7,0.3c-0.1,0-0.3,0-0.4-0.1c-0.1-0.1-0.2-0.1-0.3-0.2    c-0.1-0.1-0.2-0.3-0.2-0.4L124.3,9.7z M120.3,7h3l-1.5-4.1L120.3,7z',\n        'duration': 200\n      },\n      {\n        'path': 'M137.5,6.6h-0.7v3.2c0,0.3-0.1,0.7-0.3,0.9c-0.2,0.2-0.4,0.3-0.7,0.3c-0.3,0-0.6-0.1-0.7-0.3    c-0.2-0.3-0.3-0.6-0.3-0.9V2.2c-0.1-0.6,0.3-1.1,0.8-1.2c0.1,0,0.3,0,0.4,0h3.3c0.4,0,0.8,0,1.1,0.1c0.3,0,0.6,0.1,0.9,0.2    c0.3,0.1,0.6,0.3,0.8,0.6c0.2,0.2,0.4,0.5,0.5,0.9c0.1,0.3,0.2,0.7,0.2,1c0,0.6-0.2,1.3-0.6,1.8c-0.5,0.5-1.2,0.8-1.9,0.9    c0.4,0.2,0.7,0.5,1,0.8c0.3,0.4,0.6,0.8,0.9,1.2c0.2,0.4,0.4,0.7,0.6,1.1c0.1,0.2,0.2,0.5,0.2,0.7c0,0.1,0,0.3-0.1,0.4    c-0.1,0.1-0.2,0.2-0.3,0.3c-0.2,0.1-0.3,0.1-0.5,0.1c-0.2,0-0.4-0.1-0.6-0.2c-0.2-0.1-0.3-0.2-0.4-0.4c-0.1-0.2-0.3-0.4-0.4-0.7    l-0.8-1.3c-0.2-0.4-0.5-0.8-0.8-1.1c-0.2-0.2-0.4-0.4-0.7-0.5C138.1,6.7,137.8,6.6,137.5,6.6z M138.6,2.5h-1.9v2.7h1.8    c0.4,0,0.8,0,1.2-0.1c0.3-0.1,0.6-0.2,0.8-0.4c0.2-0.2,0.3-0.5,0.3-0.8c0-0.3-0.1-0.5-0.2-0.7c-0.1-0.2-0.3-0.4-0.6-0.5    C139.6,2.5,139.1,2.4,138.6,2.5z',\n        'duration': 200\n      },\n      {\n        'path': 'M157.4,2.6h-2.2v7.2c0,0.3-0.1,0.7-0.3,0.9c-0.2,0.2-0.4,0.3-0.7,0.3c-0.3,0-0.5-0.1-0.7-0.3    c-0.2-0.3-0.3-0.6-0.3-0.9V2.6H151c-0.3,0-0.5-0.1-0.8-0.2C150.1,2.2,150,2,150,1.8c0-0.2,0.1-0.5,0.3-0.6    c0.2-0.2,0.5-0.2,0.8-0.2h6.4c0.3,0,0.6,0.1,0.8,0.2c0.2,0.2,0.3,0.4,0.2,0.6c0,0.2-0.1,0.4-0.3,0.6    C157.9,2.6,157.7,2.6,157.4,2.6z',\n        'duration': 200\n      },\n      // end:path smart\n      // start:path logo A in tenant\n      {\n        'path': 'M155.3,44.7c-1.8,0-3.3-1.5-3.3-3.3c0-0.7,0.2-1.3,0.6-1.9L176,5.2c0.6-0.9,1.6-1.4,2.7-1.4l0,0    c1.1,0,2.1,0.6,2.7,1.5l22.1,33.8c0.9,1.6,0.4,3.6-1.2,4.5c-1.5,0.9-3.4,0.5-4.4-0.9L178.7,13l-20.6,30.2    C157.5,44.1,156.4,44.7,155.3,44.7z',\n        'duration': 300\n      },\n      // end:path logo A in tenant\n      // start:path dotted\n      {\n        'path': 'M174.4,28.4h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6V31    C171.8,29.6,172.9,28.4,174.4,28.4z',\n        'duration': 50\n      },\n      {\n        'path': 'M182.2,28.4h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6V31    C179.6,29.6,180.7,28.4,182.2,28.4z',\n        'duration': 50\n      },\n      {\n        'path': 'M174.4,35.7h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6v-0.4    C171.8,36.9,172.9,35.7,174.4,35.7z',\n        'duration': 50\n      },\n      {\n        'path': 'M182.2,35.7h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6v-0.4    C179.6,36.9,180.7,35.7,182.2,35.7z',\n        'duration': 50\n      },\n      // end:path dotted\n      // start:path smart\n      {\n        'path': 'M101.7,19.9h-6.4v21c0.1,1-0.2,1.9-0.8,2.7c-0.5,0.6-1.3,0.9-2.1,0.9c-0.8,0-1.6-0.3-2.1-0.9    c-0.6-0.8-0.9-1.7-0.8-2.7v-21h-6.4c-0.8,0.1-1.6-0.2-2.2-0.7c-0.5-0.4-0.8-1.1-0.7-1.7c0-0.7,0.2-1.3,0.8-1.8    c0.6-0.5,1.4-0.7,2.2-0.6h18.6c0.8-0.1,1.6,0.2,2.3,0.7c0.5,0.4,0.8,1.1,0.7,1.8c0,0.7-0.3,1.3-0.8,1.7    C103.3,19.7,102.5,20,101.7,19.9z',\n        'duration': 200\n      },\n      {\n        'path': 'M129.2,19.6h-13.2v7.1h8.7c0.7-0.1,1.4,0.2,2,0.6c0.4,0.4,0.7,1,0.7,1.6c0,0.6-0.2,1.2-0.6,1.6    c-0.6,0.5-1.3,0.7-2,0.6h-8.7v8.2h13.6c0.7-0.1,1.5,0.2,2.1,0.6c0.5,0.4,0.7,1.1,0.7,1.7c0,0.6-0.2,1.2-0.7,1.7    c-0.6,0.5-1.3,0.7-2.1,0.6h-15.9c-1.7,0.3-3.3-0.8-3.6-2.4c-0.1-0.4-0.1-0.8,0-1.1V18.7c0-0.7,0.1-1.4,0.4-2.1    c0.2-0.5,0.7-0.9,1.2-1.2c0.6-0.3,1.3-0.4,2-0.4h15.4c0.7-0.1,1.5,0.2,2.1,0.6c0.5,0.4,0.7,1,0.7,1.6c0,0.6-0.2,1.2-0.7,1.6    C130.7,19.4,130,19.6,129.2,19.6z',\n        'duration': 200\n      },\n      {\n        'path': 'M141.1,18.1l11.2,17V17.9c-0.1-0.9,0.2-1.8,0.7-2.5c0.5-0.6,1.2-0.9,1.9-0.8c0.8,0,1.5,0.3,2,0.8    c0.5,0.7,0.8,1.6,0.7,2.5v22.7c0,2.5-1.1,3.8-3.1,3.8c-0.5,0-1-0.1-1.4-0.2c-0.4-0.2-0.8-0.4-1.2-0.7c-0.4-0.3-0.7-0.7-1-1.1    c-0.3-0.4-0.6-0.9-0.9-1.4l-11-16.8v16.9c0.1,0.9-0.2,1.8-0.8,2.5c-0.5,0.6-1.2,0.9-2,0.9c-0.8,0-1.5-0.3-2-0.9    c-0.5-0.7-0.8-1.6-0.8-2.5V18.8c0-0.8,0.1-1.5,0.3-2.2c0.3-0.6,0.7-1.1,1.3-1.5c0.6-0.4,1.2-0.6,1.9-0.6c0.9,0,1.7,0.3,2.3,0.9    c0.3,0.3,0.6,0.7,0.9,1.1L141.1,18.1z',\n        'duration': 200\n      },\n      {\n        'path': 'M206.1,18.1l11.2,17V17.9c-0.1-0.9,0.2-1.8,0.7-2.5c0.5-0.6,1.2-0.9,1.9-0.8c0.8,0,1.5,0.3,2,0.8    c0.5,0.7,0.8,1.6,0.7,2.5v22.7c0,2.5-1.1,3.8-3.1,3.8c-0.5,0-1-0.1-1.4-0.2c-0.4-0.2-0.8-0.4-1.2-0.7c-0.4-0.3-0.7-0.7-1-1.1    c-0.3-0.4-0.6-0.9-0.9-1.4l-11-16.8v16.9c0.1,0.9-0.2,1.8-0.8,2.5c-0.5,0.6-1.2,0.9-2,0.9c-0.8,0-1.5-0.3-2-0.9    c-0.5-0.7-0.8-1.6-0.8-2.5V18.8c0-0.8,0.1-1.5,0.3-2.2c0.3-0.6,0.7-1.1,1.3-1.5c0.6-0.4,1.2-0.6,1.9-0.6c0.9,0,1.7,0.3,2.3,0.9    c0.3,0.3,0.6,0.7,0.9,1.1L206.1,18.1z',\n        'duration': 200\n      },\n      {\n        'path': 'M246.7,19.9h-6.4v21c0.1,1-0.2,1.9-0.8,2.7c-0.5,0.6-1.3,0.9-2.1,0.9c-0.8,0-1.6-0.3-2.1-0.9    c-0.6-0.8-0.9-1.7-0.8-2.7v-21h-6.4c-0.8,0.1-1.6-0.2-2.2-0.7c-0.5-0.4-0.8-1.1-0.7-1.7c0-0.7,0.2-1.3,0.8-1.8    c0.6-0.5,1.4-0.7,2.2-0.6h18.6c0.8-0.1,1.6,0.2,2.2,0.7c0.5,0.4,0.8,1.1,0.7,1.8c0,0.7-0.3,1.3-0.8,1.7    C248.3,19.7,247.5,20,246.7,19.9z',\n        'duration': 200\n      }\n      // end:path smart\n    ],\n    'dimensions': {\n      width: 251,\n      height: 49\n    }\n  }\n}\n\n\n// drawing masking background\nwindow.maskingBackground = (active) => {\n  const elementSelect = $('[masking=background]')\n  if (active) {\n    elementSelect.addClass('active')\n  }\n  else {\n    elementSelect.removeClass('active')\n  }\n}\n\n// drawing logo\nwindow.drawLogo = (el, path, init) => {\n  const lazy = $(el)\n  let options = {}\n\n  options.init = init\n  options.svgData = path\n  options.strokeWidth = 0.5\n  options.strokeColor = '#00555f'\n  // loop: erase, and re run paint\n  options.onComplete = () => {\n    $('[masking=image]').addClass('active')\n    $('[masking=svg]').removeClass('acitve')\n    setTimeout(function () {\n      // lazy.lazylinepainter('erase')\n      $('[masking=image]').removeClass('active')\n      $('[masking=svg]').addClass('acitve')\n      lazy.lazylinepainter('paint')\n    }, 1000) \n  }\n  // run lazy\n  if (init) lazy.lazylinepainter(options).lazylinepainter('paint')\n  else lazy.lazylinepainter('erase')\n}\n\nwindow.maskingBackground(true)\nwindow.drawLogo('#line-lazy', window.bniSmartTenant, true)\n$(document).ready(function () {\n  // run when not in epasar\n  if($('#epasar').length < 1) {\n    setTimeout(() => {\n      window.maskingBackground(false)\n      window.drawLogo('#line-lazy', window.bniSmartTenant, false)\n    }, 0)\n  }\n})\n\n--- File Index 62: web/frontend/src/src/scripts/main.js ---\n// import Muc from 'views/muc'\n// import View from 'views/view'\n// import Component from 'components/tagihan.component'\n// import Mitra from 'components/mitra.component'\n// import Popup from 'components/popup.component'\n\nimport Component from 'components/adminlte'\nvar warning = $('.warning-form')\nvar warningpesan = $('.warning-pesan')\nvar countChecked = function() {\n    var n = $( \"input:checked\" ).length;\n    \n    \n    var closeWarning = $('#close-warning')\n    if(n == 4){\n        warning.show()\n    }\n\n  };\n  countChecked();\n   \n  $( \"input[type=checkbox]\" ).on( \"click\", countChecked );\n\n  $('.warning-form').delegate('#close-warning', 'click', function(){\n    warning.hide();\n  })\n\n  \n  $('.warning-pesan').delegate('#close-warning', 'click', function(){\n    warningpesan.hide();\n  })\n\n  $('#pesannama').click(function(){\n    warningpesan.show();\n  })\n\n\n  var usernav = {\n    init: function(){\n      this.dom();\n      this.event();\n    },\n    dom: function(){\n      this.$toggle = $('.toggle-user')\n    },\n    event: function(){\n      var btn = this.$toggle;\n      var bool = false\n      btn.click(function(){\n        bool = !bool\n        var target = $(this).attr('id-target')\n\n        if(bool == true){\n          $(target).show('slow')\n        } else{\n          $(target).hide('slow')\n        }\n      })\n    }\n  }\n\n  usernav.init();\n\n--- File Index 63: web/frontend/src/src/scripts/components/adminlte.js ---\n/*! AdminLTE app.js\n* ================\n* Main JS application file for AdminLTE v2. This file\n* should be included in all pages. It controls some layout\n* options and implements exclusive AdminLTE plugins.\n*\n* @Author  Almsaeed Studio\n* @Support <https://www.almsaeedstudio.com>\n* @Email   <abdullah@almsaeedstudio.com>\n* @version 2.4.8\n* @repository git://github.com/almasaeed2010/AdminLTE.git\n* @license MIT <http://opensource.org/licenses/MIT>\n*/\n\n// Make sure jQuery has been loaded\nif (typeof jQuery === 'undefined') {\nthrow new Error('AdminLTE requires jQuery')\n}\n\n/* BoxRefresh()\n * =========\n * Adds AJAX content control to a box.\n *\n * @Usage: $('#my-box').boxRefresh(options)\n *         or add [data-widget=\"box-refresh\"] to the box element\n *         Pass any option as data-option=\"value\"\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.boxrefresh';\n\n  var Default = {\n    source         : '',\n    params         : {},\n    trigger        : '.refresh-btn',\n    content        : '.box-body',\n    loadInContent  : true,\n    responseType   : '',\n    overlayTemplate: '<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>',\n    onLoadStart    : function () {\n    },\n    onLoadDone     : function (response) {\n      return response;\n    }\n  };\n\n  var Selector = {\n    data: '[data-widget=\"box-refresh\"]'\n  };\n\n  // BoxRefresh Class Definition\n  // =========================\n  var BoxRefresh = function (element, options) {\n    this.element  = element;\n    this.options  = options;\n    this.$overlay = $(options.overlay);\n\n    if (options.source === '') {\n      throw new Error('Source url was not defined. Please specify a url in your BoxRefresh source option.');\n    }\n\n    this._setUpListeners();\n    this.load();\n  };\n\n  BoxRefresh.prototype.load = function () {\n    this._addOverlay();\n    this.options.onLoadStart.call($(this));\n\n    $.get(this.options.source, this.options.params, function (response) {\n      if (this.options.loadInContent) {\n        $(this.options.content).html(response);\n      }\n      this.options.onLoadDone.call($(this), response);\n      this._removeOverlay();\n    }.bind(this), this.options.responseType !== '' && this.options.responseType);\n  };\n\n  // Private\n\n  BoxRefresh.prototype._setUpListeners = function () {\n    $(this.element).on('click', Selector.trigger, function (event) {\n      if (event) event.preventDefault();\n      this.load();\n    }.bind(this));\n  };\n\n  BoxRefresh.prototype._addOverlay = function () {\n    $(this.element).append(this.$overlay);\n  };\n\n  BoxRefresh.prototype._removeOverlay = function () {\n    $(this.element).remove(this.$overlay);\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option);\n        $this.data(DataKey, (data = new BoxRefresh($this, options)));\n      }\n\n      if (typeof data == 'string') {\n        if (typeof data[option] == 'undefined') {\n          throw new Error('No method named ' + option);\n        }\n        data[option]();\n      }\n    });\n  }\n\n  var old = $.fn.boxRefresh;\n\n  $.fn.boxRefresh             = Plugin;\n  $.fn.boxRefresh.Constructor = BoxRefresh;\n\n  // No Conflict Mode\n  // ================\n  $.fn.boxRefresh.noConflict = function () {\n    $.fn.boxRefresh = old;\n    return this;\n  };\n\n  // BoxRefresh Data API\n  // =================\n  $(window).on('load', function () {\n    $(Selector.data).each(function () {\n      Plugin.call($(this));\n    });\n  });\n\n}(jQuery);\n\n\n/* BoxWidget()\n * ======\n * Adds box widget functions to boxes.\n *\n * @Usage: $('.my-box').boxWidget(options)\n *         This plugin auto activates on any element using the `.box` class\n *         Pass any option as data-option=\"value\"\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.boxwidget';\n\n  var Default = {\n    animationSpeed : 500,\n    collapseTrigger: '[data-widget=\"collapse\"]',\n    removeTrigger  : '[data-widget=\"remove\"]',\n    collapseIcon   : 'fa-minus',\n    expandIcon     : 'fa-plus',\n    removeIcon     : 'fa-times'\n  };\n\n  var Selector = {\n    data     : '.box',\n    collapsed: '.collapsed-box',\n    header   : '.box-header',\n    body     : '.box-body',\n    footer   : '.box-footer',\n    tools    : '.box-tools'\n  };\n\n  var ClassName = {\n    collapsed: 'collapsed-box'\n  };\n\n  var Event = {\n    collapsed: 'collapsed.boxwidget',\n    expanded : 'expanded.boxwidget',\n    removed  : 'removed.boxwidget'\n  };\n\n  // BoxWidget Class Definition\n  // =====================\n  var BoxWidget = function (element, options) {\n    this.element = element;\n    this.options = options;\n\n    this._setUpListeners();\n  };\n\n  BoxWidget.prototype.toggle = function () {\n    var isOpen = !$(this.element).is(Selector.collapsed);\n\n    if (isOpen) {\n      this.collapse();\n    } else {\n      this.expand();\n    }\n  };\n\n  BoxWidget.prototype.expand = function () {\n    var expandedEvent = $.Event(Event.expanded);\n    var collapseIcon  = this.options.collapseIcon;\n    var expandIcon    = this.options.expandIcon;\n\n    $(this.element).removeClass(ClassName.collapsed);\n\n    $(this.element)\n      .children(Selector.header + ', ' + Selector.body + ', ' + Selector.footer)\n      .children(Selector.tools)\n      .find('.' + expandIcon)\n      .removeClass(expandIcon)\n      .addClass(collapseIcon);\n\n    $(this.element).children(Selector.body + ', ' + Selector.footer)\n      .slideDown(this.options.animationSpeed, function () {\n        $(this.element).trigger(expandedEvent);\n      }.bind(this));\n  };\n\n  BoxWidget.prototype.collapse = function () {\n    var collapsedEvent = $.Event(Event.collapsed);\n    var collapseIcon   = this.options.collapseIcon;\n    var expandIcon     = this.options.expandIcon;\n\n    $(this.element)\n      .children(Selector.header + ', ' + Selector.body + ', ' + Selector.footer)\n      .children(Selector.tools)\n      .find('.' + collapseIcon)\n      .removeClass(collapseIcon)\n      .addClass(expandIcon);\n\n    $(this.element).children(Selector.body + ', ' + Selector.footer)\n      .slideUp(this.options.animationSpeed, function () {\n        $(this.element).addClass(ClassName.collapsed);\n        $(this.element).trigger(collapsedEvent);\n      }.bind(this));\n  };\n\n  BoxWidget.prototype.remove = function () {\n    var removedEvent = $.Event(Event.removed);\n\n    $(this.element).slideUp(this.options.animationSpeed, function () {\n      $(this.element).trigger(removedEvent);\n      $(this.element).remove();\n    }.bind(this));\n  };\n\n  // Private\n\n  BoxWidget.prototype._setUpListeners = function () {\n    var that = this;\n\n    $(this.element).on('click', this.options.collapseTrigger, function (event) {\n      if (event) event.preventDefault();\n      that.toggle($(this));\n      return false;\n    });\n\n    $(this.element).on('click', this.options.removeTrigger, function (event) {\n      if (event) event.preventDefault();\n      that.remove($(this));\n      return false;\n    });\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option);\n        $this.data(DataKey, (data = new BoxWidget($this, options)));\n      }\n\n      if (typeof option == 'string') {\n        if (typeof data[option] == 'undefined') {\n          throw new Error('No method named ' + option);\n        }\n        data[option]();\n      }\n    });\n  }\n\n  var old = $.fn.boxWidget;\n\n  $.fn.boxWidget             = Plugin;\n  $.fn.boxWidget.Constructor = BoxWidget;\n\n  // No Conflict Mode\n  // ================\n  $.fn.boxWidget.noConflict = function () {\n    $.fn.boxWidget = old;\n    return this;\n  };\n\n  // BoxWidget Data API\n  // ==================\n  $(window).on('load', function () {\n    $(Selector.data).each(function () {\n      Plugin.call($(this));\n    });\n  });\n}(jQuery);\n\n\n/* ControlSidebar()\n * ===============\n * Toggles the state of the control sidebar\n *\n * @Usage: $('#control-sidebar-trigger').controlSidebar(options)\n *         or add [data-toggle=\"control-sidebar\"] to the trigger\n *         Pass any option as data-option=\"value\"\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.controlsidebar';\n\n  var Default = {\n    slide: true\n  };\n\n  var Selector = {\n    sidebar: '.control-sidebar',\n    data   : '[data-toggle=\"control-sidebar\"]',\n    open   : '.control-sidebar-open',\n    bg     : '.control-sidebar-bg',\n    wrapper: '.wrapper',\n    content: '.content-wrapper',\n    boxed  : '.layout-boxed'\n  };\n\n  var ClassName = {\n    open : 'control-sidebar-open',\n    fixed: 'fixed'\n  };\n\n  var Event = {\n    collapsed: 'collapsed.controlsidebar',\n    expanded : 'expanded.controlsidebar'\n  };\n\n  // ControlSidebar Class Definition\n  // ===============================\n  var ControlSidebar = function (element, options) {\n    this.element         = element;\n    this.options         = options;\n    this.hasBindedResize = false;\n\n    this.init();\n  };\n\n  ControlSidebar.prototype.init = function () {\n    // Add click listener if the element hasn't been\n    // initialized using the data API\n    if (!$(this.element).is(Selector.data)) {\n      $(this).on('click', this.toggle);\n    }\n\n    this.fix();\n    $(window).resize(function () {\n      this.fix();\n    }.bind(this));\n  };\n\n  ControlSidebar.prototype.toggle = function (event) {\n    if (event) event.preventDefault();\n\n    this.fix();\n\n    if (!$(Selector.sidebar).is(Selector.open) && !$('body').is(Selector.open)) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  };\n\n  ControlSidebar.prototype.expand = function () {\n    if (!this.options.slide) {\n      $('body').addClass(ClassName.open);\n    } else {\n      $(Selector.sidebar).addClass(ClassName.open);\n    }\n\n    $(this.element).trigger($.Event(Event.expanded));\n  };\n\n  ControlSidebar.prototype.collapse = function () {\n    $('body, ' + Selector.sidebar).removeClass(ClassName.open);\n    $(this.element).trigger($.Event(Event.collapsed));\n  };\n\n  ControlSidebar.prototype.fix = function () {\n    if ($('body').is(Selector.boxed)) {\n      this._fixForBoxed($(Selector.bg));\n    }\n  };\n\n  // Private\n\n  ControlSidebar.prototype._fixForBoxed = function (bg) {\n    bg.css({\n      position: 'absolute',\n      height  : $(Selector.wrapper).height()\n    });\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option);\n        $this.data(DataKey, (data = new ControlSidebar($this, options)));\n      }\n\n      if (typeof option == 'string') data.toggle();\n    });\n  }\n\n  var old = $.fn.controlSidebar;\n\n  $.fn.controlSidebar             = Plugin;\n  $.fn.controlSidebar.Constructor = ControlSidebar;\n\n  // No Conflict Mode\n  // ================\n  $.fn.controlSidebar.noConflict = function () {\n    $.fn.controlSidebar = old;\n    return this;\n  };\n\n  // ControlSidebar Data API\n  // =======================\n  $(document).on('click', Selector.data, function (event) {\n    if (event) event.preventDefault();\n    Plugin.call($(this), 'toggle');\n  });\n\n}(jQuery);\n\n\n/* DirectChat()\n * ===============\n * Toggles the state of the control sidebar\n *\n * @Usage: $('#my-chat-box').directChat()\n *         or add [data-widget=\"direct-chat\"] to the trigger\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.directchat';\n\n  var Selector = {\n    data: '[data-widget=\"chat-pane-toggle\"]',\n    box : '.direct-chat'\n  };\n\n  var ClassName = {\n    open: 'direct-chat-contacts-open'\n  };\n\n  // DirectChat Class Definition\n  // ===========================\n  var DirectChat = function (element) {\n    this.element = element;\n  };\n\n  DirectChat.prototype.toggle = function ($trigger) {\n    $trigger.parents(Selector.box).first().toggleClass(ClassName.open);\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        $this.data(DataKey, (data = new DirectChat($this)));\n      }\n\n      if (typeof option == 'string') data.toggle($this);\n    });\n  }\n\n  var old = $.fn.directChat;\n\n  $.fn.directChat             = Plugin;\n  $.fn.directChat.Constructor = DirectChat;\n\n  // No Conflict Mode\n  // ================\n  $.fn.directChat.noConflict = function () {\n    $.fn.directChat = old;\n    return this;\n  };\n\n  // DirectChat Data API\n  // ===================\n  $(document).on('click', Selector.data, function (event) {\n    if (event) event.preventDefault();\n    Plugin.call($(this), 'toggle');\n  });\n\n}(jQuery);\n\n\n/* Layout()\n * ========\n * Implements AdminLTE layout.\n * Fixes the layout height in case min-height fails.\n *\n * @usage activated automatically upon window load.\n *        Configure any options by passing data-option=\"value\"\n *        to the body tag.\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.layout';\n\n  var Default = {\n    slimscroll : true,\n    resetHeight: true\n  };\n\n  var Selector = {\n    wrapper       : '.wrapper',\n    contentWrapper: '.content-wrapper',\n    layoutBoxed   : '.layout-boxed',\n    mainFooter    : '.main-footer',\n    mainHeader    : '.main-header',\n    sidebar       : '.sidebar',\n    controlSidebar: '.control-sidebar',\n    fixed         : '.fixed',\n    sidebarMenu   : '.sidebar-menu',\n    logo          : '.main-header .logo'\n  };\n\n  var ClassName = {\n    fixed         : 'fixed',\n    holdTransition: 'hold-transition'\n  };\n\n  var Layout = function (options) {\n    this.options      = options;\n    this.bindedResize = false;\n    this.activate();\n  };\n\n  Layout.prototype.activate = function () {\n    this.fix();\n    this.fixSidebar();\n\n    $('body').removeClass(ClassName.holdTransition);\n\n    if (this.options.resetHeight) {\n      $('body, html, ' + Selector.wrapper).css({\n        'height'    : 'auto',\n        'min-height': '100%'\n      });\n    }\n\n    if (!this.bindedResize) {\n      $(window).resize(function () {\n        this.fix();\n        this.fixSidebar();\n\n        $(Selector.logo + ', ' + Selector.sidebar).one('webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend', function () {\n          this.fix();\n          this.fixSidebar();\n        }.bind(this));\n      }.bind(this));\n\n      this.bindedResize = true;\n    }\n\n    $(Selector.sidebarMenu).on('expanded.tree', function () {\n      this.fix();\n      this.fixSidebar();\n    }.bind(this));\n\n    $(Selector.sidebarMenu).on('collapsed.tree', function () {\n      this.fix();\n      this.fixSidebar();\n    }.bind(this));\n  };\n\n  Layout.prototype.fix = function () {\n    // Remove overflow from .wrapper if layout-boxed exists\n    $(Selector.layoutBoxed + ' > ' + Selector.wrapper).css('overflow', 'hidden');\n\n    // Get window height and the wrapper height\n    var footerHeight = $(Selector.mainFooter).outerHeight() || 0;\n    var headerHeight  = $(Selector.mainHeader).outerHeight() || 0;\n    var neg           = headerHeight + footerHeight;\n    var windowHeight  = $(window).height();\n    var sidebarHeight = $(Selector.sidebar).height() || 0;\n\n    // Set the min-height of the content and sidebar based on\n    // the height of the document.\n    if ($('body').hasClass(ClassName.fixed)) {\n      $(Selector.contentWrapper).css('min-height', windowHeight - footerHeight);\n    } else {\n      var postSetHeight;\n\n      if (windowHeight >= sidebarHeight) {\n        $(Selector.contentWrapper).css('min-height', windowHeight - neg);\n        postSetHeight = windowHeight - neg;\n      } else {\n        $(Selector.contentWrapper).css('min-height', sidebarHeight);\n        postSetHeight = sidebarHeight;\n      }\n\n      // Fix for the control sidebar height\n      var $controlSidebar = $(Selector.controlSidebar);\n      if (typeof $controlSidebar !== 'undefined') {\n        if ($controlSidebar.height() > postSetHeight)\n          $(Selector.contentWrapper).css('min-height', $controlSidebar.height());\n      }\n    }\n  };\n\n  Layout.prototype.fixSidebar = function () {\n    // Make sure the body tag has the .fixed class\n    if (!$('body').hasClass(ClassName.fixed)) {\n      if (typeof $.fn.slimScroll !== 'undefined') {\n        $(Selector.sidebar).slimScroll({ destroy: true }).height('auto');\n      }\n      return;\n    }\n\n    // Enable slimscroll for fixed layout\n    if (this.options.slimscroll) {\n      if (typeof $.fn.slimScroll !== 'undefined') {\n        // Destroy if it exists\n        // $(Selector.sidebar).slimScroll({ destroy: true }).height('auto')\n\n        // Add slimscroll\n        $(Selector.sidebar).slimScroll({\n          height: ($(window).height() - $(Selector.mainHeader).height()) + 'px'\n        });\n      }\n    }\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option === 'object' && option);\n        $this.data(DataKey, (data = new Layout(options)));\n      }\n\n      if (typeof option === 'string') {\n        if (typeof data[option] === 'undefined') {\n          throw new Error('No method named ' + option);\n        }\n        data[option]();\n      }\n    });\n  }\n\n  var old = $.fn.layout;\n\n  $.fn.layout            = Plugin;\n  $.fn.layout.Constuctor = Layout;\n\n  // No conflict mode\n  // ================\n  $.fn.layout.noConflict = function () {\n    $.fn.layout = old;\n    return this;\n  };\n\n  // Layout DATA-API\n  // ===============\n  $(window).on('load', function () {\n    Plugin.call($('body'));\n  });\n}(jQuery);\n\n\n/* PushMenu()\n * ==========\n * Adds the push menu functionality to the sidebar.\n *\n * @usage: $('.btn').pushMenu(options)\n *          or add [data-toggle=\"push-menu\"] to any button\n *          Pass any option as data-option=\"value\"\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.pushmenu';\n\n  var Default = {\n    collapseScreenSize   : 767,\n    expandOnHover        : false,\n    expandTransitionDelay: 200\n  };\n\n  var Selector = {\n    collapsed     : '.sidebar-collapse',\n    open          : '.sidebar-open',\n    mainSidebar   : '.main-sidebar',\n    contentWrapper: '.content-wrapper',\n    searchInput   : '.sidebar-form .form-control',\n    button        : '[data-toggle=\"push-menu\"]',\n    mini          : '.sidebar-mini',\n    expanded      : '.sidebar-expanded-on-hover',\n    layoutFixed   : '.fixed'\n  };\n\n  var ClassName = {\n    collapsed    : 'sidebar-collapse',\n    open         : 'sidebar-open',\n    mini         : 'sidebar-mini',\n    expanded     : 'sidebar-expanded-on-hover',\n    expandFeature: 'sidebar-mini-expand-feature',\n    layoutFixed  : 'fixed'\n  };\n\n  var Event = {\n    expanded : 'expanded.pushMenu',\n    collapsed: 'collapsed.pushMenu'\n  };\n\n  // PushMenu Class Definition\n  // =========================\n  var PushMenu = function (options) {\n    this.options = options;\n    this.init();\n  };\n\n  PushMenu.prototype.init = function () {\n    if (this.options.expandOnHover\n      || ($('body').is(Selector.mini + Selector.layoutFixed))) {\n      this.expandOnHover();\n      $('body').addClass(ClassName.expandFeature);\n    }\n\n    $(Selector.contentWrapper).click(function () {\n      // Enable hide menu when clicking on the content-wrapper on small screens\n      if ($(window).width() <= this.options.collapseScreenSize && $('body').hasClass(ClassName.open)) {\n        this.close();\n      }\n    }.bind(this));\n\n    // __Fix for android devices\n    $(Selector.searchInput).click(function (e) {\n      e.stopPropagation();\n    });\n  };\n\n  PushMenu.prototype.toggle = function () {\n    var windowWidth = $(window).width();\n    var isOpen      = !$('body').hasClass(ClassName.collapsed);\n\n    if (windowWidth <= this.options.collapseScreenSize) {\n      isOpen = $('body').hasClass(ClassName.open);\n    }\n\n    if (!isOpen) {\n      this.open();\n    } else {\n      this.close();\n    }\n  };\n\n  PushMenu.prototype.open = function () {\n    var windowWidth = $(window).width();\n\n    if (windowWidth > this.options.collapseScreenSize) {\n      $('body').removeClass(ClassName.collapsed)\n        .trigger($.Event(Event.expanded));\n    }\n    else {\n      $('body').addClass(ClassName.open)\n        .trigger($.Event(Event.expanded));\n    }\n  };\n\n  PushMenu.prototype.close = function () {\n    var windowWidth = $(window).width();\n    if (windowWidth > this.options.collapseScreenSize) {\n      $('body').addClass(ClassName.collapsed)\n        .trigger($.Event(Event.collapsed));\n    } else {\n      $('body').removeClass(ClassName.open + ' ' + ClassName.collapsed)\n        .trigger($.Event(Event.collapsed));\n    }\n  };\n\n  PushMenu.prototype.expandOnHover = function () {\n    $(Selector.mainSidebar).hover(function () {\n      if ($('body').is(Selector.mini + Selector.collapsed)\n        && $(window).width() > this.options.collapseScreenSize) {\n        this.expand();\n      }\n    }.bind(this), function () {\n      if ($('body').is(Selector.expanded)) {\n        this.collapse();\n      }\n    }.bind(this));\n  };\n\n  PushMenu.prototype.expand = function () {\n    setTimeout(function () {\n      $('body').removeClass(ClassName.collapsed)\n        .addClass(ClassName.expanded);\n    }, this.options.expandTransitionDelay);\n  };\n\n  PushMenu.prototype.collapse = function () {\n    setTimeout(function () {\n      $('body').removeClass(ClassName.expanded)\n        .addClass(ClassName.collapsed);\n    }, this.options.expandTransitionDelay);\n  };\n\n  // PushMenu Plugin Definition\n  // ==========================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option);\n        $this.data(DataKey, (data = new PushMenu(options)));\n      }\n\n      if (option === 'toggle') data.toggle();\n    });\n  }\n\n  var old = $.fn.pushMenu;\n\n  $.fn.pushMenu             = Plugin;\n  $.fn.pushMenu.Constructor = PushMenu;\n\n  // No Conflict Mode\n  // ================\n  $.fn.pushMenu.noConflict = function () {\n    $.fn.pushMenu = old;\n    return this;\n  };\n\n  // Data API\n  // ========\n  $(document).on('click', Selector.button, function (e) {\n    e.preventDefault();\n    Plugin.call($(this), 'toggle');\n  });\n  $(window).on('load', function () {\n    Plugin.call($(Selector.button));\n  });\n}(jQuery);\n\n\n/* TodoList()\n * =========\n * Converts a list into a todoList.\n *\n * @Usage: $('.my-list').todoList(options)\n *         or add [data-widget=\"todo-list\"] to the ul element\n *         Pass any option as data-option=\"value\"\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.todolist';\n\n  var Default = {\n    onCheck  : function (item) {\n      return item;\n    },\n    onUnCheck: function (item) {\n      return item;\n    }\n  };\n\n  var Selector = {\n    data: '[data-widget=\"todo-list\"]'\n  };\n\n  var ClassName = {\n    done: 'done'\n  };\n\n  // TodoList Class Definition\n  // =========================\n  var TodoList = function (element, options) {\n    this.element = element;\n    this.options = options;\n\n    this._setUpListeners();\n  };\n\n  TodoList.prototype.toggle = function (item) {\n    item.parents(Selector.li).first().toggleClass(ClassName.done);\n    if (!item.prop('checked')) {\n      this.unCheck(item);\n      return;\n    }\n\n    this.check(item);\n  };\n\n  TodoList.prototype.check = function (item) {\n    this.options.onCheck.call(item);\n  };\n\n  TodoList.prototype.unCheck = function (item) {\n    this.options.onUnCheck.call(item);\n  };\n\n  // Private\n\n  TodoList.prototype._setUpListeners = function () {\n    var that = this;\n    $(this.element).on('change ifChanged', 'input:checkbox', function () {\n      that.toggle($(this));\n    });\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option);\n        $this.data(DataKey, (data = new TodoList($this, options)));\n      }\n\n      if (typeof data == 'string') {\n        if (typeof data[option] == 'undefined') {\n          throw new Error('No method named ' + option);\n        }\n        data[option]();\n      }\n    });\n  }\n\n  var old = $.fn.todoList;\n\n  $.fn.todoList             = Plugin;\n  $.fn.todoList.Constructor = TodoList;\n\n  // No Conflict Mode\n  // ================\n  $.fn.todoList.noConflict = function () {\n    $.fn.todoList = old;\n    return this;\n  };\n\n  // TodoList Data API\n  // =================\n  $(window).on('load', function () {\n    $(Selector.data).each(function () {\n      Plugin.call($(this));\n    });\n  });\n\n}(jQuery);\n\n\n/* Tree()\n * ======\n * Converts a nested list into a multilevel\n * tree view menu.\n *\n * @Usage: $('.my-menu').tree(options)\n *         or add [data-widget=\"tree\"] to the ul element\n *         Pass any option as data-option=\"value\"\n */\n+function ($) {\n  'use strict';\n\n  var DataKey = 'lte.tree';\n\n  var Default = {\n    animationSpeed: 500,\n    accordion     : true,\n    followLink    : false,\n    trigger       : '.treeview a'\n  };\n\n  var Selector = {\n    tree        : '.tree',\n    treeview    : '.treeview',\n    treeviewMenu: '.treeview-menu',\n    open        : '.menu-open, .active',\n    li          : 'li',\n    data        : '[data-widget=\"tree\"]',\n    active      : '.active'\n  };\n\n  var ClassName = {\n    open: 'menu-open',\n    tree: 'tree'\n  };\n\n  var Event = {\n    collapsed: 'collapsed.tree',\n    expanded : 'expanded.tree'\n  };\n\n  // Tree Class Definition\n  // =====================\n  var Tree = function (element, options) {\n    this.element = element;\n    this.options = options;\n\n    $(this.element).addClass(ClassName.tree);\n\n    $(Selector.treeview + Selector.active, this.element).addClass(ClassName.open);\n\n    this._setUpListeners();\n  };\n\n  Tree.prototype.toggle = function (link, event) {\n    var treeviewMenu = link.next(Selector.treeviewMenu);\n    var parentLi     = link.parent();\n    var isOpen       = parentLi.hasClass(ClassName.open);\n\n    if (!parentLi.is(Selector.treeview)) {\n      return;\n    }\n\n    if (!this.options.followLink || link.attr('href') === '#') {\n      event.preventDefault();\n    }\n\n    if (isOpen) {\n      this.collapse(treeviewMenu, parentLi);\n    } else {\n      this.expand(treeviewMenu, parentLi);\n    }\n  };\n\n  Tree.prototype.expand = function (tree, parent) {\n    var expandedEvent = $.Event(Event.expanded);\n\n    if (this.options.accordion) {\n      var openMenuLi = parent.siblings(Selector.open);\n      var openTree   = openMenuLi.children(Selector.treeviewMenu);\n      this.collapse(openTree, openMenuLi);\n    }\n\n    parent.addClass(ClassName.open);\n    tree.slideDown(this.options.animationSpeed, function () {\n      $(this.element).trigger(expandedEvent);\n    }.bind(this));\n  };\n\n  Tree.prototype.collapse = function (tree, parentLi) {\n    var collapsedEvent = $.Event(Event.collapsed);\n\n    //tree.find(Selector.open).removeClass(ClassName.open);\n    parentLi.removeClass(ClassName.open);\n    tree.slideUp(this.options.animationSpeed, function () {\n      //tree.find(Selector.open + ' > ' + Selector.treeview).slideUp();\n      $(this.element).trigger(collapsedEvent);\n    }.bind(this));\n  };\n\n  // Private\n\n  Tree.prototype._setUpListeners = function () {\n    var that = this;\n\n    $(this.element).on('click', this.options.trigger, function (event) {\n      that.toggle($(this), event);\n    });\n  };\n\n  // Plugin Definition\n  // =================\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this);\n      var data  = $this.data(DataKey);\n\n      if (!data) {\n        var options = $.extend({}, Default, $this.data(), typeof option == 'object' && option);\n        $this.data(DataKey, new Tree($this, options));\n      }\n    });\n  }\n\n  var old = $.fn.tree;\n\n  $.fn.tree             = Plugin;\n  $.fn.tree.Constructor = Tree;\n\n  // No Conflict Mode\n  // ================\n  $.fn.tree.noConflict = function () {\n    $.fn.tree = old;\n    return this;\n  };\n\n  // Tree Data API\n  // =============\n  $(window).on('load', function () {\n    $(Selector.data).each(function () {\n      Plugin.call($(this));\n    });\n  });\n\n}(jQuery);\n\n\n--- File Index 64: web/frontend/src/src/scripts/components/adminlte.min.js ---\n/*! AdminLTE app.js\n* ================\n* Main JS application file for AdminLTE v2. This file\n* should be included in all pages. It controls some layout\n* options and implements exclusive AdminLTE plugins.\n*\n* @Author  Almsaeed Studio\n* @Support <https://www.almsaeedstudio.com>\n* @Email   <abdullah@almsaeedstudio.com>\n* @version 2.4.8\n* @repository git://github.com/almasaeed2010/AdminLTE.git\n* @license MIT <http://opensource.org/licenses/MIT>\n*/\nif(\"undefined\"==typeof jQuery)throw new Error(\"AdminLTE requires jQuery\");+function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this),g=e.data(c);if(!g){var h=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,g=new f(e,h))}if(\"string\"==typeof g){if(void 0===g[b])throw new Error(\"No method named \"+b);g[b]()}})}var c=\"lte.boxrefresh\",d={source:\"\",params:{},trigger:\".refresh-btn\",content:\".box-body\",loadInContent:!0,responseType:\"\",overlayTemplate:'<div class=\"overlay\"><div class=\"fa fa-refresh fa-spin\"></div></div>',onLoadStart:function(){},onLoadDone:function(a){return a}},e={data:'[data-widget=\"box-refresh\"]'},f=function(b,c){if(this.element=b,this.options=c,this.$overlay=a(c.overlay),\"\"===c.source)throw new Error(\"Source url was not defined. Please specify a url in your BoxRefresh source option.\");this._setUpListeners(),this.load()};f.prototype.load=function(){this._addOverlay(),this.options.onLoadStart.call(a(this)),a.get(this.options.source,this.options.params,function(b){this.options.loadInContent&&a(this.options.content).html(b),this.options.onLoadDone.call(a(this),b),this._removeOverlay()}.bind(this),\"\"!==this.options.responseType&&this.options.responseType)},f.prototype._setUpListeners=function(){a(this.element).on(\"click\",e.trigger,function(a){a&&a.preventDefault(),this.load()}.bind(this))},f.prototype._addOverlay=function(){a(this.element).append(this.$overlay)},f.prototype._removeOverlay=function(){a(this.element).remove(this.$overlay)};var g=a.fn.boxRefresh;a.fn.boxRefresh=b,a.fn.boxRefresh.Constructor=f,a.fn.boxRefresh.noConflict=function(){return a.fn.boxRefresh=g,this},a(window).on(\"load\",function(){a(e.data).each(function(){b.call(a(this))})})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this),f=e.data(c);if(!f){var g=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,f=new h(e,g))}if(\"string\"==typeof b){if(void 0===f[b])throw new Error(\"No method named \"+b);f[b]()}})}var c=\"lte.boxwidget\",d={animationSpeed:500,collapseTrigger:'[data-widget=\"collapse\"]',removeTrigger:'[data-widget=\"remove\"]',collapseIcon:\"fa-minus\",expandIcon:\"fa-plus\",removeIcon:\"fa-times\"},e={data:\".box\",collapsed:\".collapsed-box\",header:\".box-header\",body:\".box-body\",footer:\".box-footer\",tools:\".box-tools\"},f={collapsed:\"collapsed-box\"},g={collapsed:\"collapsed.boxwidget\",expanded:\"expanded.boxwidget\",removed:\"removed.boxwidget\"},h=function(a,b){this.element=a,this.options=b,this._setUpListeners()};h.prototype.toggle=function(){a(this.element).is(e.collapsed)?this.expand():this.collapse()},h.prototype.expand=function(){var b=a.Event(g.expanded),c=this.options.collapseIcon,d=this.options.expandIcon;a(this.element).removeClass(f.collapsed),a(this.element).children(e.header+\", \"+e.body+\", \"+e.footer).children(e.tools).find(\".\"+d).removeClass(d).addClass(c),a(this.element).children(e.body+\", \"+e.footer).slideDown(this.options.animationSpeed,function(){a(this.element).trigger(b)}.bind(this))},h.prototype.collapse=function(){var b=a.Event(g.collapsed),c=this.options.collapseIcon,d=this.options.expandIcon;a(this.element).children(e.header+\", \"+e.body+\", \"+e.footer).children(e.tools).find(\".\"+c).removeClass(c).addClass(d),a(this.element).children(e.body+\", \"+e.footer).slideUp(this.options.animationSpeed,function(){a(this.element).addClass(f.collapsed),a(this.element).trigger(b)}.bind(this))},h.prototype.remove=function(){var b=a.Event(g.removed);a(this.element).slideUp(this.options.animationSpeed,function(){a(this.element).trigger(b),a(this.element).remove()}.bind(this))},h.prototype._setUpListeners=function(){var b=this;a(this.element).on(\"click\",this.options.collapseTrigger,function(c){return c&&c.preventDefault(),b.toggle(a(this)),!1}),a(this.element).on(\"click\",this.options.removeTrigger,function(c){return c&&c.preventDefault(),b.remove(a(this)),!1})};var i=a.fn.boxWidget;a.fn.boxWidget=b,a.fn.boxWidget.Constructor=h,a.fn.boxWidget.noConflict=function(){return a.fn.boxWidget=i,this},a(window).on(\"load\",function(){a(e.data).each(function(){b.call(a(this))})})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this),f=e.data(c);if(!f){var g=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,f=new h(e,g))}\"string\"==typeof b&&f.toggle()})}var c=\"lte.controlsidebar\",d={slide:!0},e={sidebar:\".control-sidebar\",data:'[data-toggle=\"control-sidebar\"]',open:\".control-sidebar-open\",bg:\".control-sidebar-bg\",wrapper:\".wrapper\",content:\".content-wrapper\",boxed:\".layout-boxed\"},f={open:\"control-sidebar-open\",fixed:\"fixed\"},g={collapsed:\"collapsed.controlsidebar\",expanded:\"expanded.controlsidebar\"},h=function(a,b){this.element=a,this.options=b,this.hasBindedResize=!1,this.init()};h.prototype.init=function(){a(this.element).is(e.data)||a(this).on(\"click\",this.toggle),this.fix(),a(window).resize(function(){this.fix()}.bind(this))},h.prototype.toggle=function(b){b&&b.preventDefault(),this.fix(),a(e.sidebar).is(e.open)||a(\"body\").is(e.open)?this.collapse():this.expand()},h.prototype.expand=function(){this.options.slide?a(e.sidebar).addClass(f.open):a(\"body\").addClass(f.open),a(this.element).trigger(a.Event(g.expanded))},h.prototype.collapse=function(){a(\"body, \"+e.sidebar).removeClass(f.open),a(this.element).trigger(a.Event(g.collapsed))},h.prototype.fix=function(){a(\"body\").is(e.boxed)&&this._fixForBoxed(a(e.bg))},h.prototype._fixForBoxed=function(b){b.css({position:\"absolute\",height:a(e.wrapper).height()})};var i=a.fn.controlSidebar;a.fn.controlSidebar=b,a.fn.controlSidebar.Constructor=h,a.fn.controlSidebar.noConflict=function(){return a.fn.controlSidebar=i,this},a(document).on(\"click\",e.data,function(c){c&&c.preventDefault(),b.call(a(this),\"toggle\")})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var d=a(this),e=d.data(c);e||d.data(c,e=new f(d)),\"string\"==typeof b&&e.toggle(d)})}var c=\"lte.directchat\",d={data:'[data-widget=\"chat-pane-toggle\"]',box:\".direct-chat\"},e={open:\"direct-chat-contacts-open\"},f=function(a){this.element=a};f.prototype.toggle=function(a){a.parents(d.box).first().toggleClass(e.open)};var g=a.fn.directChat;a.fn.directChat=b,a.fn.directChat.Constructor=f,a.fn.directChat.noConflict=function(){return a.fn.directChat=g,this},a(document).on(\"click\",d.data,function(c){c&&c.preventDefault(),b.call(a(this),\"toggle\")})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this),f=e.data(c);if(!f){var h=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,f=new g(h))}if(\"string\"==typeof b){if(void 0===f[b])throw new Error(\"No method named \"+b);f[b]()}})}var c=\"lte.layout\",d={slimscroll:!0,resetHeight:!0},e={wrapper:\".wrapper\",contentWrapper:\".content-wrapper\",layoutBoxed:\".layout-boxed\",mainFooter:\".main-footer\",mainHeader:\".main-header\",sidebar:\".sidebar\",controlSidebar:\".control-sidebar\",fixed:\".fixed\",sidebarMenu:\".sidebar-menu\",logo:\".main-header .logo\"},f={fixed:\"fixed\",holdTransition:\"hold-transition\"},g=function(a){this.options=a,this.bindedResize=!1,this.activate()};g.prototype.activate=function(){this.fix(),this.fixSidebar(),a(\"body\").removeClass(f.holdTransition),this.options.resetHeight&&a(\"body, html, \"+e.wrapper).css({height:\"auto\",\"min-height\":\"100%\"}),this.bindedResize||(a(window).resize(function(){this.fix(),this.fixSidebar(),a(e.logo+\", \"+e.sidebar).one(\"webkitTransitionEnd otransitionend oTransitionEnd msTransitionEnd transitionend\",function(){this.fix(),this.fixSidebar()}.bind(this))}.bind(this)),this.bindedResize=!0),a(e.sidebarMenu).on(\"expanded.tree\",function(){this.fix(),this.fixSidebar()}.bind(this)),a(e.sidebarMenu).on(\"collapsed.tree\",function(){this.fix(),this.fixSidebar()}.bind(this))},g.prototype.fix=function(){a(e.layoutBoxed+\" > \"+e.wrapper).css(\"overflow\",\"hidden\");var b=a(e.mainFooter).outerHeight()||0,c=a(e.mainHeader).outerHeight()||0,d=c+b,g=a(window).height(),h=a(e.sidebar).height()||0;if(a(\"body\").hasClass(f.fixed))a(e.contentWrapper).css(\"min-height\",g-b);else{var i;g>=h?(a(e.contentWrapper).css(\"min-height\",g-d),i=g-d):(a(e.contentWrapper).css(\"min-height\",h),i=h);var j=a(e.controlSidebar);void 0!==j&&j.height()>i&&a(e.contentWrapper).css(\"min-height\",j.height())}},g.prototype.fixSidebar=function(){if(!a(\"body\").hasClass(f.fixed))return void(void 0!==a.fn.slimScroll&&a(e.sidebar).slimScroll({destroy:!0}).height(\"auto\"));this.options.slimscroll&&void 0!==a.fn.slimScroll&&a(e.sidebar).slimScroll({height:a(window).height()-a(e.mainHeader).height()+\"px\"})};var h=a.fn.layout;a.fn.layout=b,a.fn.layout.Constuctor=g,a.fn.layout.noConflict=function(){return a.fn.layout=h,this},a(window).on(\"load\",function(){b.call(a(\"body\"))})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this),f=e.data(c);if(!f){var g=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,f=new h(g))}\"toggle\"===b&&f.toggle()})}var c=\"lte.pushmenu\",d={collapseScreenSize:767,expandOnHover:!1,expandTransitionDelay:200},e={collapsed:\".sidebar-collapse\",open:\".sidebar-open\",mainSidebar:\".main-sidebar\",contentWrapper:\".content-wrapper\",searchInput:\".sidebar-form .form-control\",button:'[data-toggle=\"push-menu\"]',mini:\".sidebar-mini\",expanded:\".sidebar-expanded-on-hover\",layoutFixed:\".fixed\"},f={collapsed:\"sidebar-collapse\",open:\"sidebar-open\",mini:\"sidebar-mini\",expanded:\"sidebar-expanded-on-hover\",expandFeature:\"sidebar-mini-expand-feature\",layoutFixed:\"fixed\"},g={expanded:\"expanded.pushMenu\",collapsed:\"collapsed.pushMenu\"},h=function(a){this.options=a,this.init()};h.prototype.init=function(){(this.options.expandOnHover||a(\"body\").is(e.mini+e.layoutFixed))&&(this.expandOnHover(),a(\"body\").addClass(f.expandFeature)),a(e.contentWrapper).click(function(){a(window).width()<=this.options.collapseScreenSize&&a(\"body\").hasClass(f.open)&&this.close()}.bind(this)),a(e.searchInput).click(function(a){a.stopPropagation()})},h.prototype.toggle=function(){var b=a(window).width(),c=!a(\"body\").hasClass(f.collapsed);b<=this.options.collapseScreenSize&&(c=a(\"body\").hasClass(f.open)),c?this.close():this.open()},h.prototype.open=function(){a(window).width()>this.options.collapseScreenSize?a(\"body\").removeClass(f.collapsed).trigger(a.Event(g.expanded)):a(\"body\").addClass(f.open).trigger(a.Event(g.expanded))},h.prototype.close=function(){a(window).width()>this.options.collapseScreenSize?a(\"body\").addClass(f.collapsed).trigger(a.Event(g.collapsed)):a(\"body\").removeClass(f.open+\" \"+f.collapsed).trigger(a.Event(g.collapsed))},h.prototype.expandOnHover=function(){a(e.mainSidebar).hover(function(){a(\"body\").is(e.mini+e.collapsed)&&a(window).width()>this.options.collapseScreenSize&&this.expand()}.bind(this),function(){a(\"body\").is(e.expanded)&&this.collapse()}.bind(this))},h.prototype.expand=function(){setTimeout(function(){a(\"body\").removeClass(f.collapsed).addClass(f.expanded)},this.options.expandTransitionDelay)},h.prototype.collapse=function(){setTimeout(function(){a(\"body\").removeClass(f.expanded).addClass(f.collapsed)},this.options.expandTransitionDelay)};var i=a.fn.pushMenu;a.fn.pushMenu=b,a.fn.pushMenu.Constructor=h,a.fn.pushMenu.noConflict=function(){return a.fn.pushMenu=i,this},a(document).on(\"click\",e.button,function(c){c.preventDefault(),b.call(a(this),\"toggle\")}),a(window).on(\"load\",function(){b.call(a(e.button))})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this),f=e.data(c);if(!f){var h=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,f=new g(e,h))}if(\"string\"==typeof f){if(void 0===f[b])throw new Error(\"No method named \"+b);f[b]()}})}var c=\"lte.todolist\",d={onCheck:function(a){return a},onUnCheck:function(a){return a}},e={data:'[data-widget=\"todo-list\"]'},f={done:\"done\"},g=function(a,b){this.element=a,this.options=b,this._setUpListeners()};g.prototype.toggle=function(a){if(a.parents(e.li).first().toggleClass(f.done),!a.prop(\"checked\"))return void this.unCheck(a);this.check(a)},g.prototype.check=function(a){this.options.onCheck.call(a)},g.prototype.unCheck=function(a){this.options.onUnCheck.call(a)},g.prototype._setUpListeners=function(){var b=this;a(this.element).on(\"change ifChanged\",\"input:checkbox\",function(){b.toggle(a(this))})};var h=a.fn.todoList;a.fn.todoList=b,a.fn.todoList.Constructor=g,a.fn.todoList.noConflict=function(){return a.fn.todoList=h,this},a(window).on(\"load\",function(){a(e.data).each(function(){b.call(a(this))})})}(jQuery),function(a){\"use strict\";function b(b){return this.each(function(){var e=a(this);if(!e.data(c)){var f=a.extend({},d,e.data(),\"object\"==typeof b&&b);e.data(c,new h(e,f))}})}var c=\"lte.tree\",d={animationSpeed:500,accordion:!0,followLink:!1,trigger:\".treeview a\"},e={tree:\".tree\",treeview:\".treeview\",treeviewMenu:\".treeview-menu\",open:\".menu-open, .active\",li:\"li\",data:'[data-widget=\"tree\"]',active:\".active\"},f={open:\"menu-open\",tree:\"tree\"},g={collapsed:\"collapsed.tree\",expanded:\"expanded.tree\"},h=function(b,c){this.element=b,this.options=c,a(this.element).addClass(f.tree),a(e.treeview+e.active,this.element).addClass(f.open),this._setUpListeners()};h.prototype.toggle=function(a,b){var c=a.next(e.treeviewMenu),d=a.parent(),g=d.hasClass(f.open);d.is(e.treeview)&&(this.options.followLink&&\"#\"!==a.attr(\"href\")||b.preventDefault(),g?this.collapse(c,d):this.expand(c,d))},h.prototype.expand=function(b,c){var d=a.Event(g.expanded);if(this.options.accordion){var h=c.siblings(e.open),i=h.children(e.treeviewMenu);this.collapse(i,h)}c.addClass(f.open),b.slideDown(this.options.animationSpeed,function(){a(this.element).trigger(d)}.bind(this))},h.prototype.collapse=function(b,c){var d=a.Event(g.collapsed);c.removeClass(f.open),b.slideUp(this.options.animationSpeed,function(){a(this.element).trigger(d)}.bind(this))},h.prototype._setUpListeners=function(){var b=this;a(this.element).on(\"click\",this.options.trigger,function(c){b.toggle(a(this),c)})};var i=a.fn.tree;a.fn.tree=b,a.fn.tree.Constructor=h,a.fn.tree.noConflict=function(){return a.fn.tree=i,this},a(window).on(\"load\",function(){a(e.data).each(function(){b.call(a(this))})})}(jQuery);\n\n--- File Index 65: web/frontend/src/src/scripts/views/muc.js ---\n// (function (global, factory) {\n// \ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n// \ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n// \t(factory(global.window));\n// }(this, (function (strophe_js) { 'use strict';\n\n// /*\n//  *Plugin to implement the MUC extension.\n//    http://xmpp.org/extensions/xep-0045.html\n//  *Previous Author:\n//     Nathan Zorn <nathan.zorn@gmail.com>\n//  *Complete CoffeeScript rewrite:\n//     Andreas Guth <guth@dbis.rwth-aachen.de>\n//  */\n\n// var Occupant;\n// var RoomConfig;\n// var XmppRoom;\n// var hasProp = {}.hasOwnProperty;\n// var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n// strophe_js.Strophe.addConnectionPlugin('muc', {\n//   _connection: null,\n//   rooms: {},\n//   roomNames: [],\n\n//   /*Function\n//   Initialize the MUC plugin. Sets the correct connection object and\n//   extends the namesace.\n//    */\n//   init: function(conn) {\n//     this._connection = conn;\n//     this._muc_handler = null;\n//     strophe_js.Strophe.addNamespace('MUC_OWNER', strophe_js.Strophe.NS.MUC + \"#owner\");\n//     strophe_js.Strophe.addNamespace('MUC_ADMIN', strophe_js.Strophe.NS.MUC + \"#admin\");\n//     strophe_js.Strophe.addNamespace('MUC_USER', strophe_js.Strophe.NS.MUC + \"#user\");\n//     strophe_js.Strophe.addNamespace('MUC_ROOMCONF', strophe_js.Strophe.NS.MUC + \"#roomconfig\");\n//     return strophe_js.Strophe.addNamespace('MUC_REGISTER', \"jabber:iq:register\");\n//   },\n\n//   /*Function\n//   Join a multi-user chat room\n//   Parameters:\n//   (String) room - The multi-user chat room to join.\n//   (String) nick - The nickname to use in the chat room. Optional\n//   (Function) msg_handler_cb - The function call to handle messages from the\n//   specified chat room.\n//   (Function) pres_handler_cb - The function call back to handle presence\n//   in the chat room.\n//   (Function) roster_cb - The function call to handle roster info in the chat room\n//   (String) password - The optional password to use. (password protected\n//   rooms only)\n//   (Object) history_attrs - Optional attributes for retrieving history\n//   (XML DOM Element) extended_presence - Optional XML for extending presence\n//    */\n//   join: function(room, nick, msg_handler_cb, pres_handler_cb, roster_cb, password, history_attrs, extended_presence) {\n//     var msg, room_nick;\n//     room_nick = this.test_append_nick(room, nick);\n//     msg = strophe_js.$pres({\n//       from: this._connection.jid,\n//       to: room_nick\n//     }).c(\"x\", {\n//       xmlns: strophe_js.Strophe.NS.MUC\n//     });\n//     if (history_attrs != null) {\n//       msg = msg.c(\"history\", history_attrs).up();\n//     }\n//     if (password != null) {\n//       msg.cnode(strophe_js.Strophe.xmlElement(\"password\", [], password));\n//     }\n//     if (extended_presence != null) {\n//       msg.up().cnode(extended_presence);\n//     }\n//     if (this._muc_handler == null) {\n//       this._muc_handler = this._connection.addHandler((function(_this) {\n//         return function(stanza) {\n//           var from, handler, handlers, i, id, len, roomname, x, xmlns, xquery;\n//           from = stanza.getAttribute('from');\n//           if (!from) {\n//             return true;\n//           }\n//           roomname = from.split(\"/\")[0];\n//           if (!_this.rooms[roomname]) {\n//             return true;\n//           }\n//           room = _this.rooms[roomname];\n//           handlers = {};\n//           if (stanza.nodeName === \"message\") {\n//             handlers = room._message_handlers;\n//           } else if (stanza.nodeName === \"presence\") {\n//             xquery = stanza.getElementsByTagName(\"x\");\n//             if (xquery.length > 0) {\n//               for (i = 0, len = xquery.length; i < len; i++) {\n//                 x = xquery[i];\n//                 xmlns = x.getAttribute(\"xmlns\");\n//                 if (xmlns && xmlns.match(strophe_js.Strophe.NS.MUC)) {\n//                   handlers = room._presence_handlers;\n//                   break;\n//                 }\n//               }\n//             }\n//           }\n//           for (id in handlers) {\n//             handler = handlers[id];\n//             if (!handler(stanza, room)) {\n//               delete handlers[id];\n//             }\n//           }\n//           return true;\n//         };\n//       })(this));\n//     }\n//     if (!this.rooms.hasOwnProperty(room)) {\n//       this.rooms[room] = new XmppRoom(this, room, nick, password);\n//       if (pres_handler_cb) {\n//         this.rooms[room].addHandler('presence', pres_handler_cb);\n//       }\n//       if (msg_handler_cb) {\n//         this.rooms[room].addHandler('message', msg_handler_cb);\n//       }\n//       if (roster_cb) {\n//         this.rooms[room].addHandler('roster', roster_cb);\n//       }\n//       this.roomNames.push(room);\n//     }\n//     return this._connection.send(msg);\n//   },\n\n//   /*Function\n//   Leave a multi-user chat room\n//   Parameters:\n//   (String) room - The multi-user chat room to leave.\n//   (String) nick - The nick name used in the room.\n//   (Function) handler_cb - Optional function to handle the successful leave.\n//   (String) exit_msg - optional exit message.\n//   Returns:\n//   iqid - The unique id for the room leave.\n//    */\n//   leave: function(room, nick, handler_cb, exit_msg) {\n//     var id, presence, presenceid, room_nick;\n//     id = this.roomNames.indexOf(room);\n//     delete this.rooms[room];\n//     if (id >= 0) {\n//       this.roomNames.splice(id, 1);\n//       if (this.roomNames.length === 0) {\n//         this._connection.deleteHandler(this._muc_handler);\n//         this._muc_handler = null;\n//       }\n//     }\n//     room_nick = this.test_append_nick(room, nick);\n//     presenceid = this._connection.getUniqueId();\n//     presence = strophe_js.$pres({\n//       type: \"unavailable\",\n//       id: presenceid,\n//       from: this._connection.jid,\n//       to: room_nick\n//     });\n//     if (exit_msg != null) {\n//       presence.c(\"status\", exit_msg);\n//     }\n//     if (handler_cb != null) {\n//       this._connection.addHandler(handler_cb, null, \"presence\", null, presenceid);\n//     }\n//     this._connection.send(presence);\n//     return presenceid;\n//   },\n\n//   /*Function\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) nick - The nick name used in the chat room.\n//   (String) message - The plaintext message to send to the room.\n//   (String) html_message - The message to send to the room with html markup.\n//   (String) type - \"groupchat\" for group chat messages o\n//                   \"chat\" for private chat messages\n//   Returns:\n//   msgiq - the unique id used to send the message\n//    */\n//   message: function(room, nick, message, html_message, type, msgid) {\n//     var msg, parent, room_nick;\n//     room_nick = this.test_append_nick(room, nick);\n//     type = type || (nick != null ? \"chat\" : \"groupchat\");\n//     msgid = msgid || this._connection.getUniqueId();\n//     msg = strophe_js.$msg({\n//       to: room_nick,\n//       from: this._connection.jid,\n//       type: type,\n//       id: msgid\n//     }).c(\"body\").t(message);\n//     msg.up();\n//     if (html_message != null) {\n//       msg.c(\"html\", {\n//         xmlns: strophe_js.Strophe.NS.XHTML_IM\n//       }).c(\"body\", {\n//         xmlns: strophe_js.Strophe.NS.XHTML\n//       }).h(html_message);\n//       if (msg.node.childNodes.length === 0) {\n//         parent = msg.node.parentNode;\n//         msg.up().up();\n//         msg.node.removeChild(parent);\n//       } else {\n//         msg.up().up();\n//       }\n//     }\n//     msg.c(\"x\", {\n//       xmlns: \"jabber:x:event\"\n//     }).c(\"composing\");\n//     this._connection.send(msg);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Convenience Function to send a Message to all Occupants\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) message - The plaintext message to send to the room.\n//   (String) html_message - The message to send to the room with html markup.\n//   (String) msgid - Optional unique ID which will be set as the 'id' attribute of the stanza\n//   Returns:\n//   msgiq - the unique id used to send the message\n//    */\n//   groupchat: function(room, message, html_message, msgid) {\n//     return this.message(room, null, message, html_message, void 0, msgid);\n//   },\n\n//   /*Function\n//   Send a mediated invitation.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) receiver - The invitation's receiver.\n//   (String) reason - Optional reason for joining the room.\n//   Returns:\n//   msgiq - the unique id used to send the invitation\n//    */\n//   invite: function(room, receiver, reason) {\n//     var invitation, msgid;\n//     msgid = this._connection.getUniqueId();\n//     invitation = strophe_js.$msg({\n//       from: this._connection.jid,\n//       to: room,\n//       id: msgid\n//     }).c('x', {\n//       xmlns: strophe_js.Strophe.NS.MUC_USER\n//     }).c('invite', {\n//       to: receiver\n//     });\n//     if (reason != null) {\n//       invitation.c('reason', reason);\n//     }\n//     this._connection.send(invitation);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Send a mediated multiple invitation.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Array) receivers - The invitation's receivers.\n//   (String) reason - Optional reason for joining the room.\n//   Returns:\n//   msgiq - the unique id used to send the invitation\n//    */\n//   multipleInvites: function(room, receivers, reason) {\n//     var i, invitation, len, msgid, receiver;\n//     msgid = this._connection.getUniqueId();\n//     invitation = strophe_js.$msg({\n//       from: this._connection.jid,\n//       to: room,\n//       id: msgid\n//     }).c('x', {\n//       xmlns: strophe_js.Strophe.NS.MUC_USER\n//     });\n//     for (i = 0, len = receivers.length; i < len; i++) {\n//       receiver = receivers[i];\n//       invitation.c('invite', {\n//         to: receiver\n//       });\n//       if (reason != null) {\n//         invitation.c('reason', reason);\n//         invitation.up();\n//       }\n//       invitation.up();\n//     }\n//     this._connection.send(invitation);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Send a direct invitation.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) receiver - The invitation's receiver.\n//   (String) reason - Optional reason for joining the room.\n//   (String) password - Optional password for the room.\n//   Returns:\n//   msgiq - the unique id used to send the invitation\n//    */\n//   directInvite: function(room, receiver, reason, password) {\n//     var attrs, invitation, msgid;\n//     msgid = this._connection.getUniqueId();\n//     attrs = {\n//       xmlns: 'jabber:x:conference',\n//       jid: room\n//     };\n//     if (reason != null) {\n//       attrs.reason = reason;\n//     }\n//     if (password != null) {\n//       attrs.password = password;\n//     }\n//     invitation = strophe_js.$msg({\n//       from: this._connection.jid,\n//       to: receiver,\n//       id: msgid\n//     }).c('x', attrs);\n//     this._connection.send(invitation);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Queries a room for a list of occupants\n//   (String) room - The multi-user chat room name.\n//   (Function) success_cb - Optional function to handle the info.\n//   (Function) error_cb - Optional function to handle an error.\n//   Returns:\n//   id - the unique id used to send the info request\n//    */\n//   queryOccupants: function(room, success_cb, error_cb) {\n//     var attrs, info;\n//     attrs = {\n//       xmlns: strophe_js.Strophe.NS.DISCO_ITEMS\n//     };\n//     info = strophe_js.$iq({\n//       from: this._connection.jid,\n//       to: room,\n//       type: 'get'\n//     }).c('query', attrs);\n//     return this._connection.sendIQ(info, success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Start a room configuration.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Function) handler_cb - Optional function to handle the config form.\n//   Returns:\n//   id - the unique id used to send the configuration request\n//    */\n//   configure: function(room, handler_cb, error_cb) {\n//     var config, stanza;\n//     config = strophe_js.$iq({\n//       to: room,\n//       type: \"get\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     });\n//     stanza = config.tree();\n//     return this._connection.sendIQ(stanza, handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Cancel the room configuration\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   Returns:\n//   id - the unique id used to cancel the configuration.\n//    */\n//   cancelConfigure: function(room) {\n//     var config, stanza;\n//     config = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     }).c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"cancel\"\n//     });\n//     stanza = config.tree();\n//     return this._connection.sendIQ(stanza);\n//   },\n\n//   /*Function\n//   Save a room configuration.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Array) config- Form Object or an array of form elements used to configure the room.\n//   Returns:\n//   id - the unique id used to save the configuration.\n//    */\n//   saveConfiguration: function(room, config, success_cb, error_cb) {\n//     var conf, i, iq, len, stanza;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     });\n//     if (typeof strophe_js.Strophe.x !== \"undefined\" && typeof strophe_js.Strophe.x.Form !== \"undefined\" && config instanceof strophe_js.Strophe.x.Form) {\n//       config.type = \"submit\";\n//       iq.cnode(config.toXML());\n//     } else {\n//       iq.c(\"x\", {\n//         xmlns: \"jabber:x:data\",\n//         type: \"submit\"\n//       });\n//       for (i = 0, len = config.length; i < len; i++) {\n//         conf = config[i];\n//         iq.cnode(conf).up();\n//       }\n//     }\n//     stanza = iq.tree();\n//     return this._connection.sendIQ(stanza, success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   Returns:\n//   id - the unique id used to create the chat room.\n//    */\n//   createInstantRoom: function(room, success_cb, error_cb) {\n//     var roomiq;\n//     roomiq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     }).c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"submit\"\n//     });\n//     return this._connection.sendIQ(roomiq.tree(), success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Object) config - the configuration. ex: {\"muc#roomconfig_publicroom\": \"0\", \"muc#roomconfig_persistentroom\": \"1\"}\n//   Returns:\n//   id - the unique id used to create the chat room.\n//    */\n//   createConfiguredRoom: function(room, config, success_cb, error_cb) {\n//     var k, roomiq, v;\n//     roomiq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     }).c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"submit\"\n//     });\n//     roomiq.c('field', {\n//       'var': 'FORM_TYPE'\n//     }).c('value').t('http://jabber.org/protocol/muc#roomconfig').up().up();\n//     for (k in config) {\n//       if (!hasProp.call(config, k)) continue;\n//       v = config[k];\n//       roomiq.c('field', {\n//         'var': k\n//       }).c('value').t(v).up().up();\n//     }\n//     return this._connection.sendIQ(roomiq.tree(), success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Set the topic of the chat room.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) topic - Topic message.\n//    */\n//   setTopic: function(room, topic) {\n//     var msg;\n//     msg = strophe_js.$msg({\n//       to: room,\n//       from: this._connection.jid,\n//       type: \"groupchat\"\n//     }).c(\"subject\", {\n//       xmlns: \"jabber:client\"\n//     }).t(topic);\n//     return this._connection.send(msg.tree());\n//   },\n\n//   /*Function\n//   Internal Function that Changes the role or affiliation of a member\n//   of a MUC room. This function is used by modifyRole and modifyAffiliation.\n//   The modification can only be done by a room moderator. An error will be\n//   returned if the user doesn't have permission.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Object) item - Object with nick and role or jid and affiliation attribute\n//   (String) reason - Optional reason for the change.\n//   (Function) handler_cb - Optional callback for success\n//   (Function) error_cb - Optional callback for error\n//   Returns:\n//   iq - the id of the mode change request.\n//    */\n//   _modifyPrivilege: function(room, item, reason, handler_cb, error_cb) {\n//     var iq;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_ADMIN\n//     }).cnode(item.node);\n//     if (reason != null) {\n//       iq.c(\"reason\", reason);\n//     }\n//     return this._connection.sendIQ(iq.tree(), handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Changes the role of a member of a MUC room.\n//   The modification can only be done by a room moderator. An error will be\n//   returned if the user doesn't have permission.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) nick - The nick name of the user to modify.\n//   (String) role - The new role of the user.\n//   (String) affiliation - The new affiliation of the user.\n//   (String) reason - Optional reason for the change.\n//   (Function) handler_cb - Optional callback for success\n//   (Function) error_cb - Optional callback for error\n//   Returns:\n//   iq - the id of the mode change request.\n//    */\n//   modifyRole: function(room, nick, role, reason, handler_cb, error_cb) {\n//     var item;\n//     item = strophe_js.$build(\"item\", {\n//       nick: nick,\n//       role: role\n//     });\n//     return this._modifyPrivilege(room, item, reason, handler_cb, error_cb);\n//   },\n//   kick: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'none', reason, handler_cb, error_cb);\n//   },\n//   voice: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'participant', reason, handler_cb, error_cb);\n//   },\n//   mute: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'visitor', reason, handler_cb, error_cb);\n//   },\n//   op: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'moderator', reason, handler_cb, error_cb);\n//   },\n//   deop: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'participant', reason, handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Changes the affiliation of a member of a MUC room.\n//   The modification can only be done by a room moderator. An error will be\n//   returned if the user doesn't have permission.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) jid  - The jid of the user to modify.\n//   (String) affiliation - The new affiliation of the user.\n//   (String) reason - Optional reason for the change.\n//   (Function) handler_cb - Optional callback for success\n//   (Function) error_cb - Optional callback for error\n//   Returns:\n//   iq - the id of the mode change request.\n//    */\n//   modifyAffiliation: function(room, jid, affiliation, reason, handler_cb, error_cb) {\n//     var item;\n//     item = strophe_js.$build(\"item\", {\n//       jid: jid,\n//       affiliation: affiliation\n//     });\n//     return this._modifyPrivilege(room, item, reason, handler_cb, error_cb);\n//   },\n//   ban: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'outcast', reason, handler_cb, error_cb);\n//   },\n//   member: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'member', reason, handler_cb, error_cb);\n//   },\n//   revoke: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'none', reason, handler_cb, error_cb);\n//   },\n//   owner: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'owner', reason, handler_cb, error_cb);\n//   },\n//   admin: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'admin', reason, handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Change the current users nick name.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) user - The new nick name.\n//    */\n//   changeNick: function(room, user) {\n//     var presence, room_nick;\n//     room_nick = this.test_append_nick(room, user);\n//     presence = strophe_js.$pres({\n//       from: this._connection.jid,\n//       to: room_nick,\n//       id: this._connection.getUniqueId()\n//     });\n//     return this._connection.send(presence.tree());\n//   },\n\n//   /*Function\n//   Change the current users status.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) user - The current nick.\n//   (String) show - The new show-text.\n//   (String) status - The new status-text.\n//    */\n//   setStatus: function(room, user, show, status) {\n//     var presence, room_nick;\n//     room_nick = this.test_append_nick(room, user);\n//     presence = strophe_js.$pres({\n//       from: this._connection.jid,\n//       to: room_nick\n//     });\n//     if (show != null) {\n//       presence.c('show', show).up();\n//     }\n//     if (status != null) {\n//       presence.c('status', status);\n//     }\n//     return this._connection.send(presence.tree());\n//   },\n\n//   /*Function\n//   Registering with a room.\n//   @see http://xmpp.org/extensions/xep-0045.html#register\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Function) handle_cb - Function to call for room list return.\n//   (Function) error_cb - Function to call on error.\n//    */\n//   registrationRequest: function(room, handle_cb, error_cb) {\n//     var iq;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       from: this._connection.jid,\n//       type: \"get\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_REGISTER\n//     });\n//     return this._connection.sendIQ(iq, function(stanza) {\n//       var $field, $fields, field, fields, i, len, length;\n//       $fields = stanza.getElementsByTagName('field');\n//       length = $fields.length;\n//       fields = {\n//         required: [],\n//         optional: []\n//       };\n//       for (i = 0, len = $fields.length; i < len; i++) {\n//         $field = $fields[i];\n//         field = {\n//           \"var\": $field.getAttribute('var'),\n//           label: $field.getAttribute('label'),\n//           type: $field.getAttribute('type')\n//         };\n//         if ($field.getElementsByTagName('required').length > 0) {\n//           fields.required.push(field);\n//         } else {\n//           fields.optional.push(field);\n//         }\n//       }\n//       return handle_cb(fields);\n//     }, error_cb);\n//   },\n\n//   /*Function\n//   Submits registration form.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Function) handle_cb - Function to call for room list return.\n//   (Function) error_cb - Function to call on error.\n//    */\n//   submitRegistrationForm: function(room, fields, handle_cb, error_cb) {\n//     var iq, key, val;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_REGISTER\n//     });\n//     iq.c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"submit\"\n//     });\n//     iq.c('field', {\n//       'var': 'FORM_TYPE'\n//     }).c('value').t('http://jabber.org/protocol/muc#register').up().up();\n//     for (key in fields) {\n//       val = fields[key];\n//       iq.c('field', {\n//         'var': key\n//       }).c('value').t(val).up().up();\n//     }\n//     return this._connection.sendIQ(iq, handle_cb, error_cb);\n//   },\n\n//   /*Function\n//   List all chat room available on a server.\n//   Parameters:\n//   (String) server - name of chat server.\n//   (String) handle_cb - Function to call for room list return.\n//   (String) error_cb - Function to call on error.\n//    */\n//   listRooms: function(server, handle_cb, error_cb) {\n//     var iq;\n//     iq = strophe_js.$iq({\n//       to: server,\n//       from: this._connection.jid,\n//       type: \"get\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.DISCO_ITEMS\n//     });\n//     return this._connection.sendIQ(iq, handle_cb, error_cb);\n//   },\n//   test_append_nick: function(room, nick) {\n//     var domain, node;\n//     node = strophe_js.Strophe.escapeNode(strophe_js.Strophe.getNodeFromJid(room));\n//     domain = strophe_js.Strophe.getDomainFromJid(room);\n//     return node + \"@\" + domain + (nick != null ? \"/\" + nick : \"\");\n//   }\n// });\n\n// XmppRoom = (function() {\n//   function XmppRoom(client, name, nick1, password1) {\n//     this.client = client;\n//     this.name = name;\n//     this.nick = nick1;\n//     this.password = password1;\n//     this._roomRosterHandler = bind(this._roomRosterHandler, this);\n//     this._addOccupant = bind(this._addOccupant, this);\n//     this.roster = {};\n//     this._message_handlers = {};\n//     this._presence_handlers = {};\n//     this._roster_handlers = {};\n//     this._handler_ids = 0;\n//     if (this.client.muc) {\n//       this.client = this.client.muc;\n//     }\n//     this.name = strophe_js.Strophe.getBareJidFromJid(this.name);\n//     this.addHandler('presence', this._roomRosterHandler);\n//   }\n\n//   XmppRoom.prototype.join = function(msg_handler_cb, pres_handler_cb, roster_cb) {\n//     return this.client.join(this.name, this.nick, msg_handler_cb, pres_handler_cb, roster_cb, this.password);\n//   };\n\n//   XmppRoom.prototype.leave = function(handler_cb, message) {\n//     this.client.leave(this.name, this.nick, handler_cb, message);\n//     return delete this.client.rooms[this.name];\n//   };\n\n//   XmppRoom.prototype.message = function(nick, message, html_message, type) {\n//     return this.client.message(this.name, nick, message, html_message, type);\n//   };\n\n//   XmppRoom.prototype.groupchat = function(message, html_message) {\n//     return this.client.groupchat(this.name, message, html_message);\n//   };\n\n//   XmppRoom.prototype.invite = function(receiver, reason) {\n//     return this.client.invite(this.name, receiver, reason);\n//   };\n\n//   XmppRoom.prototype.multipleInvites = function(receivers, reason) {\n//     return this.client.invite(this.name, receivers, reason);\n//   };\n\n//   XmppRoom.prototype.directInvite = function(receiver, reason) {\n//     return this.client.directInvite(this.name, receiver, reason, this.password);\n//   };\n\n//   XmppRoom.prototype.configure = function(handler_cb) {\n//     return this.client.configure(this.name, handler_cb);\n//   };\n\n//   XmppRoom.prototype.cancelConfigure = function() {\n//     return this.client.cancelConfigure(this.name);\n//   };\n\n//   XmppRoom.prototype.saveConfiguration = function(config) {\n//     return this.client.saveConfiguration(this.name, config);\n//   };\n\n//   XmppRoom.prototype.queryOccupants = function(success_cb, error_cb) {\n//     return this.client.queryOccupants(this.name, success_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.setTopic = function(topic) {\n//     return this.client.setTopic(this.name, topic);\n//   };\n\n//   XmppRoom.prototype.modifyRole = function(nick, role, reason, success_cb, error_cb) {\n//     return this.client.modifyRole(this.name, nick, role, reason, success_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.kick = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.kick(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.voice = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.voice(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.mute = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.mute(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.op = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.op(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.deop = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.deop(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.modifyAffiliation = function(jid, affiliation, reason, success_cb, error_cb) {\n//     return this.client.modifyAffiliation(this.name, jid, affiliation, reason, success_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.ban = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.ban(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.member = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.member(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.revoke = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.revoke(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.owner = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.owner(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.admin = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.admin(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.changeNick = function(nick1) {\n//     this.nick = nick1;\n//     return this.client.changeNick(this.name, nick);\n//   };\n\n//   XmppRoom.prototype.setStatus = function(show, status) {\n//     return this.client.setStatus(this.name, this.nick, show, status);\n//   };\n\n\n//   /*Function\n//   Adds a handler to the MUC room.\n//     Parameters:\n//   (String) handler_type - 'message', 'presence' or 'roster'.\n//   (Function) handler - The handler function.\n//   Returns:\n//   id - the id of handler.\n//    */\n\n//   XmppRoom.prototype.addHandler = function(handler_type, handler) {\n//     var id;\n//     id = this._handler_ids++;\n//     switch (handler_type) {\n//       case 'presence':\n//         this._presence_handlers[id] = handler;\n//         break;\n//       case 'message':\n//         this._message_handlers[id] = handler;\n//         break;\n//       case 'roster':\n//         this._roster_handlers[id] = handler;\n//         break;\n//       default:\n//         this._handler_ids--;\n//         return null;\n//     }\n//     return id;\n//   };\n\n\n//   /*Function\n//   Removes a handler from the MUC room.\n//   This function takes ONLY ids returned by the addHandler function\n//   of this room. passing handler ids returned by connection.addHandler\n//   may brake things!\n//     Parameters:\n//   (number) id - the id of the handler\n//    */\n\n//   XmppRoom.prototype.removeHandler = function(id) {\n//     delete this._presence_handlers[id];\n//     delete this._message_handlers[id];\n//     return delete this._roster_handlers[id];\n//   };\n\n\n//   /*Function\n//   Creates and adds an Occupant to the Room Roster.\n//     Parameters:\n//   (Object) data - the data the Occupant is filled with\n//   Returns:\n//   occ - the created Occupant.\n//    */\n\n//   XmppRoom.prototype._addOccupant = function(data) {\n//     var occ;\n//     occ = new Occupant(data, this);\n//     this.roster[occ.nick] = occ;\n//     return occ;\n//   };\n\n\n//   /*Function\n//   The standard handler that managed the Room Roster.\n//     Parameters:\n//   (Object) pres - the presence stanza containing user information\n//    */\n\n//   XmppRoom.prototype._roomRosterHandler = function(pres) {\n//     var data, handler, id, newnick, nick, ref;\n//     data = XmppRoom._parsePresence(pres);\n//     nick = data.nick;\n//     newnick = data.newnick || null;\n//     switch (data.type) {\n//       case 'error':\n//         return true;\n//       case 'unavailable':\n//         if (newnick) {\n//           data.nick = newnick;\n//           if (this.roster[nick] && this.roster[newnick]) {\n//             this.roster[nick].update(this.roster[newnick]);\n//             this.roster[newnick] = this.roster[nick];\n//           }\n//           if (this.roster[nick] && !this.roster[newnick]) {\n//             this.roster[newnick] = this.roster[nick].update(data);\n//           }\n//         }\n//         delete this.roster[nick];\n//         break;\n//       default:\n//         if (this.roster[nick]) {\n//           this.roster[nick].update(data);\n//         } else {\n//           this._addOccupant(data);\n//         }\n//     }\n//     ref = this._roster_handlers;\n//     for (id in ref) {\n//       handler = ref[id];\n//       if (!handler(this.roster, this)) {\n//         delete this._roster_handlers[id];\n//       }\n//     }\n//     return true;\n//   };\n\n\n//   /*Function\n//   Parses a presence stanza\n//     Parameters:\n//   (Object) data - the data extracted from the presence stanza\n//    */\n\n//   XmppRoom._parsePresence = function(pres) {\n//     var c, c2, data, i, j, len, len1, ref, ref1, ref2;\n//     data = {};\n//     data.nick = strophe_js.Strophe.getResourceFromJid(pres.getAttribute(\"from\"));\n//     data.type = pres.getAttribute(\"type\");\n//     data.states = [];\n//     ref = pres.childNodes;\n//     for (i = 0, len = ref.length; i < len; i++) {\n//       c = ref[i];\n//       switch (c.nodeName) {\n//         case \"error\":\n//           data.errorcode = c.getAttribute(\"code\");\n//           data.error = (ref1 = c.childNodes[0]) != null ? ref1.nodeName : void 0;\n//           break;\n//         case \"status\":\n//           data.status = c.textContent || null;\n//           break;\n//         case \"show\":\n//           data.show = c.textContent || null;\n//           break;\n//         case \"x\":\n//           if (c.getAttribute(\"xmlns\") === strophe_js.Strophe.NS.MUC_USER) {\n//             ref2 = c.childNodes;\n//             for (j = 0, len1 = ref2.length; j < len1; j++) {\n//               c2 = ref2[j];\n//               switch (c2.nodeName) {\n//                 case \"item\":\n//                   data.affiliation = c2.getAttribute(\"affiliation\");\n//                   data.role = c2.getAttribute(\"role\");\n//                   data.jid = c2.getAttribute(\"jid\");\n//                   data.newnick = c2.getAttribute(\"nick\");\n//                   break;\n//                 case \"status\":\n//                   if (c2.getAttribute(\"code\")) {\n//                     data.states.push(c2.getAttribute(\"code\"));\n//                   }\n//               }\n//             }\n//           }\n//       }\n//     }\n//     return data;\n//   };\n\n//   return XmppRoom;\n\n// })();\n\n// RoomConfig = (function() {\n//   function RoomConfig(info) {\n//     this.parse = bind(this.parse, this);\n//     if (info != null) {\n//       this.parse(info);\n//     }\n//   }\n\n//   RoomConfig.prototype.parse = function(result) {\n//     var attr, attrs, child, field, i, identity, j, l, len, len1, len2, query, ref;\n//     query = result.getElementsByTagName(\"query\")[0].childNodes;\n//     this.identities = [];\n//     this.features = [];\n//     this.x = [];\n//     for (i = 0, len = query.length; i < len; i++) {\n//       child = query[i];\n//       attrs = child.attributes;\n//       switch (child.nodeName) {\n//         case \"identity\":\n//           identity = {};\n//           for (j = 0, len1 = attrs.length; j < len1; j++) {\n//             attr = attrs[j];\n//             identity[attr.name] = attr.textContent;\n//           }\n//           this.identities.push(identity);\n//           break;\n//         case \"feature\":\n//           this.features.push(child.getAttribute(\"var\"));\n//           break;\n//         case \"x\":\n//           if ((!child.childNodes[0].getAttribute(\"var\") === 'FORM_TYPE') || (!child.childNodes[0].getAttribute(\"type\") === 'hidden')) {\n//             break;\n//           }\n//           ref = child.childNodes;\n//           for (l = 0, len2 = ref.length; l < len2; l++) {\n//             field = ref[l];\n//             if (!field.attributes.type) {\n//               this.x.push({\n//                 \"var\": field.getAttribute(\"var\"),\n//                 label: field.getAttribute(\"label\") || \"\",\n//                 value: field.firstChild.textContent || \"\"\n//               });\n//             }\n//           }\n//       }\n//     }\n//     return {\n//       \"identities\": this.identities,\n//       \"features\": this.features,\n//       \"x\": this.x\n//     };\n//   };\n\n//   return RoomConfig;\n\n// })();\n\n// Occupant = (function() {\n//   function Occupant(data, room1) {\n//     this.room = room1;\n//     this.update = bind(this.update, this);\n//     this.admin = bind(this.admin, this);\n//     this.owner = bind(this.owner, this);\n//     this.revoke = bind(this.revoke, this);\n//     this.member = bind(this.member, this);\n//     this.ban = bind(this.ban, this);\n//     this.modifyAffiliation = bind(this.modifyAffiliation, this);\n//     this.deop = bind(this.deop, this);\n//     this.op = bind(this.op, this);\n//     this.mute = bind(this.mute, this);\n//     this.voice = bind(this.voice, this);\n//     this.kick = bind(this.kick, this);\n//     this.modifyRole = bind(this.modifyRole, this);\n//     this.update(data);\n//   }\n\n//   Occupant.prototype.modifyRole = function(role, reason, success_cb, error_cb) {\n//     return this.room.modifyRole(this.nick, role, reason, success_cb, error_cb);\n//   };\n\n//   Occupant.prototype.kick = function(reason, handler_cb, error_cb) {\n//     return this.room.kick(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.voice = function(reason, handler_cb, error_cb) {\n//     return this.room.voice(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.mute = function(reason, handler_cb, error_cb) {\n//     return this.room.mute(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.op = function(reason, handler_cb, error_cb) {\n//     return this.room.op(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.deop = function(reason, handler_cb, error_cb) {\n//     return this.room.deop(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.modifyAffiliation = function(affiliation, reason, success_cb, error_cb) {\n//     return this.room.modifyAffiliation(this.jid, affiliation, reason, success_cb, error_cb);\n//   };\n\n//   Occupant.prototype.ban = function(reason, handler_cb, error_cb) {\n//     return this.room.ban(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.member = function(reason, handler_cb, error_cb) {\n//     return this.room.member(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.revoke = function(reason, handler_cb, error_cb) {\n//     return this.room.revoke(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.owner = function(reason, handler_cb, error_cb) {\n//     return this.room.owner(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.admin = function(reason, handler_cb, error_cb) {\n//     return this.room.admin(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.update = function(data) {\n//     this.nick = data.nick || null;\n//     this.affiliation = data.affiliation || null;\n//     this.role = data.role || null;\n//     this.jid = data.jid || null;\n//     this.status = data.status || null;\n//     this.show = data.show || null;\n//     return this;\n//   };\n\n//   return Occupant;\n\n// })();\n\n// })));\n// //# sourceMappingURL=strophe.muc.js.map\n\n--- File Index 66: web/frontend/src/src/scripts/views/view.js ---\n// var server = 'docotel.com'\n// var BOSH_SERVICE = 'http://docotel.com:7070/http-bind/'\n// var ROOM = 'prova@conference.' + server\n// var ROOM_SERVICE = 'conference.' + server\n// var connection = null\n// var user = '10000155@spark.docotel.com'\n// var pass = '12345'\n// var to = '10000153@spark.docotel.com'\n\n// function log(msg) {\n//   $('#log').append('<div></div>').append(document.createTextNode(msg))\n//   console.log(msg)\n// }\n\n// window.Strophe = Strophe\n// window.$pres = $pres\n// window.$iq = $iq\n// window.$msg = $msg\n\n// function onConnect(status) {\n//   if (status == Strophe.Status.CONNECTING) {\n//     log('Strophe is connecting.')\n//   } else if (status == Strophe.Status.CONNFAIL) {\n//     log('Strophe failed to connect.')\n//     $('#connect').get(0).value = 'connect'\n//   } else if (status == Strophe.Status.DISCONNECTING) {\n//     log('Strophe is disconnecting.')\n//   } else if (status == Strophe.Status.DISCONNECTED) {\n//     log('Strophe is disconnected.')\n//     $('#connect').get(0).value = 'connect'\n//   } else if (status == Strophe.Status.CONNECTED) {\n//     log('Strophe is connected.')\n//     // to = connection.jid // full JID\n//     // set presence\n//     connection.send($pres())\n//     // set handlers\n//     connection.addHandler(onMessage, null, 'message', null, null, null)\n//     connection.addHandler(onSubscriptionRequest, null, \"presence\", \"subscribe\")\n//     connection.addHandler(onPresence, null, \"presence\")\n    \n//     listRooms()\n//   }\n// }\n\n// function onMessage(msg) {\n//   var to = msg.getAttribute('to')\n//   var from = msg.getAttribute('from')\n//   var type = msg.getAttribute('type')\n//   var elems = msg.getElementsByTagName('body')\n\n//   if (type == \"chat\" && elems.length > 0) {\n//     var body = elems[0]\n//     log('CHAT: I got a message from ' + from + ': ' + Strophe.getText(body))\n//   }\n//   // we must return true to keep the handler alive.  \n//   // returning false would remove it after it finishes.\n//   return true\n// }\n\n// function sendMessage(msg) {\n//   log('CHAT: Send a message to ' + to + ': ' + msg)\n\n//   var m = $msg({\n//     to: to,\n//     from: user,\n//     type: 'chat'\n//   }).c(\"body\").t(msg)\n//   connection.send(m)\n// }\n\n// function setStatus(s) {\n//   log('setStatus: ' + s)\n//   var status = $pres().c('show').t(s)\n//   connection.send(status)\n// }\n\n// function subscribePresence(jid) {\n//   log('subscribePresence: ' + jid)\n//   connection.send($pres({\n//     to: jid,\n//     type: \"subscribe\"\n//   }))\n// }\n\n// function getPresence(jid) {\n//   log('getPresence: ' + jid)\n//   var check = $pres({\n//     type: 'probe',\n//     to: jid\n//   })\n//   connection.send(check)\n// }\n\n// function getRoster() {\n//   log('getRoster')\n//   var iq = $iq({\n//     type: 'get'\n//   }).c('query', {\n//     xmlns: 'jabber:iq:roster'\n//   })\n//   connection.sendIQ(iq, rosterCallback)\n// }\n\n// function rosterCallback(iq) {\n//   log('rosterCallback:')\n//   $(iq).find('item').each(function() {\n//     var jid = $(this).attr('jid') // The jabber_id of your contact\n//     // You can probably put them in a unordered list and and use their jids as ids.\n//     log(' >' + jid)\n//   })\n// }\n\n// function onSubscriptionRequest(stanza) {\n//   if (stanza.getAttribute(\"type\") == \"subscribe\") {\n//     var from = $(stanza).attr('from')\n//     log('onSubscriptionRequest: from=' + from)\n//     // Send a 'subscribed' notification back to accept the incoming\n//     // subscription request\n//     connection.send($pres({\n//       to: from,\n//       type: \"subscribed\"\n//     }))\n//   }\n//   return true\n// }\n\n// function onPresence(presence) {\n//   log('onPresence:')\n//   var presence_type = $(presence).attr('type') // unavailable, subscribed, etc...\n//   var from = $(presence).attr('from') // the jabber_id of the contact\n//   if (!presence_type) presence_type = \"online\"\n//   log(' >' + from + ' --> ' + presence_type)\n//   if (presence_type != 'error') {\n//     if (presence_type === 'unavailable') {\n//       // Mark contact as offline\n//     } else {\n//       var show = $(presence).find(\"show\").text() // this is what gives away, dnd, etc.\n//       if (show === 'chat' || show === '') {\n//         // Mark contact as online\n//       } else {\n//         // etc...\n//       }\n//     }\n//   }\n//   return true\n// }\n\n// function listRooms() {\n//   connection.muc.listRooms(mydomain, function(msg) {\n//     log(\"listRooms - success: \")\n//     $(msg).find('item').each(function() {\n//       var jid = $(this).attr('jid'),\n//         name = $(this).attr('name')\n//       log(' >room: ' + name + ' (' + jid + ')')\n//     })\n//   }, function(err) {\n//     log(\"listRooms - error: \" + err)\n//   })\n// }\n\n// function enterRoom(room) {\n//   log(\"enterRoom: \" + room)\n//   connection.muc.init(connection)\n//   connection.muc.join(room, user, room_msg_handler, room_pres_handler)\n//   //connection.muc.setStatus(room, user, 'subscribed', 'chat')\n// }\n\n// function room_msg_handler(a, b, c) {\n//   log('MUC: room_msg_handler')\n//   return true\n// }\n\n// function room_pres_handler(a, b, c) {\n//   log('MUC: room_pres_handler')\n//   return true\n// }\n\n// function exitRoom(room) {\n//   log(\"exitRoom: \" + room)\n//   //TBD\n// }\n\n// function rawInput(data) {\n//   console.log('RECV: ' + data)\n// }\n\n// function rawOutput(data) {\n//   console.log('SENT: ' + data)\n// }\n\n// $(document).ready(function() {\n\n//   // user = \"1000010@spark.docotel.com\"\n//   // $('#pass').get(0).value = \"12345\"\n\n//   $('#connect').bind('click', function() {\n//     var url = BOSH_SERVICE\n//     connection = new Strophe.Connection(url)\n//     connection.rawInput = rawInput\n//     connection.rawOutput = rawOutput\n//     var button = $('#connect').get(0)\n//     if (button.value == 'connect') {\n//       button.value = 'disconnect'\n//       console.log(user, pass, 'connect')\n//       connection.connect(user, pass, onConnect)\n//     } else {\n//       button.value = 'connect'\n//       connection.disconnect()\n//     }\n//   })\n\n//   $('#send').bind('click', function() {\n//     var msg = $('#msg').val()\n//     sendMessage(msg)\n//   })\n\n//   $('#btnGetPres').bind('click', function() {\n//     var jid = to\n//     getPresence(jid)\n//   })\n\n//   $('#btnSubPres').bind('click', function() {\n//     var jid = to\n//     subscribePresence(jid)\n//   })\n\n//   $('#btnRoster').bind('click', function() {\n//     getRoster()\n//   })\n\n//   $('#btnAway').bind('click', function() {\n//     setStatus('away')\n//   })\n\n//   $('#room').val(ROOM)\n\n//   $('#btnEnter').bind('click', function() {\n//     enterRoom($('#room').val())\n//   })\n\n//   $('#btnExit').bind('click', function() {\n//     exitRoom($('#room').val())\n//   })\n\n// })\n\n--- File Index 67: web/js/admin/edit_pendirian.js ---\nfunction add_json_bakum() {\n    $('#admineditform-nama_bakum_kop').val('');\n    $('#admineditform-sk_bakum_kop').val('');\n    $('#admineditform-npwp_bakum_kop').val('');\n    $('#admineditform-file_sk_bakum_kop').val('');\n    $('#admineditform-hidden_file_sk_bakum_kop').val('');\n    $('#admineditform-nama_bakum_kop').prop('disabled', false);\n    $('#admineditform-sk_bakum_kop').prop('disabled', false);\n    $('#admineditform-npwp_bakum_kop').prop('disabled', false);\n    $('#admineditform-hidden_file_sk_bakum_kop').prop('disabled', false);\n    $('#but-submit-bakum').prop('name', 'SaveBakumSekunder');\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction edit_json_bakum(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_bakum_sekunder').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#admineditform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#admineditform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#admineditform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    $('#admineditform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#admineditform-nama_bakum_kop').prop('disabled', false);\n    $('#admineditform-sk_bakum_kop').prop('disabled', false);\n    $('#admineditform-npwp_bakum_kop').prop('disabled', false);\n    $('#admineditform-hidden_file_sk_bakum_kop').prop('disabled', false);\n    $('#but-submit-bakum').prop('name', 'EditBakumSekunder');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction hapus_json_bakum(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_bakum_sekunder').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#admineditform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#admineditform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#admineditform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    $('#admineditform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#admineditform-nama_bakum_kop').prop('disabled', true);\n    $('#admineditform-sk_bakum_kop').prop('disabled', true);\n    $('#admineditform-npwp_bakum_kop').prop('disabled', true);\n    $('#admineditform-hidden_file_sk_bakum_kop').prop('disabled', true);\n    $('#but-submit-bakum').prop('name', 'HapusBakumSekunder');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html('Hapus');\n    // $('#but-submit-bakum').submit();\n}\n\nfunction toogleBakumSekunder(status) {\n    if (status) {\n        $('#panel-badan-hukum').removeClass('hidden');\n    }\n    else {\n        $('#panel-badan-hukum').addClass('hidden');\n    }\n}\n\nfunction AjaxKab() {\n    $.ajax({\n        method: 'POST',\n        url: '/admin/get-child-wilayah?id=' + $('#prov_id').val() + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#kab_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            AjaxKec();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKec() {\n    $.ajax({\n        method: 'POST',\n        url: '/admin/get-child-wilayah?id=' + $('#kab_id').val() + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#kec_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            AjaxKel();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKel() {\n    $.ajax({\n        method: 'POST',\n        url: '/admin/get-child-wilayah?id=' + $('#kec_id').val() + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#kel_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\nfunction toogleAllWilayah(status) {\n    if (!status) {\n        $('#prov_id').prop('disabled', true);\n        $('#kab_id').prop('disabled', true);\n        $('#kec_id').prop('disabled', true);\n        $('#kel_id').prop('disabled', true);\n    }\n    else {\n        $('#prov_id').prop('disabled', false);\n        $('#kab_id').prop('disabled', false);\n        $('#kec_id').prop('disabled', false);\n        $('#kel_id').prop('disabled', false);\n    }\n}\n\nfunction HitungModal() {\n    let simpok = $('#simpanan_pokok').val() ? $('#simpanan_pokok').val() : 0;\n    let simjib = $('#simpanan_wajib').val() ? $('#simpanan_wajib').val() : 0;\n    let danhib = $('#dana_hibah').val() ? $('#dana_hibah').val() : 0;\n    let danacad = $('#dana_cadangan').val() ? $('#dana_cadangan').val() : 0;\n    let total = parseInt(simpok) + parseInt(simjib) + parseInt(danhib) + parseInt(danacad);\n    $('#modal-usaha').val(total);\n    $('#modal-usaha-disp').val(total);\n}\n\nfunction add_json_usaha_utama() {\n    $('#grid-by-jenis').removeClass(\"hidden\");\n    $('#grid-all').addClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_pendukung() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_tambahan() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction hapus_json_usaha_utama(elem) {\n    let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    if (yakin == false) {\n        return;\n    }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction resetSearch() {\n    $('#search-kbli').val('');\n    $('#search-but-kbli').trigger('click');\n}\n\nfunction hapus_json_usaha_pendukung(elem) {\n    let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    if (yakin == false) {\n        return;\n    }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction hapus_json_usaha_tambahan(elem) {\n    let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    if (yakin == false) {\n        return;\n    }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction add_json_pengawas_pengurus() {\n    $('#admineditform-status_anggota').val(1);\n    $('#admineditform-nik_anggota').val('');\n    $('#admineditform-nama_anggota').val('');\n    $('#admineditform-jenis_kelamin_anggota').val('');\n    $('#admineditform-jabatan_anggota').val('');\n    $('#admineditform-npwp_anggota').val('');\n    $('#admineditform-no_hp_anggota').val('');\n    $('#admineditform-status_anggota').prop('disabled', false);\n    $('#admineditform-nik_anggota').prop('disabled', false);\n    $('#admineditform-nama_anggota').prop('disabled', false);\n    $('#admineditform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#admineditform-jabatan_anggota').prop('disabled', false);\n    $('#admineditform-npwp_anggota').prop('disabled', false);\n    $('#admineditform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'SavePengawasPengurus');\n    $('#but-submit-pengurus').html(\"Simpan\");\n    $('#modal-pengawas-pengurus').modal();\n}\n\nfunction edit_json_pengawas_pengurus(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#admineditform-status_anggota').val(data.status);\n    $('#admineditform-nik_anggota').val(data.nik);\n    $('#admineditform-nama_anggota').val(data.nama);\n    $('#admineditform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#admineditform-jabatan_anggota').val(data.jabatan);\n    $('#admineditform-npwp_anggota').val(data.npwp);\n    $('#admineditform-no_hp_anggota').val(data.no_hp);\n    $('#admineditform-status_anggota').prop('disabled', false);\n    $('#admineditform-nik_anggota').prop('disabled', false);\n    $('#admineditform-nama_anggota').prop('disabled', false);\n    $('#admineditform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#admineditform-jabatan_anggota').prop('disabled', false);\n    $('#admineditform-npwp_anggota').prop('disabled', false);\n    $('#admineditform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'EditPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Simpan\");\n}\n\nfunction hapus_json_pengawas_pengurus(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#admineditform-status_anggota').val(data.status);\n    $('#admineditform-nik_anggota').val(data.nik);\n    $('#admineditform-nama_anggota').val(data.nama);\n    $('#admineditform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#admineditform-jabatan_anggota').val(data.jabatan);\n    $('#admineditform-npwp_anggota').val(data.npwp);\n    $('#admineditform-no_hp_anggota').val(data.no_hp);\n    $('#admineditform-status_anggota').prop('disabled', true);\n    $('#admineditform-nik_anggota').prop('disabled', true);\n    $('#admineditform-nama_anggota').prop('disabled', true);\n    $('#admineditform-jenis_kelamin_anggota').prop('disabled', true);\n    $('#admineditform-jabatan_anggota').prop('disabled', true);\n    $('#admineditform-npwp_anggota').prop('disabled', true);\n    $('#admineditform-no_hp_anggota').prop('disabled', true);\n    $('#but-submit-pengurus').prop('name', 'HapusPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Hapus\");\n    // $('#but-submit-pengurus').submit();\n}\n\nfunction cekSekunder() {\n    let pilihan = $('#admineditform-b_koperasi_id')[0].options[$('#admineditform-b_koperasi_id')[0].options.selectedIndex].text.toUpperCase();\n    if (pilihan == 'SEKUNDER') {\n        toogleBakumSekunder(true);\n    }\n    else {\n        toogleBakumSekunder(false);\n    }\n}\n\nfunction add_json_pemilik_manfaat() {\n    $('#admineditform-nama_bo').val('');\n    // $('#admineditform-jenis_identitas_bo').val('');\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-no_identitas_bo').val('');\n    $('#admineditform-tempat_lahir_bo').val('');\n    $('#admineditform-tanggal_lahir_bo').val('');\n    $('#admineditform-alamat_bo').val('');\n    // $('#admineditform-kewarganegaraan_bo').val('');\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-npwp_bo').val('');\n    $('#id_hubungan_bo').val('');\n    $('#id_provinsi_bo').val('');\n    $('#id_kabupaten_bo').val('');\n    $('#id_kecamatan_bo').val('');\n    $('#id_kelurahan_bo').val('');\n    $('#id_rt_bo').val('');\n    $('#id_rw_bo').val('');\n    $('#id_negara_bo').val('');\n    $('#manfaat1')[0].checked = false;\n    $('#manfaat2')[0].checked = false;\n    $('#manfaat3')[0].checked = false;\n    $('#manfaat4')[0].checked = false;\n    $('#manfaat5')[0].checked = false;\n    $('#manfaat_bawah').checked = false;\n    $('#admineditform-nama_bo').prop('disabled', false);\n    $('#admineditform-jenis_identitas_bo').prop('disabled', false);\n    $('#admineditform-no_identitas_bo').prop('disabled', false);\n    $('#admineditform-tempat_lahir_bo').prop('disabled', false);\n    $('#admineditform-tanggal_lahir_bo').prop('disabled', false);\n    $('#admineditform-alamat_bo').prop('disabled', false);\n    $('#admineditform-kewarganegaraan_bo').prop('disabled', false);\n    $('#admineditform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'SavePemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n}\n\nfunction edit_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#admineditform-nama_bo').val(data.nama);\n    // $('#admineditform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-no_identitas_bo').val(data.no_identitas);\n    $('#admineditform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#admineditform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#admineditform-alamat_bo').val(data.alamat);\n    // $('#admineditform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#admineditform-nama_bo').prop('disabled', false);\n    $('#admineditform-jenis_identitas_bo').prop('disabled', false);\n    $('#admineditform-no_identitas_bo').prop('disabled', false);\n    $('#admineditform-tempat_lahir_bo').prop('disabled', false);\n    $('#admineditform-tanggal_lahir_bo').prop('disabled', false);\n    $('#admineditform-alamat_bo').prop('disabled', false);\n    $('#admineditform-kewarganegaraan_bo').prop('disabled', false);\n    $('#admineditform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    cekCkboxBO();\n    $('#but-submit-bo').prop('name', 'EditPemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n    $('#but-submit-bo').val(selected);\n}\n\nfunction hapus_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#admineditform-nama_bo').val(data.nama);\n    // $('#admineditform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#admineditform-no_identitas_bo').val(data.no_identitas);\n    $('#admineditform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#admineditform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#admineditform-alamat_bo').val(data.alamat);\n    // $('#admineditform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#admineditform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    $('#id_kabupaten_bo').val(data.kabupaten_bo);\n    $('#id_kecamatan_bo').val(data.kecamatan_bo);\n    $('#id_kelurahan_bo').val(data.kelurahan_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#admineditform-nama_bo').prop('disabled', true);\n    // $('#admineditform-jenis_identitas_bo').prop('disabled',true);\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#admineditform-no_identitas_bo').prop('disabled', true);\n    $('#admineditform-tempat_lahir_bo').prop('disabled', true);\n    $('#admineditform-tanggal_lahir_bo').prop('disabled', true);\n    $('#admineditform-alamat_bo').prop('disabled', true);\n    // $('#admineditform-kewarganegaraan_bo').prop('disabled',true);\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#admineditform-npwp_bo').prop('disabled', true);\n    $('#id_hubungan_bo').prop('disabled', true);\n    $('#id_provinsi_bo').prop('disabled', true);\n    $('#id_kabupaten_bo').prop('disabled', true);\n    $('#id_kecamatan_bo').prop('disabled', true);\n    $('#id_kelurahan_bo').prop('disabled', true);\n    $('#id_rt_bo').prop('disabled', true);\n    $('#id_rw_bo').prop('disabled', true);\n    $('#id_negara_bo').prop('disabled', true);\n    $('#manfaat1').prop('disabled', true);\n    $('#manfaat2').prop('disabled', true);\n    $('#manfaat3').prop('disabled', true);\n    $('#manfaat4').prop('disabled', true);\n    $('#manfaat5').prop('disabled', true);\n    $('#manfaat_bawah').prop('disabled', true);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'HapusPemilikManfaat');\n    $('#but-submit-bo').html(\"Hapus\");\n    $('#but-submit-bo').val(selected);\n}\n\n$('#admineditform-b_koperasi_id').change(function () {\n    cekSekunder();\n});\n\n$('#prov_id').change(function () {\n    AjaxKab();\n});\n\n$('#kab_id').change(function () {\n    AjaxKec();\n})\n\n$('#kec_id').change(function () {\n    AjaxKel();\n})\n\n$('#simpanan_pokok-disp, #simpanan_wajib-disp, #dana_hibah-disp, #dana_cadangan-disp').change(function () {\n    HitungModal();\n});\n\n$(document).ready(function () {\n    // AjaxKab();\n    $('#cb-mengerti-manfaat').trigger('click');\n    $('#cb-mengerti-manfaat').trigger('click');\n    cekSekunder();\n    HitungModal();\n});\n\n$('#search-but-kbli').click(function () {\n    let value = $('#search-kbli').val();\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    let urlpjax;\n    if ($.urlParam('id')) {\n        urlpjax = '/admin/edit?id=' + $.urlParam('id') + '&KBLIBakumSearch[judul]=' + value;\n    }\n    else {\n        urlpjax = '/admin/form-admin?KBLIBakumSearch[judul]=' + value;\n    }\n\n    if (!$('#grid-by-jenis').hasClass(\"hidden\")) {\n        // console.log('pjax1');\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-1\",\n            timeout: 1000,\n        });\n    }\n    if (!$('#grid-all').hasClass(\"hidden\")) {\n        // console.log('pjax2');\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-2\",\n            timeout: 1000,\n        });\n    }\n});\n\n$('#search-kbli').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#cb-mengerti-manfaat').click(function () {\n    if (this.checked) {\n        $('#perpres-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#perpres-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#cb_perpres_manfaat').click(function () {\n    if ($('#cb_perpres_manfaat .checkbox label input[type=checkbox]:checked').length >= 2) {\n        $('#tabel-pemilik-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#tabel-pemilik-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#manfaat1').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat2')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat2').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat1')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat3').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat4').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat5').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\nfunction cekCkboxBO() {\n    if ($('#manfaat1')[0].checked || $('#manfaat2')[0].checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n        return;\n    }\n\n    if ($('#manfaat3')[0].checked || $('#manfaat4')[0].checked || $('#manfaat5')[0].checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n        return;\n    }\n}\n\n$('#but-submit-bo').click(function (e) {\n    let jenis_button = $(this).html();\n\n    if(jenis_button == \"Hapus\") {\n        return true;\n    }\n    // validasi form\n    var nama = $('#admineditform-nama_bo')[0].value;\n    var jenis_identitas = $('input:radio[name=\"AdminEditForm[jenis_identitas_bo]\"]:checked').length;\n    var no_identitas = $('#admineditform-no_identitas_bo')[0].value;\n    var tempat_lahir = $('#admineditform-tempat_lahir_bo')[0].value;\n    var tanggal_lahir = $('#admineditform-tanggal_lahir_bo')[0].value;\n    var kewarganegaraan = $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"]:checked').length;\n    var alamat = $('#admineditform-alamat_bo')[0].value;\n    var npwp = $('#admineditform-npwp_bo')[0].value;\n    var provinsi = $('#id_provinsi_bo').val();\n    var kabupaten = $('#id_kabupaten_bo').val();\n    var kecamatan = $('#id_kecamatan_bo').val();\n    var kelurahan = $('#id_kelurahan_bo').val();\n    var rt = $('#id_rt_bo').val();\n    var rw = $('#id_rw_bo').val();\n    var negara = $('#id_negara_bo').val();\n    var hubungan_bo = $('#id_hubungan_bo').val();\n\n    if (kewarganegaraan > 0) {\n        let kw = $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"]:checked')[0].value;\n\n        // JIKA WNA\n        if (kw == 0) {\n\n            if (!negara) {\n                $('#err-bo').html('Negara Asal Wajib Di Isi.')\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n\n        }\n        else {\n\n            if (!provinsi || !kecamatan || !kabupaten || !kelurahan) {\n                $('#err-bo').html('Data Wilayah Wajib Di isi.');\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n        }\n    }\n\n\n    if (nama == '' || jenis_identitas <= 0 || no_identitas == '' || tempat_lahir == '' || tanggal_lahir == '' || kewarganegaraan <= 0 || alamat == '' || npwp == '' || hubungan_bo == '') {\n        $('#err-bo').html('Kolom Nama, Jenis Identitas, No Identitas, Tanggal Lahir, Alamat Bo, Hubungan Bo, Kewarganegaraan dan NPWP Wajib Di isi.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    // Checkbox manfaat bawah\n    var err = $('#error-manfaat_bawah');\n    if (!$('#manfaat_bawah')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist persetujuan.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n\n    // Cehckbox manfaat atas\n    var err = $('#error-manfaat_atas');\n    if (!$('#manfaat1')[0].checked && !$('#manfaat2')[0].checked && !$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist salah satu kriteria.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n});\n\n$('#admineditform-jangka_waktu').change(function () {\n    if (this.value == 'Terbatas') {\n        $('#jumlah_jangka_waktu').removeClass('hidden');\n    }\n    else {\n        $('#jumlah_jangka_waktu').addClass('hidden');\n    }\n});\n\n\n$('#jenis_kop').change(function () {\n    var id = this.value;\n    $.ajax({\n        method: 'GET',\n        url: '/admin/get-child-jenis?id=' + id,\n        success: function (response) {\n            var res = JSON.parse(response);\n            if (res.count > 0) {\n                $('.field-subjenis_kop').removeClass('hidden');\n                let opt = [];\n                $.each(res.data, function (i, item) {\n                    opt.push($('<option />', { value: item.id, text: item.nama }));\n                });\n                $('#subjenis_kop').find('option').remove().end().append(opt);\n                $.urlParam = function (name) {\n                    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (!results) {\n                        return false;\n                    }\n                    return results[1] || 0;\n                }\n                if ($.urlParam('id')) {\n                    urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n                }\n                else {\n                    // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n                }\n                $.pjax({\n                    url: urlpjax2,\n                    container: \"#kv-1\",\n                    timeout: 1000,\n                });\n            }\n            else {\n                $('.field-subjenis_kop').addClass('hidden');\n                $('#subjenis_kop').find('option').remove().end();\n\n                $.urlParam = function (name) {\n                    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (!results) {\n                        return false;\n                    }\n                    return results[1] || 0;\n                }\n                if ($.urlParam('id')) {\n                    urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + id;\n                }\n                else {\n                    // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + id;\n                }\n                $.pjax({\n                    url: urlpjax2,\n                    container: \"#kv-1\",\n                    timeout: 1000,\n                });\n            }\n        }\n    });\n\n    if (this.value == 6) {\n        $('#admineditform-m_pola_id').prop('disabled', false);\n    }\n    else {\n        $('#admineditform-m_pola_id').prop('disabled', true);\n        $('#admineditform-m_pola_id').val(1);\n    }\n});\n\n$('#subjenis_kop').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n    }\n    else {\n        // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#admineditform-m_pola_id').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value + '&KBLISearch[bentuk]=' + $('#admineditform-b_koperasi_id')[0].value;\n    }\n    else {\n        // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#admineditform-b_koperasi_id').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value + '&KBLISearch[bentuk]=' + $('#admineditform-b_koperasi_id')[0].value;\n    }\n    else {\n        // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#simpanan_pokok-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#simpanan_wajib-disp').focus();\n    }\n});\n\n$('#simpanan_wajib-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_hibah-disp').focus();\n    }\n});\n\n$('#dana_hibah-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#admineditform-periode_pengurus_awal').focus();\n    }\n});\n\n$('#admineditform-periode_pengurus_awal').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$('#admineditform-periode_pengurus_akhir').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$(document).keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#but-submit-bakum').click(() => {\n\n    let nama_koperasi = $('#admineditform-nama_bakum_kop')[0].value;\n    let no_sk = $('#admineditform-sk_bakum_kop')[0].value;\n    let npwp = $('#admineditform-npwp_bakum_kop')[0].value;\n\n    if (nama_koperasi == '' || no_sk == '' || npwp == '') {\n        $('#err-bakum-sekunder').html(\"Kolom Nama Koperasi, Nomor SK dan NPWP Tidak Boleh Kosong\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\n$('#but-submit-pengurus').click(() => {\n    let nik = $('#admineditform-nik_anggota')[0].value;\n    let nama = $('#admineditform-nama_anggota')[0].value;\n    let jenis_kelamin = $('#admineditform-jenis_kelamin_anggota')[0].value;\n    let jabatan = $('#admineditform-jabatan_anggota')[0].value;\n    let hp = $('#admineditform-no_hp_anggota')[0].value;\n\n    if (nik == '' || nama == '' || jenis_kelamin == '' || jabatan == '' || hp == '') {\n        $('#err-pengawas-pengurus').html(\"Kolom NIK, Nama, Jenis Kelamin, No HP dan Jabatan Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\nfunction isNumber(evt) {\n    var iKeyCode = (evt.which) ? evt.which : evt.keyCode\n    if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))\n        return false;\n\n    return true;\n}\n\nfunction AjaxKabBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_provinsi_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#id_kabupaten_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                console.log(replaceValue);\n                DDKab.val(replaceValue);\n            }\n            else {\n                AjaxKecBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKecBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kabupaten_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#id_kecamatan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKec.val(replaceValue);\n            }\n            else {\n                AjaxKelBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKelBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kecamatan_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#id_kelurahan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKel.val(replaceValue);\n            }\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\n$('input[name=\"AdminEditForm[kewarganegaraan_bo]\"]').change(function () {\n    let pilihan = $('input[name=\"AdminEditForm[kewarganegaraan_bo]\"]:checked');\n    let pilihan_jenis = $('input:radio[name*=\"jenis_identitas_bo\"]:checked').val();\n\n    if (pilihan.length > 0) {\n        let isiPilihan = pilihan[0].value;\n\n        if (isiPilihan == 0) {\n            toggleLayoutWna(true);\n            toggleLayoutWni(false);\n            if (pilihan_jenis != 3) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"3\"]').trigger('click');\n            }\n        }\n        else {\n            toggleLayoutWni(true);\n            toggleLayoutWna(false);\n            if (pilihan_jenis != 1 || pilihan_jenis != 2) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"1\"]').trigger('click');\n            }\n        }\n    }\n    else {\n        toggleLayoutWni(false);\n        toggleLayoutWna(false);\n    }\n});\n\nfunction toggleLayoutWni(status) {\n    if (status) {\n        $('#layout_wni').removeClass('hide');\n    }\n    else {\n        $('#layout_wni').addClass('hide');\n    }\n}\n\nfunction toggleLayoutWna(status) {\n    if (status) {\n        $('#layout_wna').removeClass('hide');\n    }\n    else {\n        $('#layout_wna').addClass('hide');\n    }\n}\n\n\n\n$('#modal-pemilik-manfaat').on('show.bs.modal', function () {\n    $('input[name=\"AdminEditForm[kewarganegaraan_bo]\"]').trigger(\"change\");\n});\n\n$('input:radio[name=\"AdminEditForm[jenis_identitas_bo]\"]').change(function () {\n    let pilihan = $('input:radio[name=\"AdminEditForm[jenis_identitas_bo]\"]:checked').val();\n\n    if (pilihan == 1 || pilihan == 2) {\n        $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"][value=\"1\"]').trigger('click');\n    }\n    else {\n        $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"][value=\"0\"]').trigger('click');\n    }\n\n});\n\nvar array_kbli = [];\n$(document).on('click', 'input[name=\"cek_kbli[]\"]', function() {\n    array_kbli.push($(this).val());\n    $(this).checked = true;\n    $('#cek_kbli_value').val(array_kbli);\n});\n\n\n--- File Index 68: web/js/admin/edit_perubahan.js ---\nfunction add_json_bakum() {\n    $('#admineditform-nama_bakum_kop').val('');\n    $('#admineditform-sk_bakum_kop').val('');\n    $('#admineditform-npwp_bakum_kop').val('');\n    $('#admineditform-file_sk_bakum_kop').val('');\n    $('#admineditform-hidden_file_sk_bakum_kop').val('');\n    $('#admineditform-nama_bakum_kop').prop('disabled', false);\n    $('#admineditform-sk_bakum_kop').prop('disabled', false);\n    $('#admineditform-npwp_bakum_kop').prop('disabled', false);\n    $('#admineditform-hidden_file_sk_bakum_kop').prop('disabled', false);\n    $('#but-submit-bakum').prop('name', 'SaveBakumGabung');\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction add_json_pisah() {\n    $('#admineditform-no_pesan_pisah').val('');\n    $('#admineditform-nama_koperasi_pisah').val('');\n    $('#admineditform-jenis_koperasi_pisah').val('');\n\n    $('#admineditform-no_pesan_pisah').prop('disabled', false);\n    $('#admineditform-nama_koperasi_pisah').prop('disabled', true);\n    $('#admineditform-jenis_koperasi_pisah').prop('disabled', true);\n\n    $('#but-submit-bakum-pisah').prop('name', 'SaveBakumPisah');\n    $('#but-submit-bakum-pisah').html(\"Simpan\");\n}\n\nfunction edit_json_bakum(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_gabung').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#admineditform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#admineditform-sk_bakum_kop').val(data.sk_bakum_kop);\n    // $('#admineditform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    // $('#admineditform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#admineditform-nama_bakum_kop').prop('disabled', false);\n    $('#admineditform-sk_bakum_kop').prop('disabled', false);\n    // $('#admineditform-npwp_bakum_kop').prop('disabled',false);\n    // $('#admineditform-hidden_file_sk_bakum_kop').prop('disabled',false);\n    $('#but-submit-bakum').prop('name', 'EditBakumGabung');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction edit_json_pisah(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pisah').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum-pembagian').modal();\n    $('#admineditform-no_pesan_pisah').val(data.no_pesan);\n    $('#admineditform-nama_koperasi_pisah').val(data.nama_koperasi);\n    $('#admineditform-jenis_koperasi_pisah').val(data.jenis_koperasi);\n\n    $('#admineditform-no_pesan_pisah').prop('disabled', false);\n    $('#admineditform-nama_koperasi_pisah').prop('disabled', true);\n    $('#admineditform-jenis_koperasi_pisah').prop('disabled', true);\n\n    $('#but-submit-bakum-pisah').prop('name', 'EditBakumPisah');\n    $('#but-submit-bakum-pisah').val(selected);\n    $('#but-submit-bakum-pisah').html(\"Simpan\");\n}\n\nfunction hapus_json_bakum(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_gabung').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#admineditform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#admineditform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#admineditform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    $('#admineditform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#admineditform-nama_bakum_kop').prop('disabled', true);\n    $('#admineditform-sk_bakum_kop').prop('disabled', true);\n    $('#admineditform-npwp_bakum_kop').prop('disabled', true);\n    $('#admineditform-hidden_file_sk_bakum_kop').prop('disabled', true);\n    $('#but-submit-bakum').prop('name', 'HapusBakumGabung');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html('Hapus');\n    // $('#but-submit-bakum').submit();\n}\n\nfunction hapus_json_pisah(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pisah').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum-pembagian').modal();\n    $('#admineditform-no_pesan_pisah').val(data.no_pesan);\n    $('#admineditform-nama_koperasi_pisah').val(data.nama_koperasi);\n    $('#admineditform-jenis_koperasi_pisah').val(data.jenis_koperasi);\n\n    $('#admineditform-no_pesan_pisah').prop('disabled', true);\n    $('#admineditform-nama_koperasi_pisah').prop('disabled', true);\n    $('#admineditform-jenis_koperasi_pisah').prop('disabled', true);\n\n    $('#but-submit-bakum-pisah').prop('name', 'HapusBakumPisah');\n    $('#but-submit-bakum-pisah').val(selected);\n    $('#but-submit-bakum-pisah').html('Hapus');\n    // $('#but-submit-bakum').submit();\n}\n\nfunction toogleBakumSekunder(status) {\n    if (status) {\n        $('#panel-badan-hukum').removeClass('hidden');\n    }\n    else {\n        $('#panel-badan-hukum').addClass('hidden');\n    }\n}\n\nfunction AjaxKab() {\n    $.ajax({\n        method: 'POST',\n        url: '/admin/get-child-wilayah?id=' + $('#prov_id').val() + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#kab_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            AjaxKec();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKec() {\n    $.ajax({\n        method: 'POST',\n        url: '/admin/get-child-wilayah?id=' + $('#kab_id').val() + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#kec_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            AjaxKel();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKel() {\n    $.ajax({\n        method: 'POST',\n        url: '/admin/get-child-wilayah?id=' + $('#kec_id').val() + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#kel_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\nfunction toogleAllWilayah(status) {\n    if (!status) {\n        $('#prov_id').prop('disabled', true);\n        $('#kab_id').prop('disabled', true);\n        $('#kec_id').prop('disabled', true);\n        $('#kel_id').prop('disabled', true);\n    }\n    else {\n        $('#prov_id').prop('disabled', false);\n        $('#kab_id').prop('disabled', false);\n        $('#kec_id').prop('disabled', false);\n        $('#kel_id').prop('disabled', false);\n    }\n}\n\nfunction HitungModal() {\n    let simpok = $('#simpanan_pokok').val() ? $('#simpanan_pokok').val() : 0;\n    let simjib = $('#simpanan_wajib').val() ? $('#simpanan_wajib').val() : 0;\n    let danhib = $('#dana_hibah').val() ? $('#dana_hibah').val() : 0;\n    let danacad = $('#dana_cadangan').val() ? $('#dana_cadangan').val() : 0;\n    let total = parseInt(simpok) + parseInt(simjib) + parseInt(danhib) + parseInt(danacad);\n    $('#modal-usaha').val(total);\n    $('#modal-usaha-disp').val(total);\n}\n\nfunction add_json_usaha_utama() {\n    $('#grid-by-jenis').removeClass(\"hidden\");\n    $('#grid-all').addClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_pendukung() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_tambahan() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction hapus_json_usaha_utama(elem) {\n    let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    if (yakin == false) {\n        return;\n    }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction resetSearch() {\n    $('#search-kbli').val('');\n    // $('#search-but-kbli').trigger('click');\n}\n\nfunction hapus_json_usaha_pendukung(elem) {\n    let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    if (yakin == false) {\n        return;\n    }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction hapus_json_usaha_tambahan(elem) {\n    let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    if (yakin == false) {\n        return;\n    }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction add_json_pengawas_pengurus() {\n    $('#admineditform-status_anggota').val(1);\n    $('#admineditform-nik_anggota').val('');\n    $('#admineditform-nama_anggota').val('');\n    $('#admineditform-jenis_kelamin_anggota').val('');\n    $('#admineditform-jabatan_anggota').val('');\n    $('#admineditform-npwp_anggota').val('');\n    $('#admineditform-no_hp_anggota').val('');\n    $('#admineditform-status_anggota').prop('disabled', false);\n    $('#admineditform-nik_anggota').prop('disabled', false);\n    $('#admineditform-nama_anggota').prop('disabled', false);\n    $('#admineditform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#admineditform-jabatan_anggota').prop('disabled', false);\n    $('#admineditform-npwp_anggota').prop('disabled', false);\n    $('#admineditform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'SavePengawasPengurus');\n    $('#but-submit-pengurus').html(\"Simpan\");\n    $('#modal-pengawas-pengurus').modal();\n}\n\nfunction edit_json_pengawas_pengurus(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#admineditform-status_anggota').val(data.status);\n    $('#admineditform-nik_anggota').val(data.nik);\n    $('#admineditform-nama_anggota').val(data.nama);\n    $('#admineditform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#admineditform-jabatan_anggota').val(data.jabatan);\n    $('#admineditform-npwp_anggota').val(data.npwp);\n    $('#admineditform-no_hp_anggota').val(data.no_hp);\n    $('#admineditform-status_anggota').prop('disabled', false);\n    $('#admineditform-nik_anggota').prop('disabled', false);\n    $('#admineditform-nama_anggota').prop('disabled', false);\n    $('#admineditform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#admineditform-jabatan_anggota').prop('disabled', false);\n    $('#admineditform-npwp_anggota').prop('disabled', false);\n    $('#admineditform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'EditPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Simpan\");\n}\n\nfunction hapus_json_pengawas_pengurus(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#admineditform-status_anggota').val(data.status);\n    $('#admineditform-nik_anggota').val(data.nik);\n    $('#admineditform-nama_anggota').val(data.nama);\n    $('#admineditform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#admineditform-jabatan_anggota').val(data.jabatan);\n    $('#admineditform-npwp_anggota').val(data.npwp);\n    $('#admineditform-no_hp_anggota').val(data.no_hp);\n    $('#admineditform-status_anggota').prop('disabled', true);\n    $('#admineditform-nik_anggota').prop('disabled', true);\n    $('#admineditform-nama_anggota').prop('disabled', true);\n    $('#admineditform-jenis_kelamin_anggota').prop('disabled', true);\n    $('#admineditform-jabatan_anggota').prop('disabled', true);\n    $('#admineditform-npwp_anggota').prop('disabled', true);\n    $('#admineditform-no_hp_anggota').prop('disabled', true);\n    $('#but-submit-pengurus').prop('name', 'HapusPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Hapus\");\n    // $('#but-submit-pengurus').submit();\n}\n\nfunction cekSekunder() {\n    let pilihan = $('#admineditform-b_koperasi_id')[0].options[$('#admineditform-b_koperasi_id')[0].options.selectedIndex].text.toUpperCase();\n    if (pilihan == 'SEKUNDER') {\n        toogleBakumSekunder(true);\n    }\n    else {\n        toogleBakumSekunder(false);\n    }\n}\n\nfunction add_json_pemilik_manfaat() {\n    $('#admineditform-nama_bo').val('');\n    // $('#admineditform-jenis_identitas_bo').val('');\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-no_identitas_bo').val('');\n    $('#admineditform-tempat_lahir_bo').val('');\n    $('#admineditform-tanggal_lahir_bo').val('');\n    $('#admineditform-alamat_bo').val('');\n    // $('#admineditform-kewarganegaraan_bo').val('');\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-npwp_bo').val('');\n    $('#id_hubungan_bo').val('');\n    $('#id_provinsi_bo').val('');\n    $('#id_kabupaten_bo').val('');\n    $('#id_kecamatan_bo').val('');\n    $('#id_kelurahan_bo').val('');\n    $('#id_rt_bo').val('');\n    $('#id_rw_bo').val('');\n    $('#id_negara_bo').val('');\n    $('#manfaat1')[0].checked = false;\n    $('#manfaat2')[0].checked = false;\n    $('#manfaat3')[0].checked = false;\n    $('#manfaat4')[0].checked = false;\n    $('#manfaat5')[0].checked = false;\n    $('#manfaat_bawah').checked = false;\n    $('#admineditform-nama_bo').prop('disabled', false);\n    $('#admineditform-jenis_identitas_bo').prop('disabled', false);\n    $('#admineditform-no_identitas_bo').prop('disabled', false);\n    $('#admineditform-tempat_lahir_bo').prop('disabled', false);\n    $('#admineditform-tanggal_lahir_bo').prop('disabled', false);\n    $('#admineditform-alamat_bo').prop('disabled', false);\n    $('#admineditform-kewarganegaraan_bo').prop('disabled', false);\n    $('#admineditform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'SavePemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n}\n\nfunction edit_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#admineditform-nama_bo').val(data.nama);\n    // $('#admineditform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-no_identitas_bo').val(data.no_identitas);\n    $('#admineditform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#admineditform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#admineditform-alamat_bo').val(data.alamat);\n    // $('#admineditform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#admineditform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#admineditform-nama_bo').prop('disabled', false);\n    $('#admineditform-jenis_identitas_bo').prop('disabled', false);\n    $('#admineditform-no_identitas_bo').prop('disabled', false);\n    $('#admineditform-tempat_lahir_bo').prop('disabled', false);\n    $('#admineditform-tanggal_lahir_bo').prop('disabled', false);\n    $('#admineditform-alamat_bo').prop('disabled', false);\n    $('#admineditform-kewarganegaraan_bo').prop('disabled', false);\n    $('#admineditform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    cekCkboxBO();\n    $('#but-submit-bo').prop('name', 'EditPemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n    $('#but-submit-bo').val(selected);\n}\n\nfunction hapus_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#admineditform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#admineditform-nama_bo').val(data.nama);\n    // $('#admineditform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#admineditform-no_identitas_bo').val(data.no_identitas);\n    $('#admineditform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#admineditform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#admineditform-alamat_bo').val(data.alamat);\n    // $('#admineditform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#admineditform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    $('#id_kabupaten_bo').val(data.kabupaten_bo);\n    $('#id_kecamatan_bo').val(data.kecamatan_bo);\n    $('#id_kelurahan_bo').val(data.kelurahan_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#admineditform-nama_bo').prop('disabled', true);\n    // $('#admineditform-jenis_identitas_bo').prop('disabled',true);\n    $('#admineditform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#admineditform-no_identitas_bo').prop('disabled', true);\n    $('#admineditform-tempat_lahir_bo').prop('disabled', true);\n    $('#admineditform-tanggal_lahir_bo').prop('disabled', true);\n    $('#admineditform-alamat_bo').prop('disabled', true);\n    // $('#admineditform-kewarganegaraan_bo').prop('disabled',true);\n    $('#admineditform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#admineditform-npwp_bo').prop('disabled', true);\n    $('#id_hubungan_bo').prop('disabled', true);\n    $('#id_provinsi_bo').prop('disabled', true);\n    $('#id_kabupaten_bo').prop('disabled', true);\n    $('#id_kecamatan_bo').prop('disabled', true);\n    $('#id_kelurahan_bo').prop('disabled', true);\n    $('#id_rt_bo').prop('disabled', true);\n    $('#id_rw_bo').prop('disabled', true);\n    $('#id_negara_bo').prop('disabled', true);\n    $('#manfaat1').prop('disabled', true);\n    $('#manfaat2').prop('disabled', true);\n    $('#manfaat3').prop('disabled', true);\n    $('#manfaat4').prop('disabled', true);\n    $('#manfaat5').prop('disabled', true);\n    $('#manfaat_bawah').prop('disabled', true);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'HapusPemilikManfaat');\n    $('#but-submit-bo').html(\"Hapus\");\n    $('#but-submit-bo').val(selected);\n}\n\n$('#admineditform-b_koperasi_id').change(function () {\n    cekSekunder();\n});\n\n$('#prov_id').change(function () {\n    AjaxKab();\n});\n\n$('#kab_id').change(function () {\n    AjaxKec();\n})\n\n$('#kec_id').change(function () {\n    AjaxKel();\n})\n\n$('#simpanan_pokok-disp, #simpanan_wajib-disp, #dana_hibah-disp, #dana_cadangan-disp').change(function () {\n    HitungModal();\n});\n\n$(document).ready(function () {\n    // AjaxKab();\n    $('#cb-mengerti-manfaat').trigger('click');\n    $('#cb-mengerti-manfaat').trigger('click');\n    cekSekunder();\n    HitungModal();\n});\n\n$('#search-but-kbli').click(function () {\n    let value = $('#search-kbli').val();\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    let urlpjax;\n    if ($.urlParam('id')) {\n        urlpjax = '/admin/edit?id=' + $.urlParam('id') + '&KBLIBakumSearch[judul]=' + value;\n    }\n    else {\n        urlpjax = '/perubahan/form-perubahan?KBLIBakumSearch[judul]=' + value;\n    }\n\n    if (!$('#grid-by-jenis').hasClass(\"hidden\")) {\n        // console.log('pjax1');\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-1\",\n            timeout: 1000,\n        });\n    }\n    if (!$('#grid-all').hasClass(\"hidden\")) {\n        // console.log('pjax2');\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-2\",\n            timeout: 1000,\n        });\n    }\n});\n\n$('#search-kbli').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#cb-mengerti-manfaat').click(function () {\n    if (this.checked) {\n        $('#perpres-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#perpres-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#cb_perpres_manfaat').click(function () {\n    if ($('#cb_perpres_manfaat .checkbox label input[type=checkbox]:checked').length >= 2) {\n        $('#tabel-pemilik-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#tabel-pemilik-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#manfaat1').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat2')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat2').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat1')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat3').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat4').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat5').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\nfunction cekCkboxBO() {\n    if ($('#manfaat1')[0].checked || $('#manfaat2')[0].checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n        return;\n    }\n\n    if ($('#manfaat3')[0].checked || $('#manfaat4')[0].checked || $('#manfaat5')[0].checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n        return;\n    }\n}\n\n$('#but-submit-bo').click(function (e) {\n    let jenis_button = $(this).html();\n\n    if(jenis_button == \"Hapus\") {\n        return true;\n    }\n    // validasi form\n    var nama = $('#admineditform-nama_bo')[0].value;\n    var jenis_identitas = $('input:radio[name=\"AdminEditForm[jenis_identitas_bo]\"]:checked').length;\n    var no_identitas = $('#admineditform-no_identitas_bo')[0].value;\n    var tempat_lahir = $('#admineditform-tempat_lahir_bo')[0].value;\n    var tanggal_lahir = $('#admineditform-tanggal_lahir_bo')[0].value;\n    var kewarganegaraan = $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"]:checked').length;\n    var alamat = $('#admineditform-alamat_bo')[0].value;\n    var npwp = $('#admineditform-npwp_bo')[0].value;\n    var provinsi = $('#id_provinsi_bo').val();\n    var kabupaten = $('#id_kabupaten_bo').val();\n    var kecamatan = $('#id_kecamatan_bo').val();\n    var kelurahan = $('#id_kelurahan_bo').val();\n    var rt = $('#id_rt_bo').val();\n    var rw = $('#id_rw_bo').val();\n    var negara = $('#id_negara_bo').val();\n    var hubungan_bo = $('#id_hubungan_bo').val();\n\n    if (kewarganegaraan > 0) {\n        let kw = $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"]:checked')[0].value;\n\n        // JIKA WNA\n        if (kw == 0) {\n\n            if (!negara) {\n                $('#err-bo').html('Negara Asal Wajib Di Isi.')\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n\n        }\n        else {\n\n            if (!provinsi || !kecamatan || !kabupaten || !kelurahan) {\n                $('#err-bo').html('Data Wilayah Wajib Di isi.');\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n        }\n    }\n\n\n    if (nama == '' || jenis_identitas <= 0 || no_identitas == '' || tempat_lahir == '' || tanggal_lahir == '' || kewarganegaraan <= 0 || alamat == '' || npwp == '' || hubungan_bo == '') {\n        $('#err-bo').html('Kolom Nama, Jenis Identitas, No Identitas, Tanggal Lahir, Alamat Bo, Hubungan Bo, Kewarganegaraan dan NPWP Wajib Di isi.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    // Checkbox manfaat bawah\n    var err = $('#error-manfaat_bawah');\n    if (!$('#manfaat_bawah')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist persetujuan.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n\n    // Cehckbox manfaat atas\n    var err = $('#error-manfaat_atas');\n    if (!$('#manfaat1')[0].checked && !$('#manfaat2')[0].checked && !$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist salah satu kriteria.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n});\n\n$('#admineditform-jangka_waktu').change(function () {\n    if (this.value == 'Terbatas') {\n        $('#jumlah_jangka_waktu').removeClass('hidden');\n    }\n    else {\n        $('#jumlah_jangka_waktu').addClass('hidden');\n    }\n});\n\n$('#perubahan_no_pesan').change(function () {\n    if (this.value == '') {\n        $('#hint-no_pesan').html(\"Klik <a href='/pesan-nama' target='_BLANK'>disini</a> untuk melakukan proses pesan nama koperasi\");\n        $('#hint-no_pesan').css(\"color\", \"red\");\n        return;\n    }\n    $.ajax({\n        url: \"/perubahan/get-no-pesan\",\n        type: \"POST\",\n        data: {\n            'no_pesan': this.value,\n        },\n        success: function (response) {\n            var res = JSON.parse(response);\n            if (res.status == 200) {\n                var nama_kop = res.data.full_nama;\n                $('#hint-no_pesan').html(\"Berhasil Ditemukan! Koperasi dengan nama '\" + nama_kop + \"'\");\n                $('#hint-no_pesan').css(\"color\", \"green\");\n            }\n            else {\n                $('#hint-no_pesan').html(\"Nomor Pesan Tidak Ditemukan. Mohon cek Nomor pesan anda kembali.\");\n                $('#hint-no_pesan').css(\"color\", \"red\");\n            }\n        }\n    });\n});\n\n$('#jenis_kop').change(function () {\n    var id = this.value;\n    $.ajax({\n        method: 'GET',\n        url: '/admin/get-child-jenis?id=' + id,\n        success: function (response) {\n            var res = JSON.parse(response);\n            if (res.count > 0) {\n                $('.field-subjenis_kop').removeClass('hidden');\n                let opt = [];\n                $.each(res.data, function (i, item) {\n                    opt.push($('<option />', { value: item.id, text: item.nama }));\n                });\n                $('#subjenis_kop').find('option').remove().end().append(opt);\n                $.urlParam = function (name) {\n                    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (!results) {\n                        return false;\n                    }\n                    return results[1] || 0;\n                }\n                if ($.urlParam('id')) {\n                    urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n                }\n                else {\n                    // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n                }\n                $.pjax({\n                    url: urlpjax2,\n                    container: \"#kv-1\",\n                    timeout: 1000,\n                });\n            }\n            else {\n                $('.field-subjenis_kop').addClass('hidden');\n                $('#subjenis_kop').find('option').remove().end();\n\n                $.urlParam = function (name) {\n                    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (!results) {\n                        return false;\n                    }\n                    return results[1] || 0;\n                }\n                if ($.urlParam('id')) {\n                    urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + id;\n                }\n                else {\n                    // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + id;\n                }\n                $.pjax({\n                    url: urlpjax2,\n                    container: \"#kv-1\",\n                    timeout: 1000,\n                });\n            }\n        }\n    });\n\n    if (this.value == 6) {\n        $('#admineditform-m_pola_id').prop('disabled', false);\n    }\n    else {\n        $('#admineditform-m_pola_id').prop('disabled', true);\n        $('#admineditform-m_pola_id').val(1);\n    }\n});\n\n$('#subjenis_kop').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n    }\n    else {\n        // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#admineditform-m_pola_id').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value + '&KBLISearch[bentuk]=' + $('#admineditform-b_koperasi_id')[0].value;\n    }\n    else {\n        // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#admineditform-b_koperasi_id').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/admin/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value + '&KBLISearch[bentuk]=' + $('#admineditform-b_koperasi_id')[0].value;\n    }\n    else {\n        // urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#admineditform-m_pola_id')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#simpanan_pokok-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#simpanan_wajib-disp').focus();\n    }\n});\n\n$('#simpanan_wajib-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_hibah-disp').focus();\n    }\n});\n\n$('#dana_hibah-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_cadangan-disp').focus();\n    }\n});\n\n$('#dana_cadangan-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#admineditform-periode_pengurus_awal').focus();\n    }\n});\n\n$('#admineditform-periode_pengurus_awal').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$('#admineditform-periode_pengurus_akhir').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$(document).keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#but-submit-bakum').click(() => {\n\n    let nama_koperasi = $('#admineditform-nama_bakum_kop')[0].value;\n    let no_sk = $('#admineditform-sk_bakum_kop')[0].value;\n\n    if (nama_koperasi == '' || no_sk == '') {\n        $('#err-bakum-gabung').html(\"Kolom Nama Koperasi dan Nomor SK Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\n$('#but-submit-bakum-pisah').click(() => {\n\n    let no_pesan = $('#admineditform-no_pesan_pisah')[0].value;\n\n\n    if (no_pesan == '') {\n        $('#err-bakum-pisah').html(\"Kolom Nomor Pesan Wajib Di Isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\n$('#but-submit-pengurus').click(() => {\n    let nik = $('#admineditform-nik_anggota')[0].value;\n    let nama = $('#admineditform-nama_anggota')[0].value;\n    let jenis_kelamin = $('#admineditform-jenis_kelamin_anggota')[0].value;\n    let jabatan = $('#admineditform-jabatan_anggota')[0].value;\n    let hp = $('#admineditform-no_hp_anggota')[0].value;\n\n    if (nik == '' || nama == '' || jenis_kelamin == '' || jabatan == '' || hp == '') {\n        $('#err-pengawas-pengurus').html(\"Kolom NIK, Nama, Jenis Kelamin, No HP dan Jabatan Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\nfunction isNumber(evt) {\n    var iKeyCode = (evt.which) ? evt.which : evt.keyCode\n    if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))\n        return false;\n\n    return true;\n}\n\nfunction AjaxKabBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_provinsi_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#id_kabupaten_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                console.log(replaceValue);\n                DDKab.val(replaceValue);\n            }\n            else {\n                AjaxKecBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKecBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kabupaten_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#id_kecamatan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKec.val(replaceValue);\n            }\n            else {\n                AjaxKelBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKelBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kecamatan_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#id_kelurahan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKel.val(replaceValue);\n            }\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\n$('input[name=\"AdminEditForm[kewarganegaraan_bo]\"]').change(function () {\n    let pilihan = $('input[name=\"AdminEditForm[kewarganegaraan_bo]\"]:checked');\n    let pilihan_jenis = $('input:radio[name*=\"jenis_identitas_bo\"]:checked').val();\n\n    if (pilihan.length > 0) {\n        let isiPilihan = pilihan[0].value;\n\n        if (isiPilihan == 0) {\n            toggleLayoutWna(true);\n            toggleLayoutWni(false);\n            if (pilihan_jenis != 3) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"3\"]').trigger('click');\n            }\n        }\n        else {\n            toggleLayoutWni(true);\n            toggleLayoutWna(false);\n            if (pilihan_jenis != 1 || pilihan_jenis != 2) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"1\"]').trigger('click');\n            }\n        }\n    }\n    else {\n        toggleLayoutWni(false);\n        toggleLayoutWna(false);\n    }\n});\n\nfunction toggleLayoutWni(status) {\n    if (status) {\n        $('#layout_wni').removeClass('hide');\n    }\n    else {\n        $('#layout_wni').addClass('hide');\n    }\n}\n\nfunction toggleLayoutWna(status) {\n    if (status) {\n        $('#layout_wna').removeClass('hide');\n    }\n    else {\n        $('#layout_wna').addClass('hide');\n    }\n}\n\n\n\n$('#modal-pemilik-manfaat').on('show.bs.modal', function () {\n    $('input[name=\"AdminEditForm[kewarganegaraan_bo]\"]').trigger(\"change\");\n});\n\n$('input:radio[name=\"AdminEditForm[jenis_identitas_bo]\"]').change(function () {\n    let pilihan = $('input:radio[name=\"AdminEditForm[jenis_identitas_bo]\"]:checked').val();\n\n    if (pilihan == 1 || pilihan == 2) {\n        $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"][value=\"1\"]').trigger('click');\n    }\n    else {\n        $('input:radio[name=\"AdminEditForm[kewarganegaraan_bo]\"][value=\"0\"]').trigger('click');\n    }\n\n});\n\nvar array_kbli = [];\n$(document).on('click', 'input[name=\"cek_kbli[]\"]', function() {\n    array_kbli.push($(this).val());\n    $(this).checked = true;\n    $('#cek_kbli_value').val(array_kbli);\n});\n\n\n--- File Index 69: web/js/admin/list-pesan-nama.js ---\n$('#but-submit-tgl').click(function(e) {\n    // var err = $('#err-tanggal_awal');\n    // if(!$('#tanggal_awal').val()) {\n    //     e.preventDefault();\n    //     err.removeClass(\"hidden\");\n    // }\n    // else {\n    //     err.addClass(\"hidden\");\n    // }\n\n    // var err = $('#err-tanggal_akhir');\n    // if(!$('#tanggal_akhir').val()) {\n    //     e.preventDefault();\n    //     err.removeClass(\"hidden\");\n    // }\n    // else {\n    //     err.addClass(\"hidden\");\n    // }\n});\n\n--- File Index 70: web/js/global/logSyarat.js ---\n$(function(){\n\n    $(document).on('click', 'input[type=checkbox], input[type=radio]', function(){\n        var teks = '',\n        timer,\n        doingajax = null, \n        ini = $(this), \n        cek = this.checked, \n        tmp;\n        if(ini.get(0) && ini.get(0).nextSibling !== undefined){\n            tmp = ini.get(0).nextSibling;\n            if(tmp !== null)\n                teks += tmp.textContent.replace(/^\\s+|\\s+$|\\s{2,}/mg, '');\n        }\n        while(teks === ''){\n            ini = ini.parent();\n            teks += ini.text().replace(/^\\s+|\\s+$|\\s{2,}/mg, '');\n        }\n\n        clearTimeout(timer);\n        timer : setTimeout(function(){\n          if(doingajax !== null)\n            doingajax.abort();\n          \n          doingajax = $.ajax({\n            url:  '/service/curl-log-syarat',\n            type: 'post',\n            data: 'urls='+location.href+'&stats='+cek+'&texts='+teks,\n            dataType: 'json',\n          });\n        }, 1000);\n\n        //rikues donk\n        \n    });\n});\n\n--- File Index 71: web/js/new-form/form.js ---\n\n\n--- File Index 72: web/js/pendirian/_step2.js ---\n\n\n--- File Index 73: web/js/pendirian/form-pendirian.js ---\nfunction add_json_bakum() {\n    $('#pendirianform-nama_bakum_kop').val('');\n    $('#pendirianform-sk_bakum_kop').val('');\n    $('#pendirianform-npwp_bakum_kop').val('');\n    $('#pendirianform-file_sk_bakum_kop').val('');\n    $('#pendirianform-hidden_file_sk_bakum_kop').val('');\n    $('#pendirianform-nama_bakum_kop').prop('disabled', false);\n    $('#pendirianform-sk_bakum_kop').prop('disabled', false);\n    $('#pendirianform-npwp_bakum_kop').prop('disabled', false);\n    $('#pendirianform-hidden_file_sk_bakum_kop').prop('disabled', false);\n    $('#but-submit-bakum').prop('name', 'SaveBakumSekunder');\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction edit_json_bakum(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#pendirianform-json_bakum_sekunder').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#pendirianform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#pendirianform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#pendirianform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    $('#pendirianform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#pendirianform-nama_bakum_kop').prop('disabled', false);\n    $('#pendirianform-sk_bakum_kop').prop('disabled', false);\n    $('#pendirianform-npwp_bakum_kop').prop('disabled', false);\n    $('#pendirianform-hidden_file_sk_bakum_kop').prop('disabled', false);\n    $('#but-submit-bakum').prop('name', 'EditBakumSekunder');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction hapus_json_bakum(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#pendirianform-json_bakum_sekunder').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#pendirianform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#pendirianform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#pendirianform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    $('#pendirianform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#pendirianform-nama_bakum_kop').prop('disabled', true);\n    $('#pendirianform-sk_bakum_kop').prop('disabled', true);\n    $('#pendirianform-npwp_bakum_kop').prop('disabled', true);\n    $('#pendirianform-hidden_file_sk_bakum_kop').prop('disabled', true);\n    $('#but-submit-bakum').prop('name', 'HapusBakumSekunder');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html('Hapus');\n    // $('#but-submit-bakum').submit();\n}\n\nfunction toogleBakumSekunder(status) {\n    if (status) {\n        $('#panel-badan-hukum').removeClass('hidden');\n    }\n    else {\n        $('#panel-badan-hukum').addClass('hidden');\n    }\n}\n\nfunction AjaxKab() {\n    $.ajax({\n        method: 'POST',\n        url: '/pendirian/get-child-wilayah?id=' + $('#prov_id').val() + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#kab_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            AjaxKec();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKec() {\n    $.ajax({\n        method: 'POST',\n        url: '/pendirian/get-child-wilayah?id=' + $('#kab_id').val() + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#kec_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            AjaxKel();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKel() {\n    $.ajax({\n        method: 'POST',\n        url: '/pendirian/get-child-wilayah?id=' + $('#kec_id').val() + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            if(response != \"\") {\n                let res = JSON.parse(response);\n                let DDKel = $('#kel_id');\n                let opt = [];\n                opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n                $.each(res, function (i, item) {\n                    opt.push($('<option />', { value: item.id, text: item.nama }));\n                });\n                DDKel.find('option').remove().end().append(opt);\n            }\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction toogleAllWilayah(status) {\n    if (!status) {\n        $('#prov_id').prop('disabled', true);\n        $('#kab_id').prop('disabled', true);\n        $('#kec_id').prop('disabled', true);\n        $('#kel_id').prop('disabled', true);\n    }\n    else {\n        $('#prov_id').prop('disabled', false);\n        $('#kab_id').prop('disabled', false);\n        $('#kec_id').prop('disabled', false);\n        $('#kel_id').prop('disabled', false);\n    }\n}\n\nfunction HitungModal() {\n    let simpok = $('#simpanan_pokok').val() ? $('#simpanan_pokok').val() : 0;\n    let simjib = $('#simpanan_wajib').val() ? $('#simpanan_wajib').val() : 0;\n    let danhib = $('#dana_hibah').val() ? $('#dana_hibah').val() : 0;\n    let danacad = $('#dana_cadangan').val() ? $('#dana_cadangan').val() : 0;\n    let total = parseInt(simpok) + parseInt(simjib) + parseInt(danhib) + parseInt(danacad);\n    $('#modal-usaha').val(total);\n    $('#modal-usaha-disp').val(total);\n}\n\nfunction add_json_usaha_utama() {\n    $('#grid-by-jenis').removeClass(\"hidden\");\n    $('#grid-all').addClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_pendukung() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_tambahan() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction hapus_json_usaha_utama(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(yakin == false) {\n    //     event.preventDefault();\n    //     return false;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction resetSearch() {\n    $('#search-kbli').val('');\n    $('#search-but-kbli').trigger('click');\n}\n\nfunction hapus_json_usaha_pendukung(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(yakin == false) {\n    //     event.preventDefault();\n    //     return false;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction hapus_json_usaha_tambahan(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(yakin == false) {\n    //     event.preventDefault();\n    //     return false;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction add_json_pengawas_pengurus() {\n    $('#pendirianform-status_anggota').val(1);\n    $('#pendirianform-nik_anggota').val('');\n    $('#pendirianform-nama_anggota').val('');\n    $('#pendirianform-jenis_kelamin_anggota').val('');\n    $('#pendirianform-jabatan_anggota').val('');\n    $('#pendirianform-npwp_anggota').val('');\n    $('#pendirianform-no_hp_anggota').val('');\n    $('#pendirianform-status_anggota').prop('disabled', false);\n    $('#pendirianform-nik_anggota').prop('disabled', false);\n    $('#pendirianform-nama_anggota').prop('disabled', false);\n    $('#pendirianform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#pendirianform-jabatan_anggota').prop('disabled', false);\n    $('#pendirianform-npwp_anggota').prop('disabled', false);\n    $('#pendirianform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'SavePengawasPengurus');\n    $('#but-submit-pengurus').html(\"Simpan\");\n    $('#modal-pengawas-pengurus').modal();\n}\n\nfunction edit_json_pengawas_pengurus(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#pendirianform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#pendirianform-status_anggota').val(data.status);\n    $('#pendirianform-nik_anggota').val(data.nik);\n    $('#pendirianform-nama_anggota').val(data.nama);\n    $('#pendirianform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#pendirianform-jabatan_anggota').val(data.jabatan);\n    $('#pendirianform-npwp_anggota').val(data.npwp);\n    $('#pendirianform-no_hp_anggota').val(data.no_hp);\n    $('#pendirianform-status_anggota').prop('disabled', false);\n    $('#pendirianform-nik_anggota').prop('disabled', false);\n    $('#pendirianform-nama_anggota').prop('disabled', false);\n    $('#pendirianform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#pendirianform-jabatan_anggota').prop('disabled', false);\n    $('#pendirianform-npwp_anggota').prop('disabled', false);\n    $('#pendirianform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'EditPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Simpan\");\n}\n\nfunction hapus_json_pengawas_pengurus(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#pendirianform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#pendirianform-status_anggota').val(data.status);\n    $('#pendirianform-nik_anggota').val(data.nik);\n    $('#pendirianform-nama_anggota').val(data.nama);\n    $('#pendirianform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#pendirianform-jabatan_anggota').val(data.jabatan);\n    $('#pendirianform-npwp_anggota').val(data.npwp);\n    $('#pendirianform-no_hp_anggota').val(data.no_hp);\n    $('#pendirianform-status_anggota').prop('disabled', true);\n    $('#pendirianform-nik_anggota').prop('disabled', true);\n    $('#pendirianform-nama_anggota').prop('disabled', true);\n    $('#pendirianform-jenis_kelamin_anggota').prop('disabled', true);\n    $('#pendirianform-jabatan_anggota').prop('disabled', true);\n    $('#pendirianform-npwp_anggota').prop('disabled', true);\n    $('#pendirianform-no_hp_anggota').prop('disabled', true);\n    $('#but-submit-pengurus').prop('name', 'HapusPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Hapus\");\n    // $('#but-submit-pengurus').submit();\n}\n\nfunction cekSekunder() {\n    let pilihan = $('#pendirianform-b_koperasi_id')[0].options[$('#pendirianform-b_koperasi_id')[0].options.selectedIndex].text.toUpperCase();\n    let hint = 'Jumlah Anggota yang diinput sekurang-kurangnya ';\n    if (pilihan == 'SEKUNDER') {\n        toogleBakumSekunder(true);\n        $('#hint_jumlah_peserta_rapat').text(hint + '3 orang');\n    }\n    else {\n        toogleBakumSekunder(false);\n        $('#hint_jumlah_peserta_rapat').text(hint + '9 orang')\n    }\n}\n\nfunction add_json_pemilik_manfaat() {\n    $('#pendirianform-nama_bo').val('');\n    // $('#pendirianform-jenis_identitas_bo').val('');\n    $('#pendirianform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#pendirianform-no_identitas_bo').val('');\n    $('#pendirianform-tempat_lahir_bo').val('');\n    $('#pendirianform-tanggal_lahir_bo').val('');\n    $('#pendirianform-alamat_bo').val('');\n    // $('#pendirianform-kewarganegaraan_bo').val('');\n    $('#pendirianform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#pendirianform-npwp_bo').val('');\n    $('#id_hubungan_bo').val('');\n    $('#id_provinsi_bo').val('');\n    $('#id_kabupaten_bo').val('');\n    $('#id_kecamatan_bo').val('');\n    $('#id_kelurahan_bo').val('');\n    $('#id_rt_bo').val('');\n    $('#id_rw_bo').val('');\n    $('#id_negara_bo').val('');\n    $('#manfaat1')[0].checked = false;\n    $('#manfaat2')[0].checked = false;\n    $('#manfaat3')[0].checked = false;\n    $('#manfaat4')[0].checked = false;\n    $('#manfaat5')[0].checked = false;\n    $('#manfaat_bawah').checked = false;\n    $('#pendirianform-nama_bo').prop('disabled', false);\n    $('#pendirianform-jenis_identitas_bo').prop('disabled', false);\n    $('#pendirianform-no_identitas_bo').prop('disabled', false);\n    $('#pendirianform-tempat_lahir_bo').prop('disabled', false);\n    $('#pendirianform-tanggal_lahir_bo').prop('disabled', false);\n    $('#pendirianform-alamat_bo').prop('disabled', false);\n    $('#pendirianform-kewarganegaraan_bo').prop('disabled', false);\n    $('#pendirianform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'SavePemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n}\n\nfunction edit_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#pendirianform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    console.log(data);\n    $('#pendirianform-nama_bo').val(data.nama);\n    // $('#pendirianform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#pendirianform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#pendirianform-no_identitas_bo').val(data.no_identitas);\n    $('#pendirianform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#pendirianform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#pendirianform-alamat_bo').val(data.alamat);\n    // $('#pendirianform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#pendirianform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#pendirianform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#pendirianform-nama_bo').prop('disabled', false);\n    $('#pendirianform-jenis_identitas_bo').prop('disabled', false);\n    $('#pendirianform-no_identitas_bo').prop('disabled', false);\n    $('#pendirianform-tempat_lahir_bo').prop('disabled', false);\n    $('#pendirianform-tanggal_lahir_bo').prop('disabled', false);\n    $('#pendirianform-alamat_bo').prop('disabled', false);\n    $('#pendirianform-kewarganegaraan_bo').prop('disabled', false);\n    $('#pendirianform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    cekCkboxBO();\n    $('#but-submit-bo').prop('name', 'EditPemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n    $('#but-submit-bo').val(selected);\n}\n\nfunction hapus_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#pendirianform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#pendirianform-nama_bo').val(data.nama);\n    // $('#pendirianform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#pendirianform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#pendirianform-no_identitas_bo').val(data.no_identitas);\n    $('#pendirianform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#pendirianform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#pendirianform-alamat_bo').val(data.alamat);\n    // $('#pendirianform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#pendirianform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#pendirianform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    $('#id_kabupaten_bo').val(data.kabupaten_bo);\n    $('#id_kecamatan_bo').val(data.kecamatan_bo);\n    $('#id_kelurahan_bo').val(data.kelurahan_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#pendirianform-nama_bo').prop('disabled', true);\n    // $('#pendirianform-jenis_identitas_bo').prop('disabled',true);\n    $('#pendirianform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#pendirianform-no_identitas_bo').prop('disabled', true);\n    $('#pendirianform-tempat_lahir_bo').prop('disabled', true);\n    $('#pendirianform-tanggal_lahir_bo').prop('disabled', true);\n    $('#pendirianform-alamat_bo').prop('disabled', true);\n    // $('#pendirianform-kewarganegaraan_bo').prop('disabled',true);\n    $('#pendirianform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#pendirianform-npwp_bo').prop('disabled', true);\n    $('#id_hubungan_bo').prop('disabled', true);\n    $('#id_provinsi_bo').prop('disabled', true);\n    $('#id_kabupaten_bo').prop('disabled', true);\n    $('#id_kecamatan_bo').prop('disabled', true);\n    $('#id_kelurahan_bo').prop('disabled', true);\n    $('#id_rt_bo').prop('disabled', true);\n    $('#id_rw_bo').prop('disabled', true);\n    $('#id_negara_bo').prop('disabled', true);\n    $('#manfaat1').prop('disabled', true);\n    $('#manfaat2').prop('disabled', true);\n    $('#manfaat3').prop('disabled', true);\n    $('#manfaat4').prop('disabled', true);\n    $('#manfaat5').prop('disabled', true);\n    $('#manfaat_bawah').prop('disabled', true);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'HapusPemilikManfaat');\n    $('#but-submit-bo').html(\"Hapus\");\n    $('#but-submit-bo').val(selected);\n}\n\n$('#pendirianform-b_koperasi_id').change(function () {\n    urlpjax2 = '/pendirian/form-pendirian' + '?KBLISearch[bentuk]=' + $('#pendirianform-b_koperasi_id')[0].value;\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n\n    cekSekunder();\n});\n\n$('#prov_id').change(function () {\n    AjaxKab();\n});\n\n$('#kab_id').change(function () {\n    AjaxKec();\n})\n\n$('#kec_id').change(function () {\n    AjaxKel();\n})\n\n$('#simpanan_pokok-disp, #simpanan_wajib-disp, #dana_hibah-disp, #dana_cadangan-disp').change(function () {\n    HitungModal();\n});\n\n$(document).ready(function () {\n    // AjaxKab();\n    $('#cb-mengerti-manfaat').trigger('click');\n    $('#cb-mengerti-manfaat').trigger('click');\n    $('#cb-simpan-manfaat').trigger('click');\n    $('#cb-simpan-manfaat').trigger('click');\n    cekSekunder();\n    HitungModal();\n});\n\n$('#search-but-kbli').click(function () {\n    let value = $('#search-kbli').val();\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    let urlpjax;\n    if ($.urlParam('id')) {\n        urlpjax = '/pendirian/edit?id=' + $.urlParam('id') + '&KBLIBakumSearch[judul]=' + value;\n    }\n    else {\n        urlpjax = '/pendirian/form-pendirian?KBLIBakumSearch[judul]=' + value;\n    }\n\n    if (!$('#grid-by-jenis').hasClass(\"hidden\")) {\n        // console.log('pjax1');\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-1\",\n            timeout: 1000,\n        });\n    }\n    if (!$('#grid-all').hasClass(\"hidden\")) {\n        // console.log('pjax2');\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-2\",\n            timeout: 1000,\n        });\n    }\n});\n\n$('#search-kbli').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#cb-mengerti-manfaat').click(function () {\n    if (this.checked) {\n        $('#perpres-manfaat').removeClass(\"hidden\");\n        $('#simpan-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#perpres-manfaat').addClass(\"hidden\");\n        $('#simpan-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#cb_perpres_manfaat').click(function () {\n    if ($('#cb_perpres_manfaat .checkbox label input[type=checkbox]:checked').length >= 2) {\n        $('#tabel-pemilik-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#tabel-pemilik-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#manfaat1').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat2')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat2').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat1')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat3').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat4').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat5').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\nfunction cekCkboxBO() {\n    if ($('#manfaat1')[0].checked || $('#manfaat2')[0].checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n        return;\n    }\n\n    if ($('#manfaat3')[0].checked || $('#manfaat4')[0].checked || $('#manfaat5')[0].checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n        return;\n    }\n}\n\n$('#but-submit-bo').click(async function (e) {\n    let btnName = $(this).attr('name');\n    let jenis_button = $(this).html();\n\n    if(jenis_button == \"Hapus\") {\n        return true;\n    }\n    // validasi form\n    var nama = $('#pendirianform-nama_bo')[0].value;\n    var jenis_identitas = $('input:radio[name=\"PendirianForm[jenis_identitas_bo]\"]:checked').length;\n    var selected_jenis_identitas = $('input:radio[name=\"PendirianForm[jenis_identitas_bo]\"]:checked').val();\n    var no_identitas = $('#pendirianform-no_identitas_bo')[0].value;\n    var tempat_lahir = $('#pendirianform-tempat_lahir_bo')[0].value;\n    var tanggal_lahir = $('#pendirianform-tanggal_lahir_bo')[0].value;\n    var kewarganegaraan = $('input:radio[name=\"PendirianForm[kewarganegaraan_bo]\"]:checked').length;\n    var alamat = $('#pendirianform-alamat_bo')[0].value;\n    var npwp = $('#pendirianform-npwp_bo')[0].value;\n    var provinsi = $('#id_provinsi_bo').val();\n    var kabupaten = $('#id_kabupaten_bo').val();\n    var kecamatan = $('#id_kecamatan_bo').val();\n    var kelurahan = $('#id_kelurahan_bo').val();\n    var rt = $('#id_rt_bo').val();\n    var rw = $('#id_rw_bo').val();\n    var negara = $('#id_negara_bo').val();\n    var hubungan_bo = $('#id_hubungan_bo').val();\n\n    \n    if((btnName == 'SavePemilikManfaat' || btnName == 'EditPemilikManfaat') && selected_jenis_identitas == 1){\n        e.preventDefault();\n    }\n\n    $('#err_nik').html('');\n    if(selected_jenis_identitas == 1){\n        let noKtp = no_identitas;\n        let errorMessage = \"\";\n\n        if (!noKtp) { // check jika noKtp Kosong\n            errorMessage = \"Nomor KTP tidak boleh kosong.\";\n        }else if (!/^\\d+$/.test(noKtp)) { // check jika noKtp hanya berisi angka\n            errorMessage = \"Nomor KTP hanya boleh berisi angka.\";\n        } else if (noKtp.length !== 16) { // check jika noKtp panjangnya tidak sama dengan 16\n            errorMessage = \"Nomor KTP harus terdiri dari 16 digit.\";\n        } else if (!/^[1-9]\\d*$/.test(noKtp)) { // check jika noKtp di awali angka 0\n            errorMessage = '1 karakter pertama pada NIK tidak boleh berupa \"0\" ';\n        } else if (noKtp.substr(-4) === \"0000\") { // check jika noKtp 4 digit terakhir 0 \n            errorMessage = '4 karakter terakhir pada NIK tidak boleh berupa \"0000\"';\n        }\n\n        if(errorMessage){\n            $('#err_nik').html(errorMessage);\n            return false;\n        }\n    }\n\n    if (kewarganegaraan > 0) {\n        let kw = $('input:radio[name=\"PendirianForm[kewarganegaraan_bo]\"]:checked')[0].value;\n\n        // JIKA WNA\n        if (kw == 0) {\n\n            if (!negara) {\n                $('#err-bo').html('Negara Asal Wajib Di Isi.')\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n\n        }\n        else {\n\n            if (!provinsi || !kecamatan || !kabupaten || !kelurahan) {\n                $('#err-bo').html('Data Wilayah Wajib Di isi.');\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n        }\n    }\n\n    if (nama == '' || jenis_identitas <= 0 || no_identitas == '' || tempat_lahir == '' || tanggal_lahir == '' || kewarganegaraan <= 0 || alamat == '' || npwp == '' || hubungan_bo == '') {\n        $('#err-bo').html('Kolom Nama, Jenis Identitas, No Identitas, Tanggal Lahir, Alamat Bo, Hubungan Bo, Kewarganegaraan dan NPWP Wajib Di isi.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    if (selected_jenis_identitas == 1 && no_identitas.length < 16) { // NIK minimum 16\n        $('#err-bo').html('NIK minimum 16 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    } else if (selected_jenis_identitas == 2 && no_identitas.length < 13) { // SIM minimum 13\n        $('#err-bo').html('SIM minimum 13 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    } else if (selected_jenis_identitas == 3 && no_identitas.length < 8) { // PASSPOR minimum 8\n        $('#err-bo').html('PASPOR minimum 8 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    if (npwp.length < 15) { // NPWP minimum 15\n        $('#err-bo').html('NPWP minimum 15 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    // Checkbox manfaat bawah\n    var err = $('#error-manfaat_bawah');\n    if (!$('#manfaat_bawah')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist persetujuan.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n\n    // Cehckbox manfaat atas\n    var err = $('#error-manfaat_atas');\n    if (!$('#manfaat1')[0].checked && !$('#manfaat2')[0].checked && !$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist salah satu kriteria.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n    \n    if(btnName == 'SavePemilikManfaat' || btnName == 'EditPemilikManfaat'){\n        if(selected_jenis_identitas == 1){\n            var checkDukcapil = 1;\n            await $.ajax({\n                url: \"/api/dukcapil/validasi-data\",\n                type: \"POST\",\n                data: {\n                    nama: nama,\n                    nik: no_identitas,\n                },\n                success: function(response) {\n                    if (response.status != 1) {\n                        checkDukcapil = 0;\n        \n                        let message = response.data;\n                        let errorMessage = \"<div class='alert alert-danger'><ul>\";\n                        for (let key in message) {\n                            errorMessage += \"<li>\" + message[key] + \"</li>\";\n                        }\n                        errorMessage += '</ul></div>';\n        \n                        $('#err-dukcapil-message').html(errorMessage);\n                    }\n                },\n                error: function(response) {\n                    checkDukcapil = 0;\n                    $('#err-dukcapil-message').html(\"<div class='alert alert-danger'>Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi</div>\");\n                }\n            });\n        \n            if (!checkDukcapil) {\n                return false;\n            }\n\n            $(this).submit();\n        }\n    }\n});\n\n$('#pendirianform-jangka_waktu').change(function () {\n    if (this.value == 'Terbatas') {\n        $('#jumlah_jangka_waktu').removeClass('hidden');\n    }\n    else {\n        $('#jumlah_jangka_waktu').addClass('hidden');\n    }\n})\n\n$('#simpanan_pokok-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#simpanan_wajib-disp').focus();\n    }\n});\n\n$('#simpanan_wajib-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_hibah-disp').focus();\n    }\n});\n\n$('#dana_hibah-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_cadangan-disp').focus();\n    }\n});\n\n$('#dana_cadangan-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#admineditform-periode_pengurus_awal').focus();\n    }\n});\n\n$('#pendirianform-periode_pengurus_awal').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$('#pendirianform-periode_pengurus_akhir').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$(document).keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#but-submit-bakum').click(() => {\n\n    let nama_koperasi = $('#pendirianform-nama_bakum_kop')[0].value;\n    let no_sk = $('#pendirianform-sk_bakum_kop')[0].value;\n    let npwp = $('#pendirianform-npwp_bakum_kop')[0].value;\n\n    if (nama_koperasi == '' || no_sk == '' || npwp == '') {\n        $('#err-bakum-sekunder').html(\"Kolom Nama Koperasi, Nomor SK dan NPWP Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\n$('#but-submit-pengurus').click(() => {\n    let nik = $('#pendirianform-nik_anggota')[0].value;\n    let nama = $('#pendirianform-nama_anggota')[0].value;\n    let jenis_kelamin = $('#pendirianform-jenis_kelamin_anggota')[0].value;\n    let jabatan = $('#pendirianform-jabatan_anggota')[0].value;\n    let hp = $('#pendirianform-no_hp_anggota')[0].value;\n\n    if (nik == '' || nama == '' || jenis_kelamin == '' || jabatan == '' || hp == '') {\n        $('#err-pengawas-pengurus').html(\"Kolom NIK, Nama, Jenis Kelamin, No HP dan Jabatan Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\nfunction isNumber(evt) {\n    var iKeyCode = (evt.which) ? evt.which : evt.keyCode\n    if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))\n        return false;\n\n    return true;\n}\n\n\nfunction AjaxKabBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_provinsi_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#id_kabupaten_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                console.log(replaceValue);\n                DDKab.val(replaceValue);\n            }\n            else {\n                AjaxKecBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKecBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kabupaten_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#id_kecamatan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKec.val(replaceValue);\n            }\n            else {\n                AjaxKelBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKelBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kecamatan_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#id_kelurahan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKel.val(replaceValue);\n            }\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\n$('input[name=\"PendirianForm[kewarganegaraan_bo]\"]').change(function () {\n    let pilihan = $('input[name=\"PendirianForm[kewarganegaraan_bo]\"]:checked');\n    let pilihan_jenis = $('input:radio[name*=\"jenis_identitas_bo\"]:checked').val();\n\n    if (pilihan.length > 0) {\n        let isiPilihan = pilihan[0].value;\n\n        if (isiPilihan == 0) {\n            toggleLayoutWna(true);\n            toggleLayoutWni(false);\n            if (pilihan_jenis != 3) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"3\"]').trigger('click');\n            }\n        }\n        else {\n            toggleLayoutWni(true);\n            toggleLayoutWna(false);\n            if (pilihan_jenis != 1) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"1\"]').trigger('click');\n            }\n        }\n    }\n    else {\n        toggleLayoutWni(false);\n        toggleLayoutWna(false);\n    }\n});\n\nfunction toggleLayoutWni(status) {\n    if (status) {\n        $('#layout_wni').removeClass('hide');\n    }\n    else {\n        $('#layout_wni').addClass('hide');\n    }\n}\n\nfunction toggleLayoutWna(status) {\n    if (status) {\n        $('#layout_wna').removeClass('hide');\n    }\n    else {\n        $('#layout_wna').addClass('hide');\n    }\n}\n\n\n\n$('#modal-pemilik-manfaat').on('show.bs.modal', function () {\n    $('input[name=\"PendirianForm[kewarganegaraan_bo]\"]').trigger(\"change\");\n});\n\n$('input:radio[name=\"PendirianForm[jenis_identitas_bo]\"]').change(function () {\n    let pilihan = $('input:radio[name=\"PendirianForm[jenis_identitas_bo]\"]:checked').val();\n\n    if (pilihan == 1 || pilihan == 2) {\n        $('input:radio[name=\"PendirianForm[kewarganegaraan_bo]\"][value=\"1\"]').trigger('click');\n    }\n    else {\n        $('input:radio[name=\"PendirianForm[kewarganegaraan_bo]\"][value=\"0\"]').trigger('click');\n    }\n\n});\n\n$('#cb-simpan-manfaat').on('change', function () {\n    $('#tambah-bo').attr('disabled', this.checked);\n});\n\nif ($('#table-bo tr').length >= 1) {\n    $('#cb-simpan-manfaat').attr('disabled', true);\n}\n\n$(\"#form-pendirian button[type=submit]\").click(function() {\n    var scroll = $(this).data('scroll');\n\n    if (scroll) {\n        var formAction = $(\"#form-pendirian\").attr(\"action\");\n        $(\"#form-pendirian\").attr(\"action\", formAction + '#' + scroll);\n    }\n});\n\nvar array_kbli = [];\n$(document).on('click', 'input[name=\"cek_kbli[]\"]', function() {\n    array_kbli.push($(this).val());\n    $(this).checked = true;\n    $('#cek_kbli_value').val(array_kbli);\n});\n\n\n--- File Index 74: web/js/pendirian/listtransaction.js ---\n$('#but-submit-tanggal').click(function(e) {\n    // Rentang Tanggal Awal\n    var err = $('#err-rentang_awal');\n    if(!$('#rentang_awal').val()) {\n        e.preventDefault();\n        err.html('Tanggal Awal tidak boleh kosong.');\n        err.removeClass(\"hidden\");\n    }\n    else {\n        err.addClass(\"hidden\");\n    }\n\n    // Rentang Tanggal Akhir\n    var err = $('#err-rentang_akhir');\n    if(!$('#rentang_akhir').val()) {\n        e.preventDefault();\n        err.html('Tanggal Akhir tidak boleh kosong.');\n        err.removeClass(\"hidden\");\n    }\n    else {\n        err.addClass(\"hidden\");\n    }\n});\n\n--- File Index 75: web/js/perubahan/form-perubahan.js ---\nvar initialPolaId = $('#perubahanform-m_pola_id').val();\nvar isPolaIdUserChanged = true;\n\nfunction add_json_bakum() {\n    $('#perubahanform-nik').val('');\n    $('#perubahanform-nama_bakum_kop').val('');\n    $('#perubahanform-sk_bakum_kop').val('');\n    $('#perubahanform-npwp_bakum_kop').val('');\n    $('#perubahanform-file_sk_bakum_kop').val('');\n    $('#perubahanform-hidden_file_sk_bakum_kop').val('');\n    $('#perubahanform-nik').prop('disabled', false);\n    $('#perubahanform-nama_bakum_kop').prop('disabled', false);\n    $('#perubahanform-sk_bakum_kop').prop('disabled', false);\n    $('#perubahanform-npwp_bakum_kop').prop('disabled', false);\n    $('#perubahanform-hidden_file_sk_bakum_kop').prop('disabled', false);\n    $('#but-submit-bakum').prop('name', 'SaveBakumGabung');\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction add_json_pisah() {\n    $('#perubahanform-no_pesan_pisah').val('');\n    $('#perubahanform-nama_koperasi_pisah').val('');\n    $('#perubahanform-jenis_koperasi_pisah').val('');\n\n    $('#perubahanform-no_pesan_pisah').prop('disabled', false);\n    $('#perubahanform-nama_koperasi_pisah').prop('disabled', true);\n    $('#perubahanform-jenis_koperasi_pisah').prop('disabled', true);\n\n    $('#but-submit-bakum-pisah').prop('name', 'SaveBakumPisah');\n    $('#but-submit-bakum-pisah').html(\"Simpan\");\n}\n\nfunction edit_json_bakum(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_gabung').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#perubahanform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#perubahanform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#perubahanform-nik').val(data.nik);\n    // $('#perubahanform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    // $('#perubahanform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#perubahanform-nama_bakum_kop').prop('disabled', false);\n    $('#perubahanform-sk_bakum_kop').prop('disabled', false);\n    $('#perubahanform-nik').prop('disabled', false);\n    // $('#perubahanform-npwp_bakum_kop').prop('disabled',false);\n    // $('#perubahanform-hidden_file_sk_bakum_kop').prop('disabled',false);\n    $('#but-submit-bakum').prop('name', 'EditBakumGabung');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html(\"Simpan\");\n}\n\nfunction edit_json_pisah(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_pisah').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum-pembagian').modal();\n    $('#perubahanform-no_pesan_pisah').val(data.no_pesan);\n    $('#perubahanform-nama_koperasi_pisah').val(data.nama_koperasi);\n    $('#perubahanform-jenis_koperasi_pisah').val(data.jenis_koperasi);\n\n    $('#perubahanform-no_pesan_pisah').prop('disabled', false);\n    $('#perubahanform-nama_koperasi_pisah').prop('disabled', true);\n    $('#perubahanform-jenis_koperasi_pisah').prop('disabled', true);\n\n    $('#but-submit-bakum-pisah').prop('name', 'EditBakumPisah');\n    $('#but-submit-bakum-pisah').val(selected);\n    $('#but-submit-bakum-pisah').html(\"Simpan\");\n}\n\nfunction hapus_json_bakum(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_gabung').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum').modal();\n    $('#perubahanform-nik').val(data.nik);\n    $('#perubahanform-nama_bakum_kop').val(data.nama_bakum_kop);\n    $('#perubahanform-sk_bakum_kop').val(data.sk_bakum_kop);\n    $('#perubahanform-npwp_bakum_kop').val(data.npwp_bakum_kop);\n    $('#perubahanform-hidden_file_sk_bakum_kop').val(data.file_sk_bakum_kop);\n    $('#perubahanform-nik').prop('disabled', true);\n    $('#perubahanform-nama_bakum_kop').prop('disabled', true);\n    $('#perubahanform-sk_bakum_kop').prop('disabled', true);\n    $('#perubahanform-npwp_bakum_kop').prop('disabled', true);\n    $('#perubahanform-hidden_file_sk_bakum_kop').prop('disabled', true);\n    $('#but-submit-bakum').prop('name', 'HapusBakumGabung');\n    $('#but-submit-bakum').val(selected);\n    $('#but-submit-bakum').html('Hapus');\n    // $('#but-submit-bakum').submit();\n}\n\nfunction hapus_json_pisah(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_pisah').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-bakum-pembagian').modal();\n    $('#perubahanform-no_pesan_pisah').val(data.no_pesan);\n    $('#perubahanform-nama_koperasi_pisah').val(data.nama_koperasi);\n    $('#perubahanform-jenis_koperasi_pisah').val(data.jenis_koperasi);\n\n    $('#perubahanform-no_pesan_pisah').prop('disabled', true);\n    $('#perubahanform-nama_koperasi_pisah').prop('disabled', true);\n    $('#perubahanform-jenis_koperasi_pisah').prop('disabled', true);\n\n    $('#but-submit-bakum-pisah').prop('name', 'HapusBakumPisah');\n    $('#but-submit-bakum-pisah').val(selected);\n    $('#but-submit-bakum-pisah').html('Hapus');\n    // $('#but-submit-bakum').submit();\n}\n\nfunction toogleBakumSekunder(status) {\n    if (status) {\n        $('#panel-badan-hukum').removeClass('hidden');\n    }\n    else {\n        $('#panel-badan-hukum').addClass('hidden');\n    }\n}\n\nfunction AjaxKab() {\n    $.ajax({\n        method: 'POST',\n        url: '/pendirian/get-child-wilayah?id=' + $('#prov_id').val() + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#kab_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            AjaxKec();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKec() {\n    $.ajax({\n        method: 'POST',\n        url: '/pendirian/get-child-wilayah?id=' + $('#kab_id').val() + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#kec_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            AjaxKel();\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKel() {\n    $.ajax({\n        method: 'POST',\n        url: '/pendirian/get-child-wilayah?id=' + $('#kec_id').val() + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#kel_id');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\nfunction toogleAllWilayah(status) {\n    if (!status) {\n        $('#prov_id').prop('disabled', true);\n        $('#kab_id').prop('disabled', true);\n        $('#kec_id').prop('disabled', true);\n        $('#kel_id').prop('disabled', true);\n    }\n    else {\n        $('#prov_id').prop('disabled', false);\n        $('#kab_id').prop('disabled', false);\n        $('#kec_id').prop('disabled', false);\n        $('#kel_id').prop('disabled', false);\n    }\n}\n\nfunction HitungModal() {\n    let simpok = $('#simpanan_pokok').val() ? $('#simpanan_pokok').val() : 0;\n    let simjib = $('#simpanan_wajib').val() ? $('#simpanan_wajib').val() : 0;\n    let danhib = $('#dana_hibah').val() ? $('#dana_hibah').val() : 0;\n    let danacad = $('#dana_cadangan').val() ? $('#dana_cadangan').val() : 0;\n    let total = parseInt(simpok) + parseInt(simjib) + parseInt(danhib) + parseInt(danacad);\n    $('#modal-usaha').val(total);\n    $('#modal-usaha-disp').val(total);\n}\n\nfunction add_json_usaha_utama() {\n    $('#grid-by-jenis').removeClass(\"hidden\");\n    $('#grid-all').addClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_pendukung() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction add_json_usaha_tambahan() {\n    $('#grid-by-jenis').addClass(\"hidden\");\n    $('#grid-all').removeClass(\"hidden\");\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#modal-usaha-kbli').modal();\n}\n\nfunction hapus_json_usaha_utama(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(yakin == false) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaUtama');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction resetSearch() {\n    $('#search-kbli').val('');\n    // $('#search-but-kbli').trigger('click');\n}\n\nfunction hapus_json_usaha_pendukung(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(yakin == false) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaPendukung');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction hapus_json_usaha_tambahan(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(yakin == false) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n\n    $('#JenisUsaha').val('UsahaTambahan');\n    $('#but-submit-kbli').prop('name', 'HapusKBLI');\n    $('#but-submit-kbli').val(selected);\n    // $('#but-submit-kbli').submit();\n}\n\nfunction add_json_pengawas_pengurus() {\n    $('#perubahanform-status_anggota').val(1);\n    $('#perubahanform-nik_anggota').val('');\n    $('#perubahanform-nama_anggota').val('');\n    $('#perubahanform-jenis_kelamin_anggota').val('');\n    $('#perubahanform-jabatan_anggota').val('');\n    $('#perubahanform-npwp_anggota').val('');\n    $('#perubahanform-no_hp_anggota').val('');\n    $('#perubahanform-status_anggota').prop('disabled', false);\n    $('#perubahanform-nik_anggota').prop('disabled', false);\n    $('#perubahanform-nama_anggota').prop('disabled', false);\n    $('#perubahanform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#perubahanform-jabatan_anggota').prop('disabled', false);\n    $('#perubahanform-npwp_anggota').prop('disabled', false);\n    $('#perubahanform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'SavePengawasPengurus');\n    $('#but-submit-pengurus').html(\"Simpan\");\n    $('#modal-pengawas-pengurus').modal();\n}\n\nfunction edit_json_pengawas_pengurus(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#perubahanform-status_anggota').val(data.status);\n    $('#perubahanform-nik_anggota').val(data.nik);\n    $('#perubahanform-nama_anggota').val(data.nama);\n    $('#perubahanform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#perubahanform-jabatan_anggota').val(data.jabatan);\n    $('#perubahanform-npwp_anggota').val(data.npwp);\n    $('#perubahanform-no_hp_anggota').val(data.no_hp);\n    $('#perubahanform-status_anggota').prop('disabled', false);\n    $('#perubahanform-nik_anggota').prop('disabled', false);\n    $('#perubahanform-nama_anggota').prop('disabled', false);\n    $('#perubahanform-jenis_kelamin_anggota').prop('disabled', false);\n    $('#perubahanform-jabatan_anggota').prop('disabled', false);\n    $('#perubahanform-npwp_anggota').prop('disabled', false);\n    $('#perubahanform-no_hp_anggota').prop('disabled', false);\n    $('#but-submit-pengurus').prop('name', 'EditPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Simpan\");\n}\n\nfunction hapus_json_pengawas_pengurus(elem) {\n    // let yakin = confirm(\"Apakah Anda Yakin Ingin Menghapus ?\");\n\n    // if(!yakin) {\n    //     return;\n    // }\n\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_pengawas_pengurus').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#modal-pengawas-pengurus').modal();\n    $('#perubahanform-status_anggota').val(data.status);\n    $('#perubahanform-nik_anggota').val(data.nik);\n    $('#perubahanform-nama_anggota').val(data.nama);\n    $('#perubahanform-jenis_kelamin_anggota').val(data.jenis_kelamin);\n    $('#perubahanform-jabatan_anggota').val(data.jabatan);\n    $('#perubahanform-npwp_anggota').val(data.npwp);\n    $('#perubahanform-no_hp_anggota').val(data.no_hp);\n    $('#perubahanform-status_anggota').prop('disabled', true);\n    $('#perubahanform-nik_anggota').prop('disabled', true);\n    $('#perubahanform-nama_anggota').prop('disabled', true);\n    $('#perubahanform-jenis_kelamin_anggota').prop('disabled', true);\n    $('#perubahanform-jabatan_anggota').prop('disabled', true);\n    $('#perubahanform-npwp_anggota').prop('disabled', true);\n    $('#perubahanform-no_hp_anggota').prop('disabled', true);\n    $('#but-submit-pengurus').prop('name', 'HapusPengawasPengurus');\n    $('#but-submit-pengurus').val(selected);\n    $('#but-submit-pengurus').html(\"Hapus\");\n    // $('#but-submit-pengurus').submit();\n}\n\nfunction cekSekunder() {\n    let pilihan = $('#perubahanform-b_koperasi_id')[0].options[$('#perubahanform-b_koperasi_id')[0].options.selectedIndex].text.toUpperCase();\n    if (pilihan == 'SEKUNDER') {\n        toogleBakumSekunder(true);\n    }\n    else {\n        toogleBakumSekunder(false);\n    }\n}\n\nfunction add_json_pemilik_manfaat() {\n    $('#perubahanform-nama_bo').val('');\n    // $('#perubahanform-jenis_identitas_bo').val('');\n    $('#perubahanform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#perubahanform-no_identitas_bo').val('');\n    $('#perubahanform-tempat_lahir_bo').val('');\n    $('#perubahanform-tanggal_lahir_bo').val('');\n    $('#perubahanform-alamat_bo').val('');\n    // $('#perubahanform-kewarganegaraan_bo').val('');\n    $('#perubahanform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        this.children[0].disabled = false;\n    });\n    $('#perubahanform-npwp_bo').val('');\n    $('#id_hubungan_bo').val('');\n    $('#id_provinsi_bo').val('');\n    $('#id_kabupaten_bo').val('');\n    $('#id_kecamatan_bo').val('');\n    $('#id_kelurahan_bo').val('');\n    $('#id_rt_bo').val('');\n    $('#id_rw_bo').val('');\n    $('#id_negara_bo').val('');\n    $('#manfaat1')[0].checked = false;\n    $('#manfaat2')[0].checked = false;\n    $('#manfaat3')[0].checked = false;\n    $('#manfaat4')[0].checked = false;\n    $('#manfaat5')[0].checked = false;\n    $('#manfaat_bawah').checked = false;\n    $('#perubahanform-nama_bo').prop('disabled', false);\n    $('#perubahanform-jenis_identitas_bo').prop('disabled', false);\n    $('#perubahanform-no_identitas_bo').prop('disabled', false);\n    $('#perubahanform-tempat_lahir_bo').prop('disabled', false);\n    $('#perubahanform-tanggal_lahir_bo').prop('disabled', false);\n    $('#perubahanform-alamat_bo').prop('disabled', false);\n    $('#perubahanform-kewarganegaraan_bo').prop('disabled', false);\n    $('#perubahanform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'SavePemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n}\n\nfunction edit_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#perubahanform-nama_bo').val(data.nama);\n    // $('#perubahanform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#perubahanform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#perubahanform-no_identitas_bo').val(data.no_identitas);\n    $('#perubahanform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#perubahanform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#perubahanform-alamat_bo').val(data.alamat);\n    // $('#perubahanform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#perubahanform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = false;\n    });\n    $('#perubahanform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#perubahanform-nama_bo').prop('disabled', false);\n    $('#perubahanform-jenis_identitas_bo').prop('disabled', false);\n    $('#perubahanform-no_identitas_bo').prop('disabled', false);\n    $('#perubahanform-tempat_lahir_bo').prop('disabled', false);\n    $('#perubahanform-tanggal_lahir_bo').prop('disabled', false);\n    $('#perubahanform-alamat_bo').prop('disabled', false);\n    $('#perubahanform-kewarganegaraan_bo').prop('disabled', false);\n    $('#perubahanform-npwp_bo').prop('disabled', false);\n    $('#id_hubungan_bo').prop('disabled', false);\n    $('#id_provinsi_bo').prop('disabled', false);\n    $('#id_kabupaten_bo').prop('disabled', false);\n    $('#id_kecamatan_bo').prop('disabled', false);\n    $('#id_kelurahan_bo').prop('disabled', false);\n    $('#id_rt_bo').prop('disabled', false);\n    $('#id_rw_bo').prop('disabled', false);\n    $('#id_negara_bo').prop('disabled', false);\n    $('#manfaat1').prop('disabled', false);\n    $('#manfaat2').prop('disabled', false);\n    $('#manfaat3').prop('disabled', false);\n    $('#manfaat4').prop('disabled', false);\n    $('#manfaat5').prop('disabled', false);\n    $('#manfaat_bawah').prop('disabled', false);\n    $('#modal-pemilik-manfaat').modal();\n    cekCkboxBO();\n    $('#but-submit-bo').prop('name', 'EditPemilikManfaat');\n    $('#but-submit-bo').html(\"Simpan\");\n    $('#but-submit-bo').val(selected);\n}\n\nfunction hapus_json_pemilik_manfaat(elem) {\n    elem = elem.split(\"_\");\n    let selected = elem[elem.length - 1];\n    let data = $('#perubahanform-json_pemilik_manfaat').val();\n    data = JSON.parse(data);\n    data = data.data[selected];\n    $('#perubahanform-nama_bo').val(data.nama);\n    // $('#perubahanform-jenis_identitas_bo').val(data.jenis_identitas);\n    $('#perubahanform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#perubahanform-no_identitas_bo').val(data.no_identitas);\n    $('#perubahanform-tempat_lahir_bo').val(data.tempat_lahir);\n    $('#perubahanform-tanggal_lahir_bo').val(data.tanggal_lahir);\n    $('#perubahanform-alamat_bo').val(data.alamat);\n    // $('#perubahanform-kewarganegaraan_bo').val(data.kewarganegaraan);\n    $('#perubahanform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n    });\n    $('#perubahanform-npwp_bo').val(data.npwp);\n    $('#id_hubungan_bo').val(data.hubungan);\n    $('#id_provinsi_bo').val(data.provinsi_bo);\n    $('#id_kabupaten_bo').val(data.kabupaten_bo);\n    $('#id_kecamatan_bo').val(data.kecamatan_bo);\n    $('#id_kelurahan_bo').val(data.kelurahan_bo);\n    AjaxKabBo(data.provinsi_bo, data.kabupaten_bo);\n    AjaxKecBo(data.kabupaten_bo, data.kecamatan_bo);\n    AjaxKelBo(data.kecamatan_bo, data.kelurahan_bo);\n    $('#id_rt_bo').val(data.rt_bo);\n    $('#id_rw_bo').val(data.rw_bo);\n    $('#id_negara_bo').val(data.negara_bo);\n    $('#manfaat1')[0].checked = data.cbox.cb_modal1;\n    $('#manfaat2')[0].checked = data.cbox.cb_modal2;\n    $('#manfaat3')[0].checked = data.cbox.cb_modal3;\n    $('#manfaat4')[0].checked = data.cbox.cb_modal4;\n    $('#manfaat5')[0].checked = data.cbox.cb_modal5;\n    $('#manfaat_bawah')[0].checked = data.cbox.cb_modal_bawah;\n    $('#perubahanform-nama_bo').prop('disabled', true);\n    // $('#perubahanform-jenis_identitas_bo').prop('disabled',true);\n    $('#perubahanform-jenis_identitas_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.jenis_identitas) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#perubahanform-no_identitas_bo').prop('disabled', true);\n    $('#perubahanform-tempat_lahir_bo').prop('disabled', true);\n    $('#perubahanform-tanggal_lahir_bo').prop('disabled', true);\n    $('#perubahanform-alamat_bo').prop('disabled', true);\n    // $('#perubahanform-kewarganegaraan_bo').prop('disabled',true);\n    $('#perubahanform-kewarganegaraan_bo').children('label').each(function () {\n        this.children[0].checked = false;\n        if (this.children[0].value == data.kewarganegaraan) {\n            this.children[0].checked = true;\n        }\n        this.children[0].disabled = true;\n    });\n    $('#perubahanform-npwp_bo').prop('disabled', true);\n    $('#id_hubungan_bo').prop('disabled', true);\n    $('#id_provinsi_bo').prop('disabled', true);\n    $('#id_kabupaten_bo').prop('disabled', true);\n    $('#id_kecamatan_bo').prop('disabled', true);\n    $('#id_kelurahan_bo').prop('disabled', true);\n    $('#id_rt_bo').prop('disabled', true);\n    $('#id_rw_bo').prop('disabled', true);\n    $('#id_negara_bo').prop('disabled', true);\n    $('#manfaat1').prop('disabled', true);\n    $('#manfaat2').prop('disabled', true);\n    $('#manfaat3').prop('disabled', true);\n    $('#manfaat4').prop('disabled', true);\n    $('#manfaat5').prop('disabled', true);\n    $('#manfaat_bawah').prop('disabled', true);\n    $('#modal-pemilik-manfaat').modal();\n    $('#but-submit-bo').prop('name', 'HapusPemilikManfaat');\n    $('#but-submit-bo').html(\"Hapus\");\n    $('#but-submit-bo').val(selected);\n}\n\n$('#perubahanform-b_koperasi_id').change(function () {\n    cekSekunder();\n});\n\n$('#prov_id').change(function () {\n    AjaxKab();\n});\n\n$('#kab_id').change(function () {\n    AjaxKec();\n})\n\n$('#kec_id').change(function () {\n    AjaxKel();\n})\n\n$('#simpanan_pokok-disp, #simpanan_wajib-disp, #dana_hibah-disp, #dana_cadangan-disp').change(function () {\n    HitungModal();\n});\n\n$('#search-but-kbli').click(function () {\n    let value = $('#search-kbli').val();\n    let url = window.location.href;\n\n    $.urlFix = function (url) {\n        var results = url.match(/^.*?(?=&|\\?KBLIBakumSearch\\[judul\\])/);\n        if (!results) {\n            return url;\n        }\n        return results[0];\n    }\n    let fixUrl = $.urlFix(url);\n    let urlpjax;\n    if (url.match(/\\?./)) {\n        urlpjax = fixUrl + '&KBLIBakumSearch[judul]=' + value;\n    } else {\n        urlpjax = fixUrl + '?KBLIBakumSearch[judul]=' + value;\n    }\n    if (!$('#grid-by-jenis').hasClass(\"hidden\")) {\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-1\",\n            timeout: 1000,\n        });\n    }\n    if (!$('#grid-all').hasClass(\"hidden\")) {\n        $.pjax({\n            url: urlpjax,\n            container: \"#kv-2\",\n            timeout: 1000,\n        });\n    }\n});\n\n$('#search-kbli').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#cb-mengerti-manfaat').click(function () {\n    if (this.checked) {\n        $('#perpres-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#perpres-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#cb_perpres_manfaat').click(function () {\n    if ($('#cb_perpres_manfaat .checkbox label input[type=checkbox]:checked').length >= 2) {\n        $('#tabel-pemilik-manfaat').removeClass(\"hidden\");\n    }\n    else {\n        $('#tabel-pemilik-manfaat').addClass(\"hidden\");\n    }\n});\n\n$('#manfaat1').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat2')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat2').click(function () {\n    if (this.checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat1')[0].checked) {\n            $('#manfaat3').prop('disabled', false);\n            $('#manfaat4').prop('disabled', false);\n            $('#manfaat5').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat3').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat4').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat5')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\n$('#manfaat5').click(function () {\n    if (this.checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n    }\n    else {\n        ;\n        if (!$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked) {\n            $('#manfaat1').prop('disabled', false);\n            $('#manfaat2').prop('disabled', false);\n        }\n    }\n});\n\nfunction cekCkboxBO() {\n    if ($('#manfaat1')[0].checked || $('#manfaat2')[0].checked) {\n        $('#manfaat3').prop('disabled', true);\n        $('#manfaat4').prop('disabled', true);\n        $('#manfaat5').prop('disabled', true);\n        return;\n    }\n\n    if ($('#manfaat3')[0].checked || $('#manfaat4')[0].checked || $('#manfaat5')[0].checked) {\n        $('#manfaat1').prop('disabled', true);\n        $('#manfaat2').prop('disabled', true);\n        return;\n    }\n}\n\n$('#but-submit-bo').click(async function (e) {\n    let btnName = $(this).attr('name');\n    if(btnName == 'SavePemilikManfaat' || btnName == 'EditPemilikManfaat'){\n        e.preventDefault();\n    }\n    let jenis_button = $(this).html();\n\n    if(jenis_button == \"Hapus\") {\n        return true;\n    }\n    // validasi form\n    var nama = $('#perubahanform-nama_bo')[0].value;\n    var jenis_identitas = $('input:radio[name=\"PerubahanForm[jenis_identitas_bo]\"]:checked').length;\n    var selected_jenis_identitas = $('input:radio[name=\"PerubahanForm[jenis_identitas_bo]\"]:checked').val();\n    var no_identitas = $('#perubahanform-no_identitas_bo')[0].value;\n    var tempat_lahir = $('#perubahanform-tempat_lahir_bo')[0].value;\n    var tanggal_lahir = $('#perubahanform-tanggal_lahir_bo')[0].value;\n    var kewarganegaraan = $('input:radio[name=\"PerubahanForm[kewarganegaraan_bo]\"]:checked').length;\n    var alamat = $('#perubahanform-alamat_bo')[0].value;\n    var npwp = $('#perubahanform-npwp_bo')[0].value;\n    var provinsi = $('#id_provinsi_bo').val();\n    var kabupaten = $('#id_kabupaten_bo').val();\n    var kecamatan = $('#id_kecamatan_bo').val();\n    var kelurahan = $('#id_kelurahan_bo').val();\n    var rt = $('#id_rt_bo').val();\n    var rw = $('#id_rw_bo').val();\n    var negara = $('#id_negara_bo').val();\n    var hubungan_bo = $('#id_hubungan_bo').val();\n\n    $('#err_nik').html('');\n    if(selected_jenis_identitas == 1){\n        let noKtp = no_identitas;\n        let errorMessage = \"\";\n\n        if (!noKtp) { // check jika noKtp Kosong\n            errorMessage = \"Nomor KTP tidak boleh kosong.\";\n        }else if (!/^\\d+$/.test(noKtp)) { // check jika noKtp hanya berisi angka\n            errorMessage = \"Nomor KTP hanya boleh berisi angka.\";\n        } else if (noKtp.length !== 16) { // check jika noKtp panjangnya tidak sama dengan 16\n            errorMessage = \"Nomor KTP harus terdiri dari 16 digit.\";\n        } else if (!/^[1-9]\\d*$/.test(noKtp)) { // check jika noKtp di awali angka 0\n            errorMessage = '1 karakter pertama pada NIK tidak boleh berupa \"0\" ';\n        } else if (noKtp.substr(-4) === \"0000\") { // check jika noKtp 4 digit terakhir 0 \n            errorMessage = '4 karakter terakhir pada NIK tidak boleh berupa \"0000\"';\n        }\n\n        if(errorMessage){\n            $('#err_nik').html(errorMessage);\n            return false;\n        }\n    }\n\n    if (kewarganegaraan > 0) {\n        let kw = $('input:radio[name=\"PerubahanForm[kewarganegaraan_bo]\"]:checked')[0].value;\n\n        // JIKA WNA\n        if (kw == 0) {\n\n            if (!negara) {\n                $('#err-bo').html('Negara Asal Wajib Di Isi.')\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n\n        }\n        else {\n\n            if (!provinsi || !kecamatan || !kabupaten || !kelurahan) {\n                $('#err-bo').html('Data Wilayah Wajib Di isi.');\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return false;\n            }\n        }\n    }\n\n\n    if (nama == '' || jenis_identitas <= 0 || no_identitas == '' || tempat_lahir == '' || tanggal_lahir == '' || kewarganegaraan <= 0 || alamat == '' || npwp == '' || hubungan_bo == '') {\n        $('#err-bo').html('Kolom Nama, Jenis Identitas, No Identitas, Tanggal Lahir, Alamat Bo, Hubungan Bo, Kewarganegaraan dan NPWP Wajib Di isi.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    if (selected_jenis_identitas == 1 && no_identitas.length < 16) { // NIK minimum 16\n        $('#err-bo').html('NIK minimum 16 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    } else if (selected_jenis_identitas == 2 && no_identitas.length < 13) { // SIM minimum 13\n        $('#err-bo').html('SIM minimum 13 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    } else if (selected_jenis_identitas == 3 && no_identitas.length < 8) { // PASSPOR minimum 8\n        $('#err-bo').html('PASPOR minimum 8 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    if (npwp.length < 15) { // NPWP minimum 15\n        $('#err-bo').html('NPWP minimum 15 karakter.')\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return false;\n    }\n\n    // Checkbox manfaat bawah\n    var err = $('#error-manfaat_bawah');\n    if (!$('#manfaat_bawah')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist persetujuan.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n\n    // Cehckbox manfaat atas\n    var err = $('#error-manfaat_atas');\n    if (!$('#manfaat1')[0].checked && !$('#manfaat2')[0].checked && !$('#manfaat3')[0].checked && !$('#manfaat4')[0].checked && !$('#manfaat5')[0].checked) {\n        e.preventDefault();\n        err.html(\"Wajib ceklist salah satu kriteria.\");\n        err.removeClass('hidden');\n        err.focus();\n    }\n    else {\n        err.addClass('hidden');\n    }\n    if(btnName == 'SavePemilikManfaat' || btnName == 'EditPemilikManfaat'){\n        var pilihanJenis = $('input:radio[name=\"PerubahanForm[jenis_identitas_bo]\"]:checked').val();\n        if(pilihanJenis == 1){\n        var checkDukcapil = 1;\n        await $.ajax({\n            url: \"/api/dukcapil/validasi-data\",\n            type: \"POST\",\n            data: {\n                nama: nama,\n                nik: no_identitas,\n            },\n            success: function(response) {\n                if (response.status != 1) {\n                    checkDukcapil = 0;\n    \n                    let message = response.data;\n                    let errorMessage = \"<div class='alert alert-danger'><ul>\";\n                    for (let key in message) {\n                        errorMessage += \"<li>\" + message[key] + \"</li>\";\n                    }\n                    errorMessage += '</ul></div>';\n    \n                    $('#err-dukcapil-message').html(errorMessage);\n                }\n            },\n            error: function(response) {\n                checkDukcapil = 0;\n                $('#err-dukcapil-message').html(\"<div class='alert alert-danger'>Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi</div>\");\n            }\n        });\n    \n        if (!checkDukcapil) {\n            return false;\n        }\n        }\n\n        $(this).submit();\n    }\n});\n\n$('#perubahanform-jangka_waktu').change(function () {\n    if (this.value == 'Terbatas') {\n        $('#jumlah_jangka_waktu').removeClass('hidden');\n    }\n    else {\n        $('#jumlah_jangka_waktu').addClass('hidden');\n    }\n});\n\n$('#perubahan_no_pesan').change(function () {\n    var real_full_nama = $('#real_full_nama').val();\n    if (this.value == '') {\n        $('#hint-no_pesan').html(\"Klik <a href='/pesan-nama' target='_BLANK'>disini</a> untuk melakukan proses pesan nama koperasi\");\n        $('#hint-no_pesan').css(\"color\", \"red\");\n        $('#perubahanform-full_nama').val(real_full_nama);\n        $('#perubahanform-m_pola_id').prop('disabled', false).val(initialPolaId).trigger('change');\n        return;\n    }\n    $.ajax({\n        url: \"/perubahan/get-no-pesan\",\n        type: \"POST\",\n        data: {\n            'no_pesan': this.value,\n        },\n        success: function (response) {\n            var res = JSON.parse(response);\n            if (res.status == 200) {\n                if (prosesCekPesanNamaJenis(res) == false) {\n                    $('#perubahanform-m_pola_id').prop('disabled', false).val(initialPolaId).trigger('change');\n                    return;\n                }\n                var nama_kop = res.data.full_nama;\n                $('#hint-no_pesan').html(\"Berhasil Ditemukan! Koperasi dengan nama '\" + nama_kop + \"'\");\n                $('#hint-no_pesan').css(\"color\", \"green\");\n                $('#perubahanform-full_nama').val(nama_kop);\n                isPolaIdUserChanged = false;\n                $('#perubahanform-m_pola_id').val(res.data.m_pola_id).prop('disabled', true).trigger('change');\n            }\n            else {\n                $('#hint-no_pesan').html(\"Nomor Pesan Tidak Ditemukan. Mohon cek Nomor pesan anda kembali.\");\n                $('#hint-no_pesan').css(\"color\", \"red\");\n                $('#perubahanform-full_nama').val(real_full_nama);\n                $('#perubahanform-m_pola_id').prop('disabled', false).val(initialPolaId).trigger('change');\n            }\n        }\n    });\n});\n\nfunction prosesCekPesanNamaJenis(res) {\n    if (cekPesanNamaJenis(res) == false) {\n        $('#hint-no_pesan').html(\"Jenis Koperasi Pada Pesan Nama Berbeda Dengan Yang Dipilih dalam Form.\");\n        $('#hint-no_pesan').css(\"color\", \"red\");\n        $('#perubahan_no_pesan').val(\"\");\n        return false;\n    }\n}\n\nfunction cekPesanNamaJenis(res) {\n    let getJenis = getJenisKop();\n    let jenis = res.data.jenis_koperasi.jenis;\n    let subjenis = res.data.jenis_koperasi.subjenis;\n    if (!subjenis) {\n        return (jenis == getJenis);\n    }\n    else {\n        return (subjenis == getJenis);\n    }\n}\n\n$('#jenis_kop').change(function () {\n    var id = this.value;\n    $.ajax({\n        method: 'GET',\n        url: '/pesan-nama/get-child-jenis?id=' + id,\n        success: function (response) {\n            var res = JSON.parse(response);\n            if (res.count > 0) {\n                $('.field-subjenis_kop').removeClass('hidden');\n                let opt = [];\n                $.each(res.data, function (i, item) {\n                    opt.push($('<option />', { value: item.id, text: item.nama }));\n                });\n                $('#subjenis_kop').find('option').remove().end().append(opt);\n                $.urlParam = function (name) {\n                    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (!results) {\n                        return false;\n                    }\n                    return results[1] || 0;\n                }\n                if ($.urlParam('id')) {\n                    urlpjax2 = '/perubahan/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n                }\n                else {\n                    urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n                }\n                $.pjax({\n                    url: urlpjax2,\n                    container: \"#kv-1\",\n                    timeout: 1000,\n                });\n            }\n            else {\n                $('.field-subjenis_kop').addClass('hidden');\n                $('#subjenis_kop').find('option').remove().end();\n\n                $.urlParam = function (name) {\n                    var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n                    if (!results) {\n                        return false;\n                    }\n                    return results[1] || 0;\n                }\n                if ($.urlParam('id')) {\n                    urlpjax2 = '/perubahan/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + id;\n                }\n                else {\n                    urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + id;\n                }\n                $.pjax({\n                    url: urlpjax2,\n                    container: \"#kv-1\",\n                    timeout: 1000,\n                });\n            }\n        }\n    });\n\n    if (this.value == 6) {\n        $('.btn-tambah-pendukung-tambahan').hide();\n    }\n    else {\n        $('#perubahanform-m_pola_id').val(1);\n        $('.btn-tambah-pendukung-tambahan').show();\n    }\n});\n\n$('#subjenis_kop').change(function () {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/perubahan/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n    }\n    else {\n        urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#subjenis_kop')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$(document).ready(() => {\n    // AjaxKab();\n    $('#cb-mengerti-manfaat').trigger('click');\n    $('#cb-mengerti-manfaat').trigger('click');\n    cekSekunder();\n    HitungModal();\n    refreshKBLIAwal();\n});\n\nfunction refreshKBLIAwal() {\n    let getJenis;\n    if ($('.field-subjenis_kop').hasClass(\"hidden\")) {\n        getJenis = $('#jenis_kop')[0].value;\n    }\n    else {\n        getJenis = $('#subjenis_kop')[0].value;\n    }\n    refreshKBLIUtama(getJenis);\n}\n\nfunction getJenisKop() {\n    if ($('.field-subjenis_kop').hasClass(\"hidden\")) {\n        return $('#jenis_kop')[0].value;\n    }\n    else {\n        return $('#subjenis_kop')[0].value;\n    }\n}\n\nfunction refreshKBLIUtama(id_jenis) {\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/perubahan/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + id_jenis;\n    }\n    else {\n        urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + id_jenis;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n}\n\n$('#perubahanform-m_pola_id').change(function () {\n    if (isPolaIdUserChanged) {\n        initialPolaId = $(this).val();\n    }\n    isPolaIdUserChanged = true;\n    $('#real_m_pola_id').val($(this).val());\n    $.urlParam = function (name) {\n        var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(window.location.href);\n        if (!results) {\n            return false;\n        }\n        return results[1] || 0;\n    }\n    if ($.urlParam('id')) {\n        urlpjax2 = '/perubahan/edit?id=' + $.urlParam('id') + '&KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#perubahanform-m_pola_id')[0].value + '&KBLISearch[bentuk]=' + $('#perubahanform-b_koperasi_id')[0].value;\n    }\n    else {\n        urlpjax2 = '/perubahan/form-perubahan?KBLISearch[jenis]=' + $('#jenis_kop')[0].value + '&KBLISearch[pola]=' + $('#perubahanform-m_pola_id')[0].value + '&KBLISearch[bentuk]=' + $('#perubahanform-b_koperasi_id')[0].value;\n    }\n    $.pjax({\n        url: urlpjax2,\n        container: \"#kv-1\",\n        timeout: 1000,\n    });\n});\n\n$('#submit-form').click(function (e) {\n    // Cek Perubahan No Pesan\n    if (!$('#perubahan_no_pesan').prop('disabled')) {\n        var isi_no_pesan = $('#perubahan_no_pesan').val();\n        if (isi_no_pesan == '') {\n            e.preventDefault();\n            return;\n        }\n\n        if ($('#hint-no_pesan').html() == \"Nomor Pesan Tidak Ditemukan. Mohon cek Nomor pesan anda kembali.\") {\n            e.preventDefault();\n            return;\n        }\n    }\n\n});\n\n$('#simpanan_pokok-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#simpanan_wajib-disp').focus();\n    }\n});\n\n$('#simpanan_wajib-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_hibah-disp').focus();\n    }\n});\n\n$('#dana_hibah-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#dana_cadangan-disp').focus();\n    }\n});\n\n$('#dana_cadangan-disp').keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n        $('#admineditform-periode_pengurus_awal').focus();\n    }\n});\n\n$('#perubahanform-periode_pengurus_awal').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$('#perubahanform-periode_pengurus_akhir').keydown(function (e) {\n    if (e.keyCode == 13) {\n        e.stopImmediatePropagation();\n        e.stopPropagation();\n        e.preventDefault();\n    }\n});\n\n$(document).keypress(function (e) {\n    if (e.keyCode == 13) {\n        e.preventDefault();\n    }\n});\n\n$('#but-submit-bakum').click(() => {\n\n    let nama_koperasi = $('#perubahanform-nama_bakum_kop')[0].value;\n    let no_sk = $('#perubahanform-sk_bakum_kop')[0].value;\n\n    if (nama_koperasi == '' || no_sk == '') {\n        $('#err-bakum-gabung').html(\"Kolom Nama Koperasi dan Nomor SK Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\n$('#but-submit-bakum-pisah').click(() => {\n\n    let no_pesan = $('#perubahanform-no_pesan_pisah')[0].value;\n\n\n    if (no_pesan == '') {\n        $('#err-bakum-pisah').html(\"Kolom Nomor Pesan Wajib Di Isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\n$('#but-submit-pengurus').click(() => {\n    let nik = $('#perubahanform-nik_anggota')[0].value;\n    let nama = $('#perubahanform-nama_anggota')[0].value;\n    let jenis_kelamin = $('#perubahanform-jenis_kelamin_anggota')[0].value;\n    let jabatan = $('#perubahanform-jabatan_anggota')[0].value;\n    let hp = $('#perubahanform-no_hp_anggota')[0].value;\n\n    if (nik == '' || nama == '' || jenis_kelamin == '' || jabatan == '' || hp == '') {\n        $('#err-pengawas-pengurus').html(\"Kolom NIK, Nama, Jenis Kelamin, No HP dan Jabatan Wajib Di isi\");\n        event.stopImmediatePropagation();\n        return false;\n    }\n\n    return true;\n});\n\nfunction isNumber(evt) {\n    var iKeyCode = (evt.which) ? evt.which : evt.keyCode\n    if (iKeyCode != 46 && iKeyCode > 31 && (iKeyCode < 48 || iKeyCode > 57))\n        return false;\n\n    return true;\n}\n\nfunction AjaxKabBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_provinsi_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kabupaten',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKab = $('#id_kabupaten_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kabupaten ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKab.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                console.log(replaceValue);\n                DDKab.val(replaceValue);\n            }\n            else {\n                AjaxKecBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKecBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kabupaten_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kecamatan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKec = $('#id_kecamatan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kecamatan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKec.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKec.val(replaceValue);\n            }\n            else {\n                AjaxKelBo();\n            }\n            // toogleAllWilayah(true);\n        },\n    });\n}\n\nfunction AjaxKelBo(parent = null, replaceValue = null) {\n    let id_parent;\n    if (parent) {\n        id_parent = parent;\n    }\n    else {\n        id_parent = $('#id_kecamatan_bo').val();\n    }\n    $.ajax({\n        method: 'POST',\n        url: '/api/wilayah/get-child-wilayah?id=' + id_parent + '&tipe=Kelurahan',\n        beforeSend: function () {\n            toogleAllWilayah(false);\n        },\n        success: function (response) {\n            let res = JSON.parse(response);\n            let DDKel = $('#id_kelurahan_bo');\n            let opt = [];\n            opt.push($('<option />', { value: \"\", text: \"== Pilih Kelurahan ==\" }));\n            $.each(res, function (i, item) {\n                opt.push($('<option />', { value: item.id, text: item.nama }));\n            });\n            DDKel.find('option').remove().end().append(opt);\n            if (replaceValue) {\n                DDKel.val(replaceValue);\n            }\n            toogleAllWilayah(true);\n        },\n        completed: function (res) {\n            toogleAllWilayah(true);\n        }\n    });\n}\n\n$('input[name=\"PerubahanForm[kewarganegaraan_bo]\"]').change(function () {\n    let pilihan = $('input[name=\"PerubahanForm[kewarganegaraan_bo]\"]:checked');\n    let pilihan_jenis = $('input:radio[name*=\"jenis_identitas_bo\"]:checked').val();\n\n    if (pilihan.length > 0) {\n        let isiPilihan = pilihan[0].value;\n\n        if (isiPilihan == 0) {\n            toggleLayoutWna(true);\n            toggleLayoutWni(false);\n            if (pilihan_jenis != 3) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"3\"]').trigger('click');\n            }\n        }\n        else {\n            toggleLayoutWni(true);\n            toggleLayoutWna(false);\n            if (pilihan_jenis != 1) {\n                $('input:radio[name*=\"jenis_identitas_bo\"][value=\"1\"]').trigger('click');\n            }\n        }\n    }\n    else {\n        toggleLayoutWni(false);\n        toggleLayoutWna(false);\n    }\n});\n\nfunction toggleLayoutWni(status) {\n    if (status) {\n        $('#layout_wni').removeClass('hide');\n    }\n    else {\n        $('#layout_wni').addClass('hide');\n    }\n}\n\nfunction toggleLayoutWna(status) {\n    if (status) {\n        $('#layout_wna').removeClass('hide');\n    }\n    else {\n        $('#layout_wna').addClass('hide');\n    }\n}\n\n$('#modal-pemilik-manfaat').on('show.bs.modal', function () {\n    $('input[name=\"PerubahanForm[kewarganegaraan_bo]\"]').trigger(\"change\");\n});\n\n$('input:radio[name=\"PerubahanForm[jenis_identitas_bo]\"]').change(function () {\n    let pilihan = $('input:radio[name=\"PerubahanForm[jenis_identitas_bo]\"]:checked').val();\n\n    if (pilihan == 1 || pilihan == 2) {\n        $('input:radio[name=\"PerubahanForm[kewarganegaraan_bo]\"][value=\"1\"]').trigger('click');\n    }\n    else {\n        $('input:radio[name=\"PerubahanForm[kewarganegaraan_bo]\"][value=\"0\"]').trigger('click');\n    }\n\n});\n\n$(\"#form-perubahan button[type=submit]\").click(function() {\n    var scroll = $(this).data('scroll');\n    \n    if (scroll) {\n        var formAction = $(\"#form-perubahan\").attr(\"action\");\n        $(\"#form-perubahan\").attr(\"action\", formAction + '#' + scroll);\n    }\n});\n\n\n--- File Index 76: web/js/pesan-nama/_form.js ---\nfunction setPreview() {\n    let nama =  $('#pesannamaform-nama_koperasi').val().toUpperCase();\n    let jenis =  $('#pesannamaform-subjenis_koperasi').is(\":visible\") ? $('#pesannamaform-subjenis_koperasi') : $('#pesannamaform-jenis_koperasi');\n    let pola = $('#pesannamaform-m_pola_id');\n    let model = $('#pesannamaform-model_koperasi');\n    let pilihan = jenis[0].options.selectedIndex;\n    let nama_pilihan = jenis[0].options[pilihan].text.toUpperCase();\n    let pola_pilihan = pola[0].options[pola[0].options.selectedIndex].text.toUpperCase();\n    let model_pilihan = model[0].options[model[0].options.selectedIndex].text.toUpperCase();\n\n    //toogle pelabuhan \n    if(nama_pilihan == 'JASA TKBM') {\n        tooglePelabuhan(true);\n        toogleKSOP(true);\n    }\n    else {\n        tooglePelabuhan(false);\n        toogleKSOP(false);\n    }\n\n    // Toogle Edit Pola Pengelolaan\n    if(nama_pilihan == 'SIMPAN PINJAM') {\n        EditablePola(true);\n        if(pola_pilihan == 'SYARIAH' || pola_pilihan == 'SYARI\\'AH') {\n            nama_pilihan += ' ' + \"DAN PEMBIAYAAN SYARIAH\";\n        }\n    }\n    else {\n        EditablePola(true);\n        if(pola_pilihan == 'SYARIAH' || pola_pilihan == 'SYARI\\'AH') {\n            nama_pilihan += ' ' + \"SYARIAH\";\n        }\n    }\n\n    // Beda Nama Preview\n    if(nama_pilihan == 'JASA NON TKBM' || nama_pilihan == 'JASA NON TKBM SYARIAH') {\n        if(pola_pilihan == 'SYARIAH' || pola_pilihan == 'SYARI\\'AH') {\n            nama_pilihan = 'JASA SYARIAH';\n        } else {\n            nama_pilihan = 'JASA';\n        }\n    }\n\n    if(model_pilihan == 'MULTI PIHAK'){\n        nama_pilihan  += ' ' + model_pilihan;\n    }\n\n    let nama_preview = 'KOPERASI ' + nama_pilihan  + ' ' + nama;\n\n    if(nama == null) {\n        $('#pesannamaform-preview_nama').val('');\n    }\n    $('#pesannamaform-preview_nama').val(nama_preview);\n}\n\nfunction EditablePola(edit = true) {\n    if(edit) {\n        disabled = false;\n        $('#pesannamaform-m_pola_id').prop('readonly',false);\n        $('#pesannamaform-m_pola_id').css('background-color','#FFFFFF');\n    }\n    else {\n        disabled = true;\n        $('#pesannamaform-m_pola_id').val(1);\n        $('#pesannamaform-m_pola_id').prop('readonly',true);\n        $('#pesannamaform-m_pola_id').css('background-color','#EBEBE4');\n    }\n}\n\n\nfunction tooglePelabuhan(show = true) {\n    let display = show ? 'block' : 'none';\n    $('.field-pesannamaform-nama_pelabuhan').css('display',display);\n    if(!show) {\n        // $('#pesannamaform-nama_pelabuhan').val(0);\n    }\n}\n\nfunction toogleKSOP(show = true) {\n    let display = show ? 'block' : 'none';\n    $('.field-pesannamaform-ksop').css('display',display);\n}\n\nfunction showSubJenis() {\n    $('.field-pesannamaform-subjenis_koperasi').css('display','block');\n}\n\nfunction hideSubJenis() {\n    $('.field-pesannamaform-subjenis_koperasi').css('display','none');\n    $('pesannamaform-subjenis_koperasi').val(0);\n}\n\nfunction tampilModal(elem) {\n    elem.modal();\n}\n\nfunction hideModal(elem) {\n    elem.modal('hide');\n    displayNotaris();\n}\n\nfunction displayNotaris() {\n    if($('input[name=\"cek[]\"]:checked').length >= 4){\n        $('#prevNotaris').css('display','block');\n    }\n    else {\n        $('#cek4').prop('checked',false);\n        $('#prevNotaris').css('display','none');\n    }\n}\n\nfunction getChildJenis(jenis,firstload = false) {\n    let id = jenis.val();\n    $.ajax({\n        method: 'GET',\n        url: '/pesan-nama/get-child-jenis?id=' + id,\n        beforeSend: function() {\n            $('#pesannamaform-jenis_koperasi').prop('disabled',true);\n            $('#pesannamaform-subjenis_koperasi').prop('disabled',true);\n        },\n        complete: function() {\n            $('#pesannamaform-jenis_koperasi').prop('disabled',false);\n            $('#pesannamaform-subjenis_koperasi').prop('disabled',false);\n        },\n        success: function(response) {\n            let res = JSON.parse(response);\n            if(res.count > 0) {\n                let opt = [];\n                $.each(res.data, function(i, item) {\n                    opt.push($('<option />',{value:item.id,text:item.nama}));\n                });\n                $('#pesannamaform-subjenis_koperasi').find('option').remove().end().append(opt);\n                if(firstload) {\n                    let hiddenSubJenis = $('#pesannamaform-hidsubjenis_koperasi').val();\n                    $('#pesannamaform-subjenis_koperasi option[value='+ hiddenSubJenis +']').prop('selected',true);\n                }\n                showSubJenis();\n                setPreview();\n            }\n            else {\n                hideSubJenis();\n                tooglePelabuhan(false);\n                setPreview();\n            }\n        },\n    });\n}\n\nfunction toggleModelKoperasiBasedOnJenisKoperasi() {\n    const selectedValue = $('#pesannamaform-jenis_koperasi').val();\n    const merahPutihKeyword = 'MERAH PUTIH';\n\n    if (selectedValue && $('#pesannamaform-jenis_koperasi').find('option:selected').text().toUpperCase().includes(merahPutihKeyword)) {\n        $('#pesannamaform-model_koperasi').val(0).prop('disabled', true);\n    } else {\n        $('#pesannamaform-model_koperasi').prop('disabled', false);\n    }\n}\n\n$('#pesannamaform-nama_koperasi').keyup(function() {\n    setPreview();\n});\n\n$('#pesannamaform-nama_koperasi').change(function() {\n    setPreview();\n});\n\n$('#pesannamaform-jenis_koperasi').change(function() {\n    setPreview();\n    getChildJenis($(this));\n    toggleModelKoperasiBasedOnJenisKoperasi();\n} );\n\n$('#pesannamaform-subjenis_koperasi').change(function() {\n    setPreview();\n} );\n\n$('#pesannamaform-m_pola_id').change(function() {\n    setPreview();\n} );\n\n\n$('#pesannamaform-model_koperasi').change(function() {\n    setPreview();\n} );\n\nfunction uncheck3() {\n    $('#cek4')[0].checked = false;\n}\n\nfunction isValidName(evt, el) {\n    evt = (evt) ? evt : event;\n    var charCode = (evt.charCode) ? evt.charCode : ((evt.keyCode) ? evt.keyCode : ((evt.which) ? evt.which : 0));\n    \n    // ignore space in the beginning\n    // ignore double space\n    // ignore double apostrof\n    // ignore double dash\n    if (\n        (charCode == 32 && (el.value.length == 0)) ||\n        (charCode == 39 && el.value[el.value.length-1] == \"'\") ||\n        (charCode == 45 && el.value[el.value.length-1] == \"-\")\n    )\n        return false;\n    \n    // 39 = apostrof / petik satu\n    // 45 = dash\n    var allowed_codes = [39, 45];\n    \n    if (\n        (charCode > 32) && \n        (charCode < 65 || charCode > 90) &&\n        (charCode < 97 || charCode > 122) &&\n        (allowed_codes.indexOf(charCode) == -1)\n    )\n    {\n        return false;\n    }\n    return true;    \n}\n\n$('#pesannamaform-nama_koperasi').on('keypress',\n        function (evt) {\n          var nama_sblm = $('#pesannamaform-nama_koperasi').val().replace('  ', ' ');\n          $('#pesannamaform-nama_koperasi').val(nama_sblm);\n          return isValidName(event, this);\n});\n\n$(document).ready(function() {\n    if ($('#pesannamaform-nama_koperasi').val() != '') {\n        setPreview();\n        if(!$('#pesannamaform-hidsubjenis_koperasi').val()) {\n            getChildJenis($('#pesannamaform-jenis_koperasi'),true);\n        }   \n    }\n\n    $(document).on(\"paste\",\"#pesannamaform-nama_koperasi\",function(e) {\n            var a = $(this);\n            setTimeout(function() {\n                console.log(a.val());\n                a.val(function(i, v) {\n                    return v.replace(/  +/g, \" \");\n                });\n            });\n        });\n\n    $('#form-pesannama').submit(function() {\n        $('#btn-submit-pratinjau').text(\"Sedang Proses...\").attr('disabled', true);\n    });\n\n    \n});\n\n--- File Index 77: web/js/pesan-nama/listPesan.js ---\nfunction showPopupPerpanjang(nama) {\n    let konfirmasi = confirm(\"Peringatan:\\n\\nNama Koperasi \\\"\" + nama +\"\\\" akan diperpanjang masa\\nkadaluwarsanya selama 30 hari. Apakah anda yakin ?\");\n}\n\n--- File Index 78: web/koperasi-dashboard/src/.eslintrc.js ---\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"rules\": {\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n};\n\n--- File Index 79: web/koperasi-dashboard/src/eslintrc.js ---\n// http://eslint.org/docs/user-guide/configuring\n\nmodule.exports = {\n  root: true,\n  parser: 'babel-eslint',\n  parserOptions: {\n    sourceType: 'module'\n  },\n  env: {\n    browser: true,\n  },\n  // https://github.com/standard/standard/blob/master/docs/RULES-en.md\n  extends: 'standard',\n  // required to lint *.vue files\n  plugins: [\n    'html'\n  ],\n  // add your custom rules here\n  rules: {\n    'no-template-curly-in-string': 'error',\n    // allow paren-less arrow functions\n    'arrow-parens': 0,\n    // allow async-await\n    'generator-star-spacing': 0,\n  }\n};\n\n\n\n--- File Index 80: web/koperasi-dashboard/src/gulpfile.babel.js ---\nimport tasks from './boilerplate/tasks';\nmodule.exports = require('gulp');\n\n\n--- File Index 81: web/koperasi-dashboard/src/boilerplate/config.js ---\nimport * as fs from 'fs';\nimport minimist from 'minimist';\n\nlet config;\n\nconst options = {\n  string: 'env',\n  default: {\n    env: process.env.NODE_ENV || 'dev'\n  }\n};\n\nexport function updateConfig(done) {\n  const pkg = JSON.parse(fs.readFileSync('./package.json', { encoding: 'utf-8' }));\n\n  const banner =\n  `/**\n   * ${pkg.title}\n   * ${pkg.description}\n   * Compiled: ${Date()}\n   * @version v${pkg.version}\n   * @link ${pkg.homepage}\n   * @copyright ${pkg.license}\n   */\n  `;\n\n  config = Object.assign({\n    args: minimist(process.argv.slice(2), options),\n    banner\n  }, {\n    version: pkg.version,\n    title: pkg.title,\n    description: pkg.description,\n    author: pkg.author,\n    extensions: pkg.extensions,\n    vendors: pkg.vendors\n  }, pkg.config, pkg.directories);\n\n  done();\n}\n\nupdateConfig(() => {});\n\nexport default config;\n\nexport function getConfig() {\n  updateConfig(() => {});\n\n  return config;\n}\n\n\n--- File Index 82: web/koperasi-dashboard/src/boilerplate/init/choices.js ---\nimport fs from 'fs';\n\nexport default function getChoicesFiles(path) {\n  const results = [];\n\n  fs.readdirSync(path).forEach((choice) => {\n    results.push(JSON.parse(fs.readFileSync(path + choice, 'utf-8')));\n  });\n\n  return results;\n}\n\n\n\n--- File Index 83: web/koperasi-dashboard/src/boilerplate/init/index.js ---\nimport { exec } from 'child_process';\nimport fs from 'fs';\n\nimport chalk from 'chalk';\nimport inquirer from 'inquirer';\nimport { Spinner } from 'cli-spinner';\nimport del from 'del';\n\nimport choices from './choices.js';\nimport pkg from '../../package.json';\n\nconst questions = [{\n  type: 'input',\n  name: 'app_name',\n  message: 'App name',\n  default: 'App'\n}, {\n  type: 'list',\n  name: 'language',\n  message: 'Script compiler/transpiler:',\n  choices: choices(`${__dirname}/language/`)\n}, {\n  type: 'list',\n  name: 'framework',\n  message: 'JS framework:',\n  choices: choices(`${__dirname}/framework/`)\n}, {\n  type: 'list',\n  name: 'preprocessor',\n  message: 'CSS preprocessor:',\n  choices: choices(`${__dirname}/preprocessor/`)\n}];\n\n// Inspired by https://github.com/mattdesl/shimbro/\nfunction hasTransform(transforms, key) {\n  for (let i = 0; i < transforms.length; i++) {\n    const t = transforms[i];\n    if (typeof t === 'string' && t === key) {\n      return true;\n    } else if (t[0] === key) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction updatePackageFile(appName, transform, extensions) {\n  pkg.title = appName;\n  pkg.extensions = extensions;\n\n  if (!pkg.browserify) {\n    pkg.browserify = {\n      transform\n    };\n    console.log(chalk.green(`Adding ${transform.join(' ')} transform(s) to package.json.`));\n  } else if (!pkg.browserify.transform) {\n    pkg.browserify.transform = transform;\n    console.log(chalk.green(`Adding ${transform.join(' ')} transform(s) to package.json.`));\n  } else {\n    let transforms = pkg.browserify.transform;\n\n    if (typeof transforms === 'string') {\n      transforms = [transforms];\n    }\n\n    if (!Array.isArray(transforms)) {\n      throw new Error('Browserify transform object should be a string or an array');\n    }\n\n    const newTransforms = [];\n    for (let i = 0; i < transform.length; i++) {\n      if (!hasTransform(transforms, transform[i])) {\n        newTransforms.push(transform[i]);\n      }\n    }\n\n    if (newTransforms.length === 0) {\n      console.log(chalk.yellow('All transforms already in package.json.'));\n      return;\n    }\n    transforms = transforms.concat(newTransforms);\n    pkg.browserify.transform = transforms;\n\n    console.log(chalk.green(`Adding ${newTransforms.join(' ')} transform(s) to package.json.`));\n  }\n\n  fs.writeFile(`${process.cwd()}/package.json`, JSON.stringify(pkg, undefined, 2));\n}\n\nfunction updateSourceFiles(extensions, cb) {\n  inquirer.prompt([{\n    type: 'confirm',\n    name: 'delete_sourcefiles',\n    message: `Remove files in source folder that don't have the following extensions: \\\n${extensions.styles} ${extensions.scripts}`,\n    default: true\n  }]).then((data) => {\n    if (data.delete_sourcefiles) {\n      del([\n        `${pkg.directories.src}/styles/**/*.!(${extensions.styles})`,\n        `${pkg.directories.src}/scripts/**/*.!(${extensions.scripts})`\n      ], cb());\n    } else {\n      cb();\n    }\n  });\n}\n\nfunction updateDependencies(dependencies, devDependencies) {\n  let command = '';\n\n  if (dependencies.join('') !== '') {\n    command += `npm install --save ${dependencies.join(' ')} && `;\n  }\n  if (devDependencies.join('') !== '') {\n    command += `npm install --save-dev ${devDependencies.join(' ')} && `;\n  }\n  command += 'npm install';\n  if (dependencies || devDependencies) {\n    const spinner = new Spinner('This may take a while.');\n    spinner.setSpinnerString('|/-\\\\');\n    spinner.start();\n\n    console.log(chalk.green(\n      'Installing dependencies and adding them to package.json...',\n      dependencies.join(' '),\n      devDependencies.join(' ')\n    ));\n\n    exec(command, (error, stdout) => {\n      spinner.stop();\n      console.log(stdout);\n      if (error !== null) {\n        console.log(error);\n      }\n    });\n  }\n}\n\ninquirer.prompt(questions).then((data) => {\n  const transform = [\n    ...(data.language.transform || []),\n    ...(data.framework.transform || [])\n  ];\n  const extensions = {\n    scripts: data.language.extension || 'js',\n    styles: data.preprocessor.extension || 'css'\n  };\n  updatePackageFile(data.app_name, transform, extensions);\n\n  updateSourceFiles(extensions, () => {\n    const dependencies = [\n      ...(data.language.dependencies || []),\n      ...(data.framework.dependencies || []),\n      ...(data.preprocessor.dependencies || [])\n    ];\n    const devDependencies = [\n      ...(data.language.devDependencies || []),\n      ...(data.framework.devDependencies || []),\n      ...(data.preprocessor.devDependencies || [])\n    ];\n    updateDependencies(dependencies, devDependencies);\n  });\n});\n\n\n--- File Index 84: web/koperasi-dashboard/src/boilerplate/tasks/build.js ---\nimport gulp from 'gulp';\n\nimport sitemap from 'gulp-sitemap';\n\nimport config from '../config';\n\nexport function buildSitemap(done) {\n  const isUrlDefinned = (typeof config.prodURL === 'string' && config.prodURL !== '');\n\n  if (isUrlDefinned) {\n    return gulp.src(`${config.dist}/*.html`).pipe(sitemap({\n      fileName: 'sitemap.xml',\n      siteUrl: config.prodURL\n    }))\n    .pipe(gulp.dest(config.dist));\n  }\n  return done();\n}\n\n\n--- File Index 85: web/koperasi-dashboard/src/boilerplate/tasks/clean.js ---\nimport del from 'del';\n\nimport cache from 'gulp-cache';\n\nimport config from '../config';\n\nexport function cleanDeleteFiles(done) {\n  return del([\n    `${config.dist}/**`,\n    `!${config.dist}`,\n    `!${config.dist}/static/**`,\n    '.sass-cache'\n  ], done);\n}\n\nexport function cleanClearCache(done) {\n  return cache.clearAll(done);\n}\n\n\n--- File Index 86: web/koperasi-dashboard/src/boilerplate/tasks/images.js ---\nimport fs from 'fs';\n\nimport gulp from 'gulp';\nimport chalk from 'chalk';\nimport pngquant from 'imagemin-pngquant';\nimport favicons from 'favicons';\nimport mkdirp from 'mkdirp';\n\nimport newer from 'gulp-newer';\nimport cache from 'gulp-cache';\nimport imagemin from 'gulp-imagemin';\nimport spritesmith from 'gulp.spritesmith';\n\nimport config from '../config';\n\nexport function optimizeImages() {\n  return gulp.src([`${config.src}/images/**/*`, `!${config.src}/images/{sprite,sprite/**}`])\n    .pipe(newer(`${config.dist}/images`))\n    .pipe(cache(imagemin({\n      progressive: true,\n      interlaced: true,\n      use: [pngquant()]\n    })))\n    .pipe(gulp.dest(`${config.dist}/images`));\n}\n\nexport function generateSpritesheet() {\n  const spriteData = gulp.src(`${config.src}/images/sprite/*.png`).pipe(spritesmith({\n    retinaSrcFilter: [`${config.src}/images/sprite/*@2x.png`],\n    retinaImgName: '../images/sprite@2x.png',\n    imgName: '../images/sprite.png',\n    cssName: `_sprite.${config.extensions.styles}`,\n    algorithm: 'binary-tree'\n  }));\n  spriteData.on('finish', () => {\n    console.log(chalk.yellow('Spritesheet ready to process....'));\n  });\n  spriteData.on('error', (err) => {\n    console.log(chalk.red('Spritesheet ', err));\n  });\n  spriteData.css.pipe(gulp.dest(`${config.src}/styles/`)).on('end', () => {\n    console.log(chalk.green('Spritesheet _sprite file written...'));\n  });\n  return spriteData.img.pipe(gulp.dest(`${config.dist}/images/`)).on('end', () => {\n    console.log(chalk.green('Spritesheet generated.'));\n  });\n}\n\nexport function generateFavicons(done) {\n  return favicons(`${config.src}/favicon.png`, {\n    appName: config.title,\n    appDescription: config.description,\n    developerName: config.author,\n    developerURL: config.developerURL,\n    background: 'transparent',\n    path: 'images/favicon/',\n    url: 'images/share.jpg',\n    display: 'standalone',\n    orientation: 'portrait',\n    version: config.version,\n    logging: config.verbose,\n    online: false,\n    icons: {\n      android: true,\n      appleIcon: true,\n      appleStartup: true,\n      coast: true,\n      favicons: true,\n      firefox: true,\n      opengraph: false,\n      twitter: false,\n      windows: true,\n      yandex: true\n    }\n  }, (error, response) => {\n    if (error) {\n      console.log(error.status);\n      console.log(error.name);\n      console.log(error.message);\n    }\n\n    const faviconFolder = `${config.dist}/images/favicon/`;\n\n    if (response.images) {\n      mkdirp.sync(faviconFolder);\n      response.images.forEach((image) =>\n        fs.writeFileSync(`${faviconFolder}${image.name}`, image.contents)\n      );\n    }\n\n    if (response.files) {\n      mkdirp.sync(faviconFolder);\n      response.files.forEach((file) =>\n        fs.writeFileSync(`${faviconFolder}${file.name}`, file.contents)\n      );\n    }\n\n    if (response.html) {\n      fs.writeFileSync(`${config.src}/inc/_favicons.html`, response.html.join('\\n'));\n    }\n\n    done();\n  });\n}\n\n\n--- File Index 87: web/koperasi-dashboard/src/boilerplate/tasks/index.js ---\n/**\n * Load tasks and export globals\n */\n\nimport gulp from 'gulp';\nimport chalk from 'chalk';\n\nimport config from '../config';\n\nimport { markup } from './markup';\nimport { bundleApp, bundleVendor } from './scripts';\nimport { processStyles, generateFonts } from './styles';\nimport { optimizeImages, generateSpritesheet, generateFavicons } from './images';\nimport { serve } from './serve';\nimport { watch } from './watch';\nimport { cleanClearCache, cleanDeleteFiles } from './clean';\nimport { buildSitemap } from './build';\nimport { testMarkup, testScripts, testPsiMobile, testPsiDesktop } from './test';\n\n// Content\ngulp.task(markup);\ngulp.task(bundleVendor);\n\ngulp.task(\n  'scripts',\n  gulp.parallel(bundleApp, bundleVendor)\n);\nconst scriptTask = gulp.task('scripts');\nscriptTask.description = 'Bundle app scripts with browserify (watchify) and concatenate vendors.';\n\ngulp.task(\n  'styles',\n  gulp.parallel(processStyles, generateFonts)\n);\nconst stylesTask = gulp.task('styles');\nstylesTask.description =\n  'Compile sass/less/stylus files with sourcemaps + autoprefixer and convert fonts.';\n\ngulp.task(\n  'images',\n  gulp.parallel(optimizeImages, generateSpritesheet, generateFavicons)\n);\nconst imagesTask = gulp.task('images');\nimagesTask.description =\n  'Optimize new images and cache them, create a spritesheet and generate favicons/metas.';\n\n// Utils\ngulp.task(serve);\ngulp.task(watch);\ngulp.task(\n  'clean',\n  gulp.parallel(cleanClearCache, cleanDeleteFiles)\n);\nconst cleanTask = gulp.task('clean');\ncleanTask.description = 'Clean dist folder, gulp all caches and sass cache.';\n\n// Build\ngulp.task(\n  'build',\n  gulp.parallel('scripts', 'styles', buildSitemap)\n);\nconst buildTask = gulp.task('build');\nbuildTask.description = 'Build scripts and styles with minification tasks.';\n\n// Tests\ngulp.task(\n  'testPsi',\n  gulp.parallel(testPsiMobile, testPsiDesktop)\n);\nconst testPsiTask = gulp.task('testPsi');\ntestPsiTask.description = 'PageSpeed Insights reportings.';\n\ngulp.task(testScripts);\ngulp.task(testMarkup);\n\n// Default task\nif (config.args.env === 'dev') {\n  gulp.task(\n    'default',\n    gulp.series(\n      gulp.parallel(markup, 'styles', 'scripts', 'images'),\n      gulp.parallel(serve, watch)\n    )\n  );\n} else if (config.args.env === 'prod') {\n  gulp.task(\n    'default',\n    gulp.series(\n      gulp.parallel(markup, 'images'),\n      'build'\n    )\n  );\n} else {\n  console.log(chalk.red('--env flag should be either dev or prod'));\n  process.exit(1);\n}\n\nconst defaultTask = gulp.task('default');\ndefaultTask.description = 'Launch dev or prod default task.';\n\n\n--- File Index 88: web/koperasi-dashboard/src/boilerplate/tasks/markup.js ---\nimport gulp from 'gulp';\n\nimport preprocess from 'gulp-preprocess';\n\nimport config from '../config';\n\nexport function markup() {\n  return gulp.src(`${config.src}/*.html`, {\n    base: config.src\n  })\n  .pipe(preprocess({\n    context: {\n      ENV: config.args.env,\n      META: {\n        title: config.title,\n        description: config.description,\n        url: config.prodURL,\n        image: config.shareImageURL,\n        twitterHandle: config.twitterHandle,\n        twitterImage: config.twitterImage,\n        themeColor: config.themeColor\n      },\n      UA: config.analyticsUA\n    }\n  }))\n  .pipe(gulp.dest(config.dist));\n}\n\nmarkup.description = 'Process html files with environment configuration.';\n\n\n--- File Index 89: web/koperasi-dashboard/src/boilerplate/tasks/scripts.js ---\nimport gulp from 'gulp';\nimport { exec } from 'child_process';\n\nimport source from 'vinyl-source-stream';\nimport buffer from 'vinyl-buffer';\nimport browserify from 'browserify';\nimport watchify from 'watchify';\nimport babelify from 'babelify';\n\nimport gutil from 'gulp-util';\nimport uglify from 'gulp-uglify';\nimport header from 'gulp-header';\nimport rename from 'gulp-rename';\n\nimport { reload } from './serve';\nimport config, { getConfig } from '../config';\nimport bundleLogger from '../utils/bundleLogger';\nimport handleErrors from '../utils/handleErrors';\nimport concatenateFiles from '../utils/concatenateFiles';\n\nconst envDev = config.args.env === 'dev';\n\nconst b = browserify({\n  transform: ['babelify'],\n  entries: [`${config.src}/scripts/main.${config.extensions.scripts}`],\n  extensions: [config.extensions.scripts],\n  debug: envDev,\n  cache: {},\n  packageCache: {},\n  fullPaths: envDev\n});\n\nconst bundler = envDev ? watchify(b) : b;\n\nconst bundle = (done) => {\n  bundleLogger.start();\n\n  return bundler\n    .bundle()\n    .on('error', handleErrors)\n    .pipe(source('main.js'))\n    .pipe(buffer())\n    .pipe(envDev ? gutil.noop() : uglify())\n    .on('error', handleErrors)\n    .pipe(envDev ? gutil.noop() : header(config.banner))\n    .pipe(envDev ? gutil.noop() : rename({\n      suffix: '.min'\n    }))\n    .on('end', () => {\n      if (envDev) {\n        reload(() => {});\n      } else {\n        done();\n      }\n      bundleLogger.end();\n    })\n    .pipe(gulp.dest(`${config.dist}/scripts`));\n};\n\nif (envDev) {\n  bundler.on('update', bundle);\n}\n\nexport function bundleApp(done) {\n  if (envDev) {\n    bundle();\n    done();\n  } else {\n    bundle(done);\n  }\n}\n\nexport function bundleVendor(done) {\n  const updatedConfig = getConfig();\n  // console.log('Aris Here', updatedConfig.vendors);\n  concatenateFiles({\n    src: updatedConfig.vendors,\n    dest: `${updatedConfig.dist}/scripts`,\n    fileName: 'vendor.js'\n  }, () => {\n    if (!envDev) {\n      const cmd = `./node_modules/.bin/uglifyjs ${updatedConfig.dist}/scripts/vendor.js \\\n        -o ${updatedConfig.dist}/scripts/vendor.min.js`;\n\n      exec(cmd, (error) => {\n        if (error !== null) {\n          console.log(`exec error: ${error}`);\n        } else {\n          done();\n        }\n      });\n    } else {\n      done();\n    }\n  });\n}\n\n\n--- File Index 90: web/koperasi-dashboard/src/boilerplate/tasks/serve.js ---\nimport browserSync from 'browser-sync';\n\nimport config from '../config';\n\nexport const server = browserSync.create();\n\nexport function reload(done) {\n  server.reload();\n  done();\n}\n\nexport function serve(done) {\n  const logLevel = config.verbose ? 'debug' : 'info';\n\n  server.init({\n    server: {\n      baseDir: config.dist,\n      directory: true\n    },\n    port: config.port,\n    logConnections: true,\n    logLevel\n  }, done);\n}\n\nserve.description = 'Serve dist directory using browserSync.';\n\n\n--- File Index 91: web/koperasi-dashboard/src/boilerplate/tasks/styles.js ---\nimport gulp from 'gulp';\n\nimport autoprefixer from 'autoprefixer';\nimport mqpacker from 'css-mqpacker';\nimport csswring from 'csswring';\nimport Fontmin from 'fontmin';\n\nimport gutil from 'gulp-util';\nimport postcss from 'gulp-postcss';\nimport sourcemaps from 'gulp-sourcemaps';\nimport header from 'gulp-header';\nimport rename from 'gulp-rename';\n\nimport config from '../config';\nimport { server } from './serve';\nimport handleErrors from '../utils/handleErrors';\n\nlet preprocessor;\nlet processors;\nconst envDev = config.args.env === 'dev';\n\n// Processors\nif (envDev) {\n  processors = [\n    autoprefixer({\n      browsers: config.browsers\n    })\n  ];\n} else {\n  processors = [\n    autoprefixer({\n      browsers: config.browsers\n    }),\n    mqpacker,\n    csswring({\n      preserveHacks: true,\n      removeAllComments: true\n    })\n  ];\n}\n\n// Preprocessor\nlet sassGlob;\nlet lessGlob;\n\nswitch (config.extensions.styles) {\n  case 'scss': {\n    preprocessor = require('gulp-sass');\n    sassGlob = require('gulp-sass-glob');\n    break;\n  }\n\n  case 'less': {\n    preprocessor = require('gulp-less');\n    lessGlob = require('less-plugin-glob');\n    break;\n  }\n\n  case 'styl': {\n    preprocessor = require('gulp-stylus');\n    break;\n  }\n\n  case 'css': {\n    break;\n  }\n\n  default:\n    console.log('Wrong css extension in package.json');\n    break;\n}\n\nfunction getStylesStream(extension) {\n  switch (extension) {\n    case 'scss':\n      return gulp.src(`${config.src}/styles/main.scss`)\n        .pipe(sassGlob())\n        .pipe(sourcemaps.init())\n        .pipe(preprocessor());\n\n    case 'less':\n      return gulp.src(`${config.src}/styles/main.less`)\n        .pipe(sourcemaps.init())\n        .pipe(preprocessor({\n          plugins: [lessGlob]\n        }));\n\n    case 'styl':\n      return gulp.src(`${config.src}/styles/main.styl`)\n        .pipe(sourcemaps.init())\n        .pipe(preprocessor({\n          'include css': true\n        }));\n\n    default:\n      return gulp.src(`${config.src}/styles/**/*.css`);\n  }\n}\n\nexport function processStyles() {\n  return getStylesStream(config.extensions.styles)\n    .on('error', handleErrors)\n    .pipe(postcss(processors))\n    .pipe(envDev ? sourcemaps.write() : gutil.noop())\n    .pipe(envDev ? gutil.noop() : header(config.banner))\n    .pipe(envDev ? gutil.noop() : rename({\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(`${config.dist}/styles`))\n    .pipe(server.stream());\n}\n\nexport function generateFonts(done) {\n  const fontmin = new Fontmin()\n    .src(`${config.src}/styles/fonts/*.{ttf,otf}`)\n    .use(Fontmin.otf2ttf({\n      clone: true\n    }))\n    .use(Fontmin.ttf2eot({\n      clone: true\n    }))\n    .use(Fontmin.ttf2woff({\n      clone: true\n    }))\n    .use(Fontmin.ttf2svg({\n      clone: true\n    }))\n    .dest(`${config.dist}/styles/fonts`);\n\n  return fontmin.run((err) => {\n    if (err) {\n      console.log(err);\n    }\n    done();\n  });\n}\n\n\n--- File Index 92: web/koperasi-dashboard/src/boilerplate/tasks/watch.js ---\nimport gulp from 'gulp';\n\nimport path from 'path';\nimport chalk from 'chalk';\nimport del from 'del';\n\nimport config from '../config';\n\nimport { reload } from './serve';\nimport { markup } from './markup';\nimport { processStyles, generateFonts } from './styles';\nimport { bundleVendor } from './scripts';\nimport { optimizeImages, generateSpritesheet } from './images';\nimport { testScripts } from './test';\n\nfunction onWatchAdd(filePath) {\n  console.log(`File ${chalk.underline.green(filePath)} has been added.`);\n}\n\nfunction onWatchChange(filePath) {\n  console.log(`File ${chalk.underline.yellow(filePath)} was changed.`);\n}\n\nfunction onWatchRemove(filePath) {\n  const filePathFromSrc = path.relative(path.resolve(config.src), filePath);\n  const destFilePath = path.resolve(config.dist, filePathFromSrc);\n  del.sync(destFilePath);\n\n  console.log(`File ${chalk.underline.red(filePath)} has been removed.`);\n}\n\nfunction onWatchError(error) {\n  console.log(chalk.underline.red('Error happened', error));\n}\n\nfunction addEventsHandlers(watcher) {\n  return watcher\n    .on('add', onWatchAdd)\n    .on('change', onWatchChange)\n    .on('unlink', onWatchRemove)\n    .on('error', onWatchError);\n}\n\nexport function watch(done) {\n  const watchers = [\n    // Watch html files\n    gulp.watch(`${config.src}/*.html`, gulp.series(markup, reload)),\n    gulp.watch(`${config.src}/inc/**/*`, gulp.series(markup, reload)),\n\n    // Watch styles files\n    gulp.watch(\n      `${config.src}/styles/**/*.${config.extensions.styles}`,\n      processStyles\n    ),\n    gulp.watch(`${config.dist}/lib/**/*`),\n    // gulp.watch(`${config.dist}/scripts/bundle.js`, gulp.series(reload)),\n    // gulp.watch(`${config.dist}/scripts/tagihan.js`, gulp.series(reload)),\n    // gulp.watch(`${config.dist}/scripts/dashboard.js`, gulp.series(reload)),\n    // gulp.watch(`${config.dist}/scripts/dispensasi.js`, gulp.series(reload)),\n    gulp.watch(`${config.dist}/scripts/app-bundle.js`, gulp.series(reload)),\n    gulp.watch(`${config.src}/styles/fonts/**/*`, generateFonts),\n\n    // Watch package.json file\n    gulp.watch('package.json', bundleVendor),\n\n    // Watch images files\n    gulp.watch([`${config.src}/images/**/*`, `!${config.src}/images/sprite/**/*`], optimizeImages),\n    gulp.watch(`${config.src}/images/sprite/**/*`, generateSpritesheet),\n\n    // Watch test files\n    gulp.watch(`${config.test}/**/*.js`, testScripts)\n  ];\n\n  watchers.map(watcher => addEventsHandlers(watcher));\n\n  console.log(chalk.green('Watching changes...'));\n  done();\n}\n\nwatch.description = 'Watch all changes in source folder and launch task accordingly.';\n\n\n--- File Index 93: web/koperasi-dashboard/src/boilerplate/utils/bundleLogger.js ---\nimport prettyHrtime from 'pretty-hrtime';\nimport chalk from 'chalk';\n\nlet startTime;\n\nexport default {\n  start: () => {\n    startTime = process.hrtime();\n    console.log('Bundling...');\n  },\n\n  end: () => {\n    const taskTime = process.hrtime(startTime);\n    const prettyTime = prettyHrtime(taskTime);\n    console.log('Bundled in', chalk.magenta(prettyTime));\n  }\n};\n\n\n--- File Index 94: web/koperasi-dashboard/src/boilerplate/utils/concatenateFiles.js ---\nimport fs from 'fs';\nimport path from 'path';\n\nexport default function (opts, cb) {\n  const out = opts.src.map((filePath) => fs.readFileSync(filePath).toString());\n\n  fs.exists(opts.dest, (exists) => {\n    if (!exists) {\n      fs.mkdirSync(opts.dest);\n    }\n    fs.writeFile(path.join(opts.dest, opts.fileName), out.join('\\n'), (err) => {\n      if (err) {\n        console.log(err);\n      } else if (cb) {\n        cb();\n      }\n    });\n  });\n}\n\n\n--- File Index 95: web/koperasi-dashboard/src/boilerplate/utils/handleErrors.js ---\nimport notify from 'gulp-notify';\nimport gutil from 'gulp-util';\n\nexport default function (...args) {\n  gutil.beep();\n\n  // End the task\n  this.emit('end');\n\n  // Notify what's wrong\n  notify.onError({\n    title: 'Error',\n    message: '<%= error.message %>'\n  }).apply(this, args);\n}\n\n\n--- File Index 96: web/koperasi-dashboard/src/src/.eslintrc.js ---\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"globals\": {\n        \"window\": true,\n        \"document\": true,\n        \"console\": true,\n        \"$\": true\n    },\n    \"rules\": {\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n};\n\n--- File Index 97: web/koperasi-dashboard/src/src/scripts/.eslintrc.js ---\nmodule.exports = {\n    \"env\": {\n        \"browser\": true,\n        \"es6\": true\n    },\n    \"extends\": \"eslint:recommended\",\n    \"parserOptions\": {\n        \"sourceType\": \"module\"\n    },\n    \"globals\": {\n        \"window\": true,\n        \"document\": true,\n        \"console\": true,\n        \"$\": true\n    },\n    \"rules\": {\n        \"indent\": [\n            \"error\",\n            2\n        ],\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"quotes\": [\n            \"error\",\n            \"single\"\n        ],\n        \"semi\": [\n            \"error\",\n            \"never\"\n        ]\n    }\n};\n\n--- File Index 98: web/koperasi-dashboard/src/src/scripts/backup-main.js ---\n\nVue.use(BootstrapVue);\n// import DataPasar from 'components/data-pasar.page'\n\nif (self === top) {\n  let antiClickjack = document.getElementById('antiClickjack')\n  antiClickjack.parentNode.removeChild(antiClickjack)\n} else {\n  top.location = self.location\n}\n\nlet sidebarModule = {\n  resolution: 0,\n  open: true,\n  init: function () {\n    this.cacheDom()\n    this.findResolution()\n    this.bindEvents()\n    this.render()\n  },\n  findResolution: function () {\n    if (this.$window.width() < 520) {\n      this.open = false\n      this.render()\n    }\n  },\n  cacheDom: function () {\n    this.$sidebarWrapper = $('#sidebar-wrapper')\n    this.$sidebarButton = $('#sidebar-button')\n    this.$mainWrapper = $('#main-wrapper')\n    this.$window = $(window)\n  },\n  bindEvents: function () {\n    this.$sidebarButton.on('click', this.go.bind(this))\n  },\n  go: function () {\n    this.open = !this.open\n    this.render()\n  },\n  render: function () {\n    if(this.open) {\n      this.$sidebarWrapper.addClass('opened')\n      this.$mainWrapper.addClass('opened')\n    } else {\n      this.$sidebarWrapper.removeClass('opened')\n      this.$mainWrapper.removeClass('opened')\n    }\n  }\n\n}\n\nsidebarModule.init()\n\n// prevent sidebar accordion\n$('.ui.accordion .title').click(e => {\n  e.preventDefault()\n})\n\n\nlet notificationModule = {\n  open: false,\n  state: '',\n  init: function() {\n    this.cacheDom()\n    this.bindEvents()\n    this.render()\n  },\n  cacheDom: function() {\n    this.$mailWrapper = $('#mail-wrapper')\n    this.$alertWrapper = $('#alert-wrapper')\n    this.$mailButton= $('#mail-button')\n    this.$alertButton= $('#alert-button')\n    this.$window = $(window)\n  },\n  bindEvents: function() {\n    this.$mailButton.on('click', this.go.bind(this))\n    this.$alertButton.on('click', this.go.bind(this))\n    this.$window.on('click', this.close.bind(this))\n  },\n  go: function(e) {\n    e.stopPropagation()\n    let clicked = ($(e.target).hasClass('alert')) ? 'alert' : 'mail' \n    if(this.state === clicked) {\n      this.open = (this.open) ? false : true\n    } else {\n      this.open = true\n    }\n    this.state = clicked\n    this.render()\n  },\n  close: function(e) {\n    this.open = false\n    // $('#tooltip-dasboard').removeClass('show')\n    this.render()\n  },\n  render: function() {\n    if(this.open) {\n      if(this.state === 'alert') {\n        this.$alertWrapper.addClass('opened')\n        this.$mailWrapper.removeClass('opened')\n      } else {\n        this.$mailWrapper.addClass('opened')\n        this.$alertWrapper.removeClass('opened')\n      }\n    } else {\n      this.$mailWrapper.removeClass('opened')\n      this.$alertWrapper.removeClass('opened')\n    }\n  }\n\n}\n\nnotificationModule.init()\n\n$('.ui.accordion').accordion()\n$('.ui.dropdown.user.panel')\n  .dropdown({\n    action: 'hide'\n  })\n\n\n$('.ui.dropdown').not('.user').dropdown({\n  forceSelection: false,\n  placeholder: false\n})\n\n$('#example1').calendar()\n$('.checkbox').checkbox()\n\n$('a[data-content]')\n  .popup()\n\n\nwindow.bniSmartTenant = {\n  'line-lazy': {\n    strokepath: [\n      // start:path logo bni\n      {\n        'path': 'M70.1,10.9H6.8c-3.4,0-6.2,2.8-6.2,6.2v24.4c0,3.4,2.8,6.2,6.2,6.2h63.3c3.4,0,6.2-2.8,6.2-6.2V17.1    C76.3,13.7,73.5,10.9,70.1,10.9z M4.7,43.3v0.1H4.5L4.7,43.3z M54.5,44.7h1v0.5C55.2,45,54.8,44.9,54.5,44.7z',\n        'duration': 200\n      },\n      {\n        'path': 'M19.9,42.2h-7.8c-0.9,0.1-1.7-0.2-2.4-0.8C9.1,40.8,8.9,40,9,39.1V20c-0.1-0.9,0.2-1.7,0.7-2.4    c0.7-0.6,1.5-0.8,2.4-0.7h8.2c1.1,0,2.1,0.1,3.2,0.2c0.8,0.1,1.7,0.4,2.4,0.9c0.6,0.3,1.2,0.8,1.6,1.3c0.5,0.5,0.8,1.2,1.1,1.8    c0.2,0.7,0.4,1.4,0.4,2.1c0.1,2.5-1.5,4.8-3.8,5.6c3.3,1.1,5,3.1,5,6.2c0,1.4-0.4,2.7-1.1,3.8c-0.7,1.1-1.7,2-2.9,2.5    c-0.9,0.3-1.8,0.6-2.7,0.7C22.2,42.2,21.1,42.2,19.9,42.2z M14.2,20.7v6.5h4.7c1,0,2-0.1,3-0.4c0.7-0.2,1.3-0.7,1.6-1.4    c0.3-0.5,0.4-1.1,0.4-1.6c0.1-1.1-0.4-2.1-1.4-2.6c-1.3-0.5-2.8-0.7-4.2-0.6L14.2,20.7z M19.5,31h-5.3v7.4h5.5    c3.5,0,5.2-1.3,5.2-3.8c0.1-1.1-0.4-2.2-1.3-2.8C22.3,31.2,20.9,30.9,19.5,31L19.5,31z',\n        'duration': 200\n      },\n      {\n        'path': 'M41.3,19.5l9.9,15V19.3c-0.1-0.8,0.2-1.6,0.6-2.2c0.4-0.5,1.1-0.8,1.7-0.7c0.7,0,1.3,0.2,1.8,0.7    c0.5,0.6,0.7,1.4,0.6,2.2v20c0,2.2-0.9,3.3-2.8,3.3c-0.4,0-0.8-0.1-1.2-0.2c-0.4-0.1-0.7-0.4-1-0.6c-0.3-0.3-0.6-0.6-0.9-1    l-0.9-1.2l-9.7-14.8v14.9c0.1,0.8-0.2,1.6-0.7,2.2c-0.4,0.5-1.1,0.8-1.7,0.8c-0.7,0-1.3-0.2-1.8-0.8c-0.5-0.6-0.7-1.4-0.7-2.2    V20.1c0-0.7,0.1-1.4,0.3-2c0.2-0.5,0.6-1,1.1-1.3c0.5-0.3,1.1-0.5,1.7-0.5c0.8,0,1.5,0.3,2,0.8c0.3,0.3,0.5,0.6,0.8,1L41.3,19.5z',\n        'duration': 200\n      },\n      {\n        'path': 'M61.7,39.5v-20c-0.1-0.8,0.2-1.7,0.7-2.3c0.5-0.5,1.1-0.8,1.8-0.8c0.7,0,1.4,0.3,1.9,0.8    c0.5,0.7,0.8,1.5,0.7,2.4v20c0.1,0.8-0.2,1.7-0.7,2.4c-0.5,0.5-1.2,0.8-1.9,0.8c-0.7,0-1.4-0.3-1.8-0.8    C61.9,41.2,61.7,40.4,61.7,39.5z',\n        'duration': 200\n      },\n      // end:path logo bni\n      // start:path smart\n      {\n        'path': 'M90.9,7.9c0,0.6-0.2,1.1-0.5,1.6c-0.3,0.5-0.8,0.9-1.3,1.1C88.4,10.9,87.7,11,87,11c-0.8,0-1.7-0.2-2.4-0.6    c-0.4-0.3-0.8-0.6-1.1-1.1C83.2,9,83.1,8.6,83,8.1c0-0.5,0.4-0.9,0.9-0.9c0,0,0,0,0,0c0.2,0,0.4,0.1,0.5,0.2    c0.2,0.2,0.3,0.4,0.4,0.6c0.1,0.3,0.2,0.5,0.4,0.8c0.2,0.2,0.4,0.4,0.6,0.5c0.3,0.1,0.7,0.2,1,0.2c0.5,0,1-0.1,1.4-0.4    c0.3-0.2,0.5-0.6,0.6-1c0-0.3-0.1-0.6-0.3-0.8c-0.2-0.2-0.5-0.4-0.8-0.5c-0.3-0.1-0.7-0.2-1.3-0.3c-0.6-0.1-1.2-0.3-1.8-0.6    c-0.5-0.2-0.8-0.5-1.1-0.9c-0.3-0.4-0.4-0.9-0.4-1.4c0-0.5,0.2-1,0.4-1.4c0.3-0.5,0.8-0.8,1.3-1c0.6-0.2,1.3-0.4,2-0.3    c0.5,0,1.1,0.1,1.6,0.2c0.4,0.1,0.8,0.3,1.1,0.6c0.3,0.2,0.5,0.5,0.6,0.8c0.1,0.2,0.2,0.5,0.2,0.8c0,0.2-0.1,0.5-0.2,0.6    c-0.2,0.2-0.4,0.3-0.6,0.3c-0.2,0-0.4,0-0.5-0.2c-0.2-0.2-0.3-0.4-0.4-0.6c-0.2-0.3-0.4-0.6-0.7-0.9c-0.4-0.2-0.8-0.3-1.2-0.3    c-0.4,0-0.9,0.1-1.2,0.3c-0.3,0.2-0.5,0.5-0.5,0.8c0,0.2,0.1,0.4,0.2,0.5c0.1,0.2,0.3,0.3,0.4,0.4c0.2,0.1,0.4,0.2,0.6,0.2l1,0.3    c0.5,0.1,1,0.3,1.5,0.4c0.4,0.1,0.8,0.3,1.2,0.6c0.3,0.2,0.6,0.5,0.7,0.9C90.8,7,90.9,7.5,90.9,7.9z',\n        'duration': 200\n      },\n      {\n        'path': 'M102.9,9.4l-1.6-6.3v6.8c0,0.3-0.1,0.6-0.2,0.9c-0.4,0.4-0.9,0.4-1.3,0c0,0,0,0,0,0c-0.2-0.2-0.3-0.5-0.3-0.9    V2.1c0-0.3,0.1-0.7,0.3-0.9C100,1,100.4,1,100.7,1h0.6c0.3,0,0.5,0,0.8,0.1c0.2,0.1,0.3,0.2,0.4,0.4c0.1,0.3,0.2,0.6,0.3,0.9    l1.4,5.4l1.4-5.4c0.1-0.3,0.2-0.6,0.3-0.9c0.1-0.2,0.2-0.3,0.4-0.4c0.3-0.1,0.5-0.1,0.8-0.1h0.6c0.3,0,0.6,0.1,0.9,0.2    c0.3,0.2,0.4,0.5,0.3,0.9v7.8c0,0.3-0.1,0.6-0.2,0.9c-0.2,0.2-0.4,0.3-0.7,0.3c-0.2,0-0.5-0.1-0.6-0.3c-0.2-0.2-0.3-0.5-0.3-0.9    V3.1l-1.6,6.3c-0.1,0.4-0.2,0.7-0.2,0.9c-0.1,0.2-0.2,0.4-0.4,0.5c-0.2,0.2-0.5,0.3-0.7,0.2c-0.4,0-0.8-0.2-1-0.5    c-0.1-0.2-0.2-0.3-0.2-0.5L102.9,9.4z',\n        'duration': 200\n      },\n      {\n        'path': 'M124.3,9.7l-0.5-1.2h-4l-0.5,1.3c-0.1,0.4-0.3,0.7-0.5,1c-0.2,0.2-0.4,0.3-0.6,0.3c-0.3,0-0.5-0.1-0.7-0.3    c-0.2-0.2-0.3-0.4-0.3-0.6c0-0.1,0-0.3,0.1-0.4c0-0.1,0.1-0.3,0.2-0.6l2.5-6.4l0.3-0.7c0.1-0.2,0.2-0.4,0.3-0.6    c0.1-0.2,0.3-0.3,0.4-0.4c0.2-0.1,0.5-0.2,0.7-0.2c0.2,0,0.5,0,0.7,0.2c0.2,0.1,0.3,0.2,0.4,0.4c0.1,0.2,0.2,0.4,0.3,0.5l0.3,0.8    l2.6,6.4c0.2,0.3,0.3,0.7,0.3,1.1c0,0.2-0.1,0.5-0.3,0.6c-0.2,0.2-0.4,0.3-0.7,0.3c-0.1,0-0.3,0-0.4-0.1c-0.1-0.1-0.2-0.1-0.3-0.2    c-0.1-0.1-0.2-0.3-0.2-0.4L124.3,9.7z M120.3,7h3l-1.5-4.1L120.3,7z',\n        'duration': 200\n      },\n      {\n        'path': 'M137.5,6.6h-0.7v3.2c0,0.3-0.1,0.7-0.3,0.9c-0.2,0.2-0.4,0.3-0.7,0.3c-0.3,0-0.6-0.1-0.7-0.3    c-0.2-0.3-0.3-0.6-0.3-0.9V2.2c-0.1-0.6,0.3-1.1,0.8-1.2c0.1,0,0.3,0,0.4,0h3.3c0.4,0,0.8,0,1.1,0.1c0.3,0,0.6,0.1,0.9,0.2    c0.3,0.1,0.6,0.3,0.8,0.6c0.2,0.2,0.4,0.5,0.5,0.9c0.1,0.3,0.2,0.7,0.2,1c0,0.6-0.2,1.3-0.6,1.8c-0.5,0.5-1.2,0.8-1.9,0.9    c0.4,0.2,0.7,0.5,1,0.8c0.3,0.4,0.6,0.8,0.9,1.2c0.2,0.4,0.4,0.7,0.6,1.1c0.1,0.2,0.2,0.5,0.2,0.7c0,0.1,0,0.3-0.1,0.4    c-0.1,0.1-0.2,0.2-0.3,0.3c-0.2,0.1-0.3,0.1-0.5,0.1c-0.2,0-0.4-0.1-0.6-0.2c-0.2-0.1-0.3-0.2-0.4-0.4c-0.1-0.2-0.3-0.4-0.4-0.7    l-0.8-1.3c-0.2-0.4-0.5-0.8-0.8-1.1c-0.2-0.2-0.4-0.4-0.7-0.5C138.1,6.7,137.8,6.6,137.5,6.6z M138.6,2.5h-1.9v2.7h1.8    c0.4,0,0.8,0,1.2-0.1c0.3-0.1,0.6-0.2,0.8-0.4c0.2-0.2,0.3-0.5,0.3-0.8c0-0.3-0.1-0.5-0.2-0.7c-0.1-0.2-0.3-0.4-0.6-0.5    C139.6,2.5,139.1,2.4,138.6,2.5z',\n        'duration': 200\n      },\n      {\n        'path': 'M157.4,2.6h-2.2v7.2c0,0.3-0.1,0.7-0.3,0.9c-0.2,0.2-0.4,0.3-0.7,0.3c-0.3,0-0.5-0.1-0.7-0.3    c-0.2-0.3-0.3-0.6-0.3-0.9V2.6H151c-0.3,0-0.5-0.1-0.8-0.2C150.1,2.2,150,2,150,1.8c0-0.2,0.1-0.5,0.3-0.6    c0.2-0.2,0.5-0.2,0.8-0.2h6.4c0.3,0,0.6,0.1,0.8,0.2c0.2,0.2,0.3,0.4,0.2,0.6c0,0.2-0.1,0.4-0.3,0.6    C157.9,2.6,157.7,2.6,157.4,2.6z',\n        'duration': 200\n      },\n      // end:path smart\n      // start:path logo A in tenant\n      {\n        'path': 'M155.3,44.7c-1.8,0-3.3-1.5-3.3-3.3c0-0.7,0.2-1.3,0.6-1.9L176,5.2c0.6-0.9,1.6-1.4,2.7-1.4l0,0    c1.1,0,2.1,0.6,2.7,1.5l22.1,33.8c0.9,1.6,0.4,3.6-1.2,4.5c-1.5,0.9-3.4,0.5-4.4-0.9L178.7,13l-20.6,30.2    C157.5,44.1,156.4,44.7,155.3,44.7z',\n        'duration': 300\n      },\n      // end:path logo A in tenant\n      // start:path dotted\n      {\n        'path': 'M174.4,28.4h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6V31    C171.8,29.6,172.9,28.4,174.4,28.4z',\n        'duration': 50\n      },\n      {\n        'path': 'M182.2,28.4h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6V31    C179.6,29.6,180.7,28.4,182.2,28.4z',\n        'duration': 50\n      },\n      {\n        'path': 'M174.4,35.7h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6v-0.4    C171.8,36.9,172.9,35.7,174.4,35.7z',\n        'duration': 50\n      },\n      {\n        'path': 'M182.2,35.7h0.4c1.4,0,2.6,1.2,2.6,2.6v0.4c0,1.4-1.2,2.6-2.6,2.6h-0.4c-1.4,0-2.6-1.2-2.6-2.6v-0.4    C179.6,36.9,180.7,35.7,182.2,35.7z',\n        'duration': 50\n      },\n      // end:path dotted\n      // start:path smart\n      {\n        'path': 'M101.7,19.9h-6.4v21c0.1,1-0.2,1.9-0.8,2.7c-0.5,0.6-1.3,0.9-2.1,0.9c-0.8,0-1.6-0.3-2.1-0.9    c-0.6-0.8-0.9-1.7-0.8-2.7v-21h-6.4c-0.8,0.1-1.6-0.2-2.2-0.7c-0.5-0.4-0.8-1.1-0.7-1.7c0-0.7,0.2-1.3,0.8-1.8    c0.6-0.5,1.4-0.7,2.2-0.6h18.6c0.8-0.1,1.6,0.2,2.3,0.7c0.5,0.4,0.8,1.1,0.7,1.8c0,0.7-0.3,1.3-0.8,1.7    C103.3,19.7,102.5,20,101.7,19.9z',\n        'duration': 200\n      },\n      {\n        'path': 'M129.2,19.6h-13.2v7.1h8.7c0.7-0.1,1.4,0.2,2,0.6c0.4,0.4,0.7,1,0.7,1.6c0,0.6-0.2,1.2-0.6,1.6    c-0.6,0.5-1.3,0.7-2,0.6h-8.7v8.2h13.6c0.7-0.1,1.5,0.2,2.1,0.6c0.5,0.4,0.7,1.1,0.7,1.7c0,0.6-0.2,1.2-0.7,1.7    c-0.6,0.5-1.3,0.7-2.1,0.6h-15.9c-1.7,0.3-3.3-0.8-3.6-2.4c-0.1-0.4-0.1-0.8,0-1.1V18.7c0-0.7,0.1-1.4,0.4-2.1    c0.2-0.5,0.7-0.9,1.2-1.2c0.6-0.3,1.3-0.4,2-0.4h15.4c0.7-0.1,1.5,0.2,2.1,0.6c0.5,0.4,0.7,1,0.7,1.6c0,0.6-0.2,1.2-0.7,1.6    C130.7,19.4,130,19.6,129.2,19.6z',\n        'duration': 200\n      },\n      {\n        'path': 'M141.1,18.1l11.2,17V17.9c-0.1-0.9,0.2-1.8,0.7-2.5c0.5-0.6,1.2-0.9,1.9-0.8c0.8,0,1.5,0.3,2,0.8    c0.5,0.7,0.8,1.6,0.7,2.5v22.7c0,2.5-1.1,3.8-3.1,3.8c-0.5,0-1-0.1-1.4-0.2c-0.4-0.2-0.8-0.4-1.2-0.7c-0.4-0.3-0.7-0.7-1-1.1    c-0.3-0.4-0.6-0.9-0.9-1.4l-11-16.8v16.9c0.1,0.9-0.2,1.8-0.8,2.5c-0.5,0.6-1.2,0.9-2,0.9c-0.8,0-1.5-0.3-2-0.9    c-0.5-0.7-0.8-1.6-0.8-2.5V18.8c0-0.8,0.1-1.5,0.3-2.2c0.3-0.6,0.7-1.1,1.3-1.5c0.6-0.4,1.2-0.6,1.9-0.6c0.9,0,1.7,0.3,2.3,0.9    c0.3,0.3,0.6,0.7,0.9,1.1L141.1,18.1z',\n        'duration': 200\n      },\n      {\n        'path': 'M206.1,18.1l11.2,17V17.9c-0.1-0.9,0.2-1.8,0.7-2.5c0.5-0.6,1.2-0.9,1.9-0.8c0.8,0,1.5,0.3,2,0.8    c0.5,0.7,0.8,1.6,0.7,2.5v22.7c0,2.5-1.1,3.8-3.1,3.8c-0.5,0-1-0.1-1.4-0.2c-0.4-0.2-0.8-0.4-1.2-0.7c-0.4-0.3-0.7-0.7-1-1.1    c-0.3-0.4-0.6-0.9-0.9-1.4l-11-16.8v16.9c0.1,0.9-0.2,1.8-0.8,2.5c-0.5,0.6-1.2,0.9-2,0.9c-0.8,0-1.5-0.3-2-0.9    c-0.5-0.7-0.8-1.6-0.8-2.5V18.8c0-0.8,0.1-1.5,0.3-2.2c0.3-0.6,0.7-1.1,1.3-1.5c0.6-0.4,1.2-0.6,1.9-0.6c0.9,0,1.7,0.3,2.3,0.9    c0.3,0.3,0.6,0.7,0.9,1.1L206.1,18.1z',\n        'duration': 200\n      },\n      {\n        'path': 'M246.7,19.9h-6.4v21c0.1,1-0.2,1.9-0.8,2.7c-0.5,0.6-1.3,0.9-2.1,0.9c-0.8,0-1.6-0.3-2.1-0.9    c-0.6-0.8-0.9-1.7-0.8-2.7v-21h-6.4c-0.8,0.1-1.6-0.2-2.2-0.7c-0.5-0.4-0.8-1.1-0.7-1.7c0-0.7,0.2-1.3,0.8-1.8    c0.6-0.5,1.4-0.7,2.2-0.6h18.6c0.8-0.1,1.6,0.2,2.2,0.7c0.5,0.4,0.8,1.1,0.7,1.8c0,0.7-0.3,1.3-0.8,1.7    C248.3,19.7,247.5,20,246.7,19.9z',\n        'duration': 200\n      }\n      // end:path smart\n    ],\n    'dimensions': {\n      width: 251,\n      height: 49\n    }\n  }\n}\n\n\n// drawing masking background\nwindow.maskingBackground = (active) => {\n  const elementSelect = $('[masking=background]')\n  if (active) {\n    elementSelect.addClass('active')\n  }\n  else {\n    elementSelect.removeClass('active')\n  }\n}\n\n// drawing logo\nwindow.drawLogo = (el, path, init) => {\n  const lazy = $(el)\n  let options = {}\n\n  options.init = init\n  options.svgData = path\n  options.strokeWidth = 0.5\n  options.strokeColor = '#00555f'\n  // loop: erase, and re run paint\n  options.onComplete = () => {\n    $('[masking=image]').addClass('active')\n    $('[masking=svg]').removeClass('acitve')\n    setTimeout(function () {\n      // lazy.lazylinepainter('erase')\n      $('[masking=image]').removeClass('active')\n      $('[masking=svg]').addClass('acitve')\n      lazy.lazylinepainter('paint')\n    }, 1000) \n  }\n  // run lazy\n  if (init) lazy.lazylinepainter(options).lazylinepainter('paint')\n  else lazy.lazylinepainter('erase')\n}\n\nwindow.maskingBackground(true)\nwindow.drawLogo('#line-lazy', window.bniSmartTenant, true)\n$(document).ready(function () {\n  // run when not in epasar\n  if($('#epasar').length < 1) {\n    setTimeout(() => {\n      window.maskingBackground(false)\n      window.drawLogo('#line-lazy', window.bniSmartTenant, false)\n    }, 0)\n  }\n})\n\n--- File Index 99: web/koperasi-dashboard/src/src/scripts/main.js ---\n// import Muc from 'views/muc'\n// import View from 'views/view'\n// import Component from 'components/tagihan.component'\n// import Mitra from 'components/mitra.component'\n// import Popup from 'components/popup.component'\n\n--- File Index 100: web/koperasi-dashboard/src/src/scripts/views/muc.js ---\n// (function (global, factory) {\n// \ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n// \ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n// \t(factory(global.window));\n// }(this, (function (strophe_js) { 'use strict';\n\n// /*\n//  *Plugin to implement the MUC extension.\n//    http://xmpp.org/extensions/xep-0045.html\n//  *Previous Author:\n//     Nathan Zorn <nathan.zorn@gmail.com>\n//  *Complete CoffeeScript rewrite:\n//     Andreas Guth <guth@dbis.rwth-aachen.de>\n//  */\n\n// var Occupant;\n// var RoomConfig;\n// var XmppRoom;\n// var hasProp = {}.hasOwnProperty;\n// var bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };\n\n// strophe_js.Strophe.addConnectionPlugin('muc', {\n//   _connection: null,\n//   rooms: {},\n//   roomNames: [],\n\n//   /*Function\n//   Initialize the MUC plugin. Sets the correct connection object and\n//   extends the namesace.\n//    */\n//   init: function(conn) {\n//     this._connection = conn;\n//     this._muc_handler = null;\n//     strophe_js.Strophe.addNamespace('MUC_OWNER', strophe_js.Strophe.NS.MUC + \"#owner\");\n//     strophe_js.Strophe.addNamespace('MUC_ADMIN', strophe_js.Strophe.NS.MUC + \"#admin\");\n//     strophe_js.Strophe.addNamespace('MUC_USER', strophe_js.Strophe.NS.MUC + \"#user\");\n//     strophe_js.Strophe.addNamespace('MUC_ROOMCONF', strophe_js.Strophe.NS.MUC + \"#roomconfig\");\n//     return strophe_js.Strophe.addNamespace('MUC_REGISTER', \"jabber:iq:register\");\n//   },\n\n//   /*Function\n//   Join a multi-user chat room\n//   Parameters:\n//   (String) room - The multi-user chat room to join.\n//   (String) nick - The nickname to use in the chat room. Optional\n//   (Function) msg_handler_cb - The function call to handle messages from the\n//   specified chat room.\n//   (Function) pres_handler_cb - The function call back to handle presence\n//   in the chat room.\n//   (Function) roster_cb - The function call to handle roster info in the chat room\n//   (String) password - The optional password to use. (password protected\n//   rooms only)\n//   (Object) history_attrs - Optional attributes for retrieving history\n//   (XML DOM Element) extended_presence - Optional XML for extending presence\n//    */\n//   join: function(room, nick, msg_handler_cb, pres_handler_cb, roster_cb, password, history_attrs, extended_presence) {\n//     var msg, room_nick;\n//     room_nick = this.test_append_nick(room, nick);\n//     msg = strophe_js.$pres({\n//       from: this._connection.jid,\n//       to: room_nick\n//     }).c(\"x\", {\n//       xmlns: strophe_js.Strophe.NS.MUC\n//     });\n//     if (history_attrs != null) {\n//       msg = msg.c(\"history\", history_attrs).up();\n//     }\n//     if (password != null) {\n//       msg.cnode(strophe_js.Strophe.xmlElement(\"password\", [], password));\n//     }\n//     if (extended_presence != null) {\n//       msg.up().cnode(extended_presence);\n//     }\n//     if (this._muc_handler == null) {\n//       this._muc_handler = this._connection.addHandler((function(_this) {\n//         return function(stanza) {\n//           var from, handler, handlers, i, id, len, roomname, x, xmlns, xquery;\n//           from = stanza.getAttribute('from');\n//           if (!from) {\n//             return true;\n//           }\n//           roomname = from.split(\"/\")[0];\n//           if (!_this.rooms[roomname]) {\n//             return true;\n//           }\n//           room = _this.rooms[roomname];\n//           handlers = {};\n//           if (stanza.nodeName === \"message\") {\n//             handlers = room._message_handlers;\n//           } else if (stanza.nodeName === \"presence\") {\n//             xquery = stanza.getElementsByTagName(\"x\");\n//             if (xquery.length > 0) {\n//               for (i = 0, len = xquery.length; i < len; i++) {\n//                 x = xquery[i];\n//                 xmlns = x.getAttribute(\"xmlns\");\n//                 if (xmlns && xmlns.match(strophe_js.Strophe.NS.MUC)) {\n//                   handlers = room._presence_handlers;\n//                   break;\n//                 }\n//               }\n//             }\n//           }\n//           for (id in handlers) {\n//             handler = handlers[id];\n//             if (!handler(stanza, room)) {\n//               delete handlers[id];\n//             }\n//           }\n//           return true;\n//         };\n//       })(this));\n//     }\n//     if (!this.rooms.hasOwnProperty(room)) {\n//       this.rooms[room] = new XmppRoom(this, room, nick, password);\n//       if (pres_handler_cb) {\n//         this.rooms[room].addHandler('presence', pres_handler_cb);\n//       }\n//       if (msg_handler_cb) {\n//         this.rooms[room].addHandler('message', msg_handler_cb);\n//       }\n//       if (roster_cb) {\n//         this.rooms[room].addHandler('roster', roster_cb);\n//       }\n//       this.roomNames.push(room);\n//     }\n//     return this._connection.send(msg);\n//   },\n\n//   /*Function\n//   Leave a multi-user chat room\n//   Parameters:\n//   (String) room - The multi-user chat room to leave.\n//   (String) nick - The nick name used in the room.\n//   (Function) handler_cb - Optional function to handle the successful leave.\n//   (String) exit_msg - optional exit message.\n//   Returns:\n//   iqid - The unique id for the room leave.\n//    */\n//   leave: function(room, nick, handler_cb, exit_msg) {\n//     var id, presence, presenceid, room_nick;\n//     id = this.roomNames.indexOf(room);\n//     delete this.rooms[room];\n//     if (id >= 0) {\n//       this.roomNames.splice(id, 1);\n//       if (this.roomNames.length === 0) {\n//         this._connection.deleteHandler(this._muc_handler);\n//         this._muc_handler = null;\n//       }\n//     }\n//     room_nick = this.test_append_nick(room, nick);\n//     presenceid = this._connection.getUniqueId();\n//     presence = strophe_js.$pres({\n//       type: \"unavailable\",\n//       id: presenceid,\n//       from: this._connection.jid,\n//       to: room_nick\n//     });\n//     if (exit_msg != null) {\n//       presence.c(\"status\", exit_msg);\n//     }\n//     if (handler_cb != null) {\n//       this._connection.addHandler(handler_cb, null, \"presence\", null, presenceid);\n//     }\n//     this._connection.send(presence);\n//     return presenceid;\n//   },\n\n//   /*Function\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) nick - The nick name used in the chat room.\n//   (String) message - The plaintext message to send to the room.\n//   (String) html_message - The message to send to the room with html markup.\n//   (String) type - \"groupchat\" for group chat messages o\n//                   \"chat\" for private chat messages\n//   Returns:\n//   msgiq - the unique id used to send the message\n//    */\n//   message: function(room, nick, message, html_message, type, msgid) {\n//     var msg, parent, room_nick;\n//     room_nick = this.test_append_nick(room, nick);\n//     type = type || (nick != null ? \"chat\" : \"groupchat\");\n//     msgid = msgid || this._connection.getUniqueId();\n//     msg = strophe_js.$msg({\n//       to: room_nick,\n//       from: this._connection.jid,\n//       type: type,\n//       id: msgid\n//     }).c(\"body\").t(message);\n//     msg.up();\n//     if (html_message != null) {\n//       msg.c(\"html\", {\n//         xmlns: strophe_js.Strophe.NS.XHTML_IM\n//       }).c(\"body\", {\n//         xmlns: strophe_js.Strophe.NS.XHTML\n//       }).h(html_message);\n//       if (msg.node.childNodes.length === 0) {\n//         parent = msg.node.parentNode;\n//         msg.up().up();\n//         msg.node.removeChild(parent);\n//       } else {\n//         msg.up().up();\n//       }\n//     }\n//     msg.c(\"x\", {\n//       xmlns: \"jabber:x:event\"\n//     }).c(\"composing\");\n//     this._connection.send(msg);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Convenience Function to send a Message to all Occupants\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) message - The plaintext message to send to the room.\n//   (String) html_message - The message to send to the room with html markup.\n//   (String) msgid - Optional unique ID which will be set as the 'id' attribute of the stanza\n//   Returns:\n//   msgiq - the unique id used to send the message\n//    */\n//   groupchat: function(room, message, html_message, msgid) {\n//     return this.message(room, null, message, html_message, void 0, msgid);\n//   },\n\n//   /*Function\n//   Send a mediated invitation.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) receiver - The invitation's receiver.\n//   (String) reason - Optional reason for joining the room.\n//   Returns:\n//   msgiq - the unique id used to send the invitation\n//    */\n//   invite: function(room, receiver, reason) {\n//     var invitation, msgid;\n//     msgid = this._connection.getUniqueId();\n//     invitation = strophe_js.$msg({\n//       from: this._connection.jid,\n//       to: room,\n//       id: msgid\n//     }).c('x', {\n//       xmlns: strophe_js.Strophe.NS.MUC_USER\n//     }).c('invite', {\n//       to: receiver\n//     });\n//     if (reason != null) {\n//       invitation.c('reason', reason);\n//     }\n//     this._connection.send(invitation);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Send a mediated multiple invitation.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Array) receivers - The invitation's receivers.\n//   (String) reason - Optional reason for joining the room.\n//   Returns:\n//   msgiq - the unique id used to send the invitation\n//    */\n//   multipleInvites: function(room, receivers, reason) {\n//     var i, invitation, len, msgid, receiver;\n//     msgid = this._connection.getUniqueId();\n//     invitation = strophe_js.$msg({\n//       from: this._connection.jid,\n//       to: room,\n//       id: msgid\n//     }).c('x', {\n//       xmlns: strophe_js.Strophe.NS.MUC_USER\n//     });\n//     for (i = 0, len = receivers.length; i < len; i++) {\n//       receiver = receivers[i];\n//       invitation.c('invite', {\n//         to: receiver\n//       });\n//       if (reason != null) {\n//         invitation.c('reason', reason);\n//         invitation.up();\n//       }\n//       invitation.up();\n//     }\n//     this._connection.send(invitation);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Send a direct invitation.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) receiver - The invitation's receiver.\n//   (String) reason - Optional reason for joining the room.\n//   (String) password - Optional password for the room.\n//   Returns:\n//   msgiq - the unique id used to send the invitation\n//    */\n//   directInvite: function(room, receiver, reason, password) {\n//     var attrs, invitation, msgid;\n//     msgid = this._connection.getUniqueId();\n//     attrs = {\n//       xmlns: 'jabber:x:conference',\n//       jid: room\n//     };\n//     if (reason != null) {\n//       attrs.reason = reason;\n//     }\n//     if (password != null) {\n//       attrs.password = password;\n//     }\n//     invitation = strophe_js.$msg({\n//       from: this._connection.jid,\n//       to: receiver,\n//       id: msgid\n//     }).c('x', attrs);\n//     this._connection.send(invitation);\n//     return msgid;\n//   },\n\n//   /*Function\n//   Queries a room for a list of occupants\n//   (String) room - The multi-user chat room name.\n//   (Function) success_cb - Optional function to handle the info.\n//   (Function) error_cb - Optional function to handle an error.\n//   Returns:\n//   id - the unique id used to send the info request\n//    */\n//   queryOccupants: function(room, success_cb, error_cb) {\n//     var attrs, info;\n//     attrs = {\n//       xmlns: strophe_js.Strophe.NS.DISCO_ITEMS\n//     };\n//     info = strophe_js.$iq({\n//       from: this._connection.jid,\n//       to: room,\n//       type: 'get'\n//     }).c('query', attrs);\n//     return this._connection.sendIQ(info, success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Start a room configuration.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Function) handler_cb - Optional function to handle the config form.\n//   Returns:\n//   id - the unique id used to send the configuration request\n//    */\n//   configure: function(room, handler_cb, error_cb) {\n//     var config, stanza;\n//     config = strophe_js.$iq({\n//       to: room,\n//       type: \"get\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     });\n//     stanza = config.tree();\n//     return this._connection.sendIQ(stanza, handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Cancel the room configuration\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   Returns:\n//   id - the unique id used to cancel the configuration.\n//    */\n//   cancelConfigure: function(room) {\n//     var config, stanza;\n//     config = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     }).c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"cancel\"\n//     });\n//     stanza = config.tree();\n//     return this._connection.sendIQ(stanza);\n//   },\n\n//   /*Function\n//   Save a room configuration.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Array) config- Form Object or an array of form elements used to configure the room.\n//   Returns:\n//   id - the unique id used to save the configuration.\n//    */\n//   saveConfiguration: function(room, config, success_cb, error_cb) {\n//     var conf, i, iq, len, stanza;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     });\n//     if (typeof strophe_js.Strophe.x !== \"undefined\" && typeof strophe_js.Strophe.x.Form !== \"undefined\" && config instanceof strophe_js.Strophe.x.Form) {\n//       config.type = \"submit\";\n//       iq.cnode(config.toXML());\n//     } else {\n//       iq.c(\"x\", {\n//         xmlns: \"jabber:x:data\",\n//         type: \"submit\"\n//       });\n//       for (i = 0, len = config.length; i < len; i++) {\n//         conf = config[i];\n//         iq.cnode(conf).up();\n//       }\n//     }\n//     stanza = iq.tree();\n//     return this._connection.sendIQ(stanza, success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   Returns:\n//   id - the unique id used to create the chat room.\n//    */\n//   createInstantRoom: function(room, success_cb, error_cb) {\n//     var roomiq;\n//     roomiq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     }).c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"submit\"\n//     });\n//     return this._connection.sendIQ(roomiq.tree(), success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Object) config - the configuration. ex: {\"muc#roomconfig_publicroom\": \"0\", \"muc#roomconfig_persistentroom\": \"1\"}\n//   Returns:\n//   id - the unique id used to create the chat room.\n//    */\n//   createConfiguredRoom: function(room, config, success_cb, error_cb) {\n//     var k, roomiq, v;\n//     roomiq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_OWNER\n//     }).c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"submit\"\n//     });\n//     roomiq.c('field', {\n//       'var': 'FORM_TYPE'\n//     }).c('value').t('http://jabber.org/protocol/muc#roomconfig').up().up();\n//     for (k in config) {\n//       if (!hasProp.call(config, k)) continue;\n//       v = config[k];\n//       roomiq.c('field', {\n//         'var': k\n//       }).c('value').t(v).up().up();\n//     }\n//     return this._connection.sendIQ(roomiq.tree(), success_cb, error_cb);\n//   },\n\n//   /*Function\n//   Set the topic of the chat room.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) topic - Topic message.\n//    */\n//   setTopic: function(room, topic) {\n//     var msg;\n//     msg = strophe_js.$msg({\n//       to: room,\n//       from: this._connection.jid,\n//       type: \"groupchat\"\n//     }).c(\"subject\", {\n//       xmlns: \"jabber:client\"\n//     }).t(topic);\n//     return this._connection.send(msg.tree());\n//   },\n\n//   /*Function\n//   Internal Function that Changes the role or affiliation of a member\n//   of a MUC room. This function is used by modifyRole and modifyAffiliation.\n//   The modification can only be done by a room moderator. An error will be\n//   returned if the user doesn't have permission.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Object) item - Object with nick and role or jid and affiliation attribute\n//   (String) reason - Optional reason for the change.\n//   (Function) handler_cb - Optional callback for success\n//   (Function) error_cb - Optional callback for error\n//   Returns:\n//   iq - the id of the mode change request.\n//    */\n//   _modifyPrivilege: function(room, item, reason, handler_cb, error_cb) {\n//     var iq;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_ADMIN\n//     }).cnode(item.node);\n//     if (reason != null) {\n//       iq.c(\"reason\", reason);\n//     }\n//     return this._connection.sendIQ(iq.tree(), handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Changes the role of a member of a MUC room.\n//   The modification can only be done by a room moderator. An error will be\n//   returned if the user doesn't have permission.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) nick - The nick name of the user to modify.\n//   (String) role - The new role of the user.\n//   (String) affiliation - The new affiliation of the user.\n//   (String) reason - Optional reason for the change.\n//   (Function) handler_cb - Optional callback for success\n//   (Function) error_cb - Optional callback for error\n//   Returns:\n//   iq - the id of the mode change request.\n//    */\n//   modifyRole: function(room, nick, role, reason, handler_cb, error_cb) {\n//     var item;\n//     item = strophe_js.$build(\"item\", {\n//       nick: nick,\n//       role: role\n//     });\n//     return this._modifyPrivilege(room, item, reason, handler_cb, error_cb);\n//   },\n//   kick: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'none', reason, handler_cb, error_cb);\n//   },\n//   voice: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'participant', reason, handler_cb, error_cb);\n//   },\n//   mute: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'visitor', reason, handler_cb, error_cb);\n//   },\n//   op: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'moderator', reason, handler_cb, error_cb);\n//   },\n//   deop: function(room, nick, reason, handler_cb, error_cb) {\n//     return this.modifyRole(room, nick, 'participant', reason, handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Changes the affiliation of a member of a MUC room.\n//   The modification can only be done by a room moderator. An error will be\n//   returned if the user doesn't have permission.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) jid  - The jid of the user to modify.\n//   (String) affiliation - The new affiliation of the user.\n//   (String) reason - Optional reason for the change.\n//   (Function) handler_cb - Optional callback for success\n//   (Function) error_cb - Optional callback for error\n//   Returns:\n//   iq - the id of the mode change request.\n//    */\n//   modifyAffiliation: function(room, jid, affiliation, reason, handler_cb, error_cb) {\n//     var item;\n//     item = strophe_js.$build(\"item\", {\n//       jid: jid,\n//       affiliation: affiliation\n//     });\n//     return this._modifyPrivilege(room, item, reason, handler_cb, error_cb);\n//   },\n//   ban: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'outcast', reason, handler_cb, error_cb);\n//   },\n//   member: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'member', reason, handler_cb, error_cb);\n//   },\n//   revoke: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'none', reason, handler_cb, error_cb);\n//   },\n//   owner: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'owner', reason, handler_cb, error_cb);\n//   },\n//   admin: function(room, jid, reason, handler_cb, error_cb) {\n//     return this.modifyAffiliation(room, jid, 'admin', reason, handler_cb, error_cb);\n//   },\n\n//   /*Function\n//   Change the current users nick name.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) user - The new nick name.\n//    */\n//   changeNick: function(room, user) {\n//     var presence, room_nick;\n//     room_nick = this.test_append_nick(room, user);\n//     presence = strophe_js.$pres({\n//       from: this._connection.jid,\n//       to: room_nick,\n//       id: this._connection.getUniqueId()\n//     });\n//     return this._connection.send(presence.tree());\n//   },\n\n//   /*Function\n//   Change the current users status.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (String) user - The current nick.\n//   (String) show - The new show-text.\n//   (String) status - The new status-text.\n//    */\n//   setStatus: function(room, user, show, status) {\n//     var presence, room_nick;\n//     room_nick = this.test_append_nick(room, user);\n//     presence = strophe_js.$pres({\n//       from: this._connection.jid,\n//       to: room_nick\n//     });\n//     if (show != null) {\n//       presence.c('show', show).up();\n//     }\n//     if (status != null) {\n//       presence.c('status', status);\n//     }\n//     return this._connection.send(presence.tree());\n//   },\n\n//   /*Function\n//   Registering with a room.\n//   @see http://xmpp.org/extensions/xep-0045.html#register\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Function) handle_cb - Function to call for room list return.\n//   (Function) error_cb - Function to call on error.\n//    */\n//   registrationRequest: function(room, handle_cb, error_cb) {\n//     var iq;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       from: this._connection.jid,\n//       type: \"get\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_REGISTER\n//     });\n//     return this._connection.sendIQ(iq, function(stanza) {\n//       var $field, $fields, field, fields, i, len, length;\n//       $fields = stanza.getElementsByTagName('field');\n//       length = $fields.length;\n//       fields = {\n//         required: [],\n//         optional: []\n//       };\n//       for (i = 0, len = $fields.length; i < len; i++) {\n//         $field = $fields[i];\n//         field = {\n//           \"var\": $field.getAttribute('var'),\n//           label: $field.getAttribute('label'),\n//           type: $field.getAttribute('type')\n//         };\n//         if ($field.getElementsByTagName('required').length > 0) {\n//           fields.required.push(field);\n//         } else {\n//           fields.optional.push(field);\n//         }\n//       }\n//       return handle_cb(fields);\n//     }, error_cb);\n//   },\n\n//   /*Function\n//   Submits registration form.\n//   Parameters:\n//   (String) room - The multi-user chat room name.\n//   (Function) handle_cb - Function to call for room list return.\n//   (Function) error_cb - Function to call on error.\n//    */\n//   submitRegistrationForm: function(room, fields, handle_cb, error_cb) {\n//     var iq, key, val;\n//     iq = strophe_js.$iq({\n//       to: room,\n//       type: \"set\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.MUC_REGISTER\n//     });\n//     iq.c(\"x\", {\n//       xmlns: \"jabber:x:data\",\n//       type: \"submit\"\n//     });\n//     iq.c('field', {\n//       'var': 'FORM_TYPE'\n//     }).c('value').t('http://jabber.org/protocol/muc#register').up().up();\n//     for (key in fields) {\n//       val = fields[key];\n//       iq.c('field', {\n//         'var': key\n//       }).c('value').t(val).up().up();\n//     }\n//     return this._connection.sendIQ(iq, handle_cb, error_cb);\n//   },\n\n//   /*Function\n//   List all chat room available on a server.\n//   Parameters:\n//   (String) server - name of chat server.\n//   (String) handle_cb - Function to call for room list return.\n//   (String) error_cb - Function to call on error.\n//    */\n//   listRooms: function(server, handle_cb, error_cb) {\n//     var iq;\n//     iq = strophe_js.$iq({\n//       to: server,\n//       from: this._connection.jid,\n//       type: \"get\"\n//     }).c(\"query\", {\n//       xmlns: strophe_js.Strophe.NS.DISCO_ITEMS\n//     });\n//     return this._connection.sendIQ(iq, handle_cb, error_cb);\n//   },\n//   test_append_nick: function(room, nick) {\n//     var domain, node;\n//     node = strophe_js.Strophe.escapeNode(strophe_js.Strophe.getNodeFromJid(room));\n//     domain = strophe_js.Strophe.getDomainFromJid(room);\n//     return node + \"@\" + domain + (nick != null ? \"/\" + nick : \"\");\n//   }\n// });\n\n// XmppRoom = (function() {\n//   function XmppRoom(client, name, nick1, password1) {\n//     this.client = client;\n//     this.name = name;\n//     this.nick = nick1;\n//     this.password = password1;\n//     this._roomRosterHandler = bind(this._roomRosterHandler, this);\n//     this._addOccupant = bind(this._addOccupant, this);\n//     this.roster = {};\n//     this._message_handlers = {};\n//     this._presence_handlers = {};\n//     this._roster_handlers = {};\n//     this._handler_ids = 0;\n//     if (this.client.muc) {\n//       this.client = this.client.muc;\n//     }\n//     this.name = strophe_js.Strophe.getBareJidFromJid(this.name);\n//     this.addHandler('presence', this._roomRosterHandler);\n//   }\n\n//   XmppRoom.prototype.join = function(msg_handler_cb, pres_handler_cb, roster_cb) {\n//     return this.client.join(this.name, this.nick, msg_handler_cb, pres_handler_cb, roster_cb, this.password);\n//   };\n\n//   XmppRoom.prototype.leave = function(handler_cb, message) {\n//     this.client.leave(this.name, this.nick, handler_cb, message);\n//     return delete this.client.rooms[this.name];\n//   };\n\n//   XmppRoom.prototype.message = function(nick, message, html_message, type) {\n//     return this.client.message(this.name, nick, message, html_message, type);\n//   };\n\n//   XmppRoom.prototype.groupchat = function(message, html_message) {\n//     return this.client.groupchat(this.name, message, html_message);\n//   };\n\n//   XmppRoom.prototype.invite = function(receiver, reason) {\n//     return this.client.invite(this.name, receiver, reason);\n//   };\n\n//   XmppRoom.prototype.multipleInvites = function(receivers, reason) {\n//     return this.client.invite(this.name, receivers, reason);\n//   };\n\n//   XmppRoom.prototype.directInvite = function(receiver, reason) {\n//     return this.client.directInvite(this.name, receiver, reason, this.password);\n//   };\n\n//   XmppRoom.prototype.configure = function(handler_cb) {\n//     return this.client.configure(this.name, handler_cb);\n//   };\n\n//   XmppRoom.prototype.cancelConfigure = function() {\n//     return this.client.cancelConfigure(this.name);\n//   };\n\n//   XmppRoom.prototype.saveConfiguration = function(config) {\n//     return this.client.saveConfiguration(this.name, config);\n//   };\n\n//   XmppRoom.prototype.queryOccupants = function(success_cb, error_cb) {\n//     return this.client.queryOccupants(this.name, success_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.setTopic = function(topic) {\n//     return this.client.setTopic(this.name, topic);\n//   };\n\n//   XmppRoom.prototype.modifyRole = function(nick, role, reason, success_cb, error_cb) {\n//     return this.client.modifyRole(this.name, nick, role, reason, success_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.kick = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.kick(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.voice = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.voice(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.mute = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.mute(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.op = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.op(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.deop = function(nick, reason, handler_cb, error_cb) {\n//     return this.client.deop(this.name, nick, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.modifyAffiliation = function(jid, affiliation, reason, success_cb, error_cb) {\n//     return this.client.modifyAffiliation(this.name, jid, affiliation, reason, success_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.ban = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.ban(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.member = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.member(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.revoke = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.revoke(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.owner = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.owner(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.admin = function(jid, reason, handler_cb, error_cb) {\n//     return this.client.admin(this.name, jid, reason, handler_cb, error_cb);\n//   };\n\n//   XmppRoom.prototype.changeNick = function(nick1) {\n//     this.nick = nick1;\n//     return this.client.changeNick(this.name, nick);\n//   };\n\n//   XmppRoom.prototype.setStatus = function(show, status) {\n//     return this.client.setStatus(this.name, this.nick, show, status);\n//   };\n\n\n//   /*Function\n//   Adds a handler to the MUC room.\n//     Parameters:\n//   (String) handler_type - 'message', 'presence' or 'roster'.\n//   (Function) handler - The handler function.\n//   Returns:\n//   id - the id of handler.\n//    */\n\n//   XmppRoom.prototype.addHandler = function(handler_type, handler) {\n//     var id;\n//     id = this._handler_ids++;\n//     switch (handler_type) {\n//       case 'presence':\n//         this._presence_handlers[id] = handler;\n//         break;\n//       case 'message':\n//         this._message_handlers[id] = handler;\n//         break;\n//       case 'roster':\n//         this._roster_handlers[id] = handler;\n//         break;\n//       default:\n//         this._handler_ids--;\n//         return null;\n//     }\n//     return id;\n//   };\n\n\n//   /*Function\n//   Removes a handler from the MUC room.\n//   This function takes ONLY ids returned by the addHandler function\n//   of this room. passing handler ids returned by connection.addHandler\n//   may brake things!\n//     Parameters:\n//   (number) id - the id of the handler\n//    */\n\n//   XmppRoom.prototype.removeHandler = function(id) {\n//     delete this._presence_handlers[id];\n//     delete this._message_handlers[id];\n//     return delete this._roster_handlers[id];\n//   };\n\n\n//   /*Function\n//   Creates and adds an Occupant to the Room Roster.\n//     Parameters:\n//   (Object) data - the data the Occupant is filled with\n//   Returns:\n//   occ - the created Occupant.\n//    */\n\n//   XmppRoom.prototype._addOccupant = function(data) {\n//     var occ;\n//     occ = new Occupant(data, this);\n//     this.roster[occ.nick] = occ;\n//     return occ;\n//   };\n\n\n//   /*Function\n//   The standard handler that managed the Room Roster.\n//     Parameters:\n//   (Object) pres - the presence stanza containing user information\n//    */\n\n//   XmppRoom.prototype._roomRosterHandler = function(pres) {\n//     var data, handler, id, newnick, nick, ref;\n//     data = XmppRoom._parsePresence(pres);\n//     nick = data.nick;\n//     newnick = data.newnick || null;\n//     switch (data.type) {\n//       case 'error':\n//         return true;\n//       case 'unavailable':\n//         if (newnick) {\n//           data.nick = newnick;\n//           if (this.roster[nick] && this.roster[newnick]) {\n//             this.roster[nick].update(this.roster[newnick]);\n//             this.roster[newnick] = this.roster[nick];\n//           }\n//           if (this.roster[nick] && !this.roster[newnick]) {\n//             this.roster[newnick] = this.roster[nick].update(data);\n//           }\n//         }\n//         delete this.roster[nick];\n//         break;\n//       default:\n//         if (this.roster[nick]) {\n//           this.roster[nick].update(data);\n//         } else {\n//           this._addOccupant(data);\n//         }\n//     }\n//     ref = this._roster_handlers;\n//     for (id in ref) {\n//       handler = ref[id];\n//       if (!handler(this.roster, this)) {\n//         delete this._roster_handlers[id];\n//       }\n//     }\n//     return true;\n//   };\n\n\n//   /*Function\n//   Parses a presence stanza\n//     Parameters:\n//   (Object) data - the data extracted from the presence stanza\n//    */\n\n//   XmppRoom._parsePresence = function(pres) {\n//     var c, c2, data, i, j, len, len1, ref, ref1, ref2;\n//     data = {};\n//     data.nick = strophe_js.Strophe.getResourceFromJid(pres.getAttribute(\"from\"));\n//     data.type = pres.getAttribute(\"type\");\n//     data.states = [];\n//     ref = pres.childNodes;\n//     for (i = 0, len = ref.length; i < len; i++) {\n//       c = ref[i];\n//       switch (c.nodeName) {\n//         case \"error\":\n//           data.errorcode = c.getAttribute(\"code\");\n//           data.error = (ref1 = c.childNodes[0]) != null ? ref1.nodeName : void 0;\n//           break;\n//         case \"status\":\n//           data.status = c.textContent || null;\n//           break;\n//         case \"show\":\n//           data.show = c.textContent || null;\n//           break;\n//         case \"x\":\n//           if (c.getAttribute(\"xmlns\") === strophe_js.Strophe.NS.MUC_USER) {\n//             ref2 = c.childNodes;\n//             for (j = 0, len1 = ref2.length; j < len1; j++) {\n//               c2 = ref2[j];\n//               switch (c2.nodeName) {\n//                 case \"item\":\n//                   data.affiliation = c2.getAttribute(\"affiliation\");\n//                   data.role = c2.getAttribute(\"role\");\n//                   data.jid = c2.getAttribute(\"jid\");\n//                   data.newnick = c2.getAttribute(\"nick\");\n//                   break;\n//                 case \"status\":\n//                   if (c2.getAttribute(\"code\")) {\n//                     data.states.push(c2.getAttribute(\"code\"));\n//                   }\n//               }\n//             }\n//           }\n//       }\n//     }\n//     return data;\n//   };\n\n//   return XmppRoom;\n\n// })();\n\n// RoomConfig = (function() {\n//   function RoomConfig(info) {\n//     this.parse = bind(this.parse, this);\n//     if (info != null) {\n//       this.parse(info);\n//     }\n//   }\n\n//   RoomConfig.prototype.parse = function(result) {\n//     var attr, attrs, child, field, i, identity, j, l, len, len1, len2, query, ref;\n//     query = result.getElementsByTagName(\"query\")[0].childNodes;\n//     this.identities = [];\n//     this.features = [];\n//     this.x = [];\n//     for (i = 0, len = query.length; i < len; i++) {\n//       child = query[i];\n//       attrs = child.attributes;\n//       switch (child.nodeName) {\n//         case \"identity\":\n//           identity = {};\n//           for (j = 0, len1 = attrs.length; j < len1; j++) {\n//             attr = attrs[j];\n//             identity[attr.name] = attr.textContent;\n//           }\n//           this.identities.push(identity);\n//           break;\n//         case \"feature\":\n//           this.features.push(child.getAttribute(\"var\"));\n//           break;\n//         case \"x\":\n//           if ((!child.childNodes[0].getAttribute(\"var\") === 'FORM_TYPE') || (!child.childNodes[0].getAttribute(\"type\") === 'hidden')) {\n//             break;\n//           }\n//           ref = child.childNodes;\n//           for (l = 0, len2 = ref.length; l < len2; l++) {\n//             field = ref[l];\n//             if (!field.attributes.type) {\n//               this.x.push({\n//                 \"var\": field.getAttribute(\"var\"),\n//                 label: field.getAttribute(\"label\") || \"\",\n//                 value: field.firstChild.textContent || \"\"\n//               });\n//             }\n//           }\n//       }\n//     }\n//     return {\n//       \"identities\": this.identities,\n//       \"features\": this.features,\n//       \"x\": this.x\n//     };\n//   };\n\n//   return RoomConfig;\n\n// })();\n\n// Occupant = (function() {\n//   function Occupant(data, room1) {\n//     this.room = room1;\n//     this.update = bind(this.update, this);\n//     this.admin = bind(this.admin, this);\n//     this.owner = bind(this.owner, this);\n//     this.revoke = bind(this.revoke, this);\n//     this.member = bind(this.member, this);\n//     this.ban = bind(this.ban, this);\n//     this.modifyAffiliation = bind(this.modifyAffiliation, this);\n//     this.deop = bind(this.deop, this);\n//     this.op = bind(this.op, this);\n//     this.mute = bind(this.mute, this);\n//     this.voice = bind(this.voice, this);\n//     this.kick = bind(this.kick, this);\n//     this.modifyRole = bind(this.modifyRole, this);\n//     this.update(data);\n//   }\n\n//   Occupant.prototype.modifyRole = function(role, reason, success_cb, error_cb) {\n//     return this.room.modifyRole(this.nick, role, reason, success_cb, error_cb);\n//   };\n\n//   Occupant.prototype.kick = function(reason, handler_cb, error_cb) {\n//     return this.room.kick(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.voice = function(reason, handler_cb, error_cb) {\n//     return this.room.voice(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.mute = function(reason, handler_cb, error_cb) {\n//     return this.room.mute(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.op = function(reason, handler_cb, error_cb) {\n//     return this.room.op(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.deop = function(reason, handler_cb, error_cb) {\n//     return this.room.deop(this.nick, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.modifyAffiliation = function(affiliation, reason, success_cb, error_cb) {\n//     return this.room.modifyAffiliation(this.jid, affiliation, reason, success_cb, error_cb);\n//   };\n\n//   Occupant.prototype.ban = function(reason, handler_cb, error_cb) {\n//     return this.room.ban(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.member = function(reason, handler_cb, error_cb) {\n//     return this.room.member(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.revoke = function(reason, handler_cb, error_cb) {\n//     return this.room.revoke(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.owner = function(reason, handler_cb, error_cb) {\n//     return this.room.owner(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.admin = function(reason, handler_cb, error_cb) {\n//     return this.room.admin(this.jid, reason, handler_cb, error_cb);\n//   };\n\n//   Occupant.prototype.update = function(data) {\n//     this.nick = data.nick || null;\n//     this.affiliation = data.affiliation || null;\n//     this.role = data.role || null;\n//     this.jid = data.jid || null;\n//     this.status = data.status || null;\n//     this.show = data.show || null;\n//     return this;\n//   };\n\n//   return Occupant;\n\n// })();\n\n// })));\n// //# sourceMappingURL=strophe.muc.js.map\n\n--- File Index 101: web/koperasi-dashboard/src/src/scripts/views/view.js ---\n// var server = 'docotel.com'\n// var BOSH_SERVICE = 'http://docotel.com:7070/http-bind/'\n// var ROOM = 'prova@conference.' + server\n// var ROOM_SERVICE = 'conference.' + server\n// var connection = null\n// var user = '10000155@spark.docotel.com'\n// var pass = '12345'\n// var to = '10000153@spark.docotel.com'\n\n// function log(msg) {\n//   $('#log').append('<div></div>').append(document.createTextNode(msg))\n//   console.log(msg)\n// }\n\n// window.Strophe = Strophe\n// window.$pres = $pres\n// window.$iq = $iq\n// window.$msg = $msg\n\n// function onConnect(status) {\n//   if (status == Strophe.Status.CONNECTING) {\n//     log('Strophe is connecting.')\n//   } else if (status == Strophe.Status.CONNFAIL) {\n//     log('Strophe failed to connect.')\n//     $('#connect').get(0).value = 'connect'\n//   } else if (status == Strophe.Status.DISCONNECTING) {\n//     log('Strophe is disconnecting.')\n//   } else if (status == Strophe.Status.DISCONNECTED) {\n//     log('Strophe is disconnected.')\n//     $('#connect').get(0).value = 'connect'\n//   } else if (status == Strophe.Status.CONNECTED) {\n//     log('Strophe is connected.')\n//     // to = connection.jid // full JID\n//     // set presence\n//     connection.send($pres())\n//     // set handlers\n//     connection.addHandler(onMessage, null, 'message', null, null, null)\n//     connection.addHandler(onSubscriptionRequest, null, \"presence\", \"subscribe\")\n//     connection.addHandler(onPresence, null, \"presence\")\n    \n//     listRooms()\n//   }\n// }\n\n// function onMessage(msg) {\n//   var to = msg.getAttribute('to')\n//   var from = msg.getAttribute('from')\n//   var type = msg.getAttribute('type')\n//   var elems = msg.getElementsByTagName('body')\n\n//   if (type == \"chat\" && elems.length > 0) {\n//     var body = elems[0]\n//     log('CHAT: I got a message from ' + from + ': ' + Strophe.getText(body))\n//   }\n//   // we must return true to keep the handler alive.  \n//   // returning false would remove it after it finishes.\n//   return true\n// }\n\n// function sendMessage(msg) {\n//   log('CHAT: Send a message to ' + to + ': ' + msg)\n\n//   var m = $msg({\n//     to: to,\n//     from: user,\n//     type: 'chat'\n//   }).c(\"body\").t(msg)\n//   connection.send(m)\n// }\n\n// function setStatus(s) {\n//   log('setStatus: ' + s)\n//   var status = $pres().c('show').t(s)\n//   connection.send(status)\n// }\n\n// function subscribePresence(jid) {\n//   log('subscribePresence: ' + jid)\n//   connection.send($pres({\n//     to: jid,\n//     type: \"subscribe\"\n//   }))\n// }\n\n// function getPresence(jid) {\n//   log('getPresence: ' + jid)\n//   var check = $pres({\n//     type: 'probe',\n//     to: jid\n//   })\n//   connection.send(check)\n// }\n\n// function getRoster() {\n//   log('getRoster')\n//   var iq = $iq({\n//     type: 'get'\n//   }).c('query', {\n//     xmlns: 'jabber:iq:roster'\n//   })\n//   connection.sendIQ(iq, rosterCallback)\n// }\n\n// function rosterCallback(iq) {\n//   log('rosterCallback:')\n//   $(iq).find('item').each(function() {\n//     var jid = $(this).attr('jid') // The jabber_id of your contact\n//     // You can probably put them in a unordered list and and use their jids as ids.\n//     log(' >' + jid)\n//   })\n// }\n\n// function onSubscriptionRequest(stanza) {\n//   if (stanza.getAttribute(\"type\") == \"subscribe\") {\n//     var from = $(stanza).attr('from')\n//     log('onSubscriptionRequest: from=' + from)\n//     // Send a 'subscribed' notification back to accept the incoming\n//     // subscription request\n//     connection.send($pres({\n//       to: from,\n//       type: \"subscribed\"\n//     }))\n//   }\n//   return true\n// }\n\n// function onPresence(presence) {\n//   log('onPresence:')\n//   var presence_type = $(presence).attr('type') // unavailable, subscribed, etc...\n//   var from = $(presence).attr('from') // the jabber_id of the contact\n//   if (!presence_type) presence_type = \"online\"\n//   log(' >' + from + ' --> ' + presence_type)\n//   if (presence_type != 'error') {\n//     if (presence_type === 'unavailable') {\n//       // Mark contact as offline\n//     } else {\n//       var show = $(presence).find(\"show\").text() // this is what gives away, dnd, etc.\n//       if (show === 'chat' || show === '') {\n//         // Mark contact as online\n//       } else {\n//         // etc...\n//       }\n//     }\n//   }\n//   return true\n// }\n\n// function listRooms() {\n//   connection.muc.listRooms(mydomain, function(msg) {\n//     log(\"listRooms - success: \")\n//     $(msg).find('item').each(function() {\n//       var jid = $(this).attr('jid'),\n//         name = $(this).attr('name')\n//       log(' >room: ' + name + ' (' + jid + ')')\n//     })\n//   }, function(err) {\n//     log(\"listRooms - error: \" + err)\n//   })\n// }\n\n// function enterRoom(room) {\n//   log(\"enterRoom: \" + room)\n//   connection.muc.init(connection)\n//   connection.muc.join(room, user, room_msg_handler, room_pres_handler)\n//   //connection.muc.setStatus(room, user, 'subscribed', 'chat')\n// }\n\n// function room_msg_handler(a, b, c) {\n//   log('MUC: room_msg_handler')\n//   return true\n// }\n\n// function room_pres_handler(a, b, c) {\n//   log('MUC: room_pres_handler')\n//   return true\n// }\n\n// function exitRoom(room) {\n//   log(\"exitRoom: \" + room)\n//   //TBD\n// }\n\n// function rawInput(data) {\n//   console.log('RECV: ' + data)\n// }\n\n// function rawOutput(data) {\n//   console.log('SENT: ' + data)\n// }\n\n// $(document).ready(function() {\n\n//   // user = \"1000010@spark.docotel.com\"\n//   // $('#pass').get(0).value = \"12345\"\n\n//   $('#connect').bind('click', function() {\n//     var url = BOSH_SERVICE\n//     connection = new Strophe.Connection(url)\n//     connection.rawInput = rawInput\n//     connection.rawOutput = rawOutput\n//     var button = $('#connect').get(0)\n//     if (button.value == 'connect') {\n//       button.value = 'disconnect'\n//       console.log(user, pass, 'connect')\n//       connection.connect(user, pass, onConnect)\n//     } else {\n//       button.value = 'connect'\n//       connection.disconnect()\n//     }\n//   })\n\n//   $('#send').bind('click', function() {\n//     var msg = $('#msg').val()\n//     sendMessage(msg)\n//   })\n\n//   $('#btnGetPres').bind('click', function() {\n//     var jid = to\n//     getPresence(jid)\n//   })\n\n//   $('#btnSubPres').bind('click', function() {\n//     var jid = to\n//     subscribePresence(jid)\n//   })\n\n//   $('#btnRoster').bind('click', function() {\n//     getRoster()\n//   })\n\n//   $('#btnAway').bind('click', function() {\n//     setStatus('away')\n//   })\n\n//   $('#room').val(ROOM)\n\n//   $('#btnEnter').bind('click', function() {\n//     enterRoom($('#room').val())\n//   })\n\n//   $('#btnExit').bind('click', function() {\n//     exitRoom($('#room').val())\n//   })\n\n// })\n\n\n\nAnalyze the codebase context.\nIdentify the top 5-10 core most important abstractions to help those new to the codebase.\n\nFor each abstraction, provide:\n1. A concise `name`.\n2. A beginner-friendly `description` explaining what it is with a simple analogy, in around 100 words.\n3. A list of relevant `file_indices` (integers) using the format `idx # path/comment`.\n\nList of file indices and paths present in the context:\n- 0 # LICENSE.md\n- 1 # README.md\n- 2 # codeception.yml\n- 3 # docker-compose.yml\n- 4 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.travis.yml\n- 5 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/BREAKING_CHANGES.md\n- 6 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/CHANGELOG.md\n- 7 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/README.md\n- 8 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.github/CONTRIBUTING.md\n- 9 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.github/ISSUE_TEMPLATE.md\n- 10 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.github/PULL_REQUEST_TEMPLATE.md\n- 11 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/docstheme/manifest.yml\n- 12 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/.travis.yml\n- 13 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/CHANGELOG.md\n- 14 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/Makefile\n- 15 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/README.rst\n- 16 # extensions/elasticSearch/vendor/guzzlehttp/streams/.travis.yml\n- 17 # extensions/elasticSearch/vendor/guzzlehttp/streams/CHANGELOG.rst\n- 18 # extensions/elasticSearch/vendor/guzzlehttp/streams/Makefile\n- 19 # extensions/elasticSearch/vendor/guzzlehttp/streams/README.rst\n- 20 # extensions/elasticSearch/vendor/monolog/monolog/CHANGELOG.md\n- 21 # extensions/elasticSearch/vendor/monolog/monolog/README.md\n- 22 # extensions/elasticSearch/vendor/monolog/monolog/doc/01-usage.md\n- 23 # extensions/elasticSearch/vendor/monolog/monolog/doc/02-handlers-formatters-processors.md\n- 24 # extensions/elasticSearch/vendor/monolog/monolog/doc/03-utilities.md\n- 25 # extensions/elasticSearch/vendor/monolog/monolog/doc/04-extending.md\n- 26 # extensions/elasticSearch/vendor/monolog/monolog/doc/sockets.md\n- 27 # extensions/elasticSearch/vendor/psr/log/README.md\n- 28 # extensions/elasticSearch/vendor/react/promise/.travis.yml\n- 29 # extensions/elasticSearch/vendor/react/promise/CHANGELOG.md\n- 30 # extensions/elasticSearch/vendor/react/promise/README.md\n- 31 # migrations/20231126_config_db_log.md\n- 32 # migrations/20240530_add_actions_questionnaire.md\n- 33 # migrations/20250616_add_new_routes_to_koperasi.md\n- 34 # migrations/20250808_add_new_routes_perbaikan_data.md\n- 35 # scripts/k6/login.js\n- 36 # scripts/k6/pesan-nama.js\n- 37 # scripts/k6/staging-login.js\n- 38 # scripts/log/parse-log-cron-hit-ods.py\n- 39 # vagrant/config/vagrant-local.example.yml\n- 40 # web/frontend/README.md\n- 41 # web/frontend/src/.eslintrc.js\n- 42 # web/frontend/src/eslintrc.js\n- 43 # web/frontend/src/gulpfile.babel.js\n- 44 # web/frontend/src/boilerplate/config.js\n- 45 # web/frontend/src/boilerplate/init/choices.js\n- 46 # web/frontend/src/boilerplate/init/index.js\n- 47 # web/frontend/src/boilerplate/tasks/build.js\n- 48 # web/frontend/src/boilerplate/tasks/clean.js\n- 49 # web/frontend/src/boilerplate/tasks/images.js\n- 50 # web/frontend/src/boilerplate/tasks/index.js\n- 51 # web/frontend/src/boilerplate/tasks/markup.js\n- 52 # web/frontend/src/boilerplate/tasks/scripts.js\n- 53 # web/frontend/src/boilerplate/tasks/serve.js\n- 54 # web/frontend/src/boilerplate/tasks/styles.js\n- 55 # web/frontend/src/boilerplate/tasks/watch.js\n- 56 # web/frontend/src/boilerplate/utils/bundleLogger.js\n- 57 # web/frontend/src/boilerplate/utils/concatenateFiles.js\n- 58 # web/frontend/src/boilerplate/utils/handleErrors.js\n- 59 # web/frontend/src/src/.eslintrc.js\n- 60 # web/frontend/src/src/scripts/.eslintrc.js\n- 61 # web/frontend/src/src/scripts/backup-main.js\n- 62 # web/frontend/src/src/scripts/main.js\n- 63 # web/frontend/src/src/scripts/components/adminlte.js\n- 64 # web/frontend/src/src/scripts/components/adminlte.min.js\n- 65 # web/frontend/src/src/scripts/views/muc.js\n- 66 # web/frontend/src/src/scripts/views/view.js\n- 67 # web/js/admin/edit_pendirian.js\n- 68 # web/js/admin/edit_perubahan.js\n- 69 # web/js/admin/list-pesan-nama.js\n- 70 # web/js/global/logSyarat.js\n- 71 # web/js/new-form/form.js\n- 72 # web/js/pendirian/_step2.js\n- 73 # web/js/pendirian/form-pendirian.js\n- 74 # web/js/pendirian/listtransaction.js\n- 75 # web/js/perubahan/form-perubahan.js\n- 76 # web/js/pesan-nama/_form.js\n- 77 # web/js/pesan-nama/listPesan.js\n- 78 # web/koperasi-dashboard/src/.eslintrc.js\n- 79 # web/koperasi-dashboard/src/eslintrc.js\n- 80 # web/koperasi-dashboard/src/gulpfile.babel.js\n- 81 # web/koperasi-dashboard/src/boilerplate/config.js\n- 82 # web/koperasi-dashboard/src/boilerplate/init/choices.js\n- 83 # web/koperasi-dashboard/src/boilerplate/init/index.js\n- 84 # web/koperasi-dashboard/src/boilerplate/tasks/build.js\n- 85 # web/koperasi-dashboard/src/boilerplate/tasks/clean.js\n- 86 # web/koperasi-dashboard/src/boilerplate/tasks/images.js\n- 87 # web/koperasi-dashboard/src/boilerplate/tasks/index.js\n- 88 # web/koperasi-dashboard/src/boilerplate/tasks/markup.js\n- 89 # web/koperasi-dashboard/src/boilerplate/tasks/scripts.js\n- 90 # web/koperasi-dashboard/src/boilerplate/tasks/serve.js\n- 91 # web/koperasi-dashboard/src/boilerplate/tasks/styles.js\n- 92 # web/koperasi-dashboard/src/boilerplate/tasks/watch.js\n- 93 # web/koperasi-dashboard/src/boilerplate/utils/bundleLogger.js\n- 94 # web/koperasi-dashboard/src/boilerplate/utils/concatenateFiles.js\n- 95 # web/koperasi-dashboard/src/boilerplate/utils/handleErrors.js\n- 96 # web/koperasi-dashboard/src/src/.eslintrc.js\n- 97 # web/koperasi-dashboard/src/src/scripts/.eslintrc.js\n- 98 # web/koperasi-dashboard/src/src/scripts/backup-main.js\n- 99 # web/koperasi-dashboard/src/src/scripts/main.js\n- 100 # web/koperasi-dashboard/src/src/scripts/views/muc.js\n- 101 # web/koperasi-dashboard/src/src/scripts/views/view.js\n\nFormat the output as a YAML list of dictionaries:\n\n```yaml\n- name: |\n    Query Processing\n  description: |\n    Explains what the abstraction does.\n    It's like a central dispatcher routing requests.\n  file_indices:\n    - 0 # path/to/file1.py\n    - 3 # path/to/related.py\n- name: |\n    Query Optimization\n  description: |\n    Another core concept, similar to a blueprint for objects.\n  file_indices:\n    - 5 # path/to/another.js\n# ... up to 10 abstractions\n```": "- name: |\n    Yii2 application & config (project root)\n  description: |\n    This is the core PHP/Yii2 application \u2014 the server-side app that runs the koperasi site.\n    Think of it as the building (structure, wiring and legal paperwork) that holds everything:\n    configuration files, environment setup, container/vagrant helpers and test bootstrap.\n    If you need to change DB connections, URLs, test settings, or start the app locally (Docker/Vagrant),\n    this is where to look first. It also points you to the README with setup steps for new developers.\n  file_indices:\n    - 1 # README.md (project setup / important env notes)\n    - 3 # docker-compose.yml (local PHP container)\n    - 39 # vagrant/config/vagrant-local.example.yml (local VM example)\n    - 2 # codeception.yml (PHP unit / integration test config)\n    - 31 # migrations/20231126_config_db_log.md (DB logging config notes / example)\n\n- name: |\n    RBAC, routes and permission migrations\n  description: |\n    This abstraction covers how the application defines and assigns permissions/roles and new\n    routes (URLs) in the system. In Yii2 RBAC, routes are stored as auth items and linked to roles.\n    The migrations/docs here show SQL or manual steps to add permissions and attach them to parent\n    roles (so users with certain roles can access new features). Treat these files as the policy\n    registry: when adding a new UI route, update RBAC accordingly.\n  file_indices:\n    - 32 # migrations/20240530_add_actions_questionnaire.md (route/permission additions)\n    - 33 # migrations/20250616_add_new_routes_to_koperasi.md (example: adding download routes)\n    - 34 # migrations/20250808_add_new_routes_perbaikan_data.md (new routes & role assignments)\n\n- name: |\n    Frontend build system (web/frontend)\n  description: |\n    The frontend build boilerplate (Gulp + Browserify/Babel) handles building, bundling and serving\n    the client-side assets for the public frontend. Think of it as the factory that turns source\n    HTML/CSS/JS into production-ready files and a dev server with live reload. It includes task\n    definitions (scripts, styles, images), configuration, and utilities used by front-end devs.\n    If you want to edit UI code, run npm/gulp tasks or change how assets are compiled, this is the place.\n  file_indices:\n    - 43 # web/frontend/src/gulpfile.babel.js (entry for gulp)\n    - 44 # web/frontend/src/boilerplate/config.js (build config)\n    - 46 # web/frontend/src/boilerplate/init/index.js (scaffolding/init)\n    - 50 # web/frontend/src/boilerplate/tasks/index.js (task registrations)\n    - 52 # web/frontend/src/boilerplate/tasks/scripts.js (JS bundling)\n    - 54 # web/frontend/src/boilerplate/tasks/styles.js (CSS processing)\n    - 55 # web/frontend/src/boilerplate/tasks/watch.js (watch + dev server)\n    - 57 # web/frontend/src/boilerplate/utils/concatenateFiles.js (vendor concatenation)\n    - 58 # web/frontend/src/boilerplate/utils/handleErrors.js (build error notifications)\n\n- name: |\n    Koperasi dashboard build & tooling\n  description: |\n    A sibling frontend project (koperasi-dashboard) with its own Gulp-based build pipeline. It\n    uses the same boilerplate structure but is targeted to the internal/admin dashboard UI.\n    Treat it like the \"admin\" frontend factory: tasks, config, and utilities for compiling the\n    dashboard assets, producing a separate dist bundle and running a local dev server.\n  file_indices:\n    - 80 # web/koperasi-dashboard/src/gulpfile.babel.js (dashboard gulp entry)\n    - 81 # web/koperasi-dashboard/src/boilerplate/config.js (dashboard build config)\n    - 87 # web/koperasi-dashboard/src/boilerplate/tasks/index.js (dashboard task registry)\n    - 89 # web/koperasi-dashboard/src/boilerplate/tasks/scripts.js (dashboard JS bundling)\n    - 91 # web/koperasi-dashboard/src/boilerplate/tasks/styles.js (dashboard styles)\n    - 92 # web/koperasi-dashboard/src/boilerplate/tasks/watch.js (dashboard watch/server)\n    - 94 # web/koperasi-dashboard/src/boilerplate/utils/concatenateFiles.js (utils)\n    - 95 # web/koperasi-dashboard/src/boilerplate/utils/handleErrors.js (utils)\n\n- name: |\n    Admin UI & client-side components (AdminLTE + app scripts)\n  description: |\n    The JavaScript that drives the interactive admin UI (AdminLTE integration and custom widgets).\n    It includes the AdminLTE app code, UI behaviors (sidebar, push menu, boxes), and shared main\n    scripts used across pages. If you maintain the admin interface, look here for components,\n    event bindings, and UI helpers. Analogy: these files are the frontend \"furniture and controls\"\n    inside the dashboard building.\n  file_indices:\n    - 62 # web/frontend/src/src/scripts/main.js (app glue / page behaviors)\n    - 63 # web/frontend/src/src/scripts/components/adminlte.js (AdminLTE main app)\n    - 64 # web/frontend/src/src/scripts/components/adminlte.min.js (minified AdminLTE)\n    - 98 # web/koperasi-dashboard/src/src/scripts/backup-main.js (dashboard UI scaffolding)\n    - 99 # web/koperasi-dashboard/src/src/scripts/main.js (dashboard main entry)\n\n- name: |\n    Domain forms & page JS (Pendirian / Perubahan / Pesan Nama)\n  description: |\n    These are the domain-specific client-side scripts that implement forms and flows for key\n    business processes: pendirian (registration), perubahan (changes), and pesan nama (name reservation).\n    They contain validation, AJAX helpers (child region loaders), modal handling, KBLI selection logic,\n    and Dukcapil validation hooks. Think of them as the form controllers that enforce rules and talk\n    to the backend APIs for those user journeys.\n  file_indices:\n    - 73 # web/js/pendirian/form-pendirian.js (pendirian form logic)\n    - 75 # web/js/perubahan/form-perubahan.js (perubahan form logic)\n    - 76 # web/js/pesan-nama/_form.js (pesan-nama preview/validation)\n    - 74 # web/js/pendirian/listtransaction.js (pendirian transaction listing helpers)\n\n- name: |\n    Vendor libraries & ElasticSearch extension (vendor)\n  description: |\n    Third-party libraries bundled with the project, notably the elasticsearch-php client and\n    its dependencies (guzzle, react/promise, monolog). These are external building blocks used\n    by the app for logging, HTTP, and search integration. Treat these as the toolbox: if you rely\n    on search, logging or async promises, consult the vendors' README/changelog for usage and constraints.\n  file_indices:\n    - 7 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/README.md (elasticsearch-php)\n    - 6 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/CHANGELOG.md (ES client changelog)\n    - 4 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.travis.yml (CI for ES client)\n    - 20 # extensions/elasticSearch/vendor/monolog/monolog/CHANGELOG.md (monolog)\n    - 21 # extensions/elasticSearch/vendor/monolog/monolog/README.md (monolog README)\n\n- name: |\n    Testing & load tools (Codeception, k6, log parsers)\n  description: |\n    Files and scripts used to test, benchmark and parse logs. This includes Codeception config\n    for PHP tests, k6 JavaScript load-test scripts for the public flows (login, pesan-nama),\n    and small utilities (Python script) to parse cron/log outputs. Use these when adding tests,\n    running load experiments, or diagnosing cron-run behavior.\n  file_indices:\n    - 2 # codeception.yml (test suite config)\n    - 35 # scripts/k6/login.js (k6 login load test)\n    - 36 # scripts/k6/pesan-nama.js (k6 pesan-nama flow)\n    - 37 # scripts/k6/staging-login.js (staging load script)\n    - 38 # scripts/log/parse-log-cron-hit-ods.py (log parsing helper)", "\nFor the project `koperasi`:\n\nCodebase Context:\n--- File: 818 # web/frontend/src/boilerplate/init/framework/nothing.json ---\n{\n  \"name\": \"Nothing, I am fine\",\n  \"value\": {}\n}\n\n\n--- File: 836 # web/koperasi-dashboard/src/boilerplate/init/framework/nothing.json ---\n{\n  \"name\": \"Nothing, I am fine\",\n  \"value\": {}\n}\n\n\n--- File: 821 # web/frontend/src/boilerplate/init/language/nothing.json ---\n{\n  \"name\": \"Good ol' JS\",\n  \"value\": {\n    \"extension\": \"js\"\n  }\n}\n\n\n--- File: 839 # web/koperasi-dashboard/src/boilerplate/init/language/nothing.json ---\n{\n  \"name\": \"Good ol' JS\",\n  \"value\": {\n    \"extension\": \"js\"\n  }\n}\n\n\n--- File: 814 # web/frontend/src/boilerplate/init/framework/03-backbone.json ---\n{\n  \"name\": \"Backbone.js\",\n  \"value\": {\n    \"dependencies\": [\"backbone\"]\n  }\n}\n\n\n--- File: 815 # web/frontend/src/boilerplate/init/framework/04-angular2.json ---\n{\n  \"name\": \"Angular 2\",\n  \"value\": {\n    \"dependencies\": [\"angular2\"]\n  }\n}\n\n\n--- File: 825 # web/frontend/src/boilerplate/init/preprocessor/nothing.json ---\n{\n  \"name\": \"Nothing, I am fine\",\n  \"value\": {\n    \"extension\": \"css\"\n  }\n}\n\n\n--- File: 832 # web/koperasi-dashboard/src/boilerplate/init/framework/03-backbone.json ---\n{\n  \"name\": \"Backbone.js\",\n  \"value\": {\n    \"dependencies\": [\"backbone\"]\n  }\n}\n\n\n--- File: 833 # web/koperasi-dashboard/src/boilerplate/init/framework/04-angular2.json ---\n{\n  \"name\": \"Angular 2\",\n  \"value\": {\n    \"dependencies\": [\"angular2\"]\n  }\n}\n\n\n--- File: 843 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/nothing.json ---\n{\n  \"name\": \"Nothing, I am fine\",\n  \"value\": {\n    \"extension\": \"css\"\n  }\n}\n\n\n--- File: 816 # web/frontend/src/boilerplate/init/framework/05-aurelia.json ---\n{\n  \"name\": \"Aurelia\",\n  \"value\": {\n    \"dependencies\": [\"aurelia-framework\"]\n  }\n}\n\n\n--- File: 834 # web/koperasi-dashboard/src/boilerplate/init/framework/05-aurelia.json ---\n{\n  \"name\": \"Aurelia\",\n  \"value\": {\n    \"dependencies\": [\"aurelia-framework\"]\n  }\n}\n\n\n--- File: 813 # web/frontend/src/boilerplate/init/framework/02-backboneMarionette.json ---\n{\n  \"name\": \"Backbone.js + Marionette.js\",\n  \"value\": {\n    \"dependencies\": [\"backbone\", \"backbone.marionette\"]\n  }\n}\n\n\n--- File: 831 # web/koperasi-dashboard/src/boilerplate/init/framework/02-backboneMarionette.json ---\n{\n  \"name\": \"Backbone.js + Marionette.js\",\n  \"value\": {\n    \"dependencies\": [\"backbone\", \"backbone.marionette\"]\n  }\n}\n\n\n--- File: 819 # web/frontend/src/boilerplate/init/language/01-babel.json ---\n{\n  \"name\": \"ECMAScript 6 (ES6 using Babel transpiler)\",\n  \"value\": {\n    \"devDependencies\": [\"babelify\"],\n    \"transform\": [\"babelify\"]\n  }\n}\n\n\n--- File: 820 # web/frontend/src/boilerplate/init/language/02-coffeescript.json ---\n{\n  \"name\": \"Coffeescript\",\n  \"value\": {\n    \"extension\": \"coffee\",\n    \"devDependencies\": [\"coffeeify\"],\n    \"transform\": [\"coffeeify\"]\n  }\n}\n\n\n--- File: 837 # web/koperasi-dashboard/src/boilerplate/init/language/01-babel.json ---\n{\n  \"name\": \"ECMAScript 6 (ES6 using Babel transpiler)\",\n  \"value\": {\n    \"devDependencies\": [\"babelify\"],\n    \"transform\": [\"babelify\"]\n  }\n}\n\n\n--- File: 838 # web/koperasi-dashboard/src/boilerplate/init/language/02-coffeescript.json ---\n{\n  \"name\": \"Coffeescript\",\n  \"value\": {\n    \"extension\": \"coffee\",\n    \"devDependencies\": [\"coffeeify\"],\n    \"transform\": [\"coffeeify\"]\n  }\n}\n\n\n--- File: 676 # modules/Api/Api.php ---\n<?php \nnamespace app\\modules\\Api;\n\nuse yii\\base\\Module;\n\nclass Api extends Module {\n\n    public function init() {\n        parent::init();\n    }\n}\n?>\n\n--- File: 823 # web/frontend/src/boilerplate/init/preprocessor/02-stylus.json ---\n{\n  \"name\": \"Stylus\",\n  \"value\": {\n    \"extension\": \"styl\",\n    \"dependencies\": [\"styl-easing\", \"styl-font-face\"],\n    \"devDependencies\": [\"gulp-stylus\"]\n  }\n}\n\n\n--- File: 841 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/02-stylus.json ---\n{\n  \"name\": \"Stylus\",\n  \"value\": {\n    \"extension\": \"styl\",\n    \"dependencies\": [\"styl-easing\", \"styl-font-face\"],\n    \"devDependencies\": [\"gulp-stylus\"]\n  }\n}\n\n\n--- File: 822 # web/frontend/src/boilerplate/init/preprocessor/01-sass.json ---\n{\n  \"name\": \"Sass\",\n  \"value\": {\n    \"extension\": \"scss\",\n    \"dependencies\": [\"sass-easing\", \"sass-font-face\"],\n    \"devDependencies\": [\"gulp-sass\", \"gulp-sass-glob\"]\n  }\n}\n\n\n--- File: 840 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/01-sass.json ---\n{\n  \"name\": \"Sass\",\n  \"value\": {\n    \"extension\": \"scss\",\n    \"dependencies\": [\"sass-easing\", \"sass-font-face\"],\n    \"devDependencies\": [\"gulp-sass\", \"gulp-sass-glob\"]\n  }\n}\n\n\n--- File: 824 # web/frontend/src/boilerplate/init/preprocessor/03-less.json ---\n{\n  \"name\": \"Less\",\n  \"value\": {\n    \"extension\": \"less\",\n    \"dependencies\": [\"less-easing\", \"less-font-face\"],\n    \"devDependencies\": [\"gulp-less\", \"less-plugin-glob\"]\n  }\n}\n\n\n--- File: 842 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/03-less.json ---\n{\n  \"name\": \"Less\",\n  \"value\": {\n    \"extension\": \"less\",\n    \"dependencies\": [\"less-easing\", \"less-font-face\"],\n    \"devDependencies\": [\"gulp-less\", \"less-plugin-glob\"]\n  }\n}\n\n\n--- File: 812 # web/frontend/src/boilerplate/init/framework/01-reactJSX.json ---\n{\n  \"name\": \"React + JSX\",\n  \"value\": {\n    \"devDependencies\": [\"babelify\", \"babel-preset-es2015\", \"babel-preset-react\"],\n    \"dependencies\": [\"react\", \"react-dom\", \"react-router\"],\n    \"transform\": [\"babelify\"]\n  }\n}\n\n\n--- File: 830 # web/koperasi-dashboard/src/boilerplate/init/framework/01-reactJSX.json ---\n{\n  \"name\": \"React + JSX\",\n  \"value\": {\n    \"devDependencies\": [\"babelify\", \"babel-preset-es2015\", \"babel-preset-react\"],\n    \"dependencies\": [\"react\", \"react-dom\", \"react-router\"],\n    \"transform\": [\"babelify\"]\n  }\n}\n\n\n--- File: 681 # modules/Api/components/TimeHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\base\\Component;\n\nclass TimeHelper extends Component {\n\n    public static function getElapsedTime($start, $percision = 3) {\n        return (string) round(microtime(true) - $start, $percision) . \" sec\";\n    }\n}\n?>\n\n--- File: 817 # web/frontend/src/boilerplate/init/framework/06-react-redux.json ---\n{\n  \"name\": \"React + Redux\",\n  \"value\": {\n    \"devDependencies\": [\"babelify\", \"babel-preset-es2015\", \"babel-preset-react\", \"redux-devtools\"],\n    \"dependencies\": [\"react\", \"react-dom\", \"react-router\", \"redux\", \"react-redux\", \"react-router-redux\"],\n    \"transform\": [\"babelify\"]\n  }\n}\n\n\n--- File: 835 # web/koperasi-dashboard/src/boilerplate/init/framework/06-react-redux.json ---\n{\n  \"name\": \"React + Redux\",\n  \"value\": {\n    \"devDependencies\": [\"babelify\", \"babel-preset-es2015\", \"babel-preset-react\", \"redux-devtools\"],\n    \"dependencies\": [\"react\", \"react-dom\", \"react-router\", \"redux\", \"react-redux\", \"react-router-redux\"],\n    \"transform\": [\"babelify\"]\n  }\n}\n\n\n--- File: 808 # web/index.php ---\n<?php\n\n// comment out the following two lines when deployed to production\ndefined('YII_DEBUG') or define('YII_DEBUG', true);\ndefined('YII_ENV') or define('YII_ENV', 'dev');\n\nrequire __DIR__ . '/../vendor/autoload.php';\nrequire __DIR__ . '/../vendor/yiisoft/yii2/Yii.php';\n\n$config = require __DIR__ . '/../config/web.php';\n\n(new yii\\web\\Application($config))->run();\n\n\n--- File: 807 # web/index-test.php ---\n<?php\n\n// NOTE: Make sure this file is not accessible when deployed to production\nif (!in_array(@$_SERVER['REMOTE_ADDR'], ['127.0.0.1', '::1'])) {\n    die('You are not allowed to access this file.');\n}\n\ndefined('YII_DEBUG') or define('YII_DEBUG', true);\ndefined('YII_ENV') or define('YII_ENV', 'test');\n\nrequire __DIR__ . '/../vendor/autoload.php';\nrequire __DIR__ . '/../vendor/yiisoft/yii2/Yii.php';\n\n$config = require __DIR__ . '/../config/test.php';\n\n(new yii\\web\\Application($config))->run();\n\n\n--- File: 677 # modules/Api/components/AuthHelper.php ---\n<?php\nnamespace app\\modules\\Api\\components;\n\nuse yii\\base\\Component;\nuse app\\models\\Setting;\n\nclass AuthHelper extends Component {\n    private static $hash = 'sha512';\n\n    public static function checkAuth($authKey, $nik) {\n\n        if(!$authKey || !$nik) {\n            return false;\n        }\n\n        $key = Setting::getValue('secret_key');\n        $hashed = hash(self::$hash, $key . $nik);\n        \n        if($hashed != $authKey) {\n            return false;\n        }\n\n        return true;\n    }\n}\n?>\n\n--- File: 684 # modules/Api/controllers/DukcapilController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse app\\components\\HelperDukcapil;\nuse Yii;\nuse yii\\rest\\Controller;\n\nclass DukcapilController extends Controller {\n\n    public function actionValidasiData() {\n        if(Yii::$app->user->isGuest){\n            return $this->redirect(['/']);\n        }\n        $status = HelperDukcapil::CheckIsActiveValidateDukcapil();\n        if($status){\n            $validate = new HelperDukcapil($_POST);\n            $error = $validate->curlValidDukcapil();\n            if ($error !== true) {\n                Yii::error(\"Dukcapil error: $error | Params: \" . json_encode($_POST), __METHOD__);\n            }\n            $response = $validate->response();\n        }else{\n            $response = HelperDukcapil::AllowValidation();\n        }\n\n        return $this->asJson($response);\n    }\n\n}\n\n--- File: 743 # views/pendirian/index.php ---\n<?php\n\nuse yii\\bootstrap\\Html;\nuse yii\\bootstrap\\ActiveForm;\n?>\n    <?= Html::a('Daftar Transaksi',['/pendirian/listtransaction',], [\n        'class' => 'btn-lg btn-success',\n    ]) ?>\n    <div>\n    <div class=\"panel\">\n    <div class=\"panel-body\">\n        <h1 class=\"text-center\"><?= $judul ?></h1>\n        <?php if(!$step2): ?>\n        <?= $this->render('_form',[\n            'model' => $model,\n        ]) ?>\n        <?php endif; ?>\n\n        <?php if($step2): ?>\n            <?= $this->render('_step2', [\n                'model' => $model,\n                'data' => $data,\n                'SearchData' => $SearchData,\n                'nama_pemohon' => $nama_pemohon,\n                'email_pemohon' => $email_pemohon,\n            ]) ?>\n        <?php endif; ?>\n\n        <?php if(isset($err) && $err['status'] === true): ?>\n            <?= $this->render('_err',['err' => $err]) ?>\n        <?php endif; ?>\n    </div>\n</div>\n</div>\n\n--- File: 8 # components/BaseController.php ---\n<?php\n\nnamespace app\\components;\n\nuse Yii;\nuse docotel\\dcms\\components\\BaseController as DocoController;\nuse yii\\filters\\AccessControl;\nuse yii\\web\\Response;\nuse yii\\filters\\VerbFilter;\nuse app\\models\\LoginForm;\nuse app\\models\\ContactForm;\nuse app\\models\\notariat\\Notaris;\n\nclass BaseController extends DocoController {\n    // public $layout = '@app/views/layouts/main.php';\n    public $dummy_login =[\n        'id_notaris' => 75561,\n        'nama_notaris' => \"SABH S.H M.Kn\",\n        'wilayah_id' => 1,\n        'email' => \"sabh@koperasi.com\",\n        'telepon' => \"0912345678\",\n    ];\n\n    public function init(){\n    \tif(!Yii::$app->user->isGuest) {\n    \t\tif(empty(Yii::$app->session->get('data_notaris')) && Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris') {\n                Yii::$app->user->logout();\n                return Yii::$app->response->redirect('/site/login');\n    \t\t}\n    \t}\n    \tparent::init();\n    }\n\n}\n\n--- File: 678 # modules/Api/components/DataAnggotaHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\base\\Component;\nuse app\\models\\StatusPengurus;\nuse app\\models\\JenisKelamin;\n\nclass DataAnggotaHelper extends Component {\n\n    public static function getIdStatusPengurus($nama) {\n        $data = StatusPengurus::find()->where(['nama' => strtoupper($nama)])->one();\n        \n        if(!$data) {\n            return null;\n        }\n\n        return $data->id;\n    }\n\n    public static function getIdJenisKelamin($nama) {\n        $nama = self::normalizeJenisKelamin($nama);\n\n        $data = JenisKelamin::find()->where(['nama' => strtoupper($nama)])->one();\n        if(!$data) {\n            return null;\n        }\n\n        return $data->id;\n    }\n\n    public static function normalizeJenisKelamin($nama) {\n        if(strtoupper($nama) == strtoupper('LAKI-LAKI') || strtoupper($nama) == strtoupper('LAKI - LAKI') ) {\n            return \"LAKI - LAKI\";\n        }\n        return $nama;\n    }\n}\n?>\n\n--- File: 686 # modules/Api/controllers/WilayahController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse app\\models\\Wilayah;\nuse yii\\rest\\Controller;\n\nclass WilayahController extends Controller {\n\n    public function actionGetChildWilayah($id, $tipe) {\n        if (!$id || !Yii::$app->request->isAjax) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n        \n        $data = Wilayah::getChildWilayah($id, $tipe);\n        \n        if (!$data) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n\n        $arr = [];\n        foreach($data as $d) {\n            if($tipe == 'Kelurahan') {\n                $arr[] = [\n                    'id' => $d['ID_WIL'],\n                    'nama' => $d['NM_KELURAHAN'],\n                ];\n                continue;\n            }\n\n            $arr[] = [\n                'id' => $d['WILAYAH_ID'],\n                'nama' => $d['NAMA'],\n            ];\n        }\n        return json_encode($arr);\n    }\n\n}\n\n--- File: 190 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Snapshotindex.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints\\Indices;\n\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\n\n/**\n * Class Snapshotindex\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\\Indices\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Snapshotindex extends AbstractEndpoint\n{\n    /**\n     * @return string\n     */\n    public function getURI()\n    {\n        $index = $this->index;\n        $uri   = \"/_gateway/snapshot\";\n\n        if (isset($index) === true) {\n            $uri = \"/$index/_gateway/snapshot\";\n        }\n\n        return $uri;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'ignore_unavailable',\n            'allow_no_indices',\n            'expand_wildcards',\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        return 'POST';\n    }\n}\n\n\n--- File: 607 # models/MappingKBLI.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\n\n/**\n * This is the model class for table \"{{%m_kbli}}\".\n *\n * @property int $id\n * @property string $kode\n * @property int $m_jenis_koperasi\n */\nclass MappingKBLI extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%m_kbli}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['m_jenis_koperasi'], 'required'],\n            [['m_jenis_koperasi'], 'integer'],\n            [['kode'], 'string', 'max' => 33],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'kode' => 'Kode',\n            'm_jenis_koperasi' => 'M Jenis Koperasi',\n        ];\n    }\n}\n\n\n--- File: 767 # views/pesan-nama/index.php ---\n<?php\n\nuse yii\\helpers\\Html;\n?>\n<?= Html::a('Cek Nama yang Telah Dipesan', ['/pesan-nama/list-pesan',], [\n    'class' => 'btn btn-success',\n]) ?>\n\n<div class=\"panel panel-default\" style=\"padding:10px\">\n    <div class=\"panel-body\">\n        <h2 class=\"text-center\">PESAN NAMA KOPERASI</h2>\n        <hr>\n        <?= $this->render('_form', [\n            'model' => $model,\n            'listJenisKop' => $listJenisKop,\n            // 'listPelabuhan' => $listPelabuhan,\n            'listPola' => $listPola,\n            'listSubJenis' => $listSubJenis,\n            'isMerahPutih' => $isMerahPutih,\n            'listModelKop' => $listModelKop,\n        ]) ?>\n\n        <?php if (isset($step2) && $step2 === true) : ?>\n            <?= $this->render('_step2', [\n                    'model' => $model,\n                    'SearchData' => $SearchData,\n                    'dataNotaris' => $dataNotaris\n                ]) ?>\n        <?php endif; ?>\n\n        <?php if (!empty($err['status']) && $err['status'] === true) : ?>\n            <?= $this->render('_err', ['err' => $err]) ?>\n        <?php endif; ?>\n    </div>\n</div>\n\n--- File: 679 # modules/Api/components/JWTHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\helpers\\Json;\nuse app\\models\\Setting;\n\nclass JWTHelper {\n\n    const SECRET = 'D0coSp4rtan2016';\n    const HASH_ALGO = \"sha256\";\n\n    public static function makeHeader() {\n        $data = [\n            \"alg\" => \"HS256\",\n            \"typ\" => \"JWT\"\n        ];\n\n        return base64_encode(Json::encode($data) );\n    }\n\n    public static function makePayload($payload) {\n        return base64_encode( Json::encode($payload) );\n    }\n\n    public static function makeSignature($header, $payload) {\n        $secretKey = Setting::getValue('jwt_token', self::SECRET);\n        $data = $header . \".\" . $payload;\n        return hash_hmac(self::HASH_ALGO, $data, self::SECRET);\n    }\n\n    public static function validateSignature($header, $payload, $signature) {\n        $checkSign = self::makeSignature($header, $payload);\n        return $checkSign == $signature;\n    }\n\n    public static function getDataPayload($payload) {\n        return base64_decode($payload);\n    }\n\n    public static function getDataHeader($header) {\n        return base64_decode($header);\n    }\n}\n?>\n\n--- File: 4 # assets/AppAsset.php ---\n<?php\n/**\n * @link http://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http://www.yiiframework.com/license/\n */\n\nnamespace app\\assets;\n\nuse yii\\web\\AssetBundle;\n\n/**\n * Main application asset bundle.\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\nclass AppAsset extends AssetBundle\n{\n    public $basePath = '@webroot';\n    public $baseUrl = '@web';\n    public $css = [\n        'css/site.css',\n        'frontend/dist/styles/main.css',\n        // 'koperasi-dashboard/dist/styles/main.css',\n        // 'css/main.css',\n    ];\n    public $js = [\n        'http://cdnjs.cloudflare.com/ajax/libs/strophe.js/1.2.4/strophe.min.js',\n        'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js',\n        // 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n        'frontend/dist/scripts/main.js',\n        'frontend/dist/scripts/vendor.js',\n        'js/global/logSyarat.js',\n    ];\n    public $depends = [\n        'yii\\web\\JqueryAsset',\n        'yii\\web\\YiiAsset',\n        // 'yii\\bootstrap\\BootstrapAsset',\n        'yii\\bootstrap\\BootstrapPluginAsset'\n    ];\n}\n\n\n--- File: 129 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Reindex.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints;\n\n/**\n * Class Reindex\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\\Indices\n * @author   Augustin Husson <husson.augustin@gmail.com>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Reindex extends AbstractEndpoint\n{\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'slices',\n            'refresh',\n            'timeout',\n            'consistency',\n            'wait_for_completion',\n            'requests_per_second',\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getURI()\n    {\n        return '/_reindex';\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        return 'POST';\n    }\n\n    /**\n     * @param array $body\n     *\n     * @throws \\Elasticsearch\\Common\\Exceptions\\InvalidArgumentException\n     * @return $this\n     */\n    public function setBody($body)\n    {\n        if (isset($body) !== true) {\n            return $this;\n        }\n\n        $this->body = $body;\n\n        return $this;\n    }\n}\n\n\n--- File: 205 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/Get.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints\\Indices\\Mapping;\n\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\n\n/**\n * Class Get\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\\Indices\\Mapping\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Get extends AbstractEndpoint\n{\n    /**\n     * @return string\n     */\n    public function getURI()\n    {\n        $index = $this->index;\n        $type = $this->type;\n        $uri   = \"/_mapping\";\n\n        if (isset($index) === true && isset($type) === true) {\n            $uri = \"/$index/_mapping/$type\";\n        } elseif (isset($type) === true) {\n            $uri = \"/_mapping/$type\";\n        } elseif (isset($index) === true) {\n            $uri = \"/$index/_mapping\";\n        }\n\n        return $uri;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'ignore_unavailable',\n            'allow_no_indices',\n            'expand_wildcards',\n            'wildcard_expansion',\n            'local',\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        return 'GET';\n    }\n}\n\n\n--- File: 204 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/Delete.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints\\Indices\\Mapping;\n\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\nuse Elasticsearch\\Common\\Exceptions;\n\n/**\n * Class Delete\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\\Indices\\Mapping\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Delete extends AbstractEndpoint\n{\n    /**\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     * @return string\n     */\n    public function getURI()\n    {\n        if (isset($this->index) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'index is required for Delete'\n            );\n        }\n        if (isset($this->type) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'type is required for Delete'\n            );\n        }\n        $index = $this->index;\n        $type = $this->type;\n        $uri   = \"/$index/$type/_mapping\";\n\n        if (isset($index) === true && isset($type) === true) {\n            $uri = \"/$index/$type/_mapping\";\n        }\n\n        return $uri;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'master_timeout',\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        return 'DELETE';\n    }\n}\n\n\n--- File: 206 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/GetField.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints\\Indices\\Mapping;\n\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\nuse Elasticsearch\\Common\\Exceptions;\n\n/**\n * Class GetField\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\\Indices\\Mapping\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass GetField extends AbstractEndpoint\n{\n    /** @var  string */\n    private $fields;\n\n    /**\n     * @param string|array $fields\n     *\n     * @return $this\n     */\n    public function setFields($fields)\n    {\n        if (isset($fields) !== true) {\n            return $this;\n        }\n\n        if (is_array($fields) === true) {\n            $fields = implode(\",\", $fields);\n        }\n\n        $this->fields = $fields;\n\n        return $this;\n    }\n\n    /**\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     * @return string\n     */\n    public function getURI()\n    {\n        if (isset($this->fields) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'fields is required for Get Field Mapping'\n            );\n        }\n        $uri = $this->getOptionalURI('_mapping/field');\n\n        return $uri.'/'.$this->fields;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'include_defaults',\n            'ignore_unavailable',\n            'allow_no_indices',\n            'expand_wildcards',\n            'local'\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        return 'GET';\n    }\n}\n\n\n--- File: 734 # views/pembubaran/index.php ---\n<?php \nuse yii\\bootstrap\\ActiveForm;\nuse yii\\bootstrap\\Html;\n\n?>\n<div class=\"panel panel-default animated fadeInDown\">\n\n    <div class=\"panel-body\">\n        \n        <div id=\"judul\" class=\"page-header\">\n            <h1 class=\"text-center\">PEMBUBARAN KOPERASI</h1>\n        </div>\n        <?php $form = ActiveForm::begin([]) ?>\n        \n        <div id=\"form-isi\" style=\"margin-bottom:30px;\">\n            \n            <div class=\"row\">\n                <div class=\"col-sm-4 text-center\">\n                    <?= Html::activeLabel($model, 'nik',[\n                        'style' => 'font-size:11pt;line-height:2',\n                    ]) ?>\n                </div>\n                <div class=\"col-sm-6\">\n                    <?= Html::activeTextInput($model, 'nik',[\n                        'class' => 'form-control',\n                        'autocomplete' => false\n                    ]) ?>\n                    <br>\n                    <?= Html::error($model, 'nik', [\n                        'class' => 'help-block-error',\n                        'style' => 'color:red;',\n                    ]) ?>\n                </div>\n            </div>\n\n        </div>\n\n        <div id=\"tombol\" class=\"text-center\" style=\"margin-bottom:30px;\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <?= Html::submitButton('Cari', [\n                        'class' => 'btn btn-primary'\n                    ]) ?>\n                </div>\n            </div>\n        </div>\n        \n        <?php ActiveForm::end() ?>\n        \n        <div id=\"err-form\">\n            <?= $this->render('_err', [\n                'err' => $err,\n            ]) ?>\n        </div>\n    \n    </div>\n\n</div>\n\n--- File: 246 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/BooleanRequestWrapper.php ---\n<?php\n\nnamespace Elasticsearch\\Namespaces;\n\nuse Elasticsearch\\Common\\Exceptions\\Missing404Exception;\nuse Elasticsearch\\Common\\Exceptions\\RoutingMissingException;\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\nuse Elasticsearch\\Transport;\nuse GuzzleHttp\\Ring\\Future\\FutureArrayInterface;\n\n/**\n * Trait AbstractNamespace\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Namespaces\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\ntrait BooleanRequestWrapper\n{\n    /**\n     * Perform Request\n     *\n     * @param  AbstractEndpoint $endpoint The Endpoint to perform this request against\n     *\n     * @throws Missing404Exception\n     * @throws RoutingMissingException\n     */\n    public static function performRequest(AbstractEndpoint $endpoint, Transport $transport)\n    {\n        try {\n            $response = $transport->performRequest(\n                $endpoint->getMethod(),\n                $endpoint->getURI(),\n                $endpoint->getParams(),\n                $endpoint->getBody(),\n                $endpoint->getOptions()\n            );\n\n            $response = $transport->resultOrFuture($response, $endpoint->getOptions());\n            if (!($response instanceof FutureArrayInterface)) {\n                if ($response['status'] === 200) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                // async mode, can't easily resolve this...punt to user\n                return $response;\n            }\n        } catch (Missing404Exception $exception) {\n            return false;\n        } catch (RoutingMissingException $exception) {\n            return false;\n        }\n    }\n}\n\n\n--- File: 687 # modules/Api/models/JWTToken.php ---\n<?php \nnamespace app\\modules\\Api\\models;\n\nuse yii\\base\\Model;\nuse app\\modules\\Api\\components\\JWTHelper;\nuse yii\\helpers\\Json;\nuse yii\\base\\Exception;\n\nclass JWTToken extends Model {\n    public $token,\n           $header,\n           $payload,\n           $signature;\n\n    public function __construct($token = null)\n    {\n        parent::__construct();\n        $this->header = JWTHelper::makeHeader();\n\n        if($token) {\n            $this->mappingToken($token);\n        }\n    }\n\n\n    public function mappingToken($token) {\n        $removeBear = explode(\"Bearer \", $token);\n        $token = $removeBear[count($removeBear) - 1];\n        \n        $part = explode(\".\", $token);\n        $this->header = $part[0];\n        $this->payload = $part[1];\n        $this->signature = $part[2];\n        $this->token = $token;\n    }\n\n    public function validateSignature() {\n        return JWTHelper::validateSignature($this->header, $this->payload, $this->signature);\n    }\n\n    public function checkExpired() {\n        $data = $this->getDataPayload();\n\n        if(!array_key_exists('exp', $data)) {\n            return true;\n        }\n\n        $expired = Date(\"Y-m-d H:i:s\", strtotime($data['exp']));\n        $now = Date(\"Y-m-d H:i:s\");\n        \n        return $now <= $expired;\n    }\n\n    public function getDataPayload() {\n        $data = JWTHelper::getDataPayload($this->payload);\n        $jsonData = Json::decode($data);\n\n        if( !$jsonData ) {\n            throw new Exception(\"Format Payload Tidak Valid\");\n        }\n        return $jsonData;\n    }\n\n    public function generateToken()\n    {\n        $token = $this->header . \".\" . $this->payload . \".\" . $this->signature;\n        return $token;\n    }\n\n    public function setPayload($payload) {\n        $this->payload = JWTHelper::makePayload($payload);\n        $this->signature = JWTHelper::makeSignature($this->header, $this->payload);\n        return $this;\n    }\n}\n?>\n\n--- File: 776 # views/site/index.php ---\n<?php \n\tuse yii\\helpers\\Html;\n\tuse yii\\bootstrap\\ActiveForm;\n\tuse yii\\helpers\\Url;\n?>\n<!-- <section class=\"content container-fluid\">\n    <h1>KOPERASI</h1>\n    <a href=\"/pesan-nama/\" class=\"btn btn-success\">Pesan Nama</a>\n    <a href=\"/pesan-nama/list-pesan\" class=\"btn btn-primary\">List Pesan Nama</a>\n</section> -->\n\n<div class=\"login-content\">\n<img src=\"/images/assets/koperasi.png\" class=\"logo\" style=\"\" alt=\"\">\n      <div class=\"logo-koperasi\">\n        <h4>AHU KOPERASI</h4>\n      </div>\n      <div class=\"login-boxes animated fadeIn\">\n        <div class=\"title\">LOGIN</div>\n        <?php \n    \t$form = ActiveForm::begin([\n\t        'id' => 'login-form',\n\t        'action' => Url::base(true) . '/site/login',\n\t        // 'layout' => 'horizontal',\n\t        'fieldConfig' => [\n\t            // 'template' => \"{label}\\n<div class=\\\"col-lg-6\\\">{input}</div>\\n<div class=\\\"col-lg-12 text-center\\\">{error}</div>\",\n\t            // 'labelOptions' => ['class' => 'col-lg-offset-1 col-lg-2 control-label'],\n\t        ],\n    \t]); \n    ?>\n          <?= $form->field($model, 'username')->textInput(['autofocus' => true]) ?>\n\n        <?= $form->field($model, 'password')->passwordInput() ?>\n\n        <!-- <?= $form->field($model, 'rememberMe')->checkbox([\n            // 'template' => \"<div class=\\\"col-lg-offset-3 col-lg-3\\\">{input} {label}</div>\\n<div class=\\\"col-lg-8\\\">{error}</div>\",\n        ]) ?> -->\n            <?= Html::submitButton('Login', ['class' => 'btn btn-purple', 'name' => 'login-button']) ?>\n        <?php ActiveForm::end(); ?>\n\n        <div class=\"row\" style=\"margin-top:10px\">\n          <div class=\"col-md-12\">\n            <?php if ($showNpakMessage): ?>\n              <span style=\"color:red;font-style:italic\">\n                  Notaris yang mempunyai akses ke aplikasi pengesahan koperasi ini hanya Notaris Pembuat Akta Koperasi (NPAK)\n              </span>\n            <?php endif; ?>\n          </div>\n        </div>\n\n      </div>\n    </div>\n\n--- File: 207 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/Put.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints\\Indices\\Mapping;\n\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\nuse Elasticsearch\\Common\\Exceptions;\n\n/**\n * Class Put\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\\Indices\\Mapping\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Put extends AbstractEndpoint\n{\n    /**\n     * @param array $body\n     *\n     * @throws \\Elasticsearch\\Common\\Exceptions\\InvalidArgumentException\n     * @return $this\n     */\n    public function setBody($body)\n    {\n        if (isset($body) !== true) {\n            return $this;\n        }\n\n        $this->body = $body;\n\n        return $this;\n    }\n\n    /**\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     * @return string\n     */\n    public function getURI()\n    {\n        if (isset($this->type) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'type is required for Put'\n            );\n        }\n        $index = $this->index;\n        $type = $this->type;\n        $uri   = \"/_mapping/$type\";\n\n        if (isset($index) === true && isset($type) === true) {\n            $uri = \"/$index/$type/_mapping\";\n        } elseif (isset($type) === true) {\n            $uri = \"/_mapping/$type\";\n        }\n\n        return $uri;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'ignore_conflicts',\n            'timeout',\n            'master_timeout',\n            'ignore_unavailable',\n            'allow_no_indices',\n            'expand_wildcards',\n            'update_all_types'\n        );\n    }\n\n    /**\n     * @return array\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     */\n    public function getBody()\n    {\n        if (isset($this->body) !== true) {\n            throw new Exceptions\\RuntimeException('Body is required for Put Mapping');\n        }\n\n        return $this->body;\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        return 'PUT';\n    }\n}\n\n\n--- File: 394 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php ---\n<?php\n\n/*\n * This file is part of the Monolog package.\n *\n * (c) Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Monolog\\Handler;\n\nuse Monolog\\Formatter\\FormatterInterface;\n\n/**\n * This simple wrapper class can be used to extend handlers functionality.\n *\n * Example: A custom filtering that can be applied to any handler.\n *\n * Inherit from this class and override handle() like this:\n *\n *   public function handle(array $record)\n *   {\n *        if ($record meets certain conditions) {\n *            return false;\n *        }\n *        return $this->handler->handle($record);\n *   }\n *\n * @author Alexey Karapetov <alexey@karapetov.com>\n */\nclass HandlerWrapper implements HandlerInterface\n{\n    /**\n     * @var HandlerInterface\n     */\n    protected $handler;\n\n    /**\n     * HandlerWrapper constructor.\n     * @param HandlerInterface $handler\n     */\n    public function __construct(HandlerInterface $handler)\n    {\n        $this->handler = $handler;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function isHandling(array $record)\n    {\n        return $this->handler->isHandling($record);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function handle(array $record)\n    {\n        return $this->handler->handle($record);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function handleBatch(array $records)\n    {\n        return $this->handler->handleBatch($records);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function pushProcessor($callback)\n    {\n        $this->handler->pushProcessor($callback);\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function popProcessor()\n    {\n        return $this->handler->popProcessor();\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function setFormatter(FormatterInterface $formatter)\n    {\n        $this->handler->setFormatter($formatter);\n\n        return $this;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getFormatter()\n    {\n        return $this->handler->getFormatter();\n    }\n}\n\n\n--- File: 727 # views/layouts/main-old.php ---\n<?php\n\n/* @var $this \\yii\\web\\View */\n/* @var $content string */\n\nuse app\\widgets\\Alert;\nuse yii\\helpers\\Html;\nuse yii\\bootstrap\\Nav;\nuse yii\\bootstrap\\NavBar;\nuse yii\\widgets\\Breadcrumbs;\nuse app\\assets\\AppAsset;\n\nAppAsset::register($this);\n?>\n<?php $this->beginPage() ?>\n<!DOCTYPE html>\n<html lang=\"<?= Yii::$app->language ?>\">\n<head>\n    <meta charset=\"<?= Yii::$app->charset ?>\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <?= Html::csrfMetaTags() ?>\n    <title><?= Html::encode($this->title) ?></title>\n    <?php $this->head() ?>\n    <?php //$this->registerCssFile('@web/frontend/dist/styles/main.css') ?>\n    <script defer src=\"https://use.fontawesome.com/releases/v5.0.13/js/all.js\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<?php $this->beginBody() ?>\n\n<div class=\"wrap\">\n    <?php\n    NavBar::begin([\n        'brandLabel' => Yii::$app->name,\n        'brandUrl' => Yii::$app->homeUrl,\n        'options' => [\n            'class' => 'navbar-inverse navbar-fixed-top',\n        ],\n    ]);\n    echo Nav::widget([\n        'options' => ['class' => 'navbar-nav navbar-right'],\n        'items' => [\n            ['label' => 'Home', 'url' => ['/site/index']],\n            ['label' => 'About', 'url' => ['/site/about']],\n            ['label' => 'Contact', 'url' => ['/site/contact']],\n            Yii::$app->user->isGuest ? (\n                ['label' => 'Login', 'url' => ['/site/login']]\n            ) : (\n                '<li>'\n                . Html::beginForm(['/site/logout'], 'post')\n                . Html::submitButton(\n                    'Logout (' . Yii::$app->user->identity->username . ')',\n                    ['class' => 'btn btn-link logout']\n                )\n                . Html::endForm()\n                . '</li>'\n            )\n        ],\n    ]);\n    NavBar::end();\n    ?>\n\n    <div class=\"container\">\n        <?= Breadcrumbs::widget([\n            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],\n        ]) ?>\n        <?= Alert::widget() ?>\n        <?= $content ?>\n    </div>\n</div>\n\n<footer class=\"footer\">\n    <div class=\"container\">\n        <p class=\"pull-left\">&copy; My Company <?= date('Y') ?></p>\n\n        <p class=\"pull-right\"><?= Yii::powered() ?></p>\n    </div>\n</footer>\n\n<?php $this->endBody() ?>\n</body>\n</html>\n<?php $this->endPage() ?>\n\n\n--- File: 120 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Index.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints;\n\nuse Elasticsearch\\Common\\Exceptions;\n\n/**\n * Class Index\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Index extends AbstractEndpoint\n{\n    /** @var bool  */\n    private $createIfAbsent = false;\n\n    /**\n     * @param array $body\n     *\n     * @throws \\Elasticsearch\\Common\\Exceptions\\InvalidArgumentException\n     * @return $this\n     */\n    public function setBody($body)\n    {\n        if (isset($body) !== true) {\n            return $this;\n        }\n\n        $this->body = $body;\n\n        return $this;\n    }\n\n    /**\n     * @return $this\n     */\n    public function createIfAbsent()\n    {\n        $this->createIfAbsent = true;\n\n        return $this;\n    }\n\n    /**\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     * @return string\n     */\n    public function getURI()\n    {\n        if (isset($this->index) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'index is required for Index'\n            );\n        }\n\n        if (isset($this->type) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'type is required for Index'\n            );\n        }\n\n        $id    = $this->id;\n        $index = $this->index;\n        $type  = $this->type;\n        $uri   = \"/$index/$type\";\n\n        if (isset($id) === true) {\n            $uri = \"/$index/$type/$id\";\n        }\n        return $uri;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'consistency',\n            'op_type',\n            'parent',\n            'percolate',\n            'refresh',\n            'replication',\n            'routing',\n            'timeout',\n            'timestamp',\n            'ttl',\n            'version',\n            'version_type',\n            'pipeline'\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        if (isset($this->id) === true) {\n            return 'PUT';\n        } else {\n            return 'POST';\n        }\n    }\n\n    /**\n     * @return array\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     */\n    public function getBody()\n    {\n        if (isset($this->body) !== true) {\n            throw new Exceptions\\RuntimeException('Document body must be set for index request');\n        } else {\n            return $this->body;\n        }\n    }\n}\n\n\n--- File: 323 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/GuzzleStreamWrapper.php ---\n<?php\nnamespace GuzzleHttp\\Stream;\n\n/**\n * Converts Guzzle streams into PHP stream resources.\n */\nclass GuzzleStreamWrapper\n{\n    /** @var resource */\n    public $context;\n\n    /** @var StreamInterface */\n    private $stream;\n\n    /** @var string r, r+, or w */\n    private $mode;\n\n    /**\n     * Returns a resource representing the stream.\n     *\n     * @param StreamInterface $stream The stream to get a resource for\n     *\n     * @return resource\n     * @throws \\InvalidArgumentException if stream is not readable or writable\n     */\n    public static function getResource(StreamInterface $stream)\n    {\n        self::register();\n\n        if ($stream->isReadable()) {\n            $mode = $stream->isWritable() ? 'r+' : 'r';\n        } elseif ($stream->isWritable()) {\n            $mode = 'w';\n        } else {\n            throw new \\InvalidArgumentException('The stream must be readable, '\n                . 'writable, or both.');\n        }\n\n        return fopen('guzzle://stream', $mode, null, stream_context_create([\n            'guzzle' => ['stream' => $stream]\n        ]));\n    }\n\n    /**\n     * Registers the stream wrapper if needed\n     */\n    public static function register()\n    {\n        if (!in_array('guzzle', stream_get_wrappers())) {\n            stream_wrapper_register('guzzle', __CLASS__);\n        }\n    }\n\n    public function stream_open($path, $mode, $options, &$opened_path)\n    {\n        $options = stream_context_get_options($this->context);\n\n        if (!isset($options['guzzle']['stream'])) {\n            return false;\n        }\n\n        $this->mode = $mode;\n        $this->stream = $options['guzzle']['stream'];\n\n        return true;\n    }\n\n    public function stream_read($count)\n    {\n        return $this->stream->read($count);\n    }\n\n    public function stream_write($data)\n    {\n        return (int) $this->stream->write($data);\n    }\n\n    public function stream_tell()\n    {\n        return $this->stream->tell();\n    }\n\n    public function stream_eof()\n    {\n        return $this->stream->eof();\n    }\n\n    public function stream_seek($offset, $whence)\n    {\n        return $this->stream->seek($offset, $whence);\n    }\n\n    public function stream_stat()\n    {\n        static $modeMap = [\n            'r'  => 33060,\n            'r+' => 33206,\n            'w'  => 33188\n        ];\n\n        return [\n            'dev'     => 0,\n            'ino'     => 0,\n            'mode'    => $modeMap[$this->mode],\n            'nlink'   => 0,\n            'uid'     => 0,\n            'gid'     => 0,\n            'rdev'    => 0,\n            'size'    => $this->stream->getSize() ?: 0,\n            'atime'   => 0,\n            'mtime'   => 0,\n            'ctime'   => 0,\n            'blksize' => 0,\n            'blocks'  => 0\n        ];\n    }\n}\n\n\n--- File: 343 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/GuzzleStreamWrapperTest.php ---\n<?php\nnamespace GuzzleHttp\\Tests\\Stream;\n\nuse GuzzleHttp\\Stream\\GuzzleStreamWrapper;\nuse GuzzleHttp\\Stream\\Stream;\n\n/**\n * @covers GuzzleHttp\\Stream\\GuzzleStreamWrapper\n */\nclass GuzzleStreamWrapperTest extends \\PHPUnit_Framework_TestCase\n{\n    public function testResource()\n    {\n        $stream = Stream::factory('foo');\n        $handle = GuzzleStreamWrapper::getResource($stream);\n        $this->assertSame('foo', fread($handle, 3));\n        $this->assertSame(3, ftell($handle));\n        $this->assertSame(3, fwrite($handle, 'bar'));\n        $this->assertSame(0, fseek($handle, 0));\n        $this->assertSame('foobar', fread($handle, 6));\n        $this->assertTrue(feof($handle));\n\n        // This fails on HHVM for some reason\n        if (!defined('HHVM_VERSION')) {\n            $this->assertEquals([\n                'dev'     => 0,\n                'ino'     => 0,\n                'mode'    => 33206,\n                'nlink'   => 0,\n                'uid'     => 0,\n                'gid'     => 0,\n                'rdev'    => 0,\n                'size'    => 6,\n                'atime'   => 0,\n                'mtime'   => 0,\n                'ctime'   => 0,\n                'blksize' => 0,\n                'blocks'  => 0,\n                0         => 0,\n                1         => 0,\n                2         => 33206,\n                3         => 0,\n                4         => 0,\n                5         => 0,\n                6         => 0,\n                7         => 6,\n                8         => 0,\n                9         => 0,\n                10        => 0,\n                11        => 0,\n                12        => 0,\n            ], fstat($handle));\n        }\n\n        $this->assertTrue(fclose($handle));\n        $this->assertSame('foobar', (string) $stream);\n    }\n\n    /**\n     * @expectedException \\InvalidArgumentException\n     */\n    public function testValidatesStream()\n    {\n        $stream = $this->getMockBuilder('GuzzleHttp\\Stream\\StreamInterface')\n            ->setMethods(['isReadable', 'isWritable'])\n            ->getMockForAbstractClass();\n        $stream->expects($this->once())\n            ->method('isReadable')\n            ->will($this->returnValue(false));\n        $stream->expects($this->once())\n            ->method('isWritable')\n            ->will($this->returnValue(false));\n        GuzzleStreamWrapper::getResource($stream);\n    }\n\n    /**\n     * @expectedException \\PHPUnit_Framework_Error_Warning\n     */\n    public function testReturnsFalseWhenStreamDoesNotExist()\n    {\n        fopen('guzzle://foo', 'r');\n    }\n\n    public function testCanOpenReadonlyStream()\n    {\n        $stream = $this->getMockBuilder('GuzzleHttp\\Stream\\StreamInterface')\n            ->setMethods(['isReadable', 'isWritable'])\n            ->getMockForAbstractClass();\n        $stream->expects($this->once())\n            ->method('isReadable')\n            ->will($this->returnValue(false));\n        $stream->expects($this->once())\n            ->method('isWritable')\n            ->will($this->returnValue(true));\n        $r = GuzzleStreamWrapper::getResource($stream);\n        $this->assertInternalType('resource', $r);\n        fclose($r);\n    }\n}\n\n\n--- File: 481 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php ---\n<?php\n\n/*\n * This file is part of the Monolog package.\n *\n * (c) Jordi Boggiano <j.boggiano@seld.be>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\n\nnamespace Monolog\\Handler;\n\nuse Monolog\\TestCase;\n\n/**\n * @author Alexey Karapetov <alexey@karapetov.com>\n */\nclass HandlerWrapperTest extends TestCase\n{\n    /**\n     * @var HandlerWrapper\n     */\n    private $wrapper;\n\n    private $handler;\n\n    public function setUp()\n    {\n        parent::setUp();\n        $this->handler = $this->getMock('Monolog\\\\Handler\\\\HandlerInterface');\n        $this->wrapper = new HandlerWrapper($this->handler);\n    }\n\n    /**\n     * @return array\n     */\n    public function trueFalseDataProvider()\n    {\n        return array(\n            array(true),\n            array(false),\n        );\n    }\n\n    /**\n     * @param $result\n     * @dataProvider trueFalseDataProvider\n     */\n    public function testIsHandling($result)\n    {\n        $record = $this->getRecord();\n        $this->handler->expects($this->once())\n            ->method('isHandling')\n            ->with($record)\n            ->willReturn($result);\n\n        $this->assertEquals($result, $this->wrapper->isHandling($record));\n    }\n\n    /**\n     * @param $result\n     * @dataProvider trueFalseDataProvider\n     */\n    public function testHandle($result)\n    {\n        $record = $this->getRecord();\n        $this->handler->expects($this->once())\n            ->method('handle')\n            ->with($record)\n            ->willReturn($result);\n\n        $this->assertEquals($result, $this->wrapper->handle($record));\n    }\n\n    /**\n     * @param $result\n     * @dataProvider trueFalseDataProvider\n     */\n    public function testHandleBatch($result)\n    {\n        $records = $this->getMultipleRecords();\n        $this->handler->expects($this->once())\n            ->method('handleBatch')\n            ->with($records)\n            ->willReturn($result);\n\n        $this->assertEquals($result, $this->wrapper->handleBatch($records));\n    }\n\n    public function testPushProcessor()\n    {\n        $processor = function () {};\n        $this->handler->expects($this->once())\n            ->method('pushProcessor')\n            ->with($processor);\n\n        $this->assertEquals($this->wrapper, $this->wrapper->pushProcessor($processor));\n    }\n\n    public function testPopProcessor()\n    {\n        $processor = function () {};\n        $this->handler->expects($this->once())\n            ->method('popProcessor')\n            ->willReturn($processor);\n\n        $this->assertEquals($processor, $this->wrapper->popProcessor());\n    }\n\n    public function testSetFormatter()\n    {\n        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');\n        $this->handler->expects($this->once())\n            ->method('setFormatter')\n            ->with($formatter);\n\n        $this->assertEquals($this->wrapper, $this->wrapper->setFormatter($formatter));\n    }\n\n    public function testGetFormatter()\n    {\n        $formatter = $this->getMock('Monolog\\\\Formatter\\\\FormatterInterface');\n        $this->handler->expects($this->once())\n            ->method('getFormatter')\n            ->willReturn($formatter);\n\n        $this->assertEquals($formatter, $this->wrapper->getFormatter());\n    }\n}\n\n\n--- File: 295 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/BaseFutureTrait.php ---\n<?php\nnamespace GuzzleHttp\\Ring\\Future;\n\nuse GuzzleHttp\\Ring\\Exception\\CancelledFutureAccessException;\nuse GuzzleHttp\\Ring\\Exception\\RingException;\nuse React\\Promise\\PromiseInterface;\n\n/**\n * Implements common future functionality built on top of promises.\n */\ntrait BaseFutureTrait\n{\n    /** @var callable */\n    private $waitfn;\n\n    /** @var callable */\n    private $cancelfn;\n\n    /** @var PromiseInterface */\n    private $wrappedPromise;\n\n    /** @var \\Exception Error encountered. */\n    private $error;\n\n    /** @var mixed Result of the future */\n    private $result;\n\n    private $isRealized = false;\n\n    /**\n     * @param PromiseInterface $promise Promise to shadow with the future.\n     * @param callable         $wait    Function that blocks until the deferred\n     *                                  computation has been resolved. This\n     *                                  function MUST resolve the deferred value\n     *                                  associated with the supplied promise.\n     * @param callable         $cancel  If possible and reasonable, provide a\n     *                                  function that can be used to cancel the\n     *                                  future from completing.\n     */\n    public function __construct(\n        PromiseInterface $promise,\n        callable $wait = null,\n        callable $cancel = null\n    ) {\n        $this->wrappedPromise = $promise;\n        $this->waitfn = $wait;\n        $this->cancelfn = $cancel;\n    }\n\n    public function wait()\n    {\n        if (!$this->isRealized) {\n            $this->addShadow();\n            if (!$this->isRealized && $this->waitfn) {\n                $this->invokeWait();\n            }\n            if (!$this->isRealized) {\n                $this->error = new RingException('Waiting did not resolve future');\n            }\n        }\n\n        if ($this->error) {\n            throw $this->error;\n        }\n\n        return $this->result;\n    }\n\n    public function promise()\n    {\n        return $this->wrappedPromise;\n    }\n\n    public function then(\n        callable $onFulfilled = null,\n        callable $onRejected = null,\n        callable $onProgress = null\n    ) {\n        return $this->wrappedPromise->then($onFulfilled, $onRejected, $onProgress);\n    }\n\n    public function cancel()\n    {\n        if (!$this->isRealized) {\n            $cancelfn = $this->cancelfn;\n            $this->waitfn = $this->cancelfn = null;\n            $this->isRealized = true;\n            $this->error = new CancelledFutureAccessException();\n            if ($cancelfn) {\n                $cancelfn($this);\n            }\n        }\n    }\n\n    private function addShadow()\n    {\n        // Get the result and error when the promise is resolved. Note that\n        // calling this function might trigger the resolution immediately.\n        $this->wrappedPromise->then(\n            function ($value) {\n                $this->isRealized = true;\n                $this->result = $value;\n                $this->waitfn = $this->cancelfn = null;\n            },\n            function ($error) {\n                $this->isRealized = true;\n                $this->error = $error;\n                $this->waitfn = $this->cancelfn = null;\n            }\n        );\n    }\n\n    private function invokeWait()\n    {\n        try {\n            $wait = $this->waitfn;\n            $this->waitfn = null;\n            $wait();\n        } catch (\\Exception $e) {\n            // Defer can throw to reject.\n            $this->error = $e;\n            $this->isRealized = true;\n        }\n    }\n}\n\n\n--- File: 602 # models/LogDukcapil.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse app\\services\\ElkLoggingService;\nuse DateTime;\nuse DateTimeZone;\n\n/**\n * This is the model class for table \"log_service\".\n *\n * @property int $id\n * @property string $ip_address\n * @property string $service_uri\n * @property string $nik\n * @property string $request\n * @property string $response\n * @property string $additional_data\n * @property string $created_at\n * @property int $is_error\n * @property string $type\n * @property string $execution_time\n */\nclass LogDukcapil extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'log_dukcapil';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('dbLogSimpadhu');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            array('nik, ip_address, type, is_error, created_at, header_code, request, response, additional_data, execution_time, service_uri, parent_id, resend, layanan', 'safe'),\n        ];\n    }\n\n\tpublic static function logDcp(\n        $params, \n        $response, \n        $status, \n        $type = 'VERIFNIK', \n        $exetime = 0, \n        $layanan, \n        $additional_data, \n        $parent_id = null, \n        $nik = null\n    ){\n        $request = is_string($params) ? json_decode($params) : $params;\n\n        $log = new LogDukcapil();\n        $log->nik = $nik;\n        $log->ip_address = Yii::$app->request->userIP;\n        $log->type = $type;\n        $log->is_error = $status == 200 ? 0 : 1;\n        $log->created_at = date(\"Y-m-d H:i:s\");\n        $log->header_code = $status;\n        $log->request = json_encode($request);\n        $log->response =json_encode(is_string($response) ? json_decode($response) : $response);\n        $log->additional_data = json_encode($additional_data);\n        $log->execution_time = $exetime;\n        $log->service_uri = Yii::$app->request->url;\n        $log->resend = $status == 200 ? 0 : 1;\n        $log->layanan = $layanan;\n        $log->parent_id = $parent_id;\n\n        // Penyesuaian Date agar menggunakan Timezone\n        $old_date = $log->created_at;\n        // Explicitly tell PHP that this time is already in WIB\n        $timezone = new DateTimeZone('Asia/Jakarta');\n        $newDate = new DateTime($old_date, $timezone);\n        \n        // Ensure no UTC conversion happens\n        $newDate->setTimezone($timezone);\n        \n        // Convert to ISO 8601 format with WIB timezone\n        $log->created_at = $newDate->format(DateTime::ATOM); \n\n        // Insert ke ELK\n        $elkLogging = new ElkLoggingService('dukcapil');\n\n        $elk_logging = $elkLogging->logApplication([\n            'nik' => $log->nik,\n            'ip_address' => $log->ip_address,\n            'type' => $log->type,\n            'is_error' => $log->is_error,\n            'created_at' => $log->created_at,\n            'header_code' => $log->header_code,\n            'request' => $log->request,\n            'response' => $log->response,\n            'additional_data' => $log->additional_data,\n            'execution_time' => strval($log->execution_time),\n            'service_uri' => $log->service_uri,\n            'resend' => $log->resend,\n            'layanan' => $log->layanan,\n            'parent_id' => $log->parent_id,\n        ]);\n\n        if ($elk_logging !== false) {\n            $result = $elk_logging;\n        } else {\n            $log->created_at = $old_date;\n            $log->save();\n        }\n    }\n}\n\n\n--- File: 709 # views/admin/settingExpired/index.php ---\n<?php\nuse yii\\grid\\GridView;\nuse yii\\bootstrap\\Html;\n$this->title = \"Setting Expired\";\n?>\n<div class=\"panel panel-default\">\n    <div class=\"panel-body\">\n        <header style=\"margin-bottom:50px;\">\n            <h2 class=\"text-center\">TABEL JENIS PENGATURAN</h2>\n            <hr>\n        </header>\n        <?= Html::a(\"Tambah Data\", \"setting-exp-add\", [\"class\" => \"btn btn-primary\", \"style\" => \"margin-bottom:2%\"]); ?>\n        <?= \n            GridView::widget([\n                'dataProvider' => $data_provider,\n                'filterModel' => $search_model,\n                'formatter' => [\n\t\t\t\t\t'class' => 'yii\\i18n\\Formatter',\n\t\t\t\t\t'nullDisplay' => '-'\n\t\t\t\t],\n                'columns' => [\n                    [\n                        'class' => 'yii\\grid\\SerialColumn',\n                        'header' => 'No',\n                    ],\n                    [\n                        'label' => 'Jenis Pengaturan',\n                        'attribute' => 'keterangan',\n                    ],\n                    [\n                        'label' => 'Jumlah Hari',\n                        'attribute' => 'value',\n                        'format' => 'raw',\n                    ],\n                    [\n                        'label' => 'Tanggal Pembuatan',\n                        'attribute' => 'created_date',\n                        'format' => ['date', 'php:d-F-Y H:i:s'],\n                        'filter' => \\yii\\jui\\DatePicker::widget(['model' => $search_model, \n                            'attribute' => 'created_date',\n                            'dateFormat' => 'dd-MMMM-yyyy',\n                            'options' => [\n                                'class' => 'form-control',\n                        ]]),\n                    ],\n                    [\n                        'label' => 'Tanggal Pembaruan',\n                        'attribute' => 'updated_date',\n                        'format' => ['date', 'php:d-F-Y H:i:s'],\n                        'filter' => \\yii\\jui\\DatePicker::widget(['model' => $search_model, \n                            'attribute' => 'updated_date',\n                            'dateFormat' => 'dd-MMMM-yyyy',\n                            'options' => [\n                                'class' => 'form-control',\n                        ]]),\n                    ],\n                    [\n                        'label' => 'Diperbaharui Oleh',\n                        'attribute' => 'updated_by',\n                        'value' => function($data) {\n                            $user = docotel\\dcms\\models\\User::findOne(['id' => $data->updated_by]);\n                            if ( ! $user) {\n                                return null;\n                            }\n                            return $user->username;\n                        }\n                    ],\n                    [\n                        'class' => 'yii\\grid\\ActionColumn',\n                        'header' => 'Aksi',\n                        'template' => '{update}',\n                        'buttons' => [\n                            'update' => function ($url, $model) {\n                                return Html::a('<span class=\"glyphicon glyphicon-pencil\"></span>', $url, \n                                [\n                                    'title' => Yii::t('app', 'lead-update'),\n                                ]);\n                            },\n                            'delete' => function ($url, $model) {\n                                return Html::a('<span class=\"glyphicon glyphicon-trash\"></span>', $url, \n                                [\n                                    'title' => Yii::t('app', 'lead-delete'),\n                                ]);\n                            },\n                        ],\n                        'urlCreator' => function($action, $model, $key, $index) {\n                            if ($action === 'update') {\n                                $url = \"setting-exp-update?id=\" . $model->id;\n                                return $url;\n                            }\n                            if ($action === 'delete') {\n                                $url = \"setting-exp-delete?id=\" . $model->id;\n                                return $url;\n                            }\n                        }\n                    ],\n                    \n                ]\n\n            ]);\n        ?>\n    </div>\n</div>\n\n\n\n--- File: 806 # views/perbaikan-data/index.php ---\n<?php\n\nuse app\\models\\forms\\PerbaikanDataForm;\nuse yii\\helpers\\Html;\nuse yii\\widgets\\ActiveForm;\n\n?>\n\n<style>\n    .button-wrapper {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .form-perbaikan .form-control {\n        width: 100% !important;\n    }\n\n    .warning.validation {\n        width: 100% !important;\n        margin: 0 !important;\n        display: block !important;\n        float: initial !important;\n        text-align: left !important;\n        color: red !important;\n    }\n\n    .reminder-container {\n        display: flex;\n        background-color: #fffbe9;\n        border: none;\n        border-radius: 16px;\n        padding: 12px;\n        box-shadow: none;\n    }\n\n    .btn-primary {\n        background-color: #0070ea;\n        height: 40px;\n        border-radius: 8px;\n    }\n\n    .btn-success {\n        background-color: #0eda7bff;\n        height: 40px;\n        border-radius: 8px;\n        border: none;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .panel-body {\n        padding: 24px;\n    }\n\n    .form-control {\n        border-radius: 4px;\n    }\n</style>\n\n\n<div class=\"admin-wrapper\">\n    <div class=\"container-fluid\">\n        <h1 class=\"text-center\">PERMOHONAN PERBAIKAN DATA KOPERASI</h1>\n\n        <br>\n        <?php echo $this->render('_headerReminder', ['variant' => PerbaikanDataForm::REMINDER_DOWNLOAD_MANUAL_BOOK]) ?>\n\n        <div class=\"panel panel-default\">\n            <div class=\"container-fluid panel-body\">\n\n                <?php $form = ActiveForm::begin([\n                    'id' => 'form-perbaikan',\n                    'options' => ['class' => 'form-perbaikan'],\n                    'enableClientValidation' => true,\n                    'fieldConfig' => [\n                        'template' => \"{label}\\n{input}\\n{error}\",\n                        'labelOptions' => ['class' => 'control-label'],\n                        'errorOptions' => ['class' => 'warning validation'],\n                    ],\n                ]); ?>\n\n                <div class=\"form-group clearfix\">\n                    <?= $form->field($model, 'full_nama_koperasi')\n                        ->textInput(['placeholder' => 'Masukkan Nama Koperasi'])\n                        ->label($model->getAttributeLabel('full_nama_koperasi') . ' <span style=\"color:red;\">*</span>', ['encode' => false])\n                    ?>\n                    <div class=\"form-group clearfix\">\n                        <div class=\"row\">\n                            <div class=\"col-md-6 col-sm-12\">\n                                <?= $form->field($model, 'no_sk_koperasi')\n                                    ->textInput(['placeholder' => 'Masukkan Nomor SKT/SKP'])\n                                    ->label($model->getAttributeLabel('no_sk_koperasi') . ' <span style=\"color:red;\">*</span>', ['encode' => false])\n                                ?>\n                            </div>\n                            <div class=\"col-md-6 col-sm-12\">\n                                <?= $form->field($model, 'tanggal_sk_koperasi')\n                                    ->input('date', ['placeholder' => 'Masukkan Tanggal SKT/SKP'])\n                                    ->label($model->getAttributeLabel('tanggal_sk_koperasi') . ' <span style=\"color:red;\">*</span>', ['encode' => false])\n                                ?>\n                            </div>\n                        </div>\n                    </div>\n\n                    <?php if (isset($confirmStep) && $confirmStep === 1) : ?>\n                        <div class=\"alert alert-success\">\n                            <p>Data Koperasi ditemukan. Silakan lanjutkan ke langkah berikutnya.</p>\n                        </div>\n                    <?php elseif (isset($confirmStep) && $confirmStep === 0) : ?>\n                        <div class=\"alert alert-danger\">\n                            <p>Data Koperasi tidak ditemukan. Silakan periksa kembali data yang Anda masukkan.</p>\n                        </div>\n                    <?php endif; ?>\n\n                    <div class=\"button-wrapper\">\n                        <a href=\"/perbaikan-data/daftar-permohonan\" class=\"btn btn-success\">Daftar Permohonan</a>\n                        <?= Html::submitButton(\n                            $confirmStep === 1 ? 'Selanjutnya' : 'Cari',\n                            ['class' => 'btn btn-primary', 'style' => 'width:150px']\n                        ) ?>\n                    </div>\n\n                    <input type=\"hidden\" name=\"confirmStepFlag\" id=\"confirmStepFlag\" value=\"<?= ($confirmStep === 1 ? 1 : 0) ?>\">\n\n                    <?php ActiveForm::end(); ?>\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n--- File: 317 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/AppendStream.php ---\n<?php\nnamespace GuzzleHttp\\Stream;\n\nuse GuzzleHttp\\Stream\\Exception\\CannotAttachException;\n\n/**\n * Reads from multiple streams, one after the other.\n *\n * This is a read-only stream decorator.\n */\nclass AppendStream implements StreamInterface\n{\n    /** @var StreamInterface[] Streams being decorated */\n    private $streams = [];\n\n    private $seekable = true;\n    private $current = 0;\n    private $pos = 0;\n    private $detached = false;\n\n    /**\n     * @param StreamInterface[] $streams Streams to decorate. Each stream must\n     *                                   be readable.\n     */\n    public function __construct(array $streams = [])\n    {\n        foreach ($streams as $stream) {\n            $this->addStream($stream);\n        }\n    }\n\n    public function __toString()\n    {\n        try {\n            $this->seek(0);\n            return $this->getContents();\n        } catch (\\Exception $e) {\n            return '';\n        }\n    }\n\n    /**\n     * Add a stream to the AppendStream\n     *\n     * @param StreamInterface $stream Stream to append. Must be readable.\n     *\n     * @throws \\InvalidArgumentException if the stream is not readable\n     */\n    public function addStream(StreamInterface $stream)\n    {\n        if (!$stream->isReadable()) {\n            throw new \\InvalidArgumentException('Each stream must be readable');\n        }\n\n        // The stream is only seekable if all streams are seekable\n        if (!$stream->isSeekable()) {\n            $this->seekable = false;\n        }\n\n        $this->streams[] = $stream;\n    }\n\n    public function getContents()\n    {\n        return Utils::copyToString($this);\n    }\n\n    /**\n     * Closes each attached stream.\n     *\n     * {@inheritdoc}\n     */\n    public function close()\n    {\n        $this->pos = $this->current = 0;\n\n        foreach ($this->streams as $stream) {\n            $stream->close();\n        }\n\n        $this->streams = [];\n    }\n\n    /**\n     * Detaches each attached stream\n     *\n     * {@inheritdoc}\n     */\n    public function detach()\n    {\n        $this->close();\n        $this->detached = true;\n    }\n\n    public function attach($stream)\n    {\n        throw new CannotAttachException();\n    }\n\n    public function tell()\n    {\n        return $this->pos;\n    }\n\n    /**\n     * Tries to calculate the size by adding the size of each stream.\n     *\n     * If any of the streams do not return a valid number, then the size of the\n     * append stream cannot be determined and null is returned.\n     *\n     * {@inheritdoc}\n     */\n    public function getSize()\n    {\n        $size = 0;\n\n        foreach ($this->streams as $stream) {\n            $s = $stream->getSize();\n            if ($s === null) {\n                return null;\n            }\n            $size += $s;\n        }\n\n        return $size;\n    }\n\n    public function eof()\n    {\n        return !$this->streams ||\n            ($this->current >= count($this->streams) - 1 &&\n             $this->streams[$this->current]->eof());\n    }\n\n    /**\n     * Attempts to seek to the given position. Only supports SEEK_SET.\n     *\n     * {@inheritdoc}\n     */\n    public function seek($offset, $whence = SEEK_SET)\n    {\n        if (!$this->seekable || $whence !== SEEK_SET) {\n            return false;\n        }\n\n        $success = true;\n        $this->pos = $this->current = 0;\n\n        // Rewind each stream\n        foreach ($this->streams as $stream) {\n            if (!$stream->seek(0)) {\n                $success = false;\n            }\n        }\n\n        if (!$success) {\n            return false;\n        }\n\n        // Seek to the actual position by reading from each stream\n        while ($this->pos < $offset && !$this->eof()) {\n            $this->read(min(8096, $offset - $this->pos));\n        }\n\n        return $this->pos == $offset;\n    }\n\n    /**\n     * Reads from all of the appended streams until the length is met or EOF.\n     *\n     * {@inheritdoc}\n     */\n    public function read($length)\n    {\n        $buffer = '';\n        $total = count($this->streams) - 1;\n        $remaining = $length;\n\n        while ($remaining > 0) {\n            // Progress to the next stream if needed.\n            if ($this->streams[$this->current]->eof()) {\n                if ($this->current == $total) {\n                    break;\n                }\n                $this->current++;\n            }\n            $buffer .= $this->streams[$this->current]->read($remaining);\n            $remaining = $length - strlen($buffer);\n        }\n\n        $this->pos += strlen($buffer);\n\n        return $buffer;\n    }\n\n    public function isReadable()\n    {\n        return true;\n    }\n\n    public function isWritable()\n    {\n        return false;\n    }\n\n    public function isSeekable()\n    {\n        return $this->seekable;\n    }\n\n    public function write($string)\n    {\n        return false;\n    }\n\n    public function getMetadata($key = null)\n    {\n        return $key ? null : [];\n    }\n}\n\n\n--- File: 730 # views/log/index.php ---\n<?php\n\nuse yii\\helpers\\Html;\nuse kartik\\grid\\GridView;\nuse yii\\widgets\\Pjax;\nuse yii\\widgets\\ActiveForm;\nuse app\\models\\Log;\n\n/* @var $this yii\\web\\View */\n/* @var $dataProvider yii\\data\\ActiveDataProvider */\n$this->title = 'Log Aktivitas';\n$this->params['breadcrumbs'][] = $this->title;\n?>\n<div class=\"log-index\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-header\" align=\"center\">\n            <h2 style=\"float: none;\"><?= Html::encode($this->title) ?></h2>\n            <hr>\n        </div>\n        <div class=\"x_content\">\n\n            <?php $form = ActiveForm::begin([\n                'method' => 'get',\n                'action' => ['index'],\n            ]); ?>\n\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <?= Html::dropDownList('Log[month]', $month, $months, [\n                        'class' => 'form-control',\n                    ]) ?>\n                </div>\n                <div class=\"col-md-3\">\n                    <?= Html::dropDownList('Log[year]', $year, $years, [\n                        'class' => 'form-control',\n                    ]) ?>\n                </div>\n                <div class=\"col-md-2\">\n                    <?= Html::submitButton('Cari', ['class' => 'btn btn-success']) ?>\n                </div>\n            </div>\n\n            <?php ActiveForm::end(); ?>\n            <?php Pjax::begin(); ?>\n            <?= GridView::widget([\n                'dataProvider' => $dataProvider,\n                'filterModel' => $searchModel,\n                'layout' => \"<div align='center'>{pager}</div>\\n<div align='right'>{summary}</div>\\n{items}\\n<div align='center'>{pager}</div>\",\n                'pager' => [\n                    'firstPageLabel' => '<< Pertama',\n                    'lastPageLabel'  => 'Terakhir >>',\n                    'nextPageLabel'  => 'Berikutnya >',\n                    'prevPageLabel'  => '< Sebelumnya',\n                ],\n                'formatter' => [\n                    'class' => 'yii\\i18n\\Formatter',\n                    'nullDisplay' => '-',\n                ],\n                'rowOptions' => function ($model) {\n                    if ($model->is_error === Log::ERROR) {\n                        return ['class' => GridView::TYPE_DANGER];\n                    } else if ($model->is_error === Log::DATA_TIDAK_DITEMUKAN) {\n                        return ['class' => GridView::TYPE_WARNING];\n                    }\n                },\n                'columns' => [\n                    [\n                        'class' => 'kartik\\grid\\ExpandRowColumn',\n                        'value' => function () {\n                            return 1;\n                        },\n                        'detail' => function ($model) {\n                            return $model->getDetail($model);\n                        }\n                    ],\n                    'id',\n                    'ip_address',\n                    'nik',\n                    [\n                        'attribute' => 'type',\n                        'filter' => Log::getBase(),\n                    ],\n                    [\n                        'attribute' => 'is_error',\n                        'value' => function($model) {\n                            if ($model->is_error === Log::ERROR) {\n                                return \"ERROR\";\n                            } else if ($model->is_error === Log::DATA_TIDAK_DITEMUKAN) {\n                                return \"DATA TIDAK DITEMUKAN\";\n                            } else {\n                                return \"TIDAK ERROR\";\n                            }\n                        },\n                        'filter' => Log::getStatus(),\n                    ],\n                    [\n                        'attribute' => 'created_at',\n                        'filter' => false,\n                    ],\n                    [\n                        'attribute' => 'execution_time',\n                        'value' => function($model) {\n                            return '<div class=\"koket\"><div><b>Exec Time:</b><pre class=\"koket_execution_time\">' . $model->execution_time . '</pre></div></div>';\n                        },\n                        'format' => 'html',\n                        'filter' => false,\n                    ],\n                ],\n            ]); ?>\n            <?php Pjax::end(); ?>\n        </div>\n    </div>\n</div>\n\n<?php\n$this->registerCss(\"\n    .error {\n        color: red;\n        font-size: 2em;\n    }\n    div.koket {\n        display: inline-block;\n        width: 100%;\n        float: left;\n    }\n    div.koket > div {\n        white-space: nowrap;\n        float: left;\n    }\n    div.koket > div:not(:last-child) {\n        margin-right: .3em;\n    }\n    div.koket > div > * {\n        vertical-align: middle;\n        margin: 0;\n        padding: .1em .3em;\n        display: inline-block;\n    }\n    div.koket > div b {\n        font-weight: 600;\n    }\n    div.koket > div pre {\n        background-color: rgba(0, 255, 0, .07);\n        color: #080;\n    }\n    div.koket > div > pre a {\n        color: inherit;\n        font-style: none;\n    }\n    pre.koket {\n        text-align: center;\n    }\n\");\n?>\n\n\n--- File: 680 # modules/Api/components/SKHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse Yii;\nuse app\\models\\SK;\nuse yii\\base\\Component;\nuse app\\models\\PesanNama;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\MasterTransaction;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\ChecklistPerubahan;\nuse app\\components\\helper\\Numbering;\nuse app\\components\\helper\\Disclaimer as DisclaimerHelper;\n\nclass SKHelper extends Component {\n\n    public static function pushPerubahan($id) {\n        \n        $transaksi = TransaksiKoperasi::find()->where(['id' => $id])->one();\n\n        if ( $transaksi->is_finish == -1 ) {\n\n            $transaksi->is_finish = 0;\n\n            DisclaimerHelper::generateValues('persetujuan', 'persetujuan_perubahan', $transaksi->id, $transaksi->t_pesan_nama_id)->save();\n        }\n        else {\n            $transaksi->is_finish = 1;\n\n            $pnID = [4]; // group of ids which needs to change pesan nama table\n            $bhPenggabungan = [2];\n            $group = [];\n            $idMaster = $transaksi->id_master;\n            $raw = ChecklistPerubahan::find()->joinWith(['masterPerubahan'])->where(['t_koperasi_id' => $id])->all();\n\n            if ( empty( $raw ) ) {\n\n            \techo 0; //data not found\n            \texit();\n            }\n\n            $changePesanNama = false;\n            $changePenggabungan = false;\n            foreach ($raw as $checks) {\n\n            \tif ( empty( $group ) OR ! in_array($checks->masterPerubahan->groups, $group) ) {\n\n\t            \tarray_push($group, $checks->masterPerubahan->groups);\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $pnID) ) {\n\n            \t\t$changePesanNama = true;\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $bhPenggabungan) ) {\n\n            \t\t$changePenggabungan = true;\n            \t}\n            }\n\n            $SKins = self::generateSurat( $group, $transaksi );\n\n            // change pesan nama status if master perubahan = 4 / Nama Koperasi\n            if ( $changePesanNama ) {\n            \t// var_dump('pesan');\n            \tself::changePesanNama( $transaksi, $idMaster );\n            }\n\n            // change is gabung if perubahan master id = 2 / penggabungan\n            if ( $changePenggabungan ) {\n            \t// var_dump( 'gabung' );\n            \tself::changeMasterTransactionIsGabung( $id );\n            }\n\n            // exit();\n\n            MasterTransaction::updateAll(['id_transaksi' => $id, 'id_sk' => $SKins->id], ['id' => $idMaster]);\n        }\n\n        $transaksi->tanggal_confirm = date('Y-m-d H:i:s');\n        $transaksi->tanggal_jangka_waktu = ! empty( $transaksi->jumlah_jangka_waktu ) ? date(\"Y-m-d\", strtotime($transaksi->tanggal_jangka_waktu . \" + \".$transaksi->jumlah_jangka_waktu.\" year\")) : $transaksi->tanggal_jangka_waktu;\n\n        return $transaksi->save(true, array('is_finish', 'tanggal_confirm', 'tanggal_jangka_waktu'));\n    }\n\n    public static function generateSurat( $group, $transaksi ) {\n\n        if ( empty( SK::find()->where(['t_koperasi_id' => $transaksi->id])->one() ) ) {\n\n\t        $SKins = new SK();\n\t        if ( count($group) < 2 ) {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = $group[0] == 1 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan() : self::getLastSK( $transaksi->id_master );\n\t            $SKins->no_sp_koperasi = $group[0] == 2 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan() : NULL;\n\t        }\n\t        else {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan();\n\t            $SKins->no_sp_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan();\n\t        }\n        }\n        else {\n\n        \t$SKins = SK::find()->where(['t_koperasi_id' => $transaksi->id])->one();\n        }\n\n        $SKins->save();\n\n        return $SKins;\n    }\n\n    public static function changePesanNama( $transaksi, $idMaster ) {\n\n    \t// change status of new name\n        PesanNama::updateAll(['status' => 1], ['id' => $transaksi->t_pesan_nama_id]);\n\n        // change is delete on before latest transaction\n    \t$raw = TransaksiKoperasi::findLastTransaction( TransaksiKoperasi::BEFORE_LATEST, $idMaster );\n    \t$lastID = $raw['id'];\n    \t$idPesanNama = $raw['t_pesan_nama_id'];\n\n        PesanNama::updateAll(['is_deleted' => 1], ['id' => $idPesanNama]);\n    }\n\n    public static function changeMasterTransactionIsGabung( $id ) {\n\n    \t// code goes here\n    \t$raw = BHPenggabungan::find()->where(['t_koperasi_id' => $id])->all();\n\n    \t// update master\n    \tforeach ($raw as $key) {\n\n\t\t\tMasterTransaction::updateAll(['is_gabung' => 1], ['id' => $key->d_koperasi_id]);\n    \t}\n    }\n    \n    public static function getLastSK( $idMaster ) {\n\n    \t$raw = MasterTransaction::find()->joinWith(['surat'])->where(['kop_master_transaksi.id' => $idMaster])->one();\n\n    \treturn $raw->surat->no_sk_koperasi;\n    }\n}\n?>\n\n--- File: 337 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/AppendStreamTest.php ---\n<?php\nnamespace GuzzleHttp\\Tests\\Stream;\n\nuse GuzzleHttp\\Stream\\AppendStream;\nuse GuzzleHttp\\Stream\\Stream;\n\nclass AppendStreamTest extends \\PHPUnit_Framework_TestCase\n{\n    /**\n     * @expectedException \\InvalidArgumentException\n     * @expectedExceptionMessage Each stream must be readable\n     */\n    public function testValidatesStreamsAreReadable()\n    {\n        $a = new AppendStream();\n        $s = $this->getMockBuilder('GuzzleHttp\\Stream\\StreamInterface')\n            ->setMethods(['isReadable'])\n            ->getMockForAbstractClass();\n        $s->expects($this->once())\n            ->method('isReadable')\n            ->will($this->returnValue(false));\n        $a->addStream($s);\n    }\n\n    public function testValidatesSeekType()\n    {\n        $a = new AppendStream();\n        $this->assertFalse($a->seek(100, SEEK_CUR));\n    }\n\n    public function testTriesToRewindOnSeek()\n    {\n        $a = new AppendStream();\n        $s = $this->getMockBuilder('GuzzleHttp\\Stream\\StreamInterface')\n            ->setMethods(['isReadable', 'seek', 'isSeekable'])\n            ->getMockForAbstractClass();\n        $s->expects($this->once())\n            ->method('isReadable')\n            ->will($this->returnValue(true));\n        $s->expects($this->once())\n            ->method('isSeekable')\n            ->will($this->returnValue(true));\n        $s->expects($this->once())\n            ->method('seek')\n            ->will($this->returnValue(false));\n        $a->addStream($s);\n        $this->assertFalse($a->seek(10));\n    }\n\n    public function testSeeksToPositionByReading()\n    {\n        $a = new AppendStream([\n            Stream::factory('foo'),\n            Stream::factory('bar'),\n            Stream::factory('baz'),\n        ]);\n\n        $this->assertTrue($a->seek(3));\n        $this->assertEquals(3, $a->tell());\n        $this->assertEquals('bar', $a->read(3));\n        $a->seek(6);\n        $this->assertEquals(6, $a->tell());\n        $this->assertEquals('baz', $a->read(3));\n    }\n\n    public function testDetachesEachStream()\n    {\n        $s1 = Stream::factory('foo');\n        $s2 = Stream::factory('foo');\n        $a = new AppendStream([$s1, $s2]);\n        $this->assertSame('foofoo', (string) $a);\n        $a->detach();\n        $this->assertSame('', (string) $a);\n        $this->assertSame(0, $a->getSize());\n    }\n\n    public function testClosesEachStream()\n    {\n        $s1 = Stream::factory('foo');\n        $a = new AppendStream([$s1]);\n        $a->close();\n        $this->assertSame('', (string) $a);\n    }\n\n    public function testIsNotWritable()\n    {\n        $a = new AppendStream([Stream::factory('foo')]);\n        $this->assertFalse($a->isWritable());\n        $this->assertTrue($a->isSeekable());\n        $this->assertTrue($a->isReadable());\n        $this->assertFalse($a->write('foo'));\n    }\n\n    public function testDoesNotNeedStreams()\n    {\n        $a = new AppendStream();\n        $this->assertEquals('', (string) $a);\n    }\n\n    public function testCanReadFromMultipleStreams()\n    {\n        $a = new AppendStream([\n            Stream::factory('foo'),\n            Stream::factory('bar'),\n            Stream::factory('baz'),\n        ]);\n        $this->assertFalse($a->eof());\n        $this->assertSame(0, $a->tell());\n        $this->assertEquals('foo', $a->read(3));\n        $this->assertEquals('bar', $a->read(3));\n        $this->assertEquals('baz', $a->read(3));\n        $this->assertTrue($a->eof());\n        $this->assertSame(9, $a->tell());\n        $this->assertEquals('foobarbaz', (string) $a);\n    }\n\n    public function testCanDetermineSizeFromMultipleStreams()\n    {\n        $a = new AppendStream([\n            Stream::factory('foo'),\n            Stream::factory('bar')\n        ]);\n        $this->assertEquals(6, $a->getSize());\n\n        $s = $this->getMockBuilder('GuzzleHttp\\Stream\\StreamInterface')\n            ->setMethods(['isSeekable', 'isReadable'])\n            ->getMockForAbstractClass();\n        $s->expects($this->once())\n            ->method('isSeekable')\n            ->will($this->returnValue(null));\n        $s->expects($this->once())\n            ->method('isReadable')\n            ->will($this->returnValue(true));\n        $a->addStream($s);\n        $this->assertNull($a->getSize());\n    }\n\n    public function testCatchesExceptionsWhenCastingToString()\n    {\n        $s = $this->getMockBuilder('GuzzleHttp\\Stream\\StreamInterface')\n            ->setMethods(['read', 'isReadable', 'eof'])\n            ->getMockForAbstractClass();\n        $s->expects($this->once())\n            ->method('read')\n            ->will($this->throwException(new \\RuntimeException('foo')));\n        $s->expects($this->once())\n            ->method('isReadable')\n            ->will($this->returnValue(true));\n        $s->expects($this->any())\n            ->method('eof')\n            ->will($this->returnValue(false));\n        $a = new AppendStream([$s]);\n        $this->assertFalse($a->eof());\n        $this->assertSame('', (string) $a);\n    }\n\n    public function testCanDetach()\n    {\n        $s = new AppendStream();\n        $s->detach();\n    }\n\n    public function testReturnsEmptyMetadata()\n    {\n        $s = new AppendStream();\n        $this->assertEquals([], $s->getMetadata());\n        $this->assertNull($s->getMetadata('foo'));\n    }\n\n    /**\n     * @expectedException \\GuzzleHttp\\Stream\\Exception\\CannotAttachException\n     */\n    public function testCannotAttach()\n    {\n        $p = new AppendStream();\n        $p->attach('a');\n    }\n}\n\n\n--- File: 630 # models/BaseNik.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\nuse yii\\db\\Exception as DbException;\nuse yii\\db\\StaleObjectException;\n\n/**\n * This is the model class for table \"kop_base_nik\".\n *\n * @property int $id\n * @property string $base\n * @property int $count\n */\nclass BaseNik extends ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%base_nik}}';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['base'], 'required'],\n            [['base'], 'string', 'max' => 10],\n            [['base'], 'unique'],\n            [['count'], 'integer'],\n            [['count'], 'default', 'value' => 0],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'base' => 'Base NIK Prefix',\n            'count' => 'Current Count',\n        ];\n    }\n\n    /**\n     * Generates the next sequential NIK based on a given base prefix.\n     * It uses the `kop_base_nik` table to atomically manage the sequence count.\n     *\n     * @param string $base The base NIK prefix (e.g., '10203040' derived from wilayah IDs).\n     * @return string|false The generated full NIK string (e.g., '10203040001') on success, or false on failure.\n     */\n    public static function generateNik($base)\n    {\n        $db = self::getDb();\n        $transaction = $db->beginTransaction();\n\n        try {\n            // Find the BaseNik record. We acquire a lock for update to prevent race conditions.\n            // Using queryOne with FOR UPDATE is more explicit for locking the row.\n            // Alternatively, ActiveRecord's findOne() followed by save() inside a transaction\n            // usually provides sufficient atomicity for counters in most cases.\n            // For simplicity and common use-case, let's stick with findOne/save for ActiveRecord.\n            // If very high concurrency is expected and explicit row locking is needed,\n            // a raw SQL query with \"FOR UPDATE\" might be considered.\n\n            $baseNikRecord = self::findOne(['base' => $base]);\n            $newCount = 0;\n\n            if ($baseNikRecord) {\n                // Base NIK exists, increment the count\n                $baseNikRecord->count += 1;\n                $newCount = $baseNikRecord->count;\n                if (!$baseNikRecord->save()) {\n                    throw new DbException('Failed to update NIK count for base: ' . $base . '. Errors: ' . json_encode($baseNikRecord->getErrors()));\n                }\n                Yii::info(\"Updated NIK count for base '{$base}' to {$newCount}.\", __METHOD__);\n            } else {\n                // Base NIK does not exist, insert a new record with count 1\n                $baseNikRecord = new self();\n                $baseNikRecord->base = $base;\n                $baseNikRecord->count = 1; // Start with 1\n                $newCount = 1;\n                if (!$baseNikRecord->save()) {\n                    throw new DbException('Failed to insert new NIK base: ' . $base . '. Errors: ' . json_encode($baseNikRecord->getErrors()));\n                }\n                Yii::info(\"Inserted new NIK base '{$base}' with count {$newCount}.\", __METHOD__);\n            }\n\n            $transaction->commit(); // Commit the transaction if everything is successful\n\n            // Format the new count to be 3 digits with leading zeros\n            $sequentialSuffix = sprintf(\"%03d\", $newCount);\n            $fullNik = $base . $sequentialSuffix;\n\n            Yii::info(\"Generated NIK: {$fullNik}\", __METHOD__);\n            return $fullNik;\n\n        } catch (DbException $e) {\n            $transaction->rollBack(); // Rollback on database errors\n            Yii::error(\"Database error during NIK generation for base '{$base}'. Error: \" . $e->getMessage(), __METHOD__);\n            return false;\n        } catch (\\Throwable $e) {\n            // Catch any other general exceptions (e.g., PHP errors, unexpected issues)\n            $transaction->rollBack(); // Rollback on any general error\n            Yii::error(\"An unexpected error occurred during NIK generation for base '{$base}'. Error: \" . $e->getMessage(), __METHOD__);\n            return false;\n        }\n    }\n\n    public static function cleanWilayahName($name) {\n        if ($name === null) {\n            return '';\n        }\n        return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i', '', $name));\n    }\n\n    public static function getWilayahIds($provCleaned, $kabCleaned, $kelCleaned) {\n        $row = (new \\yii\\db\\Query())\n            ->select(['id_provinsi', 'id_kabupaten', 'id_kecamatan', 'id_kelurahan'])\n            ->from('kop_m_wilayah_ods') // Assuming this table exists\n            ->where(['provinsi' => $provCleaned]) // Exact match for province\n            ->andWhere(['like', 'kabupaten', '%' . $kabCleaned . '%']) // Partial match for kabupaten\n            ->andWhere(['like', 'kelurahan', '%' . $kelCleaned . '%']) // Partial match for kelurahan\n            ->orderBy(['id' => SORT_DESC]) // Assuming 'id' is a good ordering for 'latest'\n            ->one(self::getDb()); // Use the correct DB connection\n\n        if ($row) {\n            return $row; // Returns an associative array of IDs\n        }\n        return null; // No IDs found\n    }\n}\n\n\n--- File: 728 # views/layouts/main.php ---\n<?php\n\n/* @var $this \\yii\\web\\View */\n/* @var $content string */\n\nuse app\\widgets\\Alert;\nuse yii\\helpers\\Html;\nuse yii\\bootstrap\\Nav;\nuse yii\\bootstrap\\NavBar;\nuse yii\\widgets\\Breadcrumbs;\nuse app\\assets\\AppAsset;\nuse docotel\\dcms\\widget\\SideNav;\nuse app\\components\\Menu;\nuse yii\\helpers\\ArrayHelper;\n\nAppAsset::register($this);\n?>\n<?php $this->beginPage() ?>\n<!DOCTYPE html>\n<html lang=\"<?= Yii::$app->language ?>\">\n<head>\n<meta charset=\"<?= Yii::$app->charset ?>\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n  <?= Html::csrfMetaTags() ?>\n  <title><?= Html::encode($this->title) ?></title>\n  <link rel=\"manifest\" href=\"images/favicon/manifest.json\">\n  <!-- <link rel=\"stylesheet\" href=\"/css/site.css\">\n  <link rel=\"stylesheet\" href=\"/frontend/dist/styles/main.css\"> -->\n  <style type=\"text/css\">\n    .treeview.menu-open > a > .pull-right-container > .fa-minus {\n      display: block;\n    }\n\n    .treeview.menu-open > a > .pull-right-container > .fa-plus {\n      display: none;\n    }\n    .treeview > a > .pull-right-container > .fa-minus {\n      display: none;\n    }\n\n    .treeview > a > .pull-right-container > .fa-plus {\n      display: block;\n    }\n    /*.treeview.menu-open .treeview-menu .pull-right-container .fa-minus {\n      display: block;\n    }*/\n\n  </style>\n  <?php $this->head() ?>\n  <link href=\"/css/font-awesome.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"/css/animate.css\">\n</head>\n<body class=\"hold-transition skin-blue sidebar-mini\">\n<?php $this->beginBody() ?>\n<div class=\"wrapper\">\n    <header class=\"main-header\">\n        <div class=\"navbar-top\">\n            <a href=\"#\" data-toggle=\"push-menu\" role=\"button\">\n                <div class=\"nav-toggle\" id=\"toggle-nav\" toggle-target=\"#side-nav\">\n                  <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n            </a>\n\n            <h3 class=\"nav-title\">DITJEN AHU ONLINE</h3>\n            <div class=\"top-menu\">\n                <div class=\"navbar-custom-menu\">\n                    <ul class=\"nav navbar-nav\">\n                            <!-- Messages: style can be found in dropdown.less-->\n\n                            <!-- /.messages-menu -->\n                    </ul>\n                </div>\n                <div class=\"menu\"></div>\n            </div>\n            <div class=\"nav-right\">\n                <div class=\"user-info\">\n                    <div class=\"toggle-user\" id-target=\"#usermenu\">\n                      <?= Yii::$app->user->isGuest ? 'Guest' : (empty($data_notaris = Yii::$app->session->get('data_notaris')) ? Yii::$app->user->identity->username : ArrayHelper::getValue($data_notaris, 'value.username', '-'))  ?>\n                      <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                    </div>\n                    <ul class=\"user-menu\" id=\"usermenu\">\n                        <?php if(!empty(Yii::$app->user->identity->userGroup[0]->group_id) && Yii::$app->user->identity->userGroup[0]->group_id != 'notaris'):\n                          // cek halaman ubah password berdasarkan user grup\n                          $usergrup = Yii::$app->user->identity->userGroup[0]->group_id;\n                          $url_ubah_password = $usergrup != 'badan-hukum' ? \"/dcms/user/change-password\" : \"/users/change-password\";\n                          ?>\n                            <li class=\"\">\n                              <?=\n                                Html::a('<span class=\"menu-icon\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span> Ubah Password',\n                                  $url_ubah_password,\n                                  ['data-method' => 'post']\n\n                                )?>\n                            </li>\n                        <?php endif;?>\n                        <li class=\"green-panel logout\">\n                          <?=\n                            Html::a('<span class=\"menu-icon\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></span> Log Out',\n                              '/site/logout',\n                              ['data-method' => 'post']\n\n                            )?>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </header>\n    <aside class=\"main-sidebar\">\n\n      <!-- sidebar: style can be found in sidebar.less -->\n      <section class=\"sidebar\">\n\n      <?php\n    // dump($_SESSION);exit;\n    //   echo SideNav::widget([\n    //     'items' => !empty($this->params['menu']) ? $this->params['menu'] : []\n    //   ]);\n      ?>\n\n          <!-- Sidebar Menu -->\n          <?php\n            echo Menu::widget([\n              'items' => !empty($this->params['menu']) ? $this->params['menu'] : [],\n              // 'indMenuOpen' => '<i class=\"fas fa-minus pull-right\"></i>',\n              // 'indMenuClose' => '<i class=\"fas fa-plus pull-right\"></i>',\n              // 'heading' => true,\n            ]);\n          ?>\n          <!-- /.sidebar-menu -->\n      </section>\n      <!-- /.sidebar -->\n      </aside>\n      <div class=\"content-wrapper\">\n      <section class=\"content container-fluid\">\n      <?= Breadcrumbs::widget([\n            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],\n        ]) ?>\n        <?= Alert::widget() ?>\n        <?= $content ?>\n      </section>\n      </div>\n  <?php $this->endBody() ?>\n  </body>\n</html>\n<?php $this->endPage() ?>\n\n\n--- File: 718 # views/admin/whitelist/index.php ---\n<?php\n\nuse yii\\grid\\GridView;\nuse yii\\bootstrap\\Html;\nuse app\\models\\JenisKoperasi;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\MMatch;\n\n$this->title = \"Whitelist Nama\";\n?>\n<div class=\"panel panel-default\">\n    <div class=\"panel-body\">\n        <header style=\"margin-bottom:50px;\">\n            <h2 class=\"text-center\"><?= $this->title ?></h2>\n            <hr>\n        </header>\n        <?= Html::a(\"Tambah Data\", \"whitelist-add\", [\"class\" => \"btn btn-primary\", \"style\" => \"margin-bottom:2%\"]); ?>\n        <?=\n            GridView::widget([\n                'dataProvider' => $data_provider,\n                'filterModel' => $search_model,\n                'formatter' => [\n                    'class' => 'yii\\i18n\\Formatter',\n                    'nullDisplay' => '-'\n                ],\n                'columns' => [\n                    [\n                        'class' => 'yii\\grid\\SerialColumn',\n                        'header' => 'No',\n                    ],\n                    [\n                        'label' => 'Nama yang Diizinkan',\n                        'attribute' => 'name',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center'],\n                    ],\n                    [\n                        'label' => 'Keterangan',\n                        'attribute' => 'keterangan',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center'],\n                    ],\n                    [\n                        'label' => 'Tanggal Pembuatan',\n                        'attribute' => 'created_date',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center'],\n                        'format' => ['date', 'php:d-F-Y H:i:s'],\n                        'filter' => \\yii\\jui\\DatePicker::widget([\n                            'model' => $search_model,\n                            'attribute' => 'created_date',\n                            'dateFormat' => 'dd-MMMM-yyyy',\n                            'options' => [\n                                'class' => 'form-control',\n                            ]\n                        ]),\n\n                    ],\n                    [\n                        'label' => 'Diizinkan Untuk',\n                        'attribute' => 'base',\n                        'format' => 'html',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center', 'style' => 'width:20%'],\n                        'filter' => ArrayHelper::map(JenisKoperasi::find()->all(), 'id', 'nama'),\n                        'value' => function ($data) {\n                            $base = MMatch::findAll(['group_id' => $data->group_id]);\n                            if (!$base) {\n                                return null;\n                            }\n                            $temp = [];\n                            foreach ($base as $val) {\n                                $temp[] = $val->base0->nama;\n                            }\n                            return Html::ul($temp, ['item' => function ($item, $index) {\n                                return Html::tag('li', $item);\n                            }]);\n                        }\n                    ],\n                    [\n                        'label' => 'Dibuat Oleh',\n                        'attribute' => 'created_by',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center'],\n                        'value' => function ($data) {\n                            $user = docotel\\dcms\\models\\User::findOne(['id' => $data->created_by]);\n                            if (!$user) {\n                                return null;\n                            }\n                            return $user->username;\n                        }\n                    ],\n                    [\n                        'class' => 'yii\\grid\\ActionColumn',\n                        'header' => 'Aksi',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center'],\n                        'template' => '{update} {delete}',\n                        'buttons' => [\n                            'update' => function ($url, $model) {\n                                return Html::a(\n                                    '<span class=\"glyphicon glyphicon-pencil\"></span>',\n                                    $url,\n                                    [\n                                        'title' => Yii::t('app', 'lead-update'),\n                                    ]\n                                );\n                            },\n                            'delete' => function ($url, $model) {\n                                return Html::a(\n                                    '<span class=\"glyphicon glyphicon-trash\"></span>',\n                                    $url,\n                                    [\n                                        'title' => Yii::t('app', 'lead-delete'),\n                                        'onClick' => 'return confirm(\"Anda yakin ingin menghapus ini?\")'\n                                    ]\n                                );\n                            },\n                        ],\n                        'urlCreator' => function ($action, $model, $key, $index) {\n                            if ($action === 'update') {\n                                $url = \"whitelist-update?group_id=\" . $model->group_id;\n                                return $url;\n                            }\n                            if ($action === 'delete') {\n                                $url = \"whitelist-delete?group_id=\" . $model->group_id;\n                                return $url;\n                            }\n                        }\n                    ],\n                ]\n\n            ]); ?>\n    </div>\n</div>\n\n--- File: 715 # views/admin/userDinas/index.php ---\n<?php\nuse yii\\grid\\GridView;\nuse yii\\bootstrap\\Html;\nuse app\\models\\JenisKoperasi;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\MMatch;\n$this->title = \"Daftar User Dinas\";\n$status_aktif = app\\models\\User::STATUS_ACTIVE;\n$status_tidak = app\\models\\User::STATUS_INACTIVE;\n?>\n\n<style type=\"text/css\">\n    span.glyphicon.side {\n        display: block;\n        float: left;\n        width: 50%;\n    }\n</style>\n\n<div class=\"panel panel-default\">\n    <div class=\"panel-body\">\n        <header style=\"margin-bottom:50px;\">\n            <h2 class=\"text-center\"><?= $this->title ?></h2>\n            <hr>\n        </header>\n        <?= Html::a(\"Tambah Data\", \"user-dinas-add\", [\"class\" => \"btn btn-primary\", \"style\" => \"margin-bottom:2%\"]); ?>\n        <?= \n            GridView::widget([\n                'dataProvider' => $data_provider,\n                'filterModel' => $search_model,\n                'formatter' => [\n\t\t\t\t\t'class' => 'yii\\i18n\\Formatter',\n\t\t\t\t\t'nullDisplay' => '-'\n\t\t\t\t],\n                'columns' => [\n                    [\n                        'class' => 'yii\\grid\\SerialColumn',\n                        'header' => 'No',\n                    ],\n                    [\n                        'label' => 'Username',\n                        'attribute' => 'username',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-2'],\n                    ],\n                     [\n                        'label' => 'Email',\n                        'attribute' => 'email',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-2'],\n                    ],\n                     [\n                        'label' => 'Jenis Dinas',\n                        'attribute' => 'jenis',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-2'],\n                        'filter' => ['1' => 'Provinsi', '2' => 'Kabupaten'],\n                        'value' => function ($model) {\n                            return ($model->userDinas['jenis'] == '1') ? \"Provinsi\" : \"Kabupaten\";\n                        }\n                    ],\n                    [\n                        'label' => 'Tanggal Pembuatan',\n                        'attribute' => 'created_at',\n                        'format' => ['date', 'php:d-F-Y H:i:s'],\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-2'],\n                        'filter' => \\yii\\jui\\DatePicker::widget(['model' => $search_model, \n                            'attribute' => 'created_at',\n                            'dateFormat' => 'dd-MMMM-yyyy',\n                            'options' => [\n                                'class' => 'form-control',\n                        ]]),\n                    ],\n                    [\n                        'label' => 'Tanggal Pembaruan',\n                        'attribute' => 'updated_at',\n                        'format' => ['date', 'php:d-F-Y H:i:s'],\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-2',],\n                            'filter' => \\yii\\jui\\DatePicker::widget(['model' => $search_model, \n                            'attribute' => 'updated_at',\n                            'dateFormat' => 'dd-MMMM-yyyy',\n                            'options' => [\n                                'class' => 'form-control',\n                        ]]),\n                    ],\n                    [\n                        'label' => 'Status',\n                        'attribute' => 'status',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-1'],\n                        'filter' => [$status_tidak => 'Tidak Aktif', $status_aktif => 'Aktif'],\n                        'value' => function($data) {\n                            return $data->status == app\\models\\User::STATUS_ACTIVE ? 'Aktif' : 'Tidak Aktif';\n                        } \n                    ],\n                    [\n                        'class' => 'yii\\grid\\ActionColumn',\n                        'header' => 'Aksi',\n                        'contentOptions' => ['class' => 'text-center'],\n                        'headerOptions' => ['class' => 'text-center col-md-1'],\n                        'template' => '{update} {delete}',\n                        'buttons' => [\n                            'update' => function ($url, $model) {\n                                return Html::a('<span class=\"glyphicon glyphicon-pencil side\"></span>', $url, \n                                [\n                                    'title' => Yii::t('app', 'lead-update'),\n                                ]);\n                            },\n                            'delete' => function ($url, $model) {\n                                return Html::a('<span class=\"glyphicon glyphicon-trash side\"></span>', $url, \n                                [\n                                    'title' => Yii::t('app', 'lead-delete'),\n                                    'onClick' => 'return confirm(\"Anda yakin ingin menghapus ini?\")'\n                                ]);\n                            },\n                        ],\n                        'urlCreator' => function($action, $model, $key, $index) {\n                            if ($action === 'update') {\n                                $url = \"user-dinas-update?id=\" . $model->id;\n                                return $url;\n                            }\n                            if ($action === 'delete') {\n                                $url = \"user-dinas-delete?id=\" . $model->id;\n                                return $url;\n                            }\n                        }\n                    ], \n                ]\n            ]);\n        ?>\n    </div>\n</div>\n\n\n\n--- File: 683 # modules/Api/controllers/AuthController.php ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\LogHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse yii\\base\\Exception;\nuse app\\models\\User;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass AuthController extends Controller {\n\n    const EXPR_TIME_TOKEN = \"+30 minutes\";\n    private static $hash = 'sha512';\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    'login-jwt' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    public function actionLoginJwt() {\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_JWT_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                try {\n                    $dataXml = simplexml_load_string(Yii::$app->request->rawBody);\n                    $json = json_encode($dataXml);\n                    $dataJson = json_decode($json, true);\n                } catch (\\Exception $e) {\n                    throw new Exception(\"Format XML Tidak Valid\", 400);\n                }\n            }\n\n            if( !array_key_exists('username', $dataJson)) {\n                throw new Exception(\"Data Username Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('password', $dataJson)) {\n                throw new Exception(\"Data Password Tidak Ditemukan\", 400);\n            }\n            $username = $dataJson['username'];\n            $password = $dataJson['password'];\n\n            $dataUser = $this->getUserAuth($username, $password);\n\n            if( !$dataUser ) {\n                throw new Exception(\"User Tidak Ditemukan\", 401);\n            }\n\n            $hashKey = Setting::getValue('jwt_key');\n            $tokenId = $this->generate_sign();\n            $issuedAt = time();\n            $notBefore = $issuedAt;\n            $expire = $notBefore + 1800; // adding 60 minutes\n            $serverName = \"AHU-ONLINE\";\n\n            $token = new JWT();\n            $data = [\n                'iat' => $issuedAt,\n                'jti' => $tokenId,\n                'iss' => $serverName,\n                'nbf' => $notBefore,\n                'exp' => $expire,\n                'data' => [\n                    'theOneThatWeGaveId'   => $dataUser->id,\n                    'theOneThatWeGaveName' => $username,\n                ]\n            ];\n\n            $secretKey = base64_encode($hashKey);\n            $algorithm = 'HS256';\n            $token = $token::encode($data, $secretKey, $algorithm);\n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function actionAuthorization(){\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_AUTH_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                throw new Exception(\"Format JSON Tidak Valid\");\n            }\n\n            if( !array_key_exists('nomor_transaksi', $dataJson)) {\n                throw new Exception(\"Data nomor_transaksi Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('secret_key', $dataJson)) {\n                throw new Exception(\"Data secret_key Tidak Ditemukan\", 400);\n            }\n\n\n            $nomor_transaksi = $dataJson['nomor_transaksi'];\n            $secret_key = $dataJson['secret_key'];\n\n            $dataAuth = $this->getUpdateAuth($nomor_transaksi, $secret_key);\n\n            if( !$dataAuth ) {\n                throw new Exception(\"Auth Tidak Berhasil\", 401);\n            }\n\n            $token = $dataAuth;\n        \n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function getUpdateAuth($nomor_transaksi, $secret_key){\n        $hashed = hash(self::$hash, $secret_key . $nomor_transaksi);\n        return $hashed;\n    }\n\n    public function getUserAuth($username, $password) {\n        // Tambahkan disini jika ada group lain yang diperbolehkan get JWT Token\n        $whitelist_group = [\n            'oss',\n            'ods',\n        ];\n        $user = User::findByUsername($username);\n\n        if( !$user ) {\n            throw new Exception(\"User Tidak Ditemukan\", 404);\n        }\n\n        $cekPass = $user->validatePassword($password);\n\n        if( !$cekPass ) {\n            throw new Exception(\"Username / Password Salah\", 401);\n        }\n\n        $groups = ArrayHelper::getColumn($user->userGroup, 'group_id');\n        \n        foreach($whitelist_group as $whitelist) {\n            if( in_array($whitelist, $groups) ) {\n                return $user;\n            }\n        }\n\n        return false;\n    }\n\n    public static function generate_sign() {\n        $now = time();\n        $setengah_jam = (int)floor($now / 30 / 60);\n        $t = 'candrabeqx' . $setengah_jam . 'docotel';\n        $x = crypt($t, \"$2y$10$\" . substr(md5($t),0,22));\n\n        return $x;\n    }\n\n}\n?>\n\n--- File: 303 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/CoreTest.php ---\n<?php\nnamespace GuzzleHttp\\Tests\\Ring;\n\nuse GuzzleHttp\\Ring\\Core;\nuse GuzzleHttp\\Ring\\Future\\CompletedFutureArray;\nuse GuzzleHttp\\Ring\\Future\\FutureArray;\nuse GuzzleHttp\\Stream\\Stream;\nuse React\\Promise\\Deferred;\n\nclass CoreTest extends \\PHPUnit_Framework_TestCase\n{\n    public function testReturnsNullNoHeadersAreSet()\n    {\n        $this->assertNull(Core::header([], 'Foo'));\n        $this->assertNull(Core::firstHeader([], 'Foo'));\n    }\n\n    public function testChecksIfHasHeader()\n    {\n        $message = [\n            'headers' => [\n                'Foo' => ['Bar', 'Baz'],\n                'foo' => ['hello'],\n                'bar' => ['1']\n            ]\n        ];\n        $this->assertTrue(Core::hasHeader($message, 'Foo'));\n        $this->assertTrue(Core::hasHeader($message, 'foo'));\n        $this->assertTrue(Core::hasHeader($message, 'FoO'));\n        $this->assertTrue(Core::hasHeader($message, 'bar'));\n        $this->assertFalse(Core::hasHeader($message, 'barr'));\n    }\n\n    public function testReturnsFirstHeaderWhenSimple()\n    {\n        $this->assertEquals('Bar', Core::firstHeader([\n            'headers' => ['Foo' => ['Bar', 'Baz']],\n        ], 'Foo'));\n    }\n\n    public function testReturnsFirstHeaderWhenMultiplePerLine()\n    {\n        $this->assertEquals('Bar', Core::firstHeader([\n            'headers' => ['Foo' => ['Bar, Baz']],\n        ], 'Foo'));\n    }\n\n    public function testExtractsCaseInsensitiveHeader()\n    {\n        $this->assertEquals(\n            'hello',\n            Core::header(['headers' => ['foo' => ['hello']]], 'FoO')\n        );\n    }\n\n    public function testExtractsCaseInsensitiveHeaderLines()\n    {\n        $this->assertEquals(\n            ['a', 'b', 'c', 'd'],\n            Core::headerLines([\n                'headers' => [\n                    'foo' => ['a', 'b'],\n                    'Foo' => ['c', 'd']\n                ]\n            ], 'foo')\n        );\n    }\n\n    public function testExtractsHeaderLines()\n    {\n        $this->assertEquals(\n            ['bar', 'baz'],\n            Core::headerLines([\n                'headers' => [\n                    'Foo' => ['bar', 'baz'],\n                ],\n            ], 'Foo')\n        );\n    }\n\n    public function testExtractsHeaderAsString()\n    {\n        $this->assertEquals(\n            'bar, baz',\n            Core::header([\n                'headers' => [\n                    'Foo' => ['bar', 'baz'],\n                ],\n            ], 'Foo', true)\n        );\n    }\n\n    public function testReturnsNullWhenHeaderNotFound()\n    {\n        $this->assertNull(Core::header(['headers' => []], 'Foo'));\n    }\n\n    public function testRemovesHeaders()\n    {\n        $message = [\n            'headers' => [\n                'foo' => ['bar'],\n                'Foo' => ['bam'],\n                'baz' => ['123'],\n            ],\n        ];\n\n        $this->assertSame($message, Core::removeHeader($message, 'bam'));\n        $this->assertEquals([\n            'headers' => ['baz' => ['123']],\n        ], Core::removeHeader($message, 'foo'));\n    }\n\n    public function testCreatesUrl()\n    {\n        $req = [\n            'scheme'  => 'http',\n            'headers' => ['host' => ['foo.com']],\n            'uri'     => '/',\n        ];\n\n        $this->assertEquals('http://foo.com/', Core::url($req));\n    }\n\n    /**\n     * @expectedException \\InvalidArgumentException\n     * @expectedExceptionMessage No Host header was provided\n     */\n    public function testEnsuresHostIsAvailableWhenCreatingUrls()\n    {\n        Core::url([]);\n    }\n\n    public function testCreatesUrlWithQueryString()\n    {\n        $req = [\n            'scheme'       => 'http',\n            'headers'      => ['host' => ['foo.com']],\n            'uri'          => '/',\n            'query_string' => 'foo=baz',\n        ];\n\n        $this->assertEquals('http://foo.com/?foo=baz', Core::url($req));\n    }\n\n    public function testUsesUrlIfSet()\n    {\n        $req = ['url' => 'http://foo.com'];\n        $this->assertEquals('http://foo.com', Core::url($req));\n    }\n\n    public function testReturnsNullWhenNoBody()\n    {\n        $this->assertNull(Core::body([]));\n    }\n\n    public function testReturnsStreamAsString()\n    {\n        $this->assertEquals(\n            'foo',\n            Core::body(['body' => Stream::factory('foo')])\n        );\n    }\n\n    public function testReturnsString()\n    {\n        $this->assertEquals('foo', Core::body(['body' => 'foo']));\n    }\n\n    public function testReturnsResourceContent()\n    {\n        $r = fopen('php://memory', 'w+');\n        fwrite($r, 'foo');\n        rewind($r);\n        $this->assertEquals('foo', Core::body(['body' => $r]));\n        fclose($r);\n    }\n\n    public function testReturnsIteratorContent()\n    {\n        $a = new \\ArrayIterator(['a', 'b', 'cd', '']);\n        $this->assertEquals('abcd', Core::body(['body' => $a]));\n    }\n\n    public function testReturnsObjectToString()\n    {\n        $this->assertEquals('foo', Core::body(['body' => new StrClass]));\n    }\n\n    /**\n     * @expectedException \\InvalidArgumentException\n     */\n    public function testEnsuresBodyIsValid()\n    {\n        Core::body(['body' => false]);\n    }\n\n    public function testParsesHeadersFromLines()\n    {\n        $lines = ['Foo: bar', 'Foo: baz', 'Abc: 123', 'Def: a, b'];\n        $this->assertEquals([\n            'Foo' => ['bar', 'baz'],\n            'Abc' => ['123'],\n            'Def' => ['a, b'],\n        ], Core::headersFromLines($lines));\n    }\n\n    public function testParsesHeadersFromLinesWithMultipleLines()\n    {\n        $lines = ['Foo: bar', 'Foo: baz', 'Foo: 123'];\n        $this->assertEquals([\n            'Foo' => ['bar', 'baz', '123'],\n        ], Core::headersFromLines($lines));\n    }\n\n    public function testCreatesArrayCallFunctions()\n    {\n        $called = [];\n        $a = function ($a, $b) use (&$called) {\n            $called['a'] = func_get_args();\n        };\n        $b = function ($a, $b) use (&$called) {\n            $called['b'] = func_get_args();\n        };\n        $c = Core::callArray([$a, $b]);\n        $c(1, 2);\n        $this->assertEquals([1, 2], $called['a']);\n        $this->assertEquals([1, 2], $called['b']);\n    }\n\n    public function testRewindsGuzzleStreams()\n    {\n        $str = Stream::factory('foo');\n        $this->assertTrue(Core::rewindBody(['body' => $str]));\n    }\n\n    public function testRewindsStreams()\n    {\n        $str = Stream::factory('foo')->detach();\n        $this->assertTrue(Core::rewindBody(['body' => $str]));\n    }\n\n    public function testRewindsIterators()\n    {\n        $iter = new \\ArrayIterator(['foo']);\n        $this->assertTrue(Core::rewindBody(['body' => $iter]));\n    }\n\n    public function testRewindsStrings()\n    {\n        $this->assertTrue(Core::rewindBody(['body' => 'hi']));\n    }\n\n    public function testRewindsToStrings()\n    {\n        $this->assertTrue(Core::rewindBody(['body' => new StrClass()]));\n    }\n\n    public function typeProvider()\n    {\n        return [\n            ['foo', 'string(3) \"foo\"'],\n            [true, 'bool(true)'],\n            [false, 'bool(false)'],\n            [10, 'int(10)'],\n            [1.0, 'float(1)'],\n            [new StrClass(), 'object(GuzzleHttp\\Tests\\Ring\\StrClass)'],\n            [['foo'], 'array(1)']\n        ];\n    }\n\n    /**\n     * @dataProvider typeProvider\n     */\n    public function testDescribesType($input, $output)\n    {\n        $this->assertEquals($output, Core::describeType($input));\n    }\n\n    public function testDoesSleep()\n    {\n        $t = microtime(true);\n        $expected = $t + (100 / 1000);\n        Core::doSleep(['client' => ['delay' => 100]]);\n        $this->assertGreaterThanOrEqual($expected, microtime(true));\n    }\n\n    public function testProxiesFuture()\n    {\n        $f = new CompletedFutureArray(['status' => 200]);\n        $res = null;\n        $proxied = Core::proxy($f, function ($value) use (&$res) {\n            $value['foo'] = 'bar';\n            $res = $value;\n            return $value;\n        });\n        $this->assertNotSame($f, $proxied);\n        $this->assertEquals(200, $f->wait()['status']);\n        $this->assertArrayNotHasKey('foo', $f->wait());\n        $this->assertEquals('bar', $proxied->wait()['foo']);\n        $this->assertEquals(200, $proxied->wait()['status']);\n    }\n\n    public function testProxiesDeferredFuture()\n    {\n        $d = new Deferred();\n        $f = new FutureArray($d->promise());\n        $f2 = Core::proxy($f);\n        $d->resolve(['foo' => 'bar']);\n        $this->assertEquals('bar', $f['foo']);\n        $this->assertEquals('bar', $f2['foo']);\n    }\n\n    public function testProxiesDeferredFutureFailure()\n    {\n        $d = new Deferred();\n        $f = new FutureArray($d->promise());\n        $f2 = Core::proxy($f);\n        $d->reject(new \\Exception('foo'));\n        try {\n            $f2['hello?'];\n            $this->fail('did not throw');\n        } catch (\\Exception $e) {\n            $this->assertEquals('foo', $e->getMessage());\n        }\n\n    }\n}\n\nfinal class StrClass\n{\n    public function __toString()\n    {\n        return 'foo';\n    }\n}\n\n\n--- File: 10 # components/HelperDukcapil.php ---\n<?php\n\nnamespace app\\components;\n\nuse app\\models\\LogDukcapil;\nuse app\\models\\PemilikManfaat;\nuse Yii;\nuse yii\\base\\Component;\n\nclass HelperDukcapil extends Component\n{    \n    public $USER_ID;\n    public $PASSWORD;\n    public $IP_USER;\n    public $TRESHOLD;\n    public $NIK;\n    public $NAMA_LGKP;\n    public $URL_API;\n    public $ID_KOPERASI;\n\n    public $FILTER_RESPONSE = [\n        'NAMA_LGKP' => 'NAMA tidak sesuai dengan data yang terdapat di database Kependudukan',\n    ];\n\n    protected $responseCurl;\n\n    public function __construct($data = [])\n    {\n        $this->getConfigDukcapil();\n\n        $this->ID_KOPERASI = isset($data['id_koperasi']) ? $data['id_koperasi'] : '';\n        $this->NIK = isset($data['nik']) ? $data['nik'] : '';\n        $this->NAMA_LGKP = isset($data['nama']) ? $data['nama'] : '';\n    }\n\n    protected function getConfigDukcapil()\n    {\n        $config = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'credential_dukcapil'\"\n        )->queryOne();\n\n        if($config){\n            $decode = json_decode($config['value']);\n            $this->USER_ID = $decode->user_id;\n            $this->PASSWORD = $decode->password;\n            $this->IP_USER = $decode->ip_user;\n            $this->TRESHOLD = $decode->treshold;\n            $this->URL_API = $decode->url_api;\n        }\n    }\n\n    public function mappingDataDukcapil(){\n        $data = array(\n            'USER_ID' => $this->USER_ID,\n            'PASSWORD' => $this->PASSWORD,\n            'IP_USER' => $this->IP_USER,\n            'TRESHOLD' => $this->TRESHOLD,\n            'NIK' => $this->NIK,\n            'NAMA_LGKP' => $this->NAMA_LGKP\n        );\n        return json_encode($data);\n    }\n\n    public function curlValidDukcapil() {\n        $params = str_replace(\"\\\\/\",\"/\",$this->mappingDataDukcapil());\n\n        $ch = curl_init();\n        curl_setopt($ch,CURLOPT_URL, $this->URL_API);\n        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n        curl_setopt($ch,CURLOPT_HTTPHEADER, array(\"Accept:application/json\", \"Content-Type:application/json\"));\n        curl_setopt($ch,CURLOPT_POST, true);\n        curl_setopt($ch,CURLOPT_POSTFIELDS, $params);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n\n        $time_start = microtime(true);\n        $result = curl_exec($ch);\n        $time = sprintf('%.3f', microtime(true) - $time_start) . 's';\n        $info = curl_getinfo($ch);\n\n        $error = null;\n        if(curl_errno($ch)) {\n            $error = curl_error($ch);\n            if (in_array(curl_errno($ch), array(CURLE_OPERATION_TIMEDOUT, CURLE_OPERATION_TIMEOUTED))) {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'],\n                    ])\n                );\n            } else {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => curl_error($ch)],\n                    ])\n                );\n            }\n        }\n\n        curl_close($ch);\n        \n        $res = json_decode($result, true);\n\n        $data = (object)$res;\n        \n        LogDukcapil::logDcp($params, $result, $info['http_code'], 'VERIFNIK',$time,'KOPERASI', $info, $this->ID_KOPERASI, $this->NIK);\n\n        $data = $data->content[0];\n        $this->responseCurl = (object) $data;\n        return $error ?: true;\n    }\n\n    public function mapingResponse($res)\n    {\n        $response = [\n            'status' => 1,\n            'data' => []\n        ];\n\n        if (isset($res)) {\n            if (isset($res->RESPONSE_CODE)) {\n                $data = $this->processCode($res->RESPONSE_CODE, $res->RESPONSE);\n                if($data){\n                    $response['status'] = 0;\n                    $response['data'][] = $data;\n                }\n            } elseif (isset($res->RESPONSE)){\n                $response['status'] = 0;\n                $response['data'][] = $res->RESPONSE;\n            }else {\n                $data = [];\n                $string = \"Sesuai (100)\";\n                \n                foreach ($res as $key => $value) {\n                    if(in_array($key, array_keys($this->FILTER_RESPONSE)) && stripos($value, \"Tidak Sesuai\") !== false){\n                        $data[$key] = $this->FILTER_RESPONSE[$key];\n                    }\n                }\n\n                if(count($data) >= 1){\n                    $response['status'] = 0;\n                    $response['data'] = $data;\n                }\n            }\n            \n            return $response;\n        }else{\n            $response['status'] = 0;\n            $response['data'] = ['Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'];\n            return $response;\n        }\n    }\n    \n    private function processCode($code, $message)\n    {\n        switch ($code) {\n            case 11:\n                return 'Data yang dimasukkan merupakan data orang yang telah dinyatakan meninggal';\n            case 12:\n                return 'Data Ditemukan, Status Data Ganda';\n            case 13:\n                return 'Data Tidak Ditemukan, NIK tidak terdapat di database Kependudukan';\n            case 14:\n            case 15:\n                return $message;\n            default:\n                return 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi';\n        }\n    }\n    \n\n    public function response(){\n        return $this->mapingResponse($this->responseCurl);\n    }\n\n    public static function DataBalikan($id, $model){\n        $config = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'credential_data_balikan'\"\n        )->queryOne();\n\n        $token = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'token_data_balikan'\"\n        )->queryOne();\n\n        $token = $token['value'];\n\n        $data = PemilikManfaat::findAll(['t_koperasi_id' => $id]);\n\n        if(isset($config['value'])){\n            $decode = json_decode($config['value']);\n\n            $params = [];\n            $params['id_lembaga'] = $decode->id_lembaga;\n            $params['nama_lembaga'] = $decode->nama_lembaga;\n            $nik = 0;\n            foreach ($data as $key => $value) {\n                if($value->m_jenis_identitas_id == 1){\n                    $params['data'][] = [\n                        'NIK' => $value->no_identitas,\n                        'param' => [\n                            [\"hubungan_dengan_korporasi\" => \"Pemilik Manfaat KOPERASI \" . $model->nama_koperasi],\n                        ]\n                    ];\n                    $nik = $value->no_identitas;\n                }\n            }\n\n            if(!empty($params)){\n                self::curlDataBalikan($decode->url_api, json_encode([$params]), $token, $id, $nik);\n            }\n        }\n\n    } \n\n    public static function curlDataBalikan($url, $params, $token, $id = null, $nik){\n        $time_start = microtime(true);\n        $ch = curl_init();\n        curl_setopt($ch,CURLOPT_URL, $url);\n        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n        curl_setopt($ch,CURLOPT_HTTPHEADER, array(\"Accept:application/json\", \"Content-Type:application/json\", \"Authorization:Bearer \".$token));\n        curl_setopt($ch,CURLOPT_POST, true);\n        curl_setopt($ch,CURLOPT_POSTFIELDS, $params);\n\n        // Set timeout\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);\n\n        $result = curl_exec($ch);\n        $time = sprintf('%.3f', microtime(true) - $time_start) . 's';\n        $info = curl_getinfo($ch);\n\n        if(curl_errno($ch)){\n            // check is error timeout or not \n            if (in_array(curl_errno($ch), array(CURLE_OPERATION_TIMEDOUT, CURLE_OPERATION_TIMEOUTED))) {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'],\n                    ])\n                );\n            } else {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => curl_error($ch)],\n                    ])\n                );\n            }\n        }\n        curl_close($ch);\n        \n        LogDukcapil::logDcp($params, $result, $info['http_code'], 'DATABALIKAN',$time,'KOPERASI', $info, $id, $nik);\n\n        return $result;\n    }\n\n    public static function CheckIsActiveValidateDukcapil(){\n        $isActive = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'is_active_dukcapil'\"\n        )->queryOne();\n        \n        $status = 0;\n        if(!empty($isActive) && $isActive['value'] == 1){\n            $status = 1;\n        }\n\n        return $status;\n    }\n\n    public static function AllowValidation(){\n        $response = [\n            'status' => 1,\n            'data' => []\n        ];\n\n        return $response;\n    }\n}\n\n\n--- File: 283 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Core.php ---\n<?php\nnamespace GuzzleHttp\\Ring;\n\nuse GuzzleHttp\\Stream\\StreamInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArrayInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArray;\n\n/**\n * Provides core functionality of Ring handlers and middleware.\n */\nclass Core\n{\n    /**\n     * Returns a function that calls all of the provided functions, in order,\n     * passing the arguments provided to the composed function to each function.\n     *\n     * @param callable[] $functions Array of functions to proxy to.\n     *\n     * @return callable\n     */\n    public static function callArray(array $functions)\n    {\n        return function () use ($functions) {\n            $args = func_get_args();\n            foreach ($functions as $fn) {\n                call_user_func_array($fn, $args);\n            }\n        };\n    }\n\n    /**\n     * Gets an array of header line values from a message for a specific header\n     *\n     * This method searches through the \"headers\" key of a message for a header\n     * using a case-insensitive search.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return array\n     */\n    public static function headerLines($message, $header)\n    {\n        $result = [];\n\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    $result = array_merge($result, $value);\n                }\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Gets a header value from a message as a string or null\n     *\n     * This method searches through the \"headers\" key of a message for a header\n     * using a case-insensitive search. The lines of the header are imploded\n     * using commas into a single string return value.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return string|null Returns the header string if found, or null if not.\n     */\n    public static function header($message, $header)\n    {\n        $match = self::headerLines($message, $header);\n        return $match ? implode(', ', $match) : null;\n    }\n\n    /**\n     * Returns the first header value from a message as a string or null. If\n     * a header line contains multiple values separated by a comma, then this\n     * function will return the first value in the list.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return string|null Returns the value as a string if found.\n     */\n    public static function firstHeader($message, $header)\n    {\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    // Return the match itself if it is a single value.\n                    $pos = strpos($value[0], ',');\n                    return $pos ? substr($value[0], 0, $pos) : $value[0];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns true if a message has the provided case-insensitive header.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to check\n     *\n     * @return bool\n     */\n    public static function hasHeader($message, $header)\n    {\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Parses an array of header lines into an associative array of headers.\n     *\n     * @param array $lines Header lines array of strings in the following\n     *                     format: \"Name: Value\"\n     * @return array\n     */\n    public static function headersFromLines($lines)\n    {\n        $headers = [];\n\n        foreach ($lines as $line) {\n            $parts = explode(':', $line, 2);\n            $headers[trim($parts[0])][] = isset($parts[1])\n                ? trim($parts[1])\n                : null;\n        }\n\n        return $headers;\n    }\n\n    /**\n     * Removes a header from a message using a case-insensitive comparison.\n     *\n     * @param array  $message Message that contains 'headers'\n     * @param string $header  Header to remove\n     *\n     * @return array\n     */\n    public static function removeHeader(array $message, $header)\n    {\n        if (isset($message['headers'])) {\n            foreach (array_keys($message['headers']) as $key) {\n                if (!strcasecmp($header, $key)) {\n                    unset($message['headers'][$key]);\n                }\n            }\n        }\n\n        return $message;\n    }\n\n    /**\n     * Replaces any existing case insensitive headers with the given value.\n     *\n     * @param array  $message Message that contains 'headers'\n     * @param string $header  Header to set.\n     * @param array  $value   Value to set.\n     *\n     * @return array\n     */\n    public static function setHeader(array $message, $header, array $value)\n    {\n        $message = self::removeHeader($message, $header);\n        $message['headers'][$header] = $value;\n\n        return $message;\n    }\n\n    /**\n     * Creates a URL string from a request.\n     *\n     * If the \"url\" key is present on the request, it is returned, otherwise\n     * the url is built up based on the scheme, host, uri, and query_string\n     * request values.\n     *\n     * @param array $request Request to get the URL from\n     *\n     * @return string Returns the request URL as a string.\n     * @throws \\InvalidArgumentException if no Host header is present.\n     */\n    public static function url(array $request)\n    {\n        if (isset($request['url'])) {\n            return $request['url'];\n        }\n\n        $uri = (isset($request['scheme'])\n                ? $request['scheme'] : 'http') . '://';\n\n        if ($host = self::header($request, 'host')) {\n            $uri .= $host;\n        } else {\n            throw new \\InvalidArgumentException('No Host header was provided');\n        }\n\n        if (isset($request['uri'])) {\n            $uri .= $request['uri'];\n        }\n\n        if (isset($request['query_string'])) {\n            $uri .= '?' . $request['query_string'];\n        }\n\n        return $uri;\n    }\n\n    /**\n     * Reads the body of a message into a string.\n     *\n     * @param array|FutureArrayInterface $message Array containing a \"body\" key\n     *\n     * @return null|string Returns the body as a string or null if not set.\n     * @throws \\InvalidArgumentException if a request body is invalid.\n     */\n    public static function body($message)\n    {\n        if (!isset($message['body'])) {\n            return null;\n        }\n\n        if ($message['body'] instanceof StreamInterface) {\n            return (string) $message['body'];\n        }\n\n        switch (gettype($message['body'])) {\n            case 'string':\n                return $message['body'];\n            case 'resource':\n                return stream_get_contents($message['body']);\n            case 'object':\n                if ($message['body'] instanceof \\Iterator) {\n                    return implode('', iterator_to_array($message['body']));\n                } elseif (method_exists($message['body'], '__toString')) {\n                    return (string) $message['body'];\n                }\n            default:\n                throw new \\InvalidArgumentException('Invalid request body: '\n                    . self::describeType($message['body']));\n        }\n    }\n\n    /**\n     * Rewind the body of the provided message if possible.\n     *\n     * @param array $message Message that contains a 'body' field.\n     *\n     * @return bool Returns true on success, false on failure\n     */\n    public static function rewindBody($message)\n    {\n        if ($message['body'] instanceof StreamInterface) {\n            return $message['body']->seek(0);\n        }\n\n        if ($message['body'] instanceof \\Generator) {\n            return false;\n        }\n\n        if ($message['body'] instanceof \\Iterator) {\n            $message['body']->rewind();\n            return true;\n        }\n\n        if (is_resource($message['body'])) {\n            return rewind($message['body']);\n        }\n\n        return is_string($message['body'])\n            || (is_object($message['body'])\n                && method_exists($message['body'], '__toString'));\n    }\n\n    /**\n     * Debug function used to describe the provided value type and class.\n     *\n     * @param mixed $input\n     *\n     * @return string Returns a string containing the type of the variable and\n     *                if a class is provided, the class name.\n     */\n    public static function describeType($input)\n    {\n        switch (gettype($input)) {\n            case 'object':\n                return 'object(' . get_class($input) . ')';\n            case 'array':\n                return 'array(' . count($input) . ')';\n            default:\n                ob_start();\n                var_dump($input);\n                // normalize float vs double\n                return str_replace('double(', 'float(', rtrim(ob_get_clean()));\n        }\n    }\n\n    /**\n     * Sleep for the specified amount of time specified in the request's\n     * ['client']['delay'] option if present.\n     *\n     * This function should only be used when a non-blocking sleep is not\n     * possible.\n     *\n     * @param array $request Request to sleep\n     */\n    public static function doSleep(array $request)\n    {\n        if (isset($request['client']['delay'])) {\n            usleep($request['client']['delay'] * 1000);\n        }\n    }\n\n    /**\n     * Returns a proxied future that modifies the dereferenced value of another\n     * future using a promise.\n     *\n     * @param FutureArrayInterface $future      Future to wrap with a new future\n     * @param callable    $onFulfilled Invoked when the future fulfilled\n     * @param callable    $onRejected  Invoked when the future rejected\n     * @param callable    $onProgress  Invoked when the future progresses\n     *\n     * @return FutureArray\n     */\n    public static function proxy(\n        FutureArrayInterface $future,\n        callable $onFulfilled = null,\n        callable $onRejected = null,\n        callable $onProgress = null\n    ) {\n        return new FutureArray(\n            $future->then($onFulfilled, $onRejected, $onProgress),\n            [$future, 'wait'],\n            [$future, 'cancel']\n        );\n    }\n\n    /**\n     * Returns a debug stream based on the provided variable.\n     *\n     * @param mixed $value Optional value\n     *\n     * @return resource\n     */\n    public static function getDebugResource($value = null)\n    {\n        if (is_resource($value)) {\n            return $value;\n        } elseif (defined('STDOUT')) {\n            return STDOUT;\n        } else {\n            return fopen('php://output', 'w');\n        }\n    }\n}\n\n\n--- File: 685 # modules/Api/controllers/TransaksiController.php (truncated) ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Url;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\ApiHelper;\nuse app\\components\\LogHelper;\nuse app\\models\\TransaksiKoperasi;\nuse app\\modules\\Api\\components\\AuthHelper;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse app\\modules\\Api\\components\\TransaksiHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse yii\\base\\Exception;\nuse app\\models\\bakum\\LogCodex;\nuse app\\components\\helper\\TelegramHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass TransaksiController extends Controller\n{\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    // 'index' => ['POST'],\n                    'dummy' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    /**\n     * Function untuk Output Response sekaligus Save Logging\n     * \n     * @param Array Data Request\n     * \n     * @return JSON/XML Output Response Berdasarkan\n     */\n    public function responseAndSaveLog(Array $data, $typeFormat = 'JSON')\n    {\n        $this->saveLog($data);\n\n        return $this->showResponse($data['response'], $typeFormat);\n    }\n\n    /**\n     * Function untuk save Log\n     * \n     * @param Array Data Request\n     * \n     * @return Boolean Hasil Dari Saving Log\n     */\n    public function saveLog(Array $data)\n    {\n        return LogHelper::saveLog([\n            'service_uri' => $data['url'],\n            'request' => $data['request'],\n            'response' => $data['response'],\n            'nik' => $data['nik'],\n            'additional_data' => json_encode($data['additional_data']),\n            'is_error' => $data['is_error'],\n            'type' => $data['type'],\n            'execution_time' => TimeHelper::getElapsedTime($data['startTime']),\n        ]);\n    }\n\n    /**\n     * Function untuk menampilkan response berdasarkan format\n     * \n     * @param Array Response Array\n     * @param String Format Type untuk Response\n     * \n     * @return JSON/XML Return response sesuai type\n     */\n    public function showResponse(Array $res, $type = 'JSON')\n    {\n        if(!$res || !$type) {\n            throw new \\Exception;\n        }\n        // Normalize Param Type\n        $type = strtoupper($type);\n        \n        if ($type == 'XML') {\n            return $this->asXml($res);\n        }\n        elseif ($type == 'JSON') {\n            return $this->asJson($res);\n        }\n        else {\n            throw new \\Exception;\n        }\n    }\n\n    /**\n     * Function untuk menerima hit perubahan transaksi dari ODS\n     * \n     * @param AUTH_KEY\n     * @param XML_DATA\n     * \n     * @return JSON\n     */\n    public function actionIndex()\n    {\n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"ODS_API_INCOMMING\";\n        // Get Headers\n        $headers = Yii::$app->request->headers;\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n\n        if (!Yii::$app->request->isPost) {\n            $res = [\n                'code' => '01',\n                'message' => 'Method Not Allowed',\n                'status' => 405\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if($headers['Content-Type'] != 'application/xml') {\n            $res = [\n                'code' => '02',\n                'message' => 'Content Type Is Not application/xml',\n                'status' => 415\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $dataXml = simplexml_load_string($data);\n        }   \n        catch(\\Exception $e) {\n            $res = [\n                'code' => '03',\n                'message' => 'XML Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $json = json_encode($dataXml);\n        $dataJson = json_decode($json, true);\n\n        $nik = $dataJson['data']['nik'];\n\n        // Cek Auth\n        if (empty($headers['AuthJWT'])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Empty Headers',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $auth_jwt = explode(\"Bearer \", $headers['AuthJWT']);\n\n        if (empty($auth_jwt[1])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Header Format is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $token = new JWT;\n            $hashKey = Setting::getValue('jwt_key');\n            $secretKey = base64_encode($hashKey);\n            $token = $token::decode($auth_jwt[1], $secretKey, ['HS256']);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication failed - ' . $e->getMessage(),\n                'status' => 401\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        $createTrans = TransaksiHelper::createTrans($dataJson);\n\n        if(!$createTrans['status']) {\n            $res = [\n                'code' => '05',\n                'message' => 'Failed To Create Transaction.',\n                'additional_info' => $createTrans['info'],\n                'status' => 500\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => TransaksiHelper::getData($dataJson,'data.nik'),\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->responseAndSaveLog([\n            'url' => $url,\n            'request' => $data,\n            'response' => $res,\n            'nik' => TransaksiHelper::getData($dataJson,'data.nik'),\n            'additional_data' => $headers->toArray(),\n            'is_error' => 0,\n            'type' => $type_api,\n            'startTime' => $start,\n        ]);\n    }\n\n    /**\n     * Action API untuk url hit sendData Api Dennis\n     * \n     * @param AUTH_KEY\n     * @param JSON_DATA\n     * \n     * @return Json\n     */\n    public function actionDummy()\n    {\n        \n        $headers = Yii::$app->request->headers;\n        if($headers['Content-Type'] != 'application/json') {\n            $res = [\n                'code' => '01',\n                'message' => 'Format Must Be In Json',\n                'status' => 415\n            ];\n\n            return $this->asJson($res);\n        }\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n        $dataJson = json_decode($data, true);\n        $authKey = $headers['auth'];\n        $nik =  $dataJson['data']['koperasi']['nik'];\n        if(!$dataJson) {\n            $res = [\n                'code' => '02',\n                'message' => 'Json Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->asJson($res);\n        }\n\n        $auth = AuthHelper::checkAuth($authKey, $nik);\n\n        if(!$auth) {\n            $res = [\n                'code' => '03',\n                'message' => 'Authentication failed',\n                'status' => 401\n            ];\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->asJson($res);\n    }\n\n    /**\n     * Action API untuk url hit Update NIK dari ODS\n     * \n     * @param AUTH_KEY\n     * @param JSON_DATA\n     * \n     * @return Json\n     */\n    public function actionUpdate()\n    { \n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"ODS_API_INCOMMING\";\n        // Get Headers\n        $headers = Yii::$app->request->headers;\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n\n        if (!Yii::$app->request->isPost) {\n            $res = [\n                'code' => '01',\n                'message' => 'Method Not Allowed',\n                'status' => 405\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if ($headers['Content-Type'] != 'application/xml') {\n            $res = [\n                'code' => '02',\n                'message' => 'Content Type Is Not application/xml',\n                'status' => 415\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $dataXml = simplexml_load_string($data);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '03',\n                'message' => 'XML Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $json = json_encode($dataXml);\n        $dataJson = json_decode($json, true);\n\n        $nomor_transaksi = $dataJson['data']['nomor_transaksi'];\n\n        // Cek Auth\n        if (empty($headers['AuthJWT'])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Empty Headers',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $auth_jwt = explode(\"Bearer \", $headers['AuthJWT']);\n\n        if (empty($auth_jwt[1])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Header Format is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $token = new JWT;\n            $hashKey = Setting::getValue('jwt_key');\n            $secretKey = base64_encode($hashKey);\n            $token = $token::decode($auth_jwt[1], $secretKey, ['HS256']);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication failed - ' . $e->getMessage(),\n                'status' => 401\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        $updateTrans = TransaksiHelper::updateTrans($dataJson);\n\n        if(!$updateTrans['status']) {\n            $res = [\n                'code' => '05',\n                'message' => 'Failed To Create Transaction.',\n                'additional_info' => $updateTrans['info'],\n                'status' => 500\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => TransaksiHelper::getData($dataJson,'data.nomor_transaksi'),\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->responseAndSaveLog([\n            'url' => $url,\n            'request' => $data,\n            'response' => $res,\n            'nik' => TransaksiHelper::getData($dataJson,'data.nomor_transaksi'),\n            'additional_data' => $headers->toArray(),\n            'is_error' => 0,\n            'type' => $type_api,\n            'startTime' => $start,\n        ]);\n    }\n\n    /**\n     * Function untuk menerima hit insert transaksi pendirian dari ODS\n     * \n     * @param AUTH_KEY JWT\n     * @param JSON_DATA\n     * \n     * @return JSON\n     */\n    public function actionInsert()\n    {\n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n... (truncated)\n\nAnalyze the codebase context.\nIdentify the top 5-10 core most important abstractions to help those new to the codebase.\n\nFor each abstraction, provide:\n1. A concise `name`.\n2. A beginner-friendly `description` explaining what it is with a simple analogy, in around 100 words.\n3. A list of relevant `file_indices` (integers) using the format `idx # path/comment`.\n\nList of file indices and paths present in the context:\n- 0 # codeception.yml\n- 1 # composer.json\n- 2 # docker-compose.yml\n- 3 # requirements.php\n- 4 # assets/AppAsset.php\n- 5 # commands/HelloController.php\n- 6 # commands/TaskController.php\n- 7 # components/ActionHelper.php\n- 8 # components/BaseController.php\n- 9 # components/DinasHelper.php\n- 10 # components/HelperDukcapil.php\n- 11 # components/Helpers.php\n- 12 # components/KoperasiHelper.php\n- 13 # components/LogHelper.php\n- 14 # components/Menu.php\n- 15 # components/NikHelper.php\n- 16 # components/NotariatHelper.php\n- 17 # components/NpakHelper.php\n- 18 # components/QrCodeHelper.php\n- 19 # components/RegexHelper.php\n- 20 # components/TransaksiHelper.php\n- 21 # components/ViewHelper.php\n- 22 # components/ApiHelper.php\n- 23 # components/helper/BoHelper.php\n- 24 # components/helper/Disclaimer.php\n- 25 # components/helper/FormatDate.php\n- 26 # components/helper/LoginChecker.php\n- 27 # components/helper/Numbering.php\n- 28 # components/helper/TelegramHelper.php\n- 29 # components/helper/EncryptHelper.php\n- 30 # components/helper/PerbaikanDataHelper.php\n- 31 # config/console-sample.php\n- 32 # config/db.php\n- 33 # config/test.php\n- 34 # config/test_db.php\n- 35 # config/web-sample.php\n- 36 # controllers/BlokirController.php\n- 37 # controllers/DinasController.php\n- 38 # controllers/LogController.php\n- 39 # controllers/NewFormController.php\n- 40 # controllers/PembubaranController.php\n- 41 # controllers/QrCodeController.php\n- 42 # controllers/ServiceController.php\n- 43 # controllers/UsersController.php\n- 44 # controllers/AdminController.php\n- 45 # controllers/BakumVerifikatorController.php\n- 46 # controllers/PendirianController.php\n- 47 # controllers/PerbaikanDataController.php\n- 48 # controllers/PerubahanController.php\n- 49 # controllers/PesanNamaController.php\n- 50 # controllers/SiteController.php\n- 51 # extensions/elasticSearch/ElasticSearch.php\n- 52 # extensions/elasticSearch/ElasticSearchInterface.php\n- 53 # extensions/elasticSearch/vendor/autoload.php\n- 54 # extensions/elasticSearch/vendor/composer/ClassLoader.php\n- 55 # extensions/elasticSearch/vendor/composer/autoload_classmap.php\n- 56 # extensions/elasticSearch/vendor/composer/autoload_files.php\n- 57 # extensions/elasticSearch/vendor/composer/autoload_namespaces.php\n- 58 # extensions/elasticSearch/vendor/composer/autoload_psr4.php\n- 59 # extensions/elasticSearch/vendor/composer/autoload_real.php\n- 60 # extensions/elasticSearch/vendor/composer/autoload_static.php\n- 61 # extensions/elasticSearch/vendor/composer/installed.json\n- 62 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/.travis.yml\n- 63 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Client.php\n- 64 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ClientBuilder.php\n- 65 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Transport.php\n- 66 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/EmptyLogger.php\n- 67 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/AlreadyExpiredException.php\n- 68 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/BadMethodCallException.php\n- 69 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/BadRequest400Exception.php\n- 70 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/ClientErrorResponseException.php\n- 71 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Conflict409Exception.php\n- 72 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/ElasticsearchException.php\n- 73 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Forbidden403Exception.php\n- 74 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/InvalidArgumentException.php\n- 75 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/MaxRetriesException.php\n- 76 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Missing404Exception.php\n- 77 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/NoDocumentsToGetException.php\n- 78 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/NoNodesAvailableException.php\n- 79 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/NoShardAvailableException.php\n- 80 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/RequestTimeout408Exception.php\n- 81 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/RoutingMissingException.php\n- 82 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/RuntimeException.php\n- 83 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/ScriptLangNotSupportedException.php\n- 84 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/ServerErrorResponseException.php\n- 85 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/TransportException.php\n- 86 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Unauthorized401Exception.php\n- 87 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/UnexpectedValueException.php\n- 88 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Curl/CouldNotConnectToHost.php\n- 89 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Curl/CouldNotResolveHostException.php\n- 90 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Curl/OperationTimeoutException.php\n- 91 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Common/Exceptions/Serializer/JsonErrorException.php\n- 92 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/AbstractConnectionPool.php\n- 93 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/ConnectionPoolInterface.php\n- 94 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/SimpleConnectionPool.php\n- 95 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/SniffingConnectionPool.php\n- 96 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/StaticConnectionPool.php\n- 97 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/StaticNoPingConnectionPool.php\n- 98 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/Selectors/RandomSelector.php\n- 99 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/Selectors/RoundRobinSelector.php\n- 100 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/Selectors/SelectorInterface.php\n- 101 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ConnectionPool/Selectors/StickyRoundRobinSelector.php\n- 102 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Connections/Connection.php\n- 103 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Connections/ConnectionFactory.php\n- 104 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Connections/ConnectionFactoryInterface.php\n- 105 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Connections/ConnectionInterface.php\n- 106 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/AbstractEndpoint.php\n- 107 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Bulk.php\n- 108 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/BulkEndpointInterface.php\n- 109 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/ClearScroll.php\n- 110 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Count.php\n- 111 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/CountPercolate.php\n- 112 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Create.php\n- 113 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Delete.php\n- 114 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/DeleteByQuery.php\n- 115 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Exists.php\n- 116 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Explain.php\n- 117 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/FieldCaps.php\n- 118 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/FieldStats.php\n- 119 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Get.php\n- 120 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Index.php\n- 121 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Info.php\n- 122 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/MPercolate.php\n- 123 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/MTermVectors.php\n- 124 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Mget.php\n- 125 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Msearch.php\n- 126 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/MsearchTemplate.php\n- 127 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Percolate.php\n- 128 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Ping.php\n- 129 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Reindex.php\n- 130 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/RenderSearchTemplate.php\n- 131 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Scroll.php\n- 132 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Search.php\n- 133 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/SearchShards.php\n- 134 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/SearchTemplate.php\n- 135 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Suggest.php\n- 136 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/TermVectors.php\n- 137 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Update.php\n- 138 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/UpdateByQuery.php\n- 139 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Aliases.php\n- 140 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Allocation.php\n- 141 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Count.php\n- 142 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Fielddata.php\n- 143 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Health.php\n- 144 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Help.php\n- 145 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Indices.php\n- 146 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Master.php\n- 147 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/NodeAttrs.php\n- 148 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Nodes.php\n- 149 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/PendingTasks.php\n- 150 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Plugins.php\n- 151 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Recovery.php\n- 152 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Repositories.php\n- 153 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Segments.php\n- 154 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Shards.php\n- 155 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Snapshots.php\n- 156 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Tasks.php\n- 157 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/Templates.php\n- 158 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cat/ThreadPool.php\n- 159 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/AllocationExplain.php\n- 160 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Health.php\n- 161 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/PendingTasks.php\n- 162 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/RemoteInfo.php\n- 163 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Reroute.php\n- 164 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/State.php\n- 165 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Stats.php\n- 166 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Nodes/AbstractNodesEndpoint.php\n- 167 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Nodes/HotThreads.php\n- 168 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Nodes/Info.php\n- 169 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Nodes/Shutdown.php\n- 170 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Nodes/Stats.php\n- 171 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Settings/Get.php\n- 172 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Cluster/Settings/Put.php\n- 173 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Analyze.php\n- 174 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/ClearCache.php\n- 175 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Close.php\n- 176 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Create.php\n- 177 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Delete.php\n- 178 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Exists.php\n- 179 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Flush.php\n- 180 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/ForceMerge.php\n- 181 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Get.php\n- 182 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Open.php\n- 183 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Recovery.php\n- 184 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Refresh.php\n- 185 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Rollover.php\n- 186 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Seal.php\n- 187 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Segments.php\n- 188 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/ShardStores.php\n- 189 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Shrink.php\n- 190 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Snapshotindex.php\n- 191 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Stats.php\n- 192 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Status.php\n- 193 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/ValidateQuery.php\n- 194 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Alias/AbstractAliasEndpoint.php\n- 195 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Alias/Delete.php\n- 196 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Alias/Exists.php\n- 197 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Alias/Get.php\n- 198 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Alias/Put.php\n- 199 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Aliases/Update.php\n- 200 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Cache/Clear.php\n- 201 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Exists/Types.php\n- 202 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Field/Get.php\n- 203 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Gateway/Snapshot.php\n- 204 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/Delete.php\n- 205 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/Get.php\n- 206 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/GetField.php\n- 207 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Mapping/Put.php\n- 208 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Settings/Get.php\n- 209 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Settings/Put.php\n- 210 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Template/AbstractTemplateEndpoint.php\n- 211 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Template/Delete.php\n- 212 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Template/Exists.php\n- 213 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Template/Get.php\n- 214 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Template/Put.php\n- 215 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Type/Exists.php\n- 216 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Upgrade/Get.php\n- 217 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Upgrade/Post.php\n- 218 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Indices/Validate/Query.php\n- 219 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Ingest/ProcessorGrok.php\n- 220 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Ingest/Simulate.php\n- 221 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Ingest/Pipeline/Delete.php\n- 222 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Ingest/Pipeline/Get.php\n- 223 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Ingest/Pipeline/Put.php\n- 224 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Remote/Info.php\n- 225 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Script/Delete.php\n- 226 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Script/Get.php\n- 227 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Script/Put.php\n- 228 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Create.php\n- 229 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Delete.php\n- 230 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Get.php\n- 231 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Restore.php\n- 232 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Status.php\n- 233 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Repository/Create.php\n- 234 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Repository/Delete.php\n- 235 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Repository/Get.php\n- 236 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Snapshot/Repository/Verify.php\n- 237 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Source/Get.php\n- 238 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Tasks/Cancel.php\n- 239 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Tasks/Get.php\n- 240 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Tasks/TasksList.php\n- 241 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Template/Delete.php\n- 242 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Template/Get.php\n- 243 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Helper/Iterators/SearchHitIterator.php\n- 244 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Helper/Iterators/SearchResponseIterator.php\n- 245 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/AbstractNamespace.php\n- 246 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/BooleanRequestWrapper.php\n- 247 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/CatNamespace.php\n- 248 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/ClusterNamespace.php\n- 249 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/IndicesNamespace.php\n- 250 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/IngestNamespace.php\n- 251 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/NamespaceBuilderInterface.php\n- 252 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/NodesNamespace.php\n- 253 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/RemoteNamespace.php\n- 254 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/SnapshotNamespace.php\n- 255 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/TasksNamespace.php\n- 256 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Serializers/ArrayToJSONSerializer.php\n- 257 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Serializers/EverythingToJSONSerializer.php\n- 258 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Serializers/SerializerInterface.php\n- 259 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Serializers/SmartSerializer.php\n- 260 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/bootstrap.php\n- 261 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ClientBuilderTest.php\n- 262 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ClientIntegrationTests.php\n- 263 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ClientTest.php\n- 264 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/RegisteredNamespaceTest.php\n- 265 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/YamlRunnerTest.php\n- 266 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ClientBuilder/DummyLogger.php\n- 267 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ConnectionPool/SniffingConnectionPoolIntegrationTest.php\n- 268 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ConnectionPool/SniffingConnectionPoolTest.php\n- 269 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ConnectionPool/StaticConnectionPoolIntegrationTest.php\n- 270 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ConnectionPool/StaticConnectionPoolTest.php\n- 271 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ConnectionPool/Selectors/RoundRobinSelectorTest.php\n- 272 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/ConnectionPool/Selectors/StickyRoundRobinSelectorTest.php\n- 273 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/Endpoints/AbstractEndpointTest.php\n- 274 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/Helper/Iterators/SearchResponseIteratorTest.php\n- 275 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/Serializers/ArrayToJSONSerializerTest.php\n- 276 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/tests/Elasticsearch/Tests/Serializers/EverythingToJSONSerializerTest.php\n- 277 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/EnsureClusterAlive.php\n- 278 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/RestSpecRunner.php\n- 279 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/SpecParser.php\n- 280 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/docsConfig.php\n- 281 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/util/docstheme/manifest.yml\n- 282 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/.travis.yml\n- 283 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Core.php\n- 284 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/ClientUtils.php\n- 285 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/CurlFactory.php\n- 286 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/CurlHandler.php\n- 287 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/CurlMultiHandler.php\n- 288 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/Middleware.php\n- 289 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/MockHandler.php\n- 290 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Client/StreamHandler.php\n- 291 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Exception/CancelledException.php\n- 292 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Exception/CancelledFutureAccessException.php\n- 293 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Exception/ConnectException.php\n- 294 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Exception/RingException.php\n- 295 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/BaseFutureTrait.php\n- 296 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/CompletedFutureArray.php\n- 297 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/CompletedFutureValue.php\n- 298 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/FutureArray.php\n- 299 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/FutureArrayInterface.php\n- 300 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/FutureInterface.php\n- 301 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/FutureValue.php\n- 302 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Future/MagicFutureTrait.php\n- 303 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/CoreTest.php\n- 304 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/bootstrap.php\n- 305 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/CurlFactoryTest.php\n- 306 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/CurlHandlerTest.php\n- 307 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/CurlMultiHandlerTest.php\n- 308 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/MiddlewareTest.php\n- 309 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/MockHandlerTest.php\n- 310 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/Server.php\n- 311 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Client/StreamHandlerTest.php\n- 312 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Future/CompletedFutureArrayTest.php\n- 313 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Future/CompletedFutureValueTest.php\n- 314 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Future/FutureArrayTest.php\n- 315 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/tests/Future/FutureValueTest.php\n- 316 # extensions/elasticSearch/vendor/guzzlehttp/streams/.travis.yml\n- 317 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/AppendStream.php\n- 318 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/AsyncReadStream.php\n- 319 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/BufferStream.php\n- 320 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/CachingStream.php\n- 321 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/DroppingStream.php\n- 322 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/FnStream.php\n- 323 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/GuzzleStreamWrapper.php\n- 324 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/InflateStream.php\n- 325 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/LazyOpenStream.php\n- 326 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/LimitStream.php\n- 327 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/MetadataStreamInterface.php\n- 328 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/NoSeekStream.php\n- 329 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/NullStream.php\n- 330 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/PumpStream.php\n- 331 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/Stream.php\n- 332 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/StreamDecoratorTrait.php\n- 333 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/StreamInterface.php\n- 334 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/Utils.php\n- 335 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/Exception/CannotAttachException.php\n- 336 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/Exception/SeekException.php\n- 337 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/AppendStreamTest.php\n- 338 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/AsyncReadStreamTest.php\n- 339 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/BufferStreamTest.php\n- 340 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/CachingStreamTest.php\n- 341 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/DroppingStreamTest.php\n- 342 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/FnStreamTest.php\n- 343 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/GuzzleStreamWrapperTest.php\n- 344 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/InflateStreamTest.php\n- 345 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/LazyOpenStreamTest.php\n- 346 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/LimitStreamTest.php\n- 347 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/NoSeekStreamTest.php\n- 348 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/NullStreamTest.php\n- 349 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/PumpStreamTest.php\n- 350 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/StreamDecoratorTraitTest.php\n- 351 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/StreamTest.php\n- 352 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/UtilsTest.php\n- 353 # extensions/elasticSearch/vendor/guzzlehttp/streams/tests/Exception/SeekExceptionTest.php\n- 354 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/ErrorHandler.php\n- 355 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Logger.php\n- 356 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Registry.php\n- 357 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/ChromePHPFormatter.php\n- 358 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/ElasticaFormatter.php\n- 359 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/FlowdockFormatter.php\n- 360 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/FluentdFormatter.php\n- 361 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/FormatterInterface.php\n- 362 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/GelfMessageFormatter.php\n- 363 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/HtmlFormatter.php\n- 364 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/JsonFormatter.php\n- 365 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/LineFormatter.php\n- 366 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/LogglyFormatter.php\n- 367 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/LogstashFormatter.php\n- 368 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/MongoDBFormatter.php\n- 369 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/NormalizerFormatter.php\n- 370 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/ScalarFormatter.php\n- 371 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Formatter/WildfireFormatter.php\n- 372 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/AbstractHandler.php\n- 373 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/AbstractProcessingHandler.php\n- 374 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/AbstractSyslogHandler.php\n- 375 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/AmqpHandler.php\n- 376 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/BrowserConsoleHandler.php\n- 377 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/BufferHandler.php\n- 378 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/ChromePHPHandler.php\n- 379 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/CouchDBHandler.php\n- 380 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/CubeHandler.php\n- 381 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/DeduplicationHandler.php\n- 382 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/DoctrineCouchDBHandler.php\n- 383 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/DynamoDbHandler.php\n- 384 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/ElasticSearchHandler.php\n- 385 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/ErrorLogHandler.php\n- 386 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FilterHandler.php\n- 387 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossedHandler.php\n- 388 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FirePHPHandler.php\n- 389 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FleepHookHandler.php\n- 390 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FlowdockHandler.php\n- 391 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/GelfHandler.php\n- 392 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/GroupHandler.php\n- 393 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/HandlerInterface.php\n- 394 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/HandlerWrapper.php\n- 395 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/HipChatHandler.php\n- 396 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/IFTTTHandler.php\n- 397 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/LogEntriesHandler.php\n- 398 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/LogglyHandler.php\n- 399 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/MailHandler.php\n- 400 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/MandrillHandler.php\n- 401 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/MissingExtensionException.php\n- 402 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/MongoDBHandler.php\n- 403 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/NativeMailerHandler.php\n- 404 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/NewRelicHandler.php\n- 405 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/NullHandler.php\n- 406 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/PHPConsoleHandler.php\n- 407 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/PsrHandler.php\n- 408 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/PushoverHandler.php\n- 409 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/RavenHandler.php\n- 410 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/RedisHandler.php\n- 411 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/RollbarHandler.php\n- 412 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php\n- 413 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SamplingHandler.php\n- 414 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SlackHandler.php\n- 415 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SlackWebhookHandler.php\n- 416 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SlackbotHandler.php\n- 417 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SocketHandler.php\n- 418 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/StreamHandler.php\n- 419 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SwiftMailerHandler.php\n- 420 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SyslogHandler.php\n- 421 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdpHandler.php\n- 422 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/TestHandler.php\n- 423 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/WhatFailureGroupHandler.php\n- 424 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/ZendMonitorHandler.php\n- 425 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/Curl/Util.php\n- 426 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ActivationStrategyInterface.php\n- 427 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ChannelLevelActivationStrategy.php\n- 428 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/FingersCrossed/ErrorLevelActivationStrategy.php\n- 429 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/Slack/SlackRecord.php\n- 430 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Handler/SyslogUdp/UdpSocket.php\n- 431 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/GitProcessor.php\n- 432 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/IntrospectionProcessor.php\n- 433 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/MemoryPeakUsageProcessor.php\n- 434 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/MemoryProcessor.php\n- 435 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/MemoryUsageProcessor.php\n- 436 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/MercurialProcessor.php\n- 437 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/ProcessIdProcessor.php\n- 438 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/PsrLogMessageProcessor.php\n- 439 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/TagProcessor.php\n- 440 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/UidProcessor.php\n- 441 # extensions/elasticSearch/vendor/monolog/monolog/src/Monolog/Processor/WebProcessor.php\n- 442 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/ErrorHandlerTest.php\n- 443 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/LoggerTest.php\n- 444 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/PsrLogCompatTest.php\n- 445 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/RegistryTest.php\n- 446 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/TestCase.php\n- 447 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/ChromePHPFormatterTest.php\n- 448 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/ElasticaFormatterTest.php\n- 449 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/FlowdockFormatterTest.php\n- 450 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/FluentdFormatterTest.php\n- 451 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/GelfMessageFormatterTest.php\n- 452 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/JsonFormatterTest.php\n- 453 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/LineFormatterTest.php\n- 454 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/LogglyFormatterTest.php\n- 455 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/LogstashFormatterTest.php\n- 456 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/MongoDBFormatterTest.php\n- 457 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/NormalizerFormatterTest.php\n- 458 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/ScalarFormatterTest.php\n- 459 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Formatter/WildfireFormatterTest.php\n- 460 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/AbstractHandlerTest.php\n- 461 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/AbstractProcessingHandlerTest.php\n- 462 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/AmqpHandlerTest.php\n- 463 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/BrowserConsoleHandlerTest.php\n- 464 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/BufferHandlerTest.php\n- 465 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/ChromePHPHandlerTest.php\n- 466 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/CouchDBHandlerTest.php\n- 467 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/DeduplicationHandlerTest.php\n- 468 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/DoctrineCouchDBHandlerTest.php\n- 469 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/DynamoDbHandlerTest.php\n- 470 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/ElasticSearchHandlerTest.php\n- 471 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/ErrorLogHandlerTest.php\n- 472 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/FilterHandlerTest.php\n- 473 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/FingersCrossedHandlerTest.php\n- 474 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/FirePHPHandlerTest.php\n- 475 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/FleepHookHandlerTest.php\n- 476 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/FlowdockHandlerTest.php\n- 477 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerLegacyTest.php\n- 478 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/GelfHandlerTest.php\n- 479 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/GelfMockMessagePublisher.php\n- 480 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/GroupHandlerTest.php\n- 481 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/HandlerWrapperTest.php\n- 482 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/HipChatHandlerTest.php\n- 483 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/LogEntriesHandlerTest.php\n- 484 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/MailHandlerTest.php\n- 485 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/MockRavenClient.php\n- 486 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/MongoDBHandlerTest.php\n- 487 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/NativeMailerHandlerTest.php\n- 488 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/NewRelicHandlerTest.php\n- 489 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/NullHandlerTest.php\n- 490 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/PHPConsoleHandlerTest.php\n- 491 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/PsrHandlerTest.php\n- 492 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/PushoverHandlerTest.php\n- 493 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/RavenHandlerTest.php\n- 494 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/RedisHandlerTest.php\n- 495 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/RollbarHandlerTest.php\n- 496 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/RotatingFileHandlerTest.php\n- 497 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SamplingHandlerTest.php\n- 498 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SlackHandlerTest.php\n- 499 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SlackWebhookHandlerTest.php\n- 500 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SlackbotHandlerTest.php\n- 501 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SocketHandlerTest.php\n- 502 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/StreamHandlerTest.php\n- 503 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SwiftMailerHandlerTest.php\n- 504 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SyslogHandlerTest.php\n- 505 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/SyslogUdpHandlerTest.php\n- 506 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/TestHandlerTest.php\n- 507 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/UdpSocketTest.php\n- 508 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/WhatFailureGroupHandlerTest.php\n- 509 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/ZendMonitorHandlerTest.php\n- 510 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Handler/Slack/SlackRecordTest.php\n- 511 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/GitProcessorTest.php\n- 512 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/IntrospectionProcessorTest.php\n- 513 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/MemoryPeakUsageProcessorTest.php\n- 514 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/MemoryUsageProcessorTest.php\n- 515 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/MercurialProcessorTest.php\n- 516 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/ProcessIdProcessorTest.php\n- 517 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/PsrLogMessageProcessorTest.php\n- 518 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/TagProcessorTest.php\n- 519 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/UidProcessorTest.php\n- 520 # extensions/elasticSearch/vendor/monolog/monolog/tests/Monolog/Processor/WebProcessorTest.php\n- 521 # extensions/elasticSearch/vendor/psr/log/Psr/Log/AbstractLogger.php\n- 522 # extensions/elasticSearch/vendor/psr/log/Psr/Log/InvalidArgumentException.php\n- 523 # extensions/elasticSearch/vendor/psr/log/Psr/Log/LogLevel.php\n- 524 # extensions/elasticSearch/vendor/psr/log/Psr/Log/LoggerAwareInterface.php\n- 525 # extensions/elasticSearch/vendor/psr/log/Psr/Log/LoggerAwareTrait.php\n- 526 # extensions/elasticSearch/vendor/psr/log/Psr/Log/LoggerInterface.php\n- 527 # extensions/elasticSearch/vendor/psr/log/Psr/Log/LoggerTrait.php\n- 528 # extensions/elasticSearch/vendor/psr/log/Psr/Log/NullLogger.php\n- 529 # extensions/elasticSearch/vendor/psr/log/Psr/Log/Test/LoggerInterfaceTest.php\n- 530 # extensions/elasticSearch/vendor/react/promise/.travis.yml\n- 531 # extensions/elasticSearch/vendor/react/promise/src/CancellablePromiseInterface.php\n- 532 # extensions/elasticSearch/vendor/react/promise/src/CancellationQueue.php\n- 533 # extensions/elasticSearch/vendor/react/promise/src/Deferred.php\n- 534 # extensions/elasticSearch/vendor/react/promise/src/ExtendedPromiseInterface.php\n- 535 # extensions/elasticSearch/vendor/react/promise/src/FulfilledPromise.php\n- 536 # extensions/elasticSearch/vendor/react/promise/src/LazyPromise.php\n- 537 # extensions/elasticSearch/vendor/react/promise/src/Promise.php\n- 538 # extensions/elasticSearch/vendor/react/promise/src/PromiseInterface.php\n- 539 # extensions/elasticSearch/vendor/react/promise/src/PromisorInterface.php\n- 540 # extensions/elasticSearch/vendor/react/promise/src/RejectedPromise.php\n- 541 # extensions/elasticSearch/vendor/react/promise/src/UnhandledRejectionException.php\n- 542 # extensions/elasticSearch/vendor/react/promise/src/functions.php\n- 543 # extensions/elasticSearch/vendor/react/promise/src/functions_include.php\n- 544 # extensions/elasticSearch/vendor/react/promise/src/Exception/LengthException.php\n- 545 # extensions/elasticSearch/vendor/react/promise/tests/CancellationQueueTest.php\n- 546 # extensions/elasticSearch/vendor/react/promise/tests/DeferredTest.php\n- 547 # extensions/elasticSearch/vendor/react/promise/tests/FulfilledPromiseTest.php\n- 548 # extensions/elasticSearch/vendor/react/promise/tests/FunctionAllTest.php\n- 549 # extensions/elasticSearch/vendor/react/promise/tests/FunctionAnyTest.php\n- 550 # extensions/elasticSearch/vendor/react/promise/tests/FunctionCheckTypehintTest.php\n- 551 # extensions/elasticSearch/vendor/react/promise/tests/FunctionMapTest.php\n- 552 # extensions/elasticSearch/vendor/react/promise/tests/FunctionRaceTest.php\n- 553 # extensions/elasticSearch/vendor/react/promise/tests/FunctionReduceTest.php\n- 554 # extensions/elasticSearch/vendor/react/promise/tests/FunctionRejectTest.php\n- 555 # extensions/elasticSearch/vendor/react/promise/tests/FunctionResolveTest.php\n- 556 # extensions/elasticSearch/vendor/react/promise/tests/FunctionSomeTest.php\n- 557 # extensions/elasticSearch/vendor/react/promise/tests/LazyPromiseTest.php\n- 558 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest.php\n- 559 # extensions/elasticSearch/vendor/react/promise/tests/RejectedPromiseTest.php\n- 560 # extensions/elasticSearch/vendor/react/promise/tests/TestCase.php\n- 561 # extensions/elasticSearch/vendor/react/promise/tests/bootstrap.php\n- 562 # extensions/elasticSearch/vendor/react/promise/tests/PromiseAdapter/CallbackPromiseAdapter.php\n- 563 # extensions/elasticSearch/vendor/react/promise/tests/PromiseAdapter/PromiseAdapterInterface.php\n- 564 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/CancelTestTrait.php\n- 565 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/FullTestTrait.php\n- 566 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/NotifyTestTrait.php\n- 567 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/PromiseFulfilledTestTrait.php\n- 568 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/PromisePendingTestTrait.php\n- 569 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/PromiseRejectedTestTrait.php\n- 570 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/PromiseSettledTestTrait.php\n- 571 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/RejectTestTrait.php\n- 572 # extensions/elasticSearch/vendor/react/promise/tests/PromiseTest/ResolveTestTrait.php\n- 573 # extensions/elasticSearch/vendor/react/promise/tests/Stub/CallableStub.php\n- 574 # extensions/elasticSearch/vendor/react/promise/tests/fixtures/SimpleFulfilledTestPromise.php\n- 575 # extensions/elasticSearch/vendor/react/promise/tests/fixtures/SimpleFulfilledTestThenable.php\n- 576 # extensions/elasticSearch/vendor/react/promise/tests/fixtures/SimpleRejectedTestPromise.php\n- 577 # extensions/elasticSearch/vendor/react/promise/tests/fixtures/SimpleTestCancellable.php\n- 578 # extensions/elasticSearch/vendor/react/promise/tests/fixtures/SimpleTestCancellableThenable.php\n- 579 # mail/layouts/html.php\n- 580 # models/AktifitasUsaha.php\n- 581 # models/AlasanPembubaran.php\n- 582 # models/BHPembagian.php\n- 583 # models/BHPenggabungan.php\n- 584 # models/BentukKoperasi.php\n- 585 # models/ChecklistPerubahan.php\n- 586 # models/ChecklistPerubahanForm.php\n- 587 # models/Command.php\n- 588 # models/ContactForm.php\n- 589 # models/Counter.php\n- 590 # models/DataAnggota.php\n- 591 # models/Disclaimer.php\n- 592 # models/EnableColumn.php\n- 593 # models/GroupSetting.php\n- 594 # models/JenisIdentitas.php\n- 595 # models/JenisKelamin.php\n- 596 # models/JenisKoperasi.php\n- 597 # models/JenisTransaksi.php\n- 598 # models/Kombinasi.php\n- 599 # models/KoperasiBlokir.php\n- 600 # models/KoperasiSekunder.php\n- 601 # models/Log.php\n- 602 # models/LogDukcapil.php\n- 603 # models/LogService.php\n- 604 # models/LoginForm.php\n- 605 # models/MKbli.php\n- 606 # models/MMatch.php\n- 607 # models/MappingKBLI.php\n- 608 # models/MasterBan.php\n- 609 # models/MasterBanKalimat.php\n- 610 # models/MasterPerubahan.php\n- 611 # models/MasterProduk.php\n- 612 # models/ModalUsaha.php\n- 613 # models/NotarisNpak.php\n- 614 # models/Pelabuhan.php\n- 615 # models/PemilikManfaat.php\n- 616 # models/PolaPengelolaan.php\n- 617 # models/SK.php\n- 618 # models/Setting.php\n- 619 # models/StatementDisclaimer.php\n- 620 # models/StatusPengurus.php\n- 621 # models/TPendirianDokumen.php\n- 622 # models/TPerubahanDokumen.php\n- 623 # models/TingkatWilayah.php\n- 624 # models/TransaksiPembubaran.php\n- 625 # models/User.php\n- 626 # models/UserDinas.php\n- 627 # models/Wilayah.php\n- 628 # models/WilayahNotariat.php\n- 629 # models/WilayahOds.php\n- 630 # models/BaseNik.php\n- 631 # models/ChecklistPerbaikan.php\n- 632 # models/ChecklistPerbaikanForm.php\n- 633 # models/MasterPerbaikan.php\n- 634 # models/MasterTransaction.php\n- 635 # models/PesanNama.php\n- 636 # models/TransaksiKoperasi.php\n- 637 # models/TransaksiPerbaikan.php\n- 638 # models/VerifikasiPerbaikan.php\n- 639 # models/WilayahSabh.php\n- 640 # models/bakum/KBLIBakum.php\n- 641 # models/bakum/LogCodex.php\n- 642 # models/bakum/WilayahSABH.php\n- 643 # models/forms/AdminEditForm.php\n- 644 # models/forms/BlokirKalimatForm.php\n- 645 # models/forms/BlokirNamaForm.php\n- 646 # models/forms/KuisionerForm.php\n- 647 # models/forms/MMatchForm.php\n- 648 # models/forms/ModalUsahaForm.php\n- 649 # models/forms/NikForm.php\n- 650 # models/forms/NpakForm.php\n- 651 # models/forms/PembubaranForm.php\n- 652 # models/forms/PendirianForm.php\n- 653 # models/forms/PerubahanForm.php\n- 654 # models/forms/SettingExpForm.php\n- 655 # models/forms/UserDinasDataForm.php\n- 656 # models/forms/UserDinasForm.php\n- 657 # models/forms/UserDinasFormEdit.php\n- 658 # models/forms/PerbaikanDataForm.php\n- 659 # models/forms/PesanNamaForm.php\n- 660 # models/notariat/MsSkAdditional.php\n- 661 # models/notariat/Negara.php\n- 662 # models/notariat/Notaris.php\n- 663 # models/notariat/TransaksiNotaris.php\n- 664 # models/search/BanSearch.php\n- 665 # models/search/BlokirKoperasiSearch.php\n- 666 # models/search/DaftarKoperasiSearch.php\n- 667 # models/search/KBLIBakumSearch.php\n- 668 # models/search/KalimatBanSearch.php\n- 669 # models/search/MMatchSearch.php\n- 670 # models/search/NPAKSearch.php\n- 671 # models/search/PembubaranSearch.php\n- 672 # models/search/PesanNamaSearch.php\n- 673 # models/search/SettingExpSearch.php\n- 674 # models/search/UserDinasSearch.php\n- 675 # models/search/DaftarPerbaikanSearch.php\n- 676 # modules/Api/Api.php\n- 677 # modules/Api/components/AuthHelper.php\n- 678 # modules/Api/components/DataAnggotaHelper.php\n- 679 # modules/Api/components/JWTHelper.php\n- 680 # modules/Api/components/SKHelper.php\n- 681 # modules/Api/components/TimeHelper.php\n- 682 # modules/Api/components/TransaksiHelper.php\n- 683 # modules/Api/controllers/AuthController.php\n- 684 # modules/Api/controllers/DukcapilController.php\n- 685 # modules/Api/controllers/TransaksiController.php\n- 686 # modules/Api/controllers/WilayahController.php\n- 687 # modules/Api/models/JWTToken.php\n- 688 # services/ElkLoggingService.php\n- 689 # services/ElsKoperasiService.php\n- 690 # vagrant/config/vagrant-local.example.yml\n- 691 # views/admin/ListModalUsaha.php\n- 692 # views/admin/TambahBlokirKalimat.php\n- 693 # views/admin/TambahBlokirNama.php\n- 694 # views/admin/TambahModalUsaha.php\n- 695 # views/admin/list-blokir.php\n- 696 # views/admin/list-kalimat-blokir.php\n- 697 # views/admin/nik-form.php\n- 698 # views/admin/npak-form.php\n- 699 # views/admin/npak-list.php\n- 700 # views/admin/npak-search-sk-notaris.php\n- 701 # views/admin/profilLengkap.php\n- 702 # views/admin/transaksiKoperasi.php\n- 703 # views/admin/daftarKoperasi.php\n- 704 # views/admin/list-pesan-nama.php\n- 705 # views/admin/profil/pendirian.php\n- 706 # views/admin/profil/perubahan.php\n- 707 # views/admin/settingExpired/_form.php\n- 708 # views/admin/settingExpired/add_edit.php\n- 709 # views/admin/settingExpired/index.php\n- 710 # views/admin/transaksi/edit_pendirian.php\n- 711 # views/admin/transaksi/edit_perubahan.php\n- 712 # views/admin/transaksi/detail.php\n- 713 # views/admin/userDinas/add.php\n- 714 # views/admin/userDinas/edit.php\n- 715 # views/admin/userDinas/index.php\n- 716 # views/admin/whitelist/_form.php\n- 717 # views/admin/whitelist/add_edit.php\n- 718 # views/admin/whitelist/index.php\n- 719 # views/blokir/_formBlokir.php\n- 720 # views/blokir/daftarkop.php\n- 721 # views/blokir/listblokir.php\n- 722 # views/blokir/riwayatblokir.php\n- 723 # views/dinas/DaftarKoperasi.php\n- 724 # views/dinas/detail.php\n- 725 # views/dinas/transaksiKoperasi.php\n- 726 # views/layouts/login.php\n- 727 # views/layouts/main-old.php\n- 728 # views/layouts/main.php\n- 729 # views/layouts/new-form.php\n- 730 # views/log/index.php\n- 731 # views/pembubaran/_err.php\n- 732 # views/pembubaran/daftarPembubaran.php\n- 733 # views/pembubaran/detail.php\n- 734 # views/pembubaran/index.php\n- 735 # views/pembubaran/pembubaranForm.php\n- 736 # views/pembubaran/surat_bubar.php\n- 737 # views/pendirian/_err.php\n- 738 # views/pendirian/_form.php\n- 739 # views/pendirian/_modal_bakum_kop.php\n- 740 # views/pendirian/_modal_kbli.php\n- 741 # views/pendirian/_modal_pemilik_manfaat.php\n- 742 # views/pendirian/_modal_pengawas_pengurus.php\n- 743 # views/pendirian/index.php\n- 744 # views/pendirian/sk_pendirian.php\n- 745 # views/pendirian/sk_pendirian_merah_putih.php\n- 746 # views/pendirian/uploadDocument.php\n- 747 # views/pendirian/_step2.php\n- 748 # views/pendirian/form-pendirian.php\n- 749 # views/pendirian/kuisioner.php\n- 750 # views/pendirian/listTransaction.php\n- 751 # views/pendirian/preview.php\n- 752 # views/perubahan/UploadDocument.php\n- 753 # views/perubahan/_modal_bakum_kop.php\n- 754 # views/perubahan/_modal_bakum_kop_pembagian.php\n- 755 # views/perubahan/anggaranDasar.php\n- 756 # views/perubahan/form-perubahan.php\n- 757 # views/perubahan/kuisioner.php\n- 758 # views/perubahan/preview.php\n- 759 # views/perubahan/sk_perubahan.php\n- 760 # views/perubahan/sk_perubahan_merah_putih.php\n- 761 # views/perubahan/sp_pelaporan.php\n- 762 # views/perubahan/checklistPerubahan.php\n- 763 # views/perubahan/listTransaction.php\n- 764 # views/pesan-nama/_bukti_pdf.php\n- 765 # views/pesan-nama/_err.php\n- 766 # views/pesan-nama/_step2.php\n- 767 # views/pesan-nama/index.php\n- 768 # views/pesan-nama/sukses.php\n- 769 # views/pesan-nama/_form.php\n- 770 # views/pesan-nama/listPesan.php\n- 771 # views/qr-code/sk.php\n- 772 # views/qr-code/sp.php\n- 773 # views/site/about.php\n- 774 # views/site/contact.php\n- 775 # views/site/error.php\n- 776 # views/site/index.php\n- 777 # views/site/login.php\n- 778 # views/users/change-password.php\n- 779 # views/bakum-verifikator/_perbaikan_bo_pengurus.php\n- 780 # views/bakum-verifikator/_perbaikan_data_perbaikan.php\n- 781 # views/bakum-verifikator/_perbaikan_form_koperasi.php\n- 782 # views/bakum-verifikator/_perbaikan_modal_scripts.php\n- 783 # views/bakum-verifikator/_perbaikan_styles.php\n- 784 # views/bakum-verifikator/_verifikasi_bo_pengurus.php\n- 785 # views/bakum-verifikator/_verifikasi_data_koperasi_kegiatan.php\n- 786 # views/bakum-verifikator/_verifikasi_data_perbaikan.php\n- 787 # views/bakum-verifikator/_verifikasi_panel.php\n- 788 # views/bakum-verifikator/_verifikasi_scripts.php\n- 789 # views/bakum-verifikator/_verifikasi_styles.php\n- 790 # views/bakum-verifikator/daftarPerbaikanData.php\n- 791 # views/bakum-verifikator/perbaikanVerifikasi.php\n- 792 # views/bakum-verifikator/verifikasiPerbaikan.php\n- 793 # views/perbaikan-data/_formChecklistPerbaikan.php\n- 794 # views/perbaikan-data/_formKegiatanUsaha.php\n- 795 # views/perbaikan-data/_formPemilikManfaat.php\n- 796 # views/perbaikan-data/_formPengawasPengurus.php\n- 797 # views/perbaikan-data/_formSuratPermohonan.php\n- 798 # views/perbaikan-data/_headerInformasiKoperasi.php\n- 799 # views/perbaikan-data/_headerReminder.php\n- 800 # views/perbaikan-data/_modal_kbli.php\n- 801 # views/perbaikan-data/anggaranDasar.php\n- 802 # views/perbaikan-data/daftarPermohonan.php\n- 803 # views/perbaikan-data/detailPermohonan.php\n- 804 # views/perbaikan-data/formStepDataPemohon.php\n- 805 # views/perbaikan-data/formStepPermohonan.php\n- 806 # views/perbaikan-data/index.php\n- 807 # web/index-test.php\n- 808 # web/index.php\n- 809 # web/frontend/dist/images/favicon/manifest.json\n- 810 # web/frontend/dist/images/favicon/yandex-browser-manifest.json\n- 811 # web/frontend/src/package.json\n- 812 # web/frontend/src/boilerplate/init/framework/01-reactJSX.json\n- 813 # web/frontend/src/boilerplate/init/framework/02-backboneMarionette.json\n- 814 # web/frontend/src/boilerplate/init/framework/03-backbone.json\n- 815 # web/frontend/src/boilerplate/init/framework/04-angular2.json\n- 816 # web/frontend/src/boilerplate/init/framework/05-aurelia.json\n- 817 # web/frontend/src/boilerplate/init/framework/06-react-redux.json\n- 818 # web/frontend/src/boilerplate/init/framework/nothing.json\n- 819 # web/frontend/src/boilerplate/init/language/01-babel.json\n- 820 # web/frontend/src/boilerplate/init/language/02-coffeescript.json\n- 821 # web/frontend/src/boilerplate/init/language/nothing.json\n- 822 # web/frontend/src/boilerplate/init/preprocessor/01-sass.json\n- 823 # web/frontend/src/boilerplate/init/preprocessor/02-stylus.json\n- 824 # web/frontend/src/boilerplate/init/preprocessor/03-less.json\n- 825 # web/frontend/src/boilerplate/init/preprocessor/nothing.json\n- 826 # web/frontend/src/src/config.json\n- 827 # web/koperasi-dashboard/dist/images/favicon/manifest.json\n- 828 # web/koperasi-dashboard/dist/images/favicon/yandex-browser-manifest.json\n- 829 # web/koperasi-dashboard/src/package.json\n- 830 # web/koperasi-dashboard/src/boilerplate/init/framework/01-reactJSX.json\n- 831 # web/koperasi-dashboard/src/boilerplate/init/framework/02-backboneMarionette.json\n- 832 # web/koperasi-dashboard/src/boilerplate/init/framework/03-backbone.json\n- 833 # web/koperasi-dashboard/src/boilerplate/init/framework/04-angular2.json\n- 834 # web/koperasi-dashboard/src/boilerplate/init/framework/05-aurelia.json\n- 835 # web/koperasi-dashboard/src/boilerplate/init/framework/06-react-redux.json\n- 836 # web/koperasi-dashboard/src/boilerplate/init/framework/nothing.json\n- 837 # web/koperasi-dashboard/src/boilerplate/init/language/01-babel.json\n- 838 # web/koperasi-dashboard/src/boilerplate/init/language/02-coffeescript.json\n- 839 # web/koperasi-dashboard/src/boilerplate/init/language/nothing.json\n- 840 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/01-sass.json\n- 841 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/02-stylus.json\n- 842 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/03-less.json\n- 843 # web/koperasi-dashboard/src/boilerplate/init/preprocessor/nothing.json\n- 844 # web/koperasi-dashboard/src/src/config.json\n- 845 # widgets/Alert.php\n\nFormat the output as a YAML list of dictionaries:\n\n```yaml\n- name: |\n    Query Processing\n  description: |\n    Explains what the abstraction does.\n    It's like a central dispatcher routing requests.\n  file_indices:\n    - 0 # path/to/file1.py\n    - 3 # path/to/related.py\n- name: |\n    Query Optimization\n  description: |\n    Another core concept, similar to a blueprint for objects.\n  file_indices:\n    - 5 # path/to/another.js\n# ... up to 10 abstractions\n```": "- name: |\n    API Gateway & Endpoints\n  description: |\n    This is the app\u2019s front desk for machines. The Api module and its controllers receive requests, check formats and headers, validate auth, log what happened, then hand work off to helpers. Think of it like a receptionist who ensures visitors sign in (auth), speak the right language (JSON/XML), and reach the right department (transaction, Dukcapil, wilayah). It also wraps responses consistently and records execution time for observability. New features typically enter here as a new action or controller that plugs into the same logging and response pipelines.\n  file_indices:\n    - 676 # modules/Api/Api.php\n    - 683 # modules/Api/controllers/AuthController.php\n    - 685 # modules/Api/controllers/TransaksiController.php\n    - 684 # modules/Api/controllers/DukcapilController.php\n    - 686 # modules/Api/controllers/WilayahController.php\n    - 681 # modules/Api/components/TimeHelper.php\n    - 22 # components/ApiHelper.php\n    - 13 # components/LogHelper.php\n    - 808 # web/index.php\n- name: |\n    JWT Authentication & Authorization\n  description: |\n    The app uses JSON Web Tokens as visitor badges. Clients call an auth endpoint with username/password; if approved, they receive a time\u2011boxed token signed with a secret. Every protected API expects this token in headers and rejects expired or tampered ones. Helpers build headers/payloads, sign, validate, and extract claims. Settings hold secrets; User handles credential checks; controllers wire it together. Picture it as issuing and checking temporary access cards to different corridors, with expiration and signature checks at each door.\n  file_indices:\n    - 683 # modules/Api/controllers/AuthController.php\n    - 679 # modules/Api/components/JWTHelper.php\n    - 687 # modules/Api/models/JWTToken.php\n    - 618 # models/Setting.php\n    - 625 # models/User.php\n- name: |\n    Koperasi Transaction Lifecycle Engine\n  description: |\n    This is the business heart: receiving, creating, updating, and finalizing Koperasi transactions (pendirian/perubahan, etc). Controllers accept incoming payloads (often XML from ODS), then TransaksiHelper maps and persists them. SKHelper closes the loop by generating SK/SP numbers, toggling \u201cpesan nama,\u201d and updating related master records. Think of it as a factory line: intake (parse), assemble (validate/map), and finish (issue SK, update references), with each station encapsulated in a helper and data models representing the assembly parts.\n  file_indices:\n    - 682 # modules/Api/components/TransaksiHelper.php\n    - 685 # modules/Api/controllers/TransaksiController.php\n    - 680 # modules/Api/components/SKHelper.php\n    - 636 # models/TransaksiKoperasi.php\n    - 634 # models/MasterTransaction.php\n    - 617 # models/SK.php\n    - 635 # models/PesanNama.php\n    - 585 # models/ChecklistPerubahan.php\n    - 583 # models/BHPenggabungan.php\n- name: |\n    Dukcapil Identity Verification Client\n  description: |\n    External identity checks run through a dedicated client. HelperDukcapil loads credentials from settings, maps inputs, calls the Dukcapil API, normalizes responses, applies friendly error messages, and logs every call (including latency and HTTP codes). It can be toggled on/off via settings and can send \u201cdata balikan\u201d back to the service for beneficiaries (Pemilik Manfaat). Think of it as an embassy counter: submit IDs and names, get validated stamps, and record each interaction for traceability and audits.\n  file_indices:\n    - 10 # components/HelperDukcapil.php\n    - 684 # modules/Api/controllers/DukcapilController.php\n    - 602 # models/LogDukcapil.php\n    - 615 # models/PemilikManfaat.php\n    - 688 # services/ElkLoggingService.php\n- name: |\n    Centralized Logging & Audit Trail\n  description: |\n    The system meticulously logs inbound/outbound calls, errors, timings, and user actions. A LogHelper funnels events; Log and LogDukcapil models persist records; an ELK service streams structured logs to Elasticsearch for search and dashboards. Views provide operators with filters, status coloring, and expandable details. Imagine a black box and radar combined: every request/response is captured, marked with status and execution time, and can be reviewed later for debugging, reporting, or compliance.\n  file_indices:\n    - 13 # components/LogHelper.php\n    - 601 # models/Log.php\n    - 603 # models/LogService.php\n    - 602 # models/LogDukcapil.php\n    - 688 # services/ElkLoggingService.php\n    - 730 # views/log/index.php\n    - 681 # modules/Api/components/TimeHelper.php\n- name: |\n    SK and Numbering System\n  description: |\n    Official documents (SK, SP) need unique, patterned numbers. This layer encapsulates how numbers are generated and assigned at the right moment in a transaction. SKHelper decides which counter to use, persists SK/SP pairs, and updates related entities. Numbering is centralized in helper/Numbering to ensure consistent sequences. Picture a ticket dispenser with rules: pick the correct series, increment safely, and stamp it back onto the transaction and its artifacts (PDFs/SK views).\n  file_indices:\n    - 680 # modules/Api/components/SKHelper.php\n    - 27 # components/helper/Numbering.php\n    - 617 # models/SK.php\n    - 744 # views/pendirian/sk_pendirian.php\n    - 759 # views/perubahan/sk_perubahan.php\n    - 761 # views/perubahan/sp_pelaporan.php\n- name: |\n    Wilayah & NIK Base Management\n  description: |\n    Regional data (provinsi/kabupaten/kecamatan/kelurahan) powers dependent dropdowns and NIK derivations. WilayahController exposes an AJAX endpoint to get children by type; Wilayah models encapsulate queries. BaseNik manages a table that tracks a prefix and an atomic counter to generate sequential NIKs safely inside transactions. Think of it as a structured address book plus a serial-number engraver that uses those addresses to mint consistent, unique identifiers.\n  file_indices:\n    - 686 # modules/Api/controllers/WilayahController.php\n    - 627 # models/Wilayah.php\n    - 630 # models/BaseNik.php\n    - 629 # models/WilayahOds.php\n    - 623 # models/TingkatWilayah.php\n- name: |\n    Web MVC Shell & Session Guard\n  description: |\n    The Yii2 MVC layer renders the admin and user interfaces. AppAsset registers CSS/JS; layouts define the shell (header/sidebar/user menu); widgets (Alert) unify feedback; BaseController enforces session invariants and guards (e.g., notaris data presence). Think of it as the building\u2019s lobby and corridors: styles and scripts are the interior design, layouts are the floor plan, controllers are entrances, and the guard ensures only valid sessions roam the halls.\n  file_indices:\n    - 8 # components/BaseController.php\n    - 4 # assets/AppAsset.php\n    - 728 # views/layouts/main.php\n    - 726 # views/layouts/login.php\n    - 845 # widgets/Alert.php\n    - 50 # controllers/SiteController.php\n- name: |\n    Elasticsearch Client Integration (Vendor Stack)\n  description: |\n    For scalable, queryable logs, the app ships an embedded Elasticsearch PHP client stack (Guzzle + RingPHP + Streams). ElkLoggingService likely uses this to index structured events. While you\u2019ll rarely touch vendor code, knowing the layers helps debug: requests are built by Client/Endpoints, sent via Transport using Guzzle handlers, and responses flow through stream abstractions. Picture a courier network: endpoints prepare parcels, transport routes them, and streams are the conveyor belts moving bytes efficiently.\n  file_indices:\n    - 63 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Client.php\n    - 64 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ClientBuilder.php\n    - 65 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Transport.php\n    - 120 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Index.php\n    - 246 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/BooleanRequestWrapper.php\n    - 283 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Core.php\n    - 317 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/AppendStream.php\n    - 323 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/GuzzleStreamWrapper.php", "\nBased on the following abstractions and relevant code snippets from the project `koperasi`:\n\nList of Abstraction Indices and Names:\n0 # API Gateway & Endpoints\n\n1 # JWT Authentication & Authorization\n\n2 # Koperasi Transaction Lifecycle Engine\n\n3 # Dukcapil Identity Verification Client\n\n4 # Centralized Logging & Audit Trail\n\n5 # SK and Numbering System\n\n6 # Wilayah & NIK Base Management\n\n7 # Web MVC Shell & Session Guard\n\n8 # Elasticsearch Client Integration (Vendor Stack)\n\n\nContext (Abstractions, Descriptions, Code):\nIdentified Abstractions:\\n- Index 0: API Gateway & Endpoints\n (Relevant file indices: [13, 22, 676, 681, 683, 684, 685, 686, 808])\\n  Description: This is the app\u2019s front desk for machines. The Api module and its controllers receive requests, check formats and headers, validate auth, log what happened, then hand work off to helpers. Think of it like a receptionist who ensures visitors sign in (auth), speak the right language (JSON/XML), and reach the right department (transaction, Dukcapil, wilayah). It also wraps responses consistently and records execution time for observability. New features typically enter here as a new action or controller that plugs into the same logging and response pipelines.\n\\n- Index 1: JWT Authentication & Authorization\n (Relevant file indices: [618, 625, 679, 683, 687])\\n  Description: The app uses JSON Web Tokens as visitor badges. Clients call an auth endpoint with username/password; if approved, they receive a time\u2011boxed token signed with a secret. Every protected API expects this token in headers and rejects expired or tampered ones. Helpers build headers/payloads, sign, validate, and extract claims. Settings hold secrets; User handles credential checks; controllers wire it together. Picture it as issuing and checking temporary access cards to different corridors, with expiration and signature checks at each door.\n\\n- Index 2: Koperasi Transaction Lifecycle Engine\n (Relevant file indices: [583, 585, 617, 634, 635, 636, 680, 682, 685])\\n  Description: This is the business heart: receiving, creating, updating, and finalizing Koperasi transactions (pendirian/perubahan, etc). Controllers accept incoming payloads (often XML from ODS), then TransaksiHelper maps and persists them. SKHelper closes the loop by generating SK/SP numbers, toggling \u201cpesan nama,\u201d and updating related master records. Think of it as a factory line: intake (parse), assemble (validate/map), and finish (issue SK, update references), with each station encapsulated in a helper and data models representing the assembly parts.\n\\n- Index 3: Dukcapil Identity Verification Client\n (Relevant file indices: [10, 602, 615, 684, 688])\\n  Description: External identity checks run through a dedicated client. HelperDukcapil loads credentials from settings, maps inputs, calls the Dukcapil API, normalizes responses, applies friendly error messages, and logs every call (including latency and HTTP codes). It can be toggled on/off via settings and can send \u201cdata balikan\u201d back to the service for beneficiaries (Pemilik Manfaat). Think of it as an embassy counter: submit IDs and names, get validated stamps, and record each interaction for traceability and audits.\n\\n- Index 4: Centralized Logging & Audit Trail\n (Relevant file indices: [13, 601, 602, 603, 681, 688, 730])\\n  Description: The system meticulously logs inbound/outbound calls, errors, timings, and user actions. A LogHelper funnels events; Log and LogDukcapil models persist records; an ELK service streams structured logs to Elasticsearch for search and dashboards. Views provide operators with filters, status coloring, and expandable details. Imagine a black box and radar combined: every request/response is captured, marked with status and execution time, and can be reviewed later for debugging, reporting, or compliance.\n\\n- Index 5: SK and Numbering System\n (Relevant file indices: [27, 617, 680, 744, 759, 761])\\n  Description: Official documents (SK, SP) need unique, patterned numbers. This layer encapsulates how numbers are generated and assigned at the right moment in a transaction. SKHelper decides which counter to use, persists SK/SP pairs, and updates related entities. Numbering is centralized in helper/Numbering to ensure consistent sequences. Picture a ticket dispenser with rules: pick the correct series, increment safely, and stamp it back onto the transaction and its artifacts (PDFs/SK views).\n\\n- Index 6: Wilayah & NIK Base Management\n (Relevant file indices: [623, 627, 629, 630, 686])\\n  Description: Regional data (provinsi/kabupaten/kecamatan/kelurahan) powers dependent dropdowns and NIK derivations. WilayahController exposes an AJAX endpoint to get children by type; Wilayah models encapsulate queries. BaseNik manages a table that tracks a prefix and an atomic counter to generate sequential NIKs safely inside transactions. Think of it as a structured address book plus a serial-number engraver that uses those addresses to mint consistent, unique identifiers.\n\\n- Index 7: Web MVC Shell & Session Guard\n (Relevant file indices: [4, 8, 50, 726, 728, 845])\\n  Description: The Yii2 MVC layer renders the admin and user interfaces. AppAsset registers CSS/JS; layouts define the shell (header/sidebar/user menu); widgets (Alert) unify feedback; BaseController enforces session invariants and guards (e.g., notaris data presence). Think of it as the building\u2019s lobby and corridors: styles and scripts are the interior design, layouts are the floor plan, controllers are entrances, and the guard ensures only valid sessions roam the halls.\n\\n- Index 8: Elasticsearch Client Integration (Vendor Stack)\n (Relevant file indices: [63, 64, 65, 120, 246, 283, 317, 323])\\n  Description: For scalable, queryable logs, the app ships an embedded Elasticsearch PHP client stack (Guzzle + RingPHP + Streams). ElkLoggingService likely uses this to index structured events. While you\u2019ll rarely touch vendor code, knowing the layers helps debug: requests are built by Client/Endpoints, sent via Transport using Guzzle handlers, and responses flow through stream abstractions. Picture a courier network: endpoints prepare parcels, transport routes them, and streams are the conveyor belts moving bytes efficiently.\n\\n\\nRelevant File Snippets (Referenced by Index and Path):\\n--- File: 676 # modules/Api/Api.php ---\n<?php \nnamespace app\\modules\\Api;\n\nuse yii\\base\\Module;\n\nclass Api extends Module {\n\n    public function init() {\n        parent::init();\n    }\n}\n?>\n\n--- File: 681 # modules/Api/components/TimeHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\base\\Component;\n\nclass TimeHelper extends Component {\n\n    public static function getElapsedTime($start, $percision = 3) {\n        return (string) round(microtime(true) - $start, $percision) . \" sec\";\n    }\n}\n?>\n\n--- File: 684 # modules/Api/controllers/DukcapilController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse app\\components\\HelperDukcapil;\nuse Yii;\nuse yii\\rest\\Controller;\n\nclass DukcapilController extends Controller {\n\n    public function actionValidasiData() {\n        if(Yii::$app->user->isGuest){\n            return $this->redirect(['/']);\n        }\n        $status = HelperDukcapil::CheckIsActiveValidateDukcapil();\n        if($status){\n            $validate = new HelperDukcapil($_POST);\n            $error = $validate->curlValidDukcapil();\n            if ($error !== true) {\n                Yii::error(\"Dukcapil error: $error | Params: \" . json_encode($_POST), __METHOD__);\n            }\n            $response = $validate->response();\n        }else{\n            $response = HelperDukcapil::AllowValidation();\n        }\n\n        return $this->asJson($response);\n    }\n\n}\n\n--- File: 8 # components/BaseController.php ---\n<?php\n\nnamespace app\\components;\n\nuse Yii;\nuse docotel\\dcms\\components\\BaseController as DocoController;\nuse yii\\filters\\AccessControl;\nuse yii\\web\\Response;\nuse yii\\filters\\VerbFilter;\nuse app\\models\\LoginForm;\nuse app\\models\\ContactForm;\nuse app\\models\\notariat\\Notaris;\n\nclass BaseController extends DocoController {\n    // public $layout = '@app/views/layouts/main.php';\n    public $dummy_login =[\n        'id_notaris' => 75561,\n        'nama_notaris' => \"SABH S.H M.Kn\",\n        'wilayah_id' => 1,\n        'email' => \"sabh@koperasi.com\",\n        'telepon' => \"0912345678\",\n    ];\n\n    public function init(){\n    \tif(!Yii::$app->user->isGuest) {\n    \t\tif(empty(Yii::$app->session->get('data_notaris')) && Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris') {\n                Yii::$app->user->logout();\n                return Yii::$app->response->redirect('/site/login');\n    \t\t}\n    \t}\n    \tparent::init();\n    }\n\n}\n\n--- File: 686 # modules/Api/controllers/WilayahController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse app\\models\\Wilayah;\nuse yii\\rest\\Controller;\n\nclass WilayahController extends Controller {\n\n    public function actionGetChildWilayah($id, $tipe) {\n        if (!$id || !Yii::$app->request->isAjax) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n        \n        $data = Wilayah::getChildWilayah($id, $tipe);\n        \n        if (!$data) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n\n        $arr = [];\n        foreach($data as $d) {\n            if($tipe == 'Kelurahan') {\n                $arr[] = [\n                    'id' => $d['ID_WIL'],\n                    'nama' => $d['NM_KELURAHAN'],\n                ];\n                continue;\n            }\n\n            $arr[] = [\n                'id' => $d['WILAYAH_ID'],\n                'nama' => $d['NAMA'],\n            ];\n        }\n        return json_encode($arr);\n    }\n\n}\n\n--- File: 679 # modules/Api/components/JWTHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\helpers\\Json;\nuse app\\models\\Setting;\n\nclass JWTHelper {\n\n    const SECRET = 'D0coSp4rtan2016';\n    const HASH_ALGO = \"sha256\";\n\n    public static function makeHeader() {\n        $data = [\n            \"alg\" => \"HS256\",\n            \"typ\" => \"JWT\"\n        ];\n\n        return base64_encode(Json::encode($data) );\n    }\n\n    public static function makePayload($payload) {\n        return base64_encode( Json::encode($payload) );\n    }\n\n    public static function makeSignature($header, $payload) {\n        $secretKey = Setting::getValue('jwt_token', self::SECRET);\n        $data = $header . \".\" . $payload;\n        return hash_hmac(self::HASH_ALGO, $data, self::SECRET);\n    }\n\n    public static function validateSignature($header, $payload, $signature) {\n        $checkSign = self::makeSignature($header, $payload);\n        return $checkSign == $signature;\n    }\n\n    public static function getDataPayload($payload) {\n        return base64_decode($payload);\n    }\n\n    public static function getDataHeader($header) {\n        return base64_decode($header);\n    }\n}\n?>\n\n--- File: 687 # modules/Api/models/JWTToken.php ---\n<?php \nnamespace app\\modules\\Api\\models;\n\nuse yii\\base\\Model;\nuse app\\modules\\Api\\components\\JWTHelper;\nuse yii\\helpers\\Json;\nuse yii\\base\\Exception;\n\nclass JWTToken extends Model {\n    public $token,\n           $header,\n           $payload,\n           $signature;\n\n    public function __construct($token = null)\n    {\n        parent::__construct();\n        $this->header = JWTHelper::makeHeader();\n\n        if($token) {\n            $this->mappingToken($token);\n        }\n    }\n\n\n    public function mappingToken($token) {\n        $removeBear = explode(\"Bearer \", $token);\n        $token = $removeBear[count($removeBear) - 1];\n        \n        $part = explode(\".\", $token);\n        $this->header = $part[0];\n        $this->payload = $part[1];\n        $this->signature = $part[2];\n        $this->token = $token;\n    }\n\n    public function validateSignature() {\n        return JWTHelper::validateSignature($this->header, $this->payload, $this->signature);\n    }\n\n    public function checkExpired() {\n        $data = $this->getDataPayload();\n\n        if(!array_key_exists('exp', $data)) {\n            return true;\n        }\n\n        $expired = Date(\"Y-m-d H:i:s\", strtotime($data['exp']));\n        $now = Date(\"Y-m-d H:i:s\");\n        \n        return $now <= $expired;\n    }\n\n    public function getDataPayload() {\n        $data = JWTHelper::getDataPayload($this->payload);\n        $jsonData = Json::decode($data);\n\n        if( !$jsonData ) {\n            throw new Exception(\"Format Payload Tidak Valid\");\n        }\n        return $jsonData;\n    }\n\n    public function generateToken()\n    {\n        $token = $this->header . \".\" . $this->payload . \".\" . $this->signature;\n        return $token;\n    }\n\n    public function setPayload($payload) {\n        $this->payload = JWTHelper::makePayload($payload);\n        $this->signature = JWTHelper::makeSignature($this->header, $this->payload);\n        return $this;\n    }\n}\n?>\n\n--- File: 602 # models/LogDukcapil.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse app\\services\\ElkLoggingService;\nuse DateTime;\nuse DateTimeZone;\n\n/**\n * This is the model class for table \"log_service\".\n *\n * @property int $id\n * @property string $ip_address\n * @property string $service_uri\n * @property string $nik\n * @property string $request\n * @property string $response\n * @property string $additional_data\n * @property string $created_at\n * @property int $is_error\n * @property string $type\n * @property string $execution_time\n */\nclass LogDukcapil extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'log_dukcapil';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('dbLogSimpadhu');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            array('nik, ip_address, type, is_error, created_at, header_code, request, response, additional_data, execution_time, service_uri, parent_id, resend, layanan', 'safe'),\n        ];\n    }\n\n\tpublic static function logDcp(\n        $params, \n        $response, \n        $status, \n        $type = 'VERIFNIK', \n        $exetime = 0, \n        $layanan, \n        $additional_data, \n        $parent_id = null, \n        $nik = null\n    ){\n        $request = is_string($params) ? json_decode($params) : $params;\n\n        $log = new LogDukcapil();\n        $log->nik = $nik;\n        $log->ip_address = Yii::$app->request->userIP;\n        $log->type = $type;\n        $log->is_error = $status == 200 ? 0 : 1;\n        $log->created_at = date(\"Y-m-d H:i:s\");\n        $log->header_code = $status;\n        $log->request = json_encode($request);\n        $log->response =json_encode(is_string($response) ? json_decode($response) : $response);\n        $log->additional_data = json_encode($additional_data);\n        $log->execution_time = $exetime;\n        $log->service_uri = Yii::$app->request->url;\n        $log->resend = $status == 200 ? 0 : 1;\n        $log->layanan = $layanan;\n        $log->parent_id = $parent_id;\n\n        // Penyesuaian Date agar menggunakan Timezone\n        $old_date = $log->created_at;\n        // Explicitly tell PHP that this time is already in WIB\n        $timezone = new DateTimeZone('Asia/Jakarta');\n        $newDate = new DateTime($old_date, $timezone);\n        \n        // Ensure no UTC conversion happens\n        $newDate->setTimezone($timezone);\n        \n        // Convert to ISO 8601 format with WIB timezone\n        $log->created_at = $newDate->format(DateTime::ATOM); \n\n        // Insert ke ELK\n        $elkLogging = new ElkLoggingService('dukcapil');\n\n        $elk_logging = $elkLogging->logApplication([\n            'nik' => $log->nik,\n            'ip_address' => $log->ip_address,\n            'type' => $log->type,\n            'is_error' => $log->is_error,\n            'created_at' => $log->created_at,\n            'header_code' => $log->header_code,\n            'request' => $log->request,\n            'response' => $log->response,\n            'additional_data' => $log->additional_data,\n            'execution_time' => strval($log->execution_time),\n            'service_uri' => $log->service_uri,\n            'resend' => $log->resend,\n            'layanan' => $log->layanan,\n            'parent_id' => $log->parent_id,\n        ]);\n\n        if ($elk_logging !== false) {\n            $result = $elk_logging;\n        } else {\n            $log->created_at = $old_date;\n            $log->save();\n        }\n    }\n}\n\n\n--- File: 680 # modules/Api/components/SKHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse Yii;\nuse app\\models\\SK;\nuse yii\\base\\Component;\nuse app\\models\\PesanNama;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\MasterTransaction;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\ChecklistPerubahan;\nuse app\\components\\helper\\Numbering;\nuse app\\components\\helper\\Disclaimer as DisclaimerHelper;\n\nclass SKHelper extends Component {\n\n    public static function pushPerubahan($id) {\n        \n        $transaksi = TransaksiKoperasi::find()->where(['id' => $id])->one();\n\n        if ( $transaksi->is_finish == -1 ) {\n\n            $transaksi->is_finish = 0;\n\n            DisclaimerHelper::generateValues('persetujuan', 'persetujuan_perubahan', $transaksi->id, $transaksi->t_pesan_nama_id)->save();\n        }\n        else {\n            $transaksi->is_finish = 1;\n\n            $pnID = [4]; // group of ids which needs to change pesan nama table\n            $bhPenggabungan = [2];\n            $group = [];\n            $idMaster = $transaksi->id_master;\n            $raw = ChecklistPerubahan::find()->joinWith(['masterPerubahan'])->where(['t_koperasi_id' => $id])->all();\n\n            if ( empty( $raw ) ) {\n\n            \techo 0; //data not found\n            \texit();\n            }\n\n            $changePesanNama = false;\n            $changePenggabungan = false;\n            foreach ($raw as $checks) {\n\n            \tif ( empty( $group ) OR ! in_array($checks->masterPerubahan->groups, $group) ) {\n\n\t            \tarray_push($group, $checks->masterPerubahan->groups);\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $pnID) ) {\n\n            \t\t$changePesanNama = true;\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $bhPenggabungan) ) {\n\n            \t\t$changePenggabungan = true;\n            \t}\n            }\n\n            $SKins = self::generateSurat( $group, $transaksi );\n\n            // change pesan nama status if master perubahan = 4 / Nama Koperasi\n            if ( $changePesanNama ) {\n            \t// var_dump('pesan');\n            \tself::changePesanNama( $transaksi, $idMaster );\n            }\n\n            // change is gabung if perubahan master id = 2 / penggabungan\n            if ( $changePenggabungan ) {\n            \t// var_dump( 'gabung' );\n            \tself::changeMasterTransactionIsGabung( $id );\n            }\n\n            // exit();\n\n            MasterTransaction::updateAll(['id_transaksi' => $id, 'id_sk' => $SKins->id], ['id' => $idMaster]);\n        }\n\n        $transaksi->tanggal_confirm = date('Y-m-d H:i:s');\n        $transaksi->tanggal_jangka_waktu = ! empty( $transaksi->jumlah_jangka_waktu ) ? date(\"Y-m-d\", strtotime($transaksi->tanggal_jangka_waktu . \" + \".$transaksi->jumlah_jangka_waktu.\" year\")) : $transaksi->tanggal_jangka_waktu;\n\n        return $transaksi->save(true, array('is_finish', 'tanggal_confirm', 'tanggal_jangka_waktu'));\n    }\n\n    public static function generateSurat( $group, $transaksi ) {\n\n        if ( empty( SK::find()->where(['t_koperasi_id' => $transaksi->id])->one() ) ) {\n\n\t        $SKins = new SK();\n\t        if ( count($group) < 2 ) {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = $group[0] == 1 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan() : self::getLastSK( $transaksi->id_master );\n\t            $SKins->no_sp_koperasi = $group[0] == 2 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan() : NULL;\n\t        }\n\t        else {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan();\n\t            $SKins->no_sp_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan();\n\t        }\n        }\n        else {\n\n        \t$SKins = SK::find()->where(['t_koperasi_id' => $transaksi->id])->one();\n        }\n\n        $SKins->save();\n\n        return $SKins;\n    }\n\n    public static function changePesanNama( $transaksi, $idMaster ) {\n\n    \t// change status of new name\n        PesanNama::updateAll(['status' => 1], ['id' => $transaksi->t_pesan_nama_id]);\n\n        // change is delete on before latest transaction\n    \t$raw = TransaksiKoperasi::findLastTransaction( TransaksiKoperasi::BEFORE_LATEST, $idMaster );\n    \t$lastID = $raw['id'];\n    \t$idPesanNama = $raw['t_pesan_nama_id'];\n\n        PesanNama::updateAll(['is_deleted' => 1], ['id' => $idPesanNama]);\n    }\n\n    public static function changeMasterTransactionIsGabung( $id ) {\n\n    \t// code goes here\n    \t$raw = BHPenggabungan::find()->where(['t_koperasi_id' => $id])->all();\n\n    \t// update master\n    \tforeach ($raw as $key) {\n\n\t\t\tMasterTransaction::updateAll(['is_gabung' => 1], ['id' => $key->d_koperasi_id]);\n    \t}\n    }\n    \n    public static function getLastSK( $idMaster ) {\n\n    \t$raw = MasterTransaction::find()->joinWith(['surat'])->where(['kop_master_transaksi.id' => $idMaster])->one();\n\n    \treturn $raw->surat->no_sk_koperasi;\n    }\n}\n?>\n\n--- File: 630 # models/BaseNik.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\nuse yii\\db\\Exception as DbException;\nuse yii\\db\\StaleObjectException;\n\n/**\n * This is the model class for table \"kop_base_nik\".\n *\n * @property int $id\n * @property string $base\n * @property int $count\n */\nclass BaseNik extends ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%base_nik}}';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['base'], 'required'],\n            [['base'], 'string', 'max' => 10],\n            [['base'], 'unique'],\n            [['count'], 'integer'],\n            [['count'], 'default', 'value' => 0],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'base' => 'Base NIK Prefix',\n            'count' => 'Current Count',\n        ];\n    }\n\n    /**\n     * Generates the next sequential NIK based on a given base prefix.\n     * It uses the `kop_base_nik` table to atomically manage the sequence count.\n     *\n     * @param string $base The base NIK prefix (e.g., '10203040' derived from wilayah IDs).\n     * @return string|false The generated full NIK string (e.g., '10203040001') on success, or false on failure.\n     */\n    public static function generateNik($base)\n    {\n        $db = self::getDb();\n        $transaction = $db->beginTransaction();\n\n        try {\n            // Find the BaseNik record. We acquire a lock for update to prevent race conditions.\n            // Using queryOne with FOR UPDATE is more explicit for locking the row.\n            // Alternatively, ActiveRecord's findOne() followed by save() inside a transaction\n            // usually provides sufficient atomicity for counters in most cases.\n            // For simplicity and common use-case, let's stick with findOne/save for ActiveRecord.\n            // If very high concurrency is expected and explicit row locking is needed,\n            // a raw SQL query with \"FOR UPDATE\" might be considered.\n\n            $baseNikRecord = self::findOne(['base' => $base]);\n            $newCount = 0;\n\n            if ($baseNikRecord) {\n                // Base NIK exists, increment the count\n                $baseNikRecord->count += 1;\n                $newCount = $baseNikRecord->count;\n                if (!$baseNikRecord->save()) {\n                    throw new DbException('Failed to update NIK count for base: ' . $base . '. Errors: ' . json_encode($baseNikRecord->getErrors()));\n                }\n                Yii::info(\"Updated NIK count for base '{$base}' to {$newCount}.\", __METHOD__);\n            } else {\n                // Base NIK does not exist, insert a new record with count 1\n                $baseNikRecord = new self();\n                $baseNikRecord->base = $base;\n                $baseNikRecord->count = 1; // Start with 1\n                $newCount = 1;\n                if (!$baseNikRecord->save()) {\n                    throw new DbException('Failed to insert new NIK base: ' . $base . '. Errors: ' . json_encode($baseNikRecord->getErrors()));\n                }\n                Yii::info(\"Inserted new NIK base '{$base}' with count {$newCount}.\", __METHOD__);\n            }\n\n            $transaction->commit(); // Commit the transaction if everything is successful\n\n            // Format the new count to be 3 digits with leading zeros\n            $sequentialSuffix = sprintf(\"%03d\", $newCount);\n            $fullNik = $base . $sequentialSuffix;\n\n            Yii::info(\"Generated NIK: {$fullNik}\", __METHOD__);\n            return $fullNik;\n\n        } catch (DbException $e) {\n            $transaction->rollBack(); // Rollback on database errors\n            Yii::error(\"Database error during NIK generation for base '{$base}'. Error: \" . $e->getMessage(), __METHOD__);\n            return false;\n        } catch (\\Throwable $e) {\n            // Catch any other general exceptions (e.g., PHP errors, unexpected issues)\n            $transaction->rollBack(); // Rollback on any general error\n            Yii::error(\"An unexpected error occurred during NIK generation for base '{$base}'. Error: \" . $e->getMessage(), __METHOD__);\n            return false;\n        }\n    }\n\n    public static function cleanWilayahName($name) {\n        if ($name === null) {\n            return '';\n        }\n        return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i', '', $name));\n    }\n\n    public static function getWilayahIds($provCleaned, $kabCleaned, $kelCleaned) {\n        $row = (new \\yii\\db\\Query())\n            ->select(['id_provinsi', 'id_kabupaten', 'id_kecamatan', 'id_kelurahan'])\n            ->from('kop_m_wilayah_ods') // Assuming this table exists\n            ->where(['provinsi' => $provCleaned]) // Exact match for province\n            ->andWhere(['like', 'kabupaten', '%' . $kabCleaned . '%']) // Partial match for kabupaten\n            ->andWhere(['like', 'kelurahan', '%' . $kelCleaned . '%']) // Partial match for kelurahan\n            ->orderBy(['id' => SORT_DESC]) // Assuming 'id' is a good ordering for 'latest'\n            ->one(self::getDb()); // Use the correct DB connection\n\n        if ($row) {\n            return $row; // Returns an associative array of IDs\n        }\n        return null; // No IDs found\n    }\n}\n\n\n--- File: 728 # views/layouts/main.php ---\n<?php\n\n/* @var $this \\yii\\web\\View */\n/* @var $content string */\n\nuse app\\widgets\\Alert;\nuse yii\\helpers\\Html;\nuse yii\\bootstrap\\Nav;\nuse yii\\bootstrap\\NavBar;\nuse yii\\widgets\\Breadcrumbs;\nuse app\\assets\\AppAsset;\nuse docotel\\dcms\\widget\\SideNav;\nuse app\\components\\Menu;\nuse yii\\helpers\\ArrayHelper;\n\nAppAsset::register($this);\n?>\n<?php $this->beginPage() ?>\n<!DOCTYPE html>\n<html lang=\"<?= Yii::$app->language ?>\">\n<head>\n<meta charset=\"<?= Yii::$app->charset ?>\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n  <?= Html::csrfMetaTags() ?>\n  <title><?= Html::encode($this->title) ?></title>\n  <link rel=\"manifest\" href=\"images/favicon/manifest.json\">\n  <!-- <link rel=\"stylesheet\" href=\"/css/site.css\">\n  <link rel=\"stylesheet\" href=\"/frontend/dist/styles/main.css\"> -->\n  <style type=\"text/css\">\n    .treeview.menu-open > a > .pull-right-container > .fa-minus {\n      display: block;\n    }\n\n    .treeview.menu-open > a > .pull-right-container > .fa-plus {\n      display: none;\n    }\n    .treeview > a > .pull-right-container > .fa-minus {\n      display: none;\n    }\n\n    .treeview > a > .pull-right-container > .fa-plus {\n      display: block;\n    }\n    /*.treeview.menu-open .treeview-menu .pull-right-container .fa-minus {\n      display: block;\n    }*/\n\n  </style>\n  <?php $this->head() ?>\n  <link href=\"/css/font-awesome.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"/css/animate.css\">\n</head>\n<body class=\"hold-transition skin-blue sidebar-mini\">\n<?php $this->beginBody() ?>\n<div class=\"wrapper\">\n    <header class=\"main-header\">\n        <div class=\"navbar-top\">\n            <a href=\"#\" data-toggle=\"push-menu\" role=\"button\">\n                <div class=\"nav-toggle\" id=\"toggle-nav\" toggle-target=\"#side-nav\">\n                  <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n            </a>\n\n            <h3 class=\"nav-title\">DITJEN AHU ONLINE</h3>\n            <div class=\"top-menu\">\n                <div class=\"navbar-custom-menu\">\n                    <ul class=\"nav navbar-nav\">\n                            <!-- Messages: style can be found in dropdown.less-->\n\n                            <!-- /.messages-menu -->\n                    </ul>\n                </div>\n                <div class=\"menu\"></div>\n            </div>\n            <div class=\"nav-right\">\n                <div class=\"user-info\">\n                    <div class=\"toggle-user\" id-target=\"#usermenu\">\n                      <?= Yii::$app->user->isGuest ? 'Guest' : (empty($data_notaris = Yii::$app->session->get('data_notaris')) ? Yii::$app->user->identity->username : ArrayHelper::getValue($data_notaris, 'value.username', '-'))  ?>\n                      <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                    </div>\n                    <ul class=\"user-menu\" id=\"usermenu\">\n                        <?php if(!empty(Yii::$app->user->identity->userGroup[0]->group_id) && Yii::$app->user->identity->userGroup[0]->group_id != 'notaris'):\n                          // cek halaman ubah password berdasarkan user grup\n                          $usergrup = Yii::$app->user->identity->userGroup[0]->group_id;\n                          $url_ubah_password = $usergrup != 'badan-hukum' ? \"/dcms/user/change-password\" : \"/users/change-password\";\n                          ?>\n                            <li class=\"\">\n                              <?=\n                                Html::a('<span class=\"menu-icon\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span> Ubah Password',\n                                  $url_ubah_password,\n                                  ['data-method' => 'post']\n\n                                )?>\n                            </li>\n                        <?php endif;?>\n                        <li class=\"green-panel logout\">\n                          <?=\n                            Html::a('<span class=\"menu-icon\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></span> Log Out',\n                              '/site/logout',\n                              ['data-method' => 'post']\n\n                            )?>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </header>\n    <aside class=\"main-sidebar\">\n\n      <!-- sidebar: style can be found in sidebar.less -->\n      <section class=\"sidebar\">\n\n      <?php\n    // dump($_SESSION);exit;\n    //   echo SideNav::widget([\n    //     'items' => !empty($this->params['menu']) ? $this->params['menu'] : []\n    //   ]);\n      ?>\n\n          <!-- Sidebar Menu -->\n          <?php\n            echo Menu::widget([\n              'items' => !empty($this->params['menu']) ? $this->params['menu'] : [],\n              // 'indMenuOpen' => '<i class=\"fas fa-minus pull-right\"></i>',\n              // 'indMenuClose' => '<i class=\"fas fa-plus pull-right\"></i>',\n              // 'heading' => true,\n            ]);\n          ?>\n          <!-- /.sidebar-menu -->\n      </section>\n      <!-- /.sidebar -->\n      </aside>\n      <div class=\"content-wrapper\">\n      <section class=\"content container-fluid\">\n      <?= Breadcrumbs::widget([\n            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],\n        ]) ?>\n        <?= Alert::widget() ?>\n        <?= $content ?>\n      </section>\n      </div>\n  <?php $this->endBody() ?>\n  </body>\n</html>\n<?php $this->endPage() ?>\n\n\n--- File: 683 # modules/Api/controllers/AuthController.php ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\LogHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse yii\\base\\Exception;\nuse app\\models\\User;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass AuthController extends Controller {\n\n    const EXPR_TIME_TOKEN = \"+30 minutes\";\n    private static $hash = 'sha512';\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    'login-jwt' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    public function actionLoginJwt() {\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_JWT_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                try {\n                    $dataXml = simplexml_load_string(Yii::$app->request->rawBody);\n                    $json = json_encode($dataXml);\n                    $dataJson = json_decode($json, true);\n                } catch (\\Exception $e) {\n                    throw new Exception(\"Format XML Tidak Valid\", 400);\n                }\n            }\n\n            if( !array_key_exists('username', $dataJson)) {\n                throw new Exception(\"Data Username Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('password', $dataJson)) {\n                throw new Exception(\"Data Password Tidak Ditemukan\", 400);\n            }\n            $username = $dataJson['username'];\n            $password = $dataJson['password'];\n\n            $dataUser = $this->getUserAuth($username, $password);\n\n            if( !$dataUser ) {\n                throw new Exception(\"User Tidak Ditemukan\", 401);\n            }\n\n            $hashKey = Setting::getValue('jwt_key');\n            $tokenId = $this->generate_sign();\n            $issuedAt = time();\n            $notBefore = $issuedAt;\n            $expire = $notBefore + 1800; // adding 60 minutes\n            $serverName = \"AHU-ONLINE\";\n\n            $token = new JWT();\n            $data = [\n                'iat' => $issuedAt,\n                'jti' => $tokenId,\n                'iss' => $serverName,\n                'nbf' => $notBefore,\n                'exp' => $expire,\n                'data' => [\n                    'theOneThatWeGaveId'   => $dataUser->id,\n                    'theOneThatWeGaveName' => $username,\n                ]\n            ];\n\n            $secretKey = base64_encode($hashKey);\n            $algorithm = 'HS256';\n            $token = $token::encode($data, $secretKey, $algorithm);\n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function actionAuthorization(){\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_AUTH_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                throw new Exception(\"Format JSON Tidak Valid\");\n            }\n\n            if( !array_key_exists('nomor_transaksi', $dataJson)) {\n                throw new Exception(\"Data nomor_transaksi Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('secret_key', $dataJson)) {\n                throw new Exception(\"Data secret_key Tidak Ditemukan\", 400);\n            }\n\n\n            $nomor_transaksi = $dataJson['nomor_transaksi'];\n            $secret_key = $dataJson['secret_key'];\n\n            $dataAuth = $this->getUpdateAuth($nomor_transaksi, $secret_key);\n\n            if( !$dataAuth ) {\n                throw new Exception(\"Auth Tidak Berhasil\", 401);\n            }\n\n            $token = $dataAuth;\n        \n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function getUpdateAuth($nomor_transaksi, $secret_key){\n        $hashed = hash(self::$hash, $secret_key . $nomor_transaksi);\n        return $hashed;\n    }\n\n    public function getUserAuth($username, $password) {\n        // Tambahkan disini jika ada group lain yang diperbolehkan get JWT Token\n        $whitelist_group = [\n            'oss',\n            'ods',\n        ];\n        $user = User::findByUsername($username);\n\n        if( !$user ) {\n            throw new Exception(\"User Tidak Ditemukan\", 404);\n        }\n\n        $cekPass = $user->validatePassword($password);\n\n        if( !$cekPass ) {\n            throw new Exception(\"Username / Password Salah\", 401);\n        }\n\n        $groups = ArrayHelper::getColumn($user->userGroup, 'group_id');\n        \n        foreach($whitelist_group as $whitelist) {\n            if( in_array($whitelist, $groups) ) {\n                return $user;\n            }\n        }\n\n        return false;\n    }\n\n    public static function generate_sign() {\n        $now = time();\n        $setengah_jam = (int)floor($now / 30 / 60);\n        $t = 'candrabeqx' . $setengah_jam . 'docotel';\n        $x = crypt($t, \"$2y$10$\" . substr(md5($t),0,22));\n\n        return $x;\n    }\n\n}\n?>\n\n--- File: 10 # components/HelperDukcapil.php ---\n<?php\n\nnamespace app\\components;\n\nuse app\\models\\LogDukcapil;\nuse app\\models\\PemilikManfaat;\nuse Yii;\nuse yii\\base\\Component;\n\nclass HelperDukcapil extends Component\n{    \n    public $USER_ID;\n    public $PASSWORD;\n    public $IP_USER;\n    public $TRESHOLD;\n    public $NIK;\n    public $NAMA_LGKP;\n    public $URL_API;\n    public $ID_KOPERASI;\n\n    public $FILTER_RESPONSE = [\n        'NAMA_LGKP' => 'NAMA tidak sesuai dengan data yang terdapat di database Kependudukan',\n    ];\n\n    protected $responseCurl;\n\n    public function __construct($data = [])\n    {\n        $this->getConfigDukcapil();\n\n        $this->ID_KOPERASI = isset($data['id_koperasi']) ? $data['id_koperasi'] : '';\n        $this->NIK = isset($data['nik']) ? $data['nik'] : '';\n        $this->NAMA_LGKP = isset($data['nama']) ? $data['nama'] : '';\n    }\n\n    protected function getConfigDukcapil()\n    {\n        $config = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'credential_dukcapil'\"\n        )->queryOne();\n\n        if($config){\n            $decode = json_decode($config['value']);\n            $this->USER_ID = $decode->user_id;\n            $this->PASSWORD = $decode->password;\n            $this->IP_USER = $decode->ip_user;\n            $this->TRESHOLD = $decode->treshold;\n            $this->URL_API = $decode->url_api;\n        }\n    }\n\n    public function mappingDataDukcapil(){\n        $data = array(\n            'USER_ID' => $this->USER_ID,\n            'PASSWORD' => $this->PASSWORD,\n            'IP_USER' => $this->IP_USER,\n            'TRESHOLD' => $this->TRESHOLD,\n            'NIK' => $this->NIK,\n            'NAMA_LGKP' => $this->NAMA_LGKP\n        );\n        return json_encode($data);\n    }\n\n    public function curlValidDukcapil() {\n        $params = str_replace(\"\\\\/\",\"/\",$this->mappingDataDukcapil());\n\n        $ch = curl_init();\n        curl_setopt($ch,CURLOPT_URL, $this->URL_API);\n        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n        curl_setopt($ch,CURLOPT_HTTPHEADER, array(\"Accept:application/json\", \"Content-Type:application/json\"));\n        curl_setopt($ch,CURLOPT_POST, true);\n        curl_setopt($ch,CURLOPT_POSTFIELDS, $params);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n\n        $time_start = microtime(true);\n        $result = curl_exec($ch);\n        $time = sprintf('%.3f', microtime(true) - $time_start) . 's';\n        $info = curl_getinfo($ch);\n\n        $error = null;\n        if(curl_errno($ch)) {\n            $error = curl_error($ch);\n            if (in_array(curl_errno($ch), array(CURLE_OPERATION_TIMEDOUT, CURLE_OPERATION_TIMEOUTED))) {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'],\n                    ])\n                );\n            } else {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => curl_error($ch)],\n                    ])\n                );\n            }\n        }\n\n        curl_close($ch);\n        \n        $res = json_decode($result, true);\n\n        $data = (object)$res;\n        \n        LogDukcapil::logDcp($params, $result, $info['http_code'], 'VERIFNIK',$time,'KOPERASI', $info, $this->ID_KOPERASI, $this->NIK);\n\n        $data = $data->content[0];\n        $this->responseCurl = (object) $data;\n        return $error ?: true;\n    }\n\n    public function mapingResponse($res)\n    {\n        $response = [\n            'status' => 1,\n            'data' => []\n        ];\n\n        if (isset($res)) {\n            if (isset($res->RESPONSE_CODE)) {\n                $data = $this->processCode($res->RESPONSE_CODE, $res->RESPONSE);\n                if($data){\n                    $response['status'] = 0;\n                    $response['data'][] = $data;\n                }\n            } elseif (isset($res->RESPONSE)){\n                $response['status'] = 0;\n                $response['data'][] = $res->RESPONSE;\n            }else {\n                $data = [];\n                $string = \"Sesuai (100)\";\n                \n                foreach ($res as $key => $value) {\n                    if(in_array($key, array_keys($this->FILTER_RESPONSE)) && stripos($value, \"Tidak Sesuai\") !== false){\n                        $data[$key] = $this->FILTER_RESPONSE[$key];\n                    }\n                }\n\n                if(count($data) >= 1){\n                    $response['status'] = 0;\n                    $response['data'] = $data;\n                }\n            }\n            \n            return $response;\n        }else{\n            $response['status'] = 0;\n            $response['data'] = ['Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'];\n            return $response;\n        }\n    }\n    \n    private function processCode($code, $message)\n    {\n        switch ($code) {\n            case 11:\n                return 'Data yang dimasukkan merupakan data orang yang telah dinyatakan meninggal';\n            case 12:\n                return 'Data Ditemukan, Status Data Ganda';\n            case 13:\n                return 'Data Tidak Ditemukan, NIK tidak terdapat di database Kependudukan';\n            case 14:\n            case 15:\n                return $message;\n            default:\n                return 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi';\n        }\n    }\n    \n\n    public function response(){\n        return $this->mapingResponse($this->responseCurl);\n    }\n\n    public static function DataBalikan($id, $model){\n        $config = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'credential_data_balikan'\"\n        )->queryOne();\n\n        $token = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'token_data_balikan'\"\n        )->queryOne();\n\n        $token = $token['value'];\n\n        $data = PemilikManfaat::findAll(['t_koperasi_id' => $id]);\n\n        if(isset($config['value'])){\n            $decode = json_decode($config['value']);\n\n            $params = [];\n            $params['id_lembaga'] = $decode->id_lembaga;\n            $params['nama_lembaga'] = $decode->nama_lembaga;\n            $nik = 0;\n            foreach ($data as $key => $value) {\n                if($value->m_jenis_identitas_id == 1){\n                    $params['data'][] = [\n                        'NIK' => $value->no_identitas,\n                        'param' => [\n                            [\"hubungan_dengan_korporasi\" => \"Pemilik Manfaat KOPERASI \" . $model->nama_koperasi],\n                        ]\n                    ];\n                    $nik = $value->no_identitas;\n                }\n            }\n\n            if(!empty($params)){\n                self::curlDataBalikan($decode->url_api, json_encode([$params]), $token, $id, $nik);\n            }\n        }\n\n    } \n\n    public static function curlDataBalikan($url, $params, $token, $id = null, $nik){\n        $time_start = microtime(true);\n        $ch = curl_init();\n        curl_setopt($ch,CURLOPT_URL, $url);\n        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n        curl_setopt($ch,CURLOPT_HTTPHEADER, array(\"Accept:application/json\", \"Content-Type:application/json\", \"Authorization:Bearer \".$token));\n        curl_setopt($ch,CURLOPT_POST, true);\n        curl_setopt($ch,CURLOPT_POSTFIELDS, $params);\n\n        // Set timeout\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);\n\n        $result = curl_exec($ch);\n        $time = sprintf('%.3f', microtime(true) - $time_start) . 's';\n        $info = curl_getinfo($ch);\n\n        if(curl_errno($ch)){\n            // check is error timeout or not \n            if (in_array(curl_errno($ch), array(CURLE_OPERATION_TIMEDOUT, CURLE_OPERATION_TIMEOUTED))) {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'],\n                    ])\n                );\n            } else {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => curl_error($ch)],\n                    ])\n                );\n            }\n        }\n        curl_close($ch);\n        \n        LogDukcapil::logDcp($params, $result, $info['http_code'], 'DATABALIKAN',$time,'KOPERASI', $info, $id, $nik);\n\n        return $result;\n    }\n\n    public static function CheckIsActiveValidateDukcapil(){\n        $isActive = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'is_active_dukcapil'\"\n        )->queryOne();\n        \n        $status = 0;\n        if(!empty($isActive) && $isActive['value'] == 1){\n            $status = 1;\n        }\n\n        return $status;\n    }\n\n    public static function AllowValidation(){\n        $response = [\n            'status' => 1,\n            'data' => []\n        ];\n\n        return $response;\n    }\n}\n\n\n--- File: 283 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Core.php ---\n<?php\nnamespace GuzzleHttp\\Ring;\n\nuse GuzzleHttp\\Stream\\StreamInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArrayInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArray;\n\n/**\n * Provides core functionality of Ring handlers and middleware.\n */\nclass Core\n{\n    /**\n     * Returns a function that calls all of the provided functions, in order,\n     * passing the arguments provided to the composed function to each function.\n     *\n     * @param callable[] $functions Array of functions to proxy to.\n     *\n     * @return callable\n     */\n    public static function callArray(array $functions)\n    {\n        return function () use ($functions) {\n            $args = func_get_args();\n            foreach ($functions as $fn) {\n                call_user_func_array($fn, $args);\n            }\n        };\n    }\n\n    /**\n     * Gets an array of header line values from a message for a specific header\n     *\n     * This method searches through the \"headers\" key of a message for a header\n     * using a case-insensitive search.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return array\n     */\n    public static function headerLines($message, $header)\n    {\n        $result = [];\n\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    $result = array_merge($result, $value);\n                }\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Gets a header value from a message as a string or null\n     *\n     * This method searches through the \"headers\" key of a message for a header\n     * using a case-insensitive search. The lines of the header are imploded\n     * using commas into a single string return value.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return string|null Returns the header string if found, or null if not.\n     */\n    public static function header($message, $header)\n    {\n        $match = self::headerLines($message, $header);\n        return $match ? implode(', ', $match) : null;\n    }\n\n    /**\n     * Returns the first header value from a message as a string or null. If\n     * a header line contains multiple values separated by a comma, then this\n     * function will return the first value in the list.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return string|null Returns the value as a string if found.\n     */\n    public static function firstHeader($message, $header)\n    {\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    // Return the match itself if it is a single value.\n                    $pos = strpos($value[0], ',');\n                    return $pos ? substr($value[0], 0, $pos) : $value[0];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns true if a message has the provided case-insensitive header.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to check\n     *\n     * @return bool\n     */\n    public static function hasHeader($message, $header)\n    {\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Parses an array of header lines into an associative array of headers.\n     *\n     * @param array $lines Header lines array of strings in the following\n     *                     format: \"Name: Value\"\n     * @return array\n     */\n    public static function headersFromLines($lines)\n    {\n        $headers = [];\n\n        foreach ($lines as $line) {\n            $parts = explode(':', $line, 2);\n            $headers[trim($parts[0])][] = isset($parts[1])\n                ? trim($parts[1])\n                : null;\n        }\n\n        return $headers;\n    }\n\n    /**\n     * Removes a header from a message using a case-insensitive comparison.\n     *\n     * @param array  $message Message that contains 'headers'\n     * @param string $header  Header to remove\n     *\n     * @return array\n     */\n    public static function removeHeader(array $message, $header)\n    {\n        if (isset($message['headers'])) {\n            foreach (array_keys($message['headers']) as $key) {\n                if (!strcasecmp($header, $key)) {\n                    unset($message['headers'][$key]);\n                }\n            }\n        }\n\n        return $message;\n    }\n\n    /**\n     * Replaces any existing case insensitive headers with the given value.\n     *\n     * @param array  $message Message that contains 'headers'\n     * @param string $header  Header to set.\n     * @param array  $value   Value to set.\n     *\n     * @return array\n     */\n    public static function setHeader(array $message, $header, array $value)\n    {\n        $message = self::removeHeader($message, $header);\n        $message['headers'][$header] = $value;\n\n        return $message;\n    }\n\n    /**\n     * Creates a URL string from a request.\n     *\n     * If the \"url\" key is present on the request, it is returned, otherwise\n     * the url is built up based on the scheme, host, uri, and query_string\n     * request values.\n     *\n     * @param array $request Request to get the URL from\n     *\n     * @return string Returns the request URL as a string.\n     * @throws \\InvalidArgumentException if no Host header is present.\n     */\n    public static function url(array $request)\n    {\n        if (isset($request['url'])) {\n            return $request['url'];\n        }\n\n        $uri = (isset($request['scheme'])\n                ? $request['scheme'] : 'http') . '://';\n\n        if ($host = self::header($request, 'host')) {\n            $uri .= $host;\n        } else {\n            throw new \\InvalidArgumentException('No Host header was provided');\n        }\n\n        if (isset($request['uri'])) {\n            $uri .= $request['uri'];\n        }\n\n        if (isset($request['query_string'])) {\n            $uri .= '?' . $request['query_string'];\n        }\n\n        return $uri;\n    }\n\n    /**\n     * Reads the body of a message into a string.\n     *\n     * @param array|FutureArrayInterface $message Array containing a \"body\" key\n     *\n     * @return null|string Returns the body as a string or null if not set.\n     * @throws \\InvalidArgumentException if a request body is invalid.\n     */\n    public static function body($message)\n    {\n        if (!isset($message['body'])) {\n            return null;\n        }\n\n        if ($message['body'] instanceof StreamInterface) {\n            return (string) $message['body'];\n        }\n\n        switch (gettype($message['body'])) {\n            case 'string':\n                return $message['body'];\n            case 'resource':\n                return stream_get_contents($message['body']);\n            case 'object':\n                if ($message['body'] instanceof \\Iterator) {\n                    return implode('', iterator_to_array($message['body']));\n                } elseif (method_exists($message['body'], '__toString')) {\n                    return (string) $message['body'];\n                }\n            default:\n                throw new \\InvalidArgumentException('Invalid request body: '\n                    . self::describeType($message['body']));\n        }\n    }\n\n    /**\n     * Rewind the body of the provided message if possible.\n     *\n     * @param array $message Message that contains a 'body' field.\n     *\n     * @return bool Returns true on success, false on failure\n     */\n    public static function rewindBody($message)\n    {\n        if ($message['body'] instanceof StreamInterface) {\n            return $message['body']->seek(0);\n        }\n\n        if ($message['body'] instanceof \\Generator) {\n            return false;\n        }\n\n        if ($message['body'] instanceof \\Iterator) {\n            $message['body']->rewind();\n            return true;\n        }\n\n        if (is_resource($message['body'])) {\n            return rewind($message['body']);\n        }\n\n        return is_string($message['body'])\n            || (is_object($message['body'])\n                && method_exists($message['body'], '__toString'));\n    }\n\n    /**\n     * Debug function used to describe the provided value type and class.\n     *\n     * @param mixed $input\n     *\n     * @return string Returns a string containing the type of the variable and\n     *                if a class is provided, the class name.\n     */\n    public static function describeType($input)\n    {\n        switch (gettype($input)) {\n            case 'object':\n                return 'object(' . get_class($input) . ')';\n            case 'array':\n                return 'array(' . count($input) . ')';\n            default:\n                ob_start();\n                var_dump($input);\n                // normalize float vs double\n                return str_replace('double(', 'float(', rtrim(ob_get_clean()));\n        }\n    }\n\n    /**\n     * Sleep for the specified amount of time specified in the request's\n     * ['client']['delay'] option if present.\n     *\n     * This function should only be used when a non-blocking sleep is not\n     * possible.\n     *\n     * @param array $request Request to sleep\n     */\n    public static function doSleep(array $request)\n    {\n        if (isset($request['client']['delay'])) {\n            usleep($request['client']['delay'] * 1000);\n        }\n    }\n\n    /**\n     * Returns a proxied future that modifies the dereferenced value of another\n     * future using a promise.\n     *\n     * @param FutureArrayInterface $future      Future to wrap with a new future\n     * @param callable    $onFulfilled Invoked when the future fulfilled\n     * @param callable    $onRejected  Invoked when the future rejected\n     * @param callable    $onProgress  Invoked when the future progresses\n     *\n     * @return FutureArray\n     */\n    public static function proxy(\n        FutureArrayInterface $future,\n        callable $onFulfilled = null,\n        callable $onRejected = null,\n        callable $onProgress = null\n    ) {\n        return new FutureArray(\n            $future->then($onFulfilled, $onRejected, $onProgress),\n            [$future, 'wait'],\n            [$future, 'cancel']\n        );\n    }\n\n    /**\n     * Returns a debug stream based on the provided variable.\n     *\n     * @param mixed $value Optional value\n     *\n     * @return resource\n     */\n    public static function getDebugResource($value = null)\n    {\n        if (is_resource($value)) {\n            return $value;\n        } elseif (defined('STDOUT')) {\n            return STDOUT;\n        } else {\n            return fopen('php://output', 'w');\n        }\n    }\n}\n\n\n--- File: 685 # modules/Api/controllers/TransaksiController.php (structure only) ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Url;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\ApiHelper;\nuse app\\components\\LogHelper;\nuse app\\models\\TransaksiKoperasi;\nuse app\\modules\\Api\\components\\AuthHelper;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse app\\modules\\Api\\components\\TransaksiHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse yii\\base\\Exception;\nuse app\\models\\bakum\\LogCodex;\nuse app\\components\\helper\\TelegramHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass TransaksiController extends Controller\n{\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    // 'index' => ['POST'],\n                    'dummy' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    /**\n     * Function untuk Output Response sekaligus Save Logging\n     * \n     * @param Array Data Request\n     * \n     * @return JSON/XML Output Response Berdasarkan\n     */\n    public function responseAndSaveLog(Array $data, $typeFormat = 'JSON')\n    {\n        $this->saveLog($data);\n\n        return $this->showResponse($data['response'], $typeFormat);\n    }\n... (899 more lines)\n\n--- File: 22 # components/ApiHelper.php (structure only) ---\n<?php\n\nnamespace app\\components;\n\nuse Yii;\nuse app\\models\\SK;\nuse app\\models\\Wilayah;\nuse app\\models\\WilayahOds;\nuse yii\\base\\Component;\nuse app\\models\\bakum\\KBLIBakum;\nuse app\\models\\bakum\\WilayahSABH;\nuse app\\models\\notariat\\Negara;\nuse app\\models\\PemilikManfaat;\nuse app\\models\\PesanNama;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\TransaksiPembubaran;\n\nclass ApiHelper extends Component\n{\n\n    public static function getKoperasiJson($id, $asArray = false)\n    {\n\n        $data = TransaksiKoperasi::find()->where(['id' => $id])->one();\n\n        $json  = [\n            'data' => [\n                'transaksi' => self::jsonTransaksi($data, true),\n                'koperasi' => self::jsonKoperasi($data, true),\n                'kedudukan' => self::jsonKedudukan($data, true),\n                'akta_notaris' => self::jsonNotaris($data, true),\n                'rapat' => self::jsonRapat($data, true),\n                'koperasi_pembentuk' => self::jsonSekunder($data, true),\n                // Take Out 8 Juli 2019\n                // Tidak Perlu Pakai Badan Hukum Gabung Dan Pisah (Dari User AHU)\n                // 'badan_hukum_gabung' => self::jsonGabung($data, true),\n                // 'badan_hukum_pisah' => self::jsonPisah($data, true),\n                'tahun_kbli' => !empty(self::jsonKbli($data, true)[1]) ? self::jsonKbli($data, true)[1] : \"\",\n                'aktivitas_usaha' => !empty(self::jsonKbli($data, true)[0]) ? self::jsonKbli($data, true)[0] : \"\",\n                'modal_koperasi' => self::jsonModalKoperasi($data, true),\n                'periode_pengurus' => self::jsonPeriodePengurus($data, true),\n                'pengawas_pengurus' => self::jsonAnggota($data, true),\n            ],\n        ];\n\n        return self::resultArray($json, $asArray);\n    }\n\n    public static function cekInstance($data, $class)\n    {\n... (1066 more lines)\n\n--- File: 682 # modules/Api/components/TransaksiHelper.php (structure only) ---\n<?php\nnamespace app\\modules\\Api\\components;\n\nuse Yii;\nuse yii\\base\\Component;\nuse app\\models\\BHPembagian;\nuse app\\models\\DataAnggota;\nuse app\\models\\AktifitasUsaha;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\JenisTransaksi;\nuse app\\models\\PemilikManfaat;\nuse app\\models\\KoperasiSekunder;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\MasterTransaction;\nuse app\\models\\SK;\nuse app\\models\\PesanNama;\nuse app\\models\\JenisKoperasi;\nuse app\\models\\TingkatWilayah;\nuse app\\models\\BentukKoperasi;\nuse app\\models\\PolaPengelolaan;\nuse app\\models\\WilayahOds;\nuse app\\components\\KoperasiHelper;\nuse app\\models\\ChecklistPerubahan;\nuse app\\modules\\Api\\components\\SKHelper;\nuse app\\modules\\Api\\components\\DataAnggotaHelper;\nuse yii\\base\\Exception;\nuse app\\components\\ApiHelper;\nuse yii\\helpers\\ArrayHelper;\n\nclass TransaksiHelper extends Component\n{\n\n    public static function createTrans($data)\n    {\n        if(!$data) {\n            return [\n                'status' => false,\n                'info' => 'Data tidak Boleh Kosong',\n            ];\n        }\n\n        $nik = $data['data']['nik'];\n\n        if(!$nik) {\n            return [\n                'status' => false,\n                'info' => 'NIK Tidak Ditemukan',\n            ];\n        }\n\n... (1052 more lines)\n\n--- File: 583 # models/BHPenggabungan.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\n\n\nclass BHPenggabungan extends ActiveRecord \n{\n    public static function tableName()\n    {\n        return '{{%bh_penggabungan}}';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n}\n\n--- File: 808 # web/index.php ---\n<?php\n\n// comment out the following two lines when deployed to production\ndefined('YII_DEBUG') or define('YII_DEBUG', true);\ndefined('YII_ENV') or define('YII_ENV', 'dev');\n\nrequire __DIR__ . '/../vendor/autoload.php';\nrequire __DIR__ . '/../vendor/yiisoft/yii2/Yii.php';\n\n$config = require __DIR__ . '/../config/web.php';\n\n(new yii\\web\\Application($config))->run();\n\n\n--- File: 617 # models/SK.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\n\n\nclass SK extends ActiveRecord \n{\n    const SK_PENDIRIAN = 1;\n    const SK_PERUBAHAN = 5;\n    const SP_PERUBAHAN = 7;\n    const SK_PEMBUBARAN = 6;\n\n    const SK_PENDIRIAN_DESC = 'sk_pendirian';\n    const SK_PERUBAHAN_DESC = 'sk_perubahan';\n    const SP_PERUBAHAN_DESC = 'sp_perubahan';\n    const SK_PEMBUBARAN_DESC = 'sk_pembubaran';\n    \n    public static function tableName()\n    {\n        return '{{%sk}}';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    public function getDataTransaksi()\n    {\n        return $this->hasOne(TransaksiKoperasi::className(), ['id' => 't_koperasi_id']);\n    }\n}\n\n--- File: 4 # assets/AppAsset.php (truncated) ---\n<?php\n/**\n * @link http://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http://www.yiiframework.com/license/\n */\n\nnamespace app\\assets;\n\nuse yii\\web\\AssetBundle;\n\n/**\n * Main application asset bundle.\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\nclass AppAsset extends AssetBundle\n{\n    public $basePath = '@webroot';\n    public $baseUrl = '@web';\n... (truncated)\n\nPlease provide:\n1. A high-level `summary` of the project's main purpose and functionality in a few beginner-friendly sentences. Use markdown formatting with **bold** and *italic* text to highlight important concepts.\n2. A list (`relationships`) describing the key interactions between these abstractions. For each relationship, specify:\n    - `from_abstraction`: Index of the source abstraction (e.g., `0 # AbstractionName1`)\n    - `to_abstraction`: Index of the target abstraction (e.g., `1 # AbstractionName2`)\n    - `label`: A brief label for the interaction **in just a few words** (e.g., \"Manages\", \"Inherits\", \"Uses\").\n    Ideally the relationship should be backed by one abstraction calling or passing parameters to another.\n    Simplify the relationship and exclude those non-important ones.\n\nIMPORTANT: Make sure EVERY abstraction is involved in at least ONE relationship (either as source or target). Each abstraction index must appear at least once across all relationships.\n\nFormat the output as YAML:\n\n```yaml\nsummary: |\n  A brief, simple explanation of the project.\n  Can span multiple lines with **bold** and *italic* for emphasis.\nrelationships:\n  - from_abstraction: 0 # AbstractionName1\n    to_abstraction: 1 # AbstractionName2\n    label: \"Manages\"\n  - from_abstraction: 2 # AbstractionName3\n    to_abstraction: 0 # AbstractionName1\n    label: \"Provides config\"\n  # ... other relationships\n```\n\nNow, provide the YAML output:\n": "```yaml\nsummary: |\n  Koperasi is a backend service that helps manage cooperative (koperasi) transactions end\u2011to\u2011end.\n  It exposes an **API gateway** that authenticates with **JWT**, processes transaction lifecycles,\n  issues official **SK/SP numbers**, and performs *Dukcapil* identity checks.\n  The app keeps a detailed **audit trail** and streams logs to *Elasticsearch*,\n  while a web MVC shell provides the admin UI and session guard.\n\nrelationships:\n  - from_abstraction: 0 # API Gateway & Endpoints\n    to_abstraction: 1 # JWT Authentication & Authorization\n    label: \"Authenticates via JWT\"\n  - from_abstraction: 0 # API Gateway & Endpoints\n    to_abstraction: 2 # Koperasi Transaction Lifecycle Engine\n    label: \"Delegates transactions\"\n  - from_abstraction: 2 # Koperasi Transaction Lifecycle Engine\n    to_abstraction: 5 # SK and Numbering System\n    label: \"Generates SK numbers\"\n  - from_abstraction: 0 # API Gateway & Endpoints\n    to_abstraction: 3 # Dukcapil Identity Verification Client\n    label: \"Routes identity checks\"\n  - from_abstraction: 3 # Dukcapil Identity Verification Client\n    to_abstraction: 4 # Centralized Logging & Audit Trail\n    label: \"Logs requests\"\n  - from_abstraction: 4 # Centralized Logging & Audit Trail\n    to_abstraction: 8 # Elasticsearch Client Integration (Vendor Stack)\n    label: \"Indexes to Elasticsearch\"\n  - from_abstraction: 0 # API Gateway & Endpoints\n    to_abstraction: 4 # Centralized Logging & Audit Trail\n    label: \"Saves API logs\"\n  - from_abstraction: 0 # API Gateway & Endpoints\n    to_abstraction: 6 # Wilayah & NIK Base Management\n    label: \"Exposes wilayah API\"\n  - from_abstraction: 6 # Wilayah & NIK Base Management\n    to_abstraction: 2 # Koperasi Transaction Lifecycle Engine\n    label: \"Provides NIK/wilayah data\"\n  - from_abstraction: 7 # Web MVC Shell & Session Guard\n    to_abstraction: 0 # API Gateway & Endpoints\n    label: \"Shares session guard\"\n```", "\nGiven the following project abstractions and their relationships for the project ```` koperasi ````:\n\nAbstractions (Index # Name):\n- 0 # API Gateway & Endpoints\n\n- 1 # JWT Authentication & Authorization\n\n- 2 # Koperasi Transaction Lifecycle Engine\n\n- 3 # Dukcapil Identity Verification Client\n\n- 4 # Centralized Logging & Audit Trail\n\n- 5 # SK and Numbering System\n\n- 6 # Wilayah & NIK Base Management\n\n- 7 # Web MVC Shell & Session Guard\n\n- 8 # Elasticsearch Client Integration (Vendor Stack)\n\n\nContext about relationships and project summary:\nProject Summary:\nKoperasi is a backend service that helps manage cooperative (koperasi) transactions end\u2011to\u2011end.\nIt exposes an **API gateway** that authenticates with **JWT**, processes transaction lifecycles,\nissues official **SK/SP numbers**, and performs *Dukcapil* identity checks.\nThe app keeps a detailed **audit trail** and streams logs to *Elasticsearch*,\nwhile a web MVC shell provides the admin UI and session guard.\n\n\nRelationships (Indices refer to abstractions above):\n- From 0 (API Gateway & Endpoints\n) to 1 (JWT Authentication & Authorization\n): Authenticates via JWT\n- From 0 (API Gateway & Endpoints\n) to 2 (Koperasi Transaction Lifecycle Engine\n): Delegates transactions\n- From 2 (Koperasi Transaction Lifecycle Engine\n) to 5 (SK and Numbering System\n): Generates SK numbers\n- From 0 (API Gateway & Endpoints\n) to 3 (Dukcapil Identity Verification Client\n): Routes identity checks\n- From 3 (Dukcapil Identity Verification Client\n) to 4 (Centralized Logging & Audit Trail\n): Logs requests\n- From 4 (Centralized Logging & Audit Trail\n) to 8 (Elasticsearch Client Integration (Vendor Stack)\n): Indexes to Elasticsearch\n- From 0 (API Gateway & Endpoints\n) to 4 (Centralized Logging & Audit Trail\n): Saves API logs\n- From 0 (API Gateway & Endpoints\n) to 6 (Wilayah & NIK Base Management\n): Exposes wilayah API\n- From 6 (Wilayah & NIK Base Management\n) to 2 (Koperasi Transaction Lifecycle Engine\n): Provides NIK/wilayah data\n- From 7 (Web MVC Shell & Session Guard\n) to 0 (API Gateway & Endpoints\n): Shares session guard\n\n\nIf you are going to make a tutorial for ```` koperasi ````, what is the best order to explain these abstractions, from first to last?\nIdeally, first explain those that are the most important or foundational, perhaps user-facing concepts or entry points. Then move to more detailed, lower-level implementation details or supporting concepts.\n\nOutput the ordered list of abstraction indices, including the name in a comment for clarity. Use the format `idx # AbstractionName`.\n\n```yaml\n- 2 # FoundationalConcept\n- 0 # CoreClassA\n- 1 # CoreClassB (uses CoreClassA)\n- ...\n```\n\nNow, provide the YAML output:\n": "- 0 # API Gateway & Endpoints\n- 1 # JWT Authentication & Authorization\n- 7 # Web MVC Shell & Session Guard\n- 2 # Koperasi Transaction Lifecycle Engine\n- 5 # SK and Numbering System\n- 6 # Wilayah & NIK Base Management\n- 3 # Dukcapil Identity Verification Client\n- 4 # Centralized Logging & Audit Trail\n- 8 # Elasticsearch Client Integration (Vendor Stack)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"API Gateway & Endpoints\n\". This is Chapter 1.\n\nConcept Details:\n- Name: API Gateway & Endpoints\n\n- Description:\nThis is the app\u2019s front desk for machines. The Api module and its controllers receive requests, check formats and headers, validate auth, log what happened, then hand work off to helpers. Think of it like a receptionist who ensures visitors sign in (auth), speak the right language (JSON/XML), and reach the right department (transaction, Dukcapil, wilayah). It also wraps responses consistently and records execution time for observability. New features typically enter here as a new action or controller that plugs into the same logging and response pipelines.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\nThis is the first chapter.\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 676 # modules/Api/Api.php ---\n<?php \nnamespace app\\modules\\Api;\n\nuse yii\\base\\Module;\n\nclass Api extends Module {\n\n    public function init() {\n        parent::init();\n    }\n}\n?>\n\n--- File: 681 # modules/Api/components/TimeHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\base\\Component;\n\nclass TimeHelper extends Component {\n\n    public static function getElapsedTime($start, $percision = 3) {\n        return (string) round(microtime(true) - $start, $percision) . \" sec\";\n    }\n}\n?>\n\n--- File: 684 # modules/Api/controllers/DukcapilController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse app\\components\\HelperDukcapil;\nuse Yii;\nuse yii\\rest\\Controller;\n\nclass DukcapilController extends Controller {\n\n    public function actionValidasiData() {\n        if(Yii::$app->user->isGuest){\n            return $this->redirect(['/']);\n        }\n        $status = HelperDukcapil::CheckIsActiveValidateDukcapil();\n        if($status){\n            $validate = new HelperDukcapil($_POST);\n            $error = $validate->curlValidDukcapil();\n            if ($error !== true) {\n                Yii::error(\"Dukcapil error: $error | Params: \" . json_encode($_POST), __METHOD__);\n            }\n            $response = $validate->response();\n        }else{\n            $response = HelperDukcapil::AllowValidation();\n        }\n\n        return $this->asJson($response);\n    }\n\n}\n\n--- File: 686 # modules/Api/controllers/WilayahController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse app\\models\\Wilayah;\nuse yii\\rest\\Controller;\n\nclass WilayahController extends Controller {\n\n    public function actionGetChildWilayah($id, $tipe) {\n        if (!$id || !Yii::$app->request->isAjax) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n        \n        $data = Wilayah::getChildWilayah($id, $tipe);\n        \n        if (!$data) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n\n        $arr = [];\n        foreach($data as $d) {\n            if($tipe == 'Kelurahan') {\n                $arr[] = [\n                    'id' => $d['ID_WIL'],\n                    'nama' => $d['NM_KELURAHAN'],\n                ];\n                continue;\n            }\n\n            $arr[] = [\n                'id' => $d['WILAYAH_ID'],\n                'nama' => $d['NAMA'],\n            ];\n        }\n        return json_encode($arr);\n    }\n\n}\n\n--- File: 683 # modules/Api/controllers/AuthController.php ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\LogHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse yii\\base\\Exception;\nuse app\\models\\User;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass AuthController extends Controller {\n\n    const EXPR_TIME_TOKEN = \"+30 minutes\";\n    private static $hash = 'sha512';\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    'login-jwt' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    public function actionLoginJwt() {\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_JWT_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                try {\n                    $dataXml = simplexml_load_string(Yii::$app->request->rawBody);\n                    $json = json_encode($dataXml);\n                    $dataJson = json_decode($json, true);\n                } catch (\\Exception $e) {\n                    throw new Exception(\"Format XML Tidak Valid\", 400);\n                }\n            }\n\n            if( !array_key_exists('username', $dataJson)) {\n                throw new Exception(\"Data Username Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('password', $dataJson)) {\n                throw new Exception(\"Data Password Tidak Ditemukan\", 400);\n            }\n            $username = $dataJson['username'];\n            $password = $dataJson['password'];\n\n            $dataUser = $this->getUserAuth($username, $password);\n\n            if( !$dataUser ) {\n                throw new Exception(\"User Tidak Ditemukan\", 401);\n            }\n\n            $hashKey = Setting::getValue('jwt_key');\n            $tokenId = $this->generate_sign();\n            $issuedAt = time();\n            $notBefore = $issuedAt;\n            $expire = $notBefore + 1800; // adding 60 minutes\n            $serverName = \"AHU-ONLINE\";\n\n            $token = new JWT();\n            $data = [\n                'iat' => $issuedAt,\n                'jti' => $tokenId,\n                'iss' => $serverName,\n                'nbf' => $notBefore,\n                'exp' => $expire,\n                'data' => [\n                    'theOneThatWeGaveId'   => $dataUser->id,\n                    'theOneThatWeGaveName' => $username,\n                ]\n            ];\n\n            $secretKey = base64_encode($hashKey);\n            $algorithm = 'HS256';\n            $token = $token::encode($data, $secretKey, $algorithm);\n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function actionAuthorization(){\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_AUTH_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                throw new Exception(\"Format JSON Tidak Valid\");\n            }\n\n            if( !array_key_exists('nomor_transaksi', $dataJson)) {\n                throw new Exception(\"Data nomor_transaksi Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('secret_key', $dataJson)) {\n                throw new Exception(\"Data secret_key Tidak Ditemukan\", 400);\n            }\n\n\n            $nomor_transaksi = $dataJson['nomor_transaksi'];\n            $secret_key = $dataJson['secret_key'];\n\n            $dataAuth = $this->getUpdateAuth($nomor_transaksi, $secret_key);\n\n            if( !$dataAuth ) {\n                throw new Exception(\"Auth Tidak Berhasil\", 401);\n            }\n\n            $token = $dataAuth;\n        \n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function getUpdateAuth($nomor_transaksi, $secret_key){\n        $hashed = hash(self::$hash, $secret_key . $nomor_transaksi);\n        return $hashed;\n    }\n\n    public function getUserAuth($username, $password) {\n        // Tambahkan disini jika ada group lain yang diperbolehkan get JWT Token\n        $whitelist_group = [\n            'oss',\n            'ods',\n        ];\n        $user = User::findByUsername($username);\n\n        if( !$user ) {\n            throw new Exception(\"User Tidak Ditemukan\", 404);\n        }\n\n        $cekPass = $user->validatePassword($password);\n\n        if( !$cekPass ) {\n            throw new Exception(\"Username / Password Salah\", 401);\n        }\n\n        $groups = ArrayHelper::getColumn($user->userGroup, 'group_id');\n        \n        foreach($whitelist_group as $whitelist) {\n            if( in_array($whitelist, $groups) ) {\n                return $user;\n            }\n        }\n\n        return false;\n    }\n\n    public static function generate_sign() {\n        $now = time();\n        $setengah_jam = (int)floor($now / 30 / 60);\n        $t = 'candrabeqx' . $setengah_jam . 'docotel';\n        $x = crypt($t, \"$2y$10$\" . substr(md5($t),0,22));\n\n        return $x;\n    }\n\n}\n?>\n\n--- File: 685 # modules/Api/controllers/TransaksiController.php ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Url;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\ApiHelper;\nuse app\\components\\LogHelper;\nuse app\\models\\TransaksiKoperasi;\nuse app\\modules\\Api\\components\\AuthHelper;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse app\\modules\\Api\\components\\TransaksiHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse yii\\base\\Exception;\nuse app\\models\\bakum\\LogCodex;\nuse app\\components\\helper\\TelegramHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass TransaksiController extends Controller\n{\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    // 'index' => ['POST'],\n                    'dummy' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    /**\n     * Function untuk Output Response sekaligus Save Logging\n     * \n     * @param Array Data Request\n     * \n     * @return JSON/XML Output Response Berdasarkan\n     */\n    public function responseAndSaveLog(Array $data, $typeFormat = 'JSON')\n    {\n        $this->saveLog($data);\n\n        return $this->showResponse($data['response'], $typeFormat);\n    }\n\n    /**\n     * Function untuk save Log\n     * \n     * @param Array Data Request\n     * \n     * @return Boolean Hasil Dari Saving Log\n     */\n    public function saveLog(Array $data)\n    {\n        return LogHelper::saveLog([\n            'service_uri' => $data['url'],\n            'request' => $data['request'],\n            'response' => $data['response'],\n            'nik' => $data['nik'],\n            'additional_data' => json_encode($data['additional_data']),\n            'is_error' => $data['is_error'],\n            'type' => $data['type'],\n            'execution_time' => TimeHelper::getElapsedTime($data['startTime']),\n        ]);\n    }\n\n    /**\n     * Function untuk menampilkan response berdasarkan format\n     * \n     * @param Array Response Array\n     * @param String Format Type untuk Response\n     * \n     * @return JSON/XML Return response sesuai type\n     */\n    public function showResponse(Array $res, $type = 'JSON')\n    {\n        if(!$res || !$type) {\n            throw new \\Exception;\n        }\n        // Normalize Param Type\n        $type = strtoupper($type);\n        \n        if ($type == 'XML') {\n            return $this->asXml($res);\n        }\n        elseif ($type == 'JSON') {\n            return $this->asJson($res);\n        }\n        else {\n            throw new \\Exception;\n        }\n    }\n\n    /**\n     * Function untuk menerima hit perubahan transaksi dari ODS\n     * \n     * @param AUTH_KEY\n     * @param XML_DATA\n     * \n     * @return JSON\n     */\n    public function actionIndex()\n    {\n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"ODS_API_INCOMMING\";\n        // Get Headers\n        $headers = Yii::$app->request->headers;\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n\n        if (!Yii::$app->request->isPost) {\n            $res = [\n                'code' => '01',\n                'message' => 'Method Not Allowed',\n                'status' => 405\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if($headers['Content-Type'] != 'application/xml') {\n            $res = [\n                'code' => '02',\n                'message' => 'Content Type Is Not application/xml',\n                'status' => 415\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $dataXml = simplexml_load_string($data);\n        }   \n        catch(\\Exception $e) {\n            $res = [\n                'code' => '03',\n                'message' => 'XML Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $json = json_encode($dataXml);\n        $dataJson = json_decode($json, true);\n\n        $nik = $dataJson['data']['nik'];\n\n        // Cek Auth\n        if (empty($headers['AuthJWT'])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Empty Headers',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $auth_jwt = explode(\"Bearer \", $headers['AuthJWT']);\n\n        if (empty($auth_jwt[1])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Header Format is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $token = new JWT;\n            $hashKey = Setting::getValue('jwt_key');\n            $secretKey = base64_encode($hashKey);\n            $token = $token::decode($auth_jwt[1], $secretKey, ['HS256']);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication failed - ' . $e->getMessage(),\n                'status' => 401\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        $createTrans = TransaksiHelper::createTrans($dataJson);\n\n        if(!$createTrans['status']) {\n            $res = [\n                'code' => '05',\n                'message' => 'Failed To Create Transaction.',\n                'additional_info' => $createTrans['info'],\n                'status' => 500\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => TransaksiHelper::getData($dataJson,'data.nik'),\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->responseAndSaveLog([\n            'url' => $url,\n            'request' => $data,\n            'response' => $res,\n            'nik' => TransaksiHelper::getData($dataJson,'data.nik'),\n            'additional_data' => $headers->toArray(),\n            'is_error' => 0,\n            'type' => $type_api,\n            'startTime' => $start,\n        ]);\n    }\n\n    /**\n     * Action API untuk url hit sendData Api Dennis\n     * \n     * @param AUTH_KEY\n     * @param JSON_DATA\n     * \n     * @return Json\n     */\n    public function actionDummy()\n    {\n        \n        $headers = Yii::$app->request->headers;\n        if($headers['Content-Type'] != 'application/json') {\n            $res = [\n                'code' => '01',\n                'message' => 'Format Must Be In Json',\n                'status' => 415\n            ];\n\n            return $this->asJson($res);\n        }\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n        $dataJson = json_decode($data, true);\n        $authKey = $headers['auth'];\n        $nik =  $dataJson['data']['koperasi']['nik'];\n        if(!$dataJson) {\n            $res = [\n                'code' => '02',\n                'message' => 'Json Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->asJson($res);\n        }\n\n        $auth = AuthHelper::checkAuth($authKey, $nik);\n\n        if(!$auth) {\n            $res = [\n                'code' => '03',\n                'message' => 'Authentication failed',\n                'status' => 401\n            ];\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->asJson($res);\n    }\n\n    /**\n     * Action API untuk url hit Update NIK dari ODS\n     * \n     * @param AUTH_KEY\n     * @param JSON_DATA\n     * \n     * @return Json\n     */\n    public function actionUpdate()\n    { \n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"ODS_API_INCOMMING\";\n        // Get Headers\n        $headers = Yii::$app->request->headers;\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n\n        if (!Yii::$app->request->isPost) {\n            $res = [\n                'code' => '01',\n                'message' => 'Method Not Allowed',\n                'status' => 405\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if ($headers['Content-Type'] != 'application/xml') {\n            $res = [\n                'code' => '02',\n                'message' => 'Content Type Is Not application/xml',\n                'status' => 415\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $dataXml = simplexml_load_string($data);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '03',\n                'message' => 'XML Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $json = json_encode($dataXml);\n        $dataJson = json_decode($json, true);\n\n        $nomor_transaksi = $dataJson['data']['nomor_transaksi'];\n\n        // Cek Auth\n        if (empty($headers['AuthJWT'])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Empty Headers',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $auth_jwt = explode(\"Bearer \", $headers['AuthJWT']);\n\n        if (empty($auth_jwt[1])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Header Format is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $token = new JWT;\n            $hashKey = Setting::getValue('jwt_key');\n            $secretKey = base64_encode($hashKey);\n            $token = $token::decode($auth_jwt[1], $secretKey, ['HS256']);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication failed - ' . $e->getMessage(),\n                'status' => 401\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        $updateTrans = TransaksiHelper::updateTrans($dataJson);\n\n        if(!$updateTrans['status']) {\n            $res = [\n                'code' => '05',\n                'message' => 'Failed To Create Transaction.',\n                'additional_info' => $updateTrans['info'],\n                'status' => 500\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => TransaksiHelper::getData($dataJson,'data.nomor_transaksi'),\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->responseAndSaveLog([\n            'url' => $url,\n            'request' => $data,\n            'response' => $res,\n            'nik' => TransaksiHelper::getData($dataJson,'data.nomor_transaksi'),\n            'additional_data' => $headers->toArray(),\n            'is_error' => 0,\n            'type' => $type_api,\n            'startTime' => $start,\n        ]);\n    }\n\n    /**\n     * Function untuk menerima hit insert transaksi pendirian dari ODS\n     * \n     * @param AUTH_KEY JWT\n     * @param JSON_DATA\n     * \n     * @return JSON\n     */\n    public function actionInsert()\n    {\n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"ODS_API_INCOMMING\";\n        // Get Headers\n        $headers = Yii::$app->request->headers;\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n\n        if (!Yii::$app->request->isPost) {\n            $res = [\n                'code' => '01',\n                'message' => 'Method Not Allowed',\n                'status' => 405\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if ($headers['Content-Type'] != 'application/xml') {\n            $res = [\n                'code' => '02',\n                'message' => 'Content Type Is Not application/xml',\n                'status' => 415\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $dataXml = simplexml_load_string($data);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '03',\n                'message' => 'XML Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $json = json_encode($dataXml);\n        $dataJson = json_decode($json, true);\n\n        // Cek Auth\n        if (empty($headers['AuthJWT'])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Empty Headers',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $auth_jwt = explode(\"Bearer \", $headers['AuthJWT']);\n\n        if (empty($auth_jwt[1])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Header Format is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $token = new JWT;\n            $hashKey = Setting::getValue('jwt_key');\n            $secretKey = base64_encode($hashKey);\n            $token = $token::decode($auth_jwt[1], $secretKey, ['HS256']);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication failed - ' . $e->getMessage(),\n                'status' => 401\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if (empty($dataJson['data'])) {\n            $res = [\n                'code' => '05',\n                'message' => 'Invalid Parameter.',\n                'additional_info' => 'Parameter Data tidak boleh kosong',\n                'status' => 400\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => '',\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        TransaksiHelper::filterEmptyArray($dataJson);\n        $insertTransMigrasi = TransaksiHelper::insertTransMigrasi($dataJson['data']);\n\n        if (!$insertTransMigrasi['status']) {\n            $res = [\n                'code' => '06',\n                'message' => 'Failed To Create Transaction.',\n                'additional_info' => $insertTransMigrasi['info'],\n                'status' => 500\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => TransaksiHelper::getData($dataJson, 'data.koperasi.nik'),\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->responseAndSaveLog([\n            'url' => $url,\n            'request' => $data,\n            'response' => $res,\n            'nik' => TransaksiHelper::getData($dataJson, 'data.koperasi.nik'),\n            'additional_data' => $headers->toArray(),\n            'is_error' => 0,\n            'type' => $type_api,\n            'startTime' => $start,\n        ]);\n    }\n\n    /**\n     * Function untuk menerima hit edit transaksi dari ODS\n     * ODS hanya bisa mengedit transaksi yang is_migrasi = 1\n     * \n     * @param AUTH_KEY\n     * @param JSON\n     * \n     * @return JSON\n     */\n    public function actionEdit()\n    {\n        // Start Exec Time\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"ODS_API_INCOMMING\";\n        // Get Headers\n        $headers = Yii::$app->request->headers;\n        // Get Raw Body\n        $data = Yii::$app->request->rawBody;\n\n        if (!Yii::$app->request->isPost) {\n            $res = [\n                'code' => '01',\n                'message' => 'Method Not Allowed',\n                'status' => 405\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if ($headers['Content-Type'] != 'application/xml') {\n            $res = [\n                'code' => '02',\n                'message' => 'Content Type Is Not application/xml',\n                'status' => 415\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $dataXml = simplexml_load_string($data);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '03',\n                'message' => 'XML Format Is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $json = json_encode($dataXml);\n        $dataJson = json_decode($json, true);\n\n        // Cek Auth\n        if (empty($headers['AuthJWT'])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Empty Headers',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n        $auth_jwt = explode(\"Bearer \", $headers['AuthJWT']);\n\n        if (empty($auth_jwt[1])) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication Failed - Header Format is Not Valid',\n                'status' => 400\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        try {\n            $token = new JWT;\n            $hashKey = Setting::getValue('jwt_key');\n            $secretKey = base64_encode($hashKey);\n            $token = $token::decode($auth_jwt[1], $secretKey, ['HS256']);\n        } catch(\\Exception $e) {\n            $res = [\n                'code' => '04',\n                'message' => 'Authentication failed - ' . $e->getMessage(),\n                'status' => 401\n            ];\n\n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => null,\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        if (empty($dataJson['nik']) || empty($dataJson['data'])) {\n            $res = [\n                'code' => '05',\n                'message' => 'Invalid Parameter.',\n                'additional_info' => 'Parameter NIK / Data tidak boleh kosong',\n                'status' => 400\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => '',\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n        TransaksiHelper::filterEmptyArray($dataJson);\n        $editTransMigrasi = TransaksiHelper::editTransMigrasi($dataJson['nik'], $dataJson['data']);\n\n        if (!$editTransMigrasi['status']) {\n            $res = [\n                'code' => '06',\n                'message' => 'Failed To Edit Transaction.',\n                'additional_info' => $editTransMigrasi['info'],\n                'status' => 500\n            ];\n    \n            return $this->responseAndSaveLog([\n                'url' => $url,\n                'request' => $data,\n                'response' => $res,\n                'nik' => TransaksiHelper::getData($dataJson, 'data.koperasi.nik'),\n                'additional_data' => $headers->toArray(),\n                'is_error' => 1,\n                'type' => $type_api,\n                'startTime' => $start,\n            ]);\n        }\n\n\n        $res = [\n            'code' => '00',\n            'message' => 'Success',\n            'status' => 200\n        ];\n\n        return $this->responseAndSaveLog([\n            'url' => $url,\n            'request' => $data,\n            'response' => $res,\n            'nik' => TransaksiHelper::getData($dataJson, 'data.koperasi.nik'),\n            'additional_data' => $headers->toArray(),\n            'is_error' => 0,\n            'type' => $type_api,\n            'startTime' => $start,\n        ]);\n    }\n\n    public function actionSandbox() {\n        return ApiHelper::getKoperasiJson(155);\n    }\n}\n?>\n\n--- File: 22 # components/ApiHelper.php (structure only) ---\n<?php\n\nnamespace app\\components;\n\nuse Yii;\nuse app\\models\\SK;\nuse app\\models\\Wilayah;\nuse app\\models\\WilayahOds;\nuse yii\\base\\Component;\nuse app\\models\\bakum\\KBLIBakum;\nuse app\\models\\bakum\\WilayahSABH;\nuse app\\models\\notariat\\Negara;\nuse app\\models\\PemilikManfaat;\nuse app\\models\\PesanNama;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\TransaksiPembubaran;\n\nclass ApiHelper extends Component\n{\n\n    public static function getKoperasiJson($id, $asArray = false)\n    {\n\n        $data = TransaksiKoperasi::find()->where(['id' => $id])->one();\n\n        $json  = [\n            'data' => [\n                'transaksi' => self::jsonTransaksi($data, true),\n                'koperasi' => self::jsonKoperasi($data, true),\n                'kedudukan' => self::jsonKedudukan($data, true),\n                'akta_notaris' => self::jsonNotaris($data, true),\n                'rapat' => self::jsonRapat($data, true),\n                'koperasi_pembentuk' => self::jsonSekunder($data, true),\n                // Take Out 8 Juli 2019\n                // Tidak Perlu Pakai Badan Hukum Gabung Dan Pisah (Dari User AHU)\n                // 'badan_hukum_gabung' => self::jsonGabung($data, true),\n                // 'badan_hukum_pisah' => self::jsonPisah($data, true),\n                'tahun_kbli' => !empty(self::jsonKbli($data, true)[1]) ? self::jsonKbli($data, true)[1] : \"\",\n                'aktivitas_usaha' => !empty(self::jsonKbli($data, true)[0]) ? self::jsonKbli($data, true)[0] : \"\",\n                'modal_koperasi' => self::jsonModalKoperasi($data, true),\n                'periode_pengurus' => self::jsonPeriodePengurus($data, true),\n                'pengawas_pengurus' => self::jsonAnggota($data, true),\n            ],\n        ];\n\n        return self::resultArray($json, $asArray);\n    }\n\n    public static function cekInstance($data, $class)\n    {\n... (1066 more lines)\n\n--- File: 808 # web/index.php ---\n<?php\n\n// comment out the following two lines when deployed to production\ndefined('YII_DEBUG') or define('YII_DEBUG', true);\ndefined('YII_ENV') or define('YII_ENV', 'dev');\n\nrequire __DIR__ . '/../vendor/autoload.php';\nrequire __DIR__ . '/../vendor/yiisoft/yii2/Yii.php';\n\n$config = require __DIR__ . '/../config/web.php';\n\n(new yii\\web\\Application($config))->run();\n\n\n--- File: 13 # components/LogHelper.php ---\n<?php\nnamespace app\\components;\nuse yii\\base\\Component;\nuse app\\models\\LogService;\n\nclass LogHelper extends Component\n{\n\n    public static function saveLog($data = [])\n    {\n        if (empty($data)) {\n            return false;\n        }\n        $model =  new LogService;\n\n        if(!isset($data['created_at'])) {\n            $data['created_at'] = (String) date('Y-m-d H:i:s');\n        }\n\n        if(!isset($data['ip_address'])) {\n            $data['ip_address'] = (String) self::getUserHostAddress();\n        }\n        foreach ($data as $key => $val) {\n            if(is_array($val) || is_object($val)) {\n                $data[$key] = json_encode($val);\n            }\n        }\n        $model->attributes = $data;\n        if (!$model->save()) {\n            return false;\n        }\n        return true;\n    }\n\n    public static function getUserHostAddress()\n    {\n        $ipaddress = '';\n        if (getenv('HTTP_CLIENT_IP'))\n            $ipaddress = getenv('HTTP_CLIENT_IP');\n        else if(getenv('HTTP_X_FORWARDED_FOR'))\n            $ipaddress = getenv('HTTP_X_FORWARDED_FOR');\n        else if(getenv('HTTP_X_FORWARDED'))\n            $ipaddress = getenv('HTTP_X_FORWARDED');\n        else if(getenv('HTTP_FORWARDED_FOR'))\n            $ipaddress = getenv('HTTP_FORWARDED_FOR');\n        else if(getenv('HTTP_FORWARDED'))\n           $ipaddress = getenv('HTTP_FORWARDED');\n        else if(getenv('REMOTE_ADDR'))\n            $ipaddress = getenv('REMOTE_ADDR');\n        else\n            $ipaddress = 'UNKNOWN';\n        return $ipaddress;\n    }\n\n}\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 1: API Gateway & Endpoints\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"JWT Authentication & Authorization\n\". This is Chapter 2.\n\nConcept Details:\n- Name: JWT Authentication & Authorization\n\n- Description:\nThe app uses JSON Web Tokens as visitor badges. Clients call an auth endpoint with username/password; if approved, they receive a time\u2011boxed token signed with a secret. Every protected API expects this token in headers and rejects expired or tampered ones. Helpers build headers/payloads, sign, validate, and extract claims. Settings hold secrets; User handles credential checks; controllers wire it together. Picture it as issuing and checking temporary access cards to different corridors, with expiration and signature checks at each door.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 679 # modules/Api/components/JWTHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\helpers\\Json;\nuse app\\models\\Setting;\n\nclass JWTHelper {\n\n    const SECRET = 'D0coSp4rtan2016';\n    const HASH_ALGO = \"sha256\";\n\n    public static function makeHeader() {\n        $data = [\n            \"alg\" => \"HS256\",\n            \"typ\" => \"JWT\"\n        ];\n\n        return base64_encode(Json::encode($data) );\n    }\n\n    public static function makePayload($payload) {\n        return base64_encode( Json::encode($payload) );\n    }\n\n    public static function makeSignature($header, $payload) {\n        $secretKey = Setting::getValue('jwt_token', self::SECRET);\n        $data = $header . \".\" . $payload;\n        return hash_hmac(self::HASH_ALGO, $data, self::SECRET);\n    }\n\n    public static function validateSignature($header, $payload, $signature) {\n        $checkSign = self::makeSignature($header, $payload);\n        return $checkSign == $signature;\n    }\n\n    public static function getDataPayload($payload) {\n        return base64_decode($payload);\n    }\n\n    public static function getDataHeader($header) {\n        return base64_decode($header);\n    }\n}\n?>\n\n--- File: 687 # modules/Api/models/JWTToken.php ---\n<?php \nnamespace app\\modules\\Api\\models;\n\nuse yii\\base\\Model;\nuse app\\modules\\Api\\components\\JWTHelper;\nuse yii\\helpers\\Json;\nuse yii\\base\\Exception;\n\nclass JWTToken extends Model {\n    public $token,\n           $header,\n           $payload,\n           $signature;\n\n    public function __construct($token = null)\n    {\n        parent::__construct();\n        $this->header = JWTHelper::makeHeader();\n\n        if($token) {\n            $this->mappingToken($token);\n        }\n    }\n\n\n    public function mappingToken($token) {\n        $removeBear = explode(\"Bearer \", $token);\n        $token = $removeBear[count($removeBear) - 1];\n        \n        $part = explode(\".\", $token);\n        $this->header = $part[0];\n        $this->payload = $part[1];\n        $this->signature = $part[2];\n        $this->token = $token;\n    }\n\n    public function validateSignature() {\n        return JWTHelper::validateSignature($this->header, $this->payload, $this->signature);\n    }\n\n    public function checkExpired() {\n        $data = $this->getDataPayload();\n\n        if(!array_key_exists('exp', $data)) {\n            return true;\n        }\n\n        $expired = Date(\"Y-m-d H:i:s\", strtotime($data['exp']));\n        $now = Date(\"Y-m-d H:i:s\");\n        \n        return $now <= $expired;\n    }\n\n    public function getDataPayload() {\n        $data = JWTHelper::getDataPayload($this->payload);\n        $jsonData = Json::decode($data);\n\n        if( !$jsonData ) {\n            throw new Exception(\"Format Payload Tidak Valid\");\n        }\n        return $jsonData;\n    }\n\n    public function generateToken()\n    {\n        $token = $this->header . \".\" . $this->payload . \".\" . $this->signature;\n        return $token;\n    }\n\n    public function setPayload($payload) {\n        $this->payload = JWTHelper::makePayload($payload);\n        $this->signature = JWTHelper::makeSignature($this->header, $this->payload);\n        return $this;\n    }\n}\n?>\n\n--- File: 618 # models/Setting.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\n\n/**\n * This is the model class for table \"{{%setting}}\".\n *\n * @property int $id\n * @property int $m_groud_setting_id\n * @property string $nama\n * @property string $value\n * @property string $is_deleted\n * @property string $created_by\n * @property string $created_date\n * @property string $updated_by\n * @property string $updated_date\n * @property string $deleted_by\n * @property string $deleted_date\n */\nclass Setting extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%setting}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['m_groud_setting_id'], 'required'],\n            [['m_groud_setting_id'], 'integer'],\n            [['is_deleted'], 'string'],\n            [['created_date', 'updated_date', 'deleted_date'], 'safe'],\n            [['nama'], 'string', 'max' => 255],\n            [['value'], 'string', 'max' => 250],\n            [['created_by', 'updated_by', 'deleted_by'], 'string', 'max' => 36],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'm_groud_setting_id' => 'M Groud Setting ID',\n            'nama' => 'Nama',\n            'value' => 'Value',\n            'is_deleted' => 'Is Deleted',\n            'created_by' => 'Created By',\n            'created_date' => 'Created Date',\n            'updated_by' => 'Updated By',\n            'updated_date' => 'Updated Date',\n            'deleted_by' => 'Deleted By',\n            'deleted_date' => 'Deleted Date',\n        ];\n    }\n\n    public static function getValue($nama,$default = null) {\n        $data = self::find()->where(['nama' => $nama])->one();\n        if(!$data) {\n            return $default;\n        }\n        return $data->value;\n    }\n\n    public static function getIsCekDukcapil()\n    {\n        return self::find()->select('value')->where(['nama' => 'is_active_dukcapil'])->scalar();\n    }\n\n    public static function getDukcapilCredential()\n    {\n        return self::find()->where(['key' => 'credential_dukcapil'])->one();\n    }\n}\n\n\n--- File: 625 # models/User.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\base\\NotSupportedException;\nuse app\\models\\UserDinas;\n\n/**\n * This is the model class for table \"{{%user}}\".\n *\n * @property int $id\n * @property string $username\n * @property string $email\n * @property string $password\n * @property string $nama\n * @property string $telepon\n * @property int $is_superuser\n * @property int $user_type\n * @property int $is_active\n * @property string $created_date\n * @property string $modified_date\n */ \nclass User extends \\docotel\\dcms\\models\\User implements \\yii\\web\\IdentityInterface\n{\n    const STATUS_ACTIVE = '10';\n    const STATUS_INACTIVE = 0;\n\n    public $data_notaris;\n\n    public static function tableName()\n    {\n        return '{{%user}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db');\n    }\n    \n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'username' => 'Username',\n            'email' => 'Email',\n            'password' => 'Password',\n            'nama' => 'Nama',\n            'telepon' => 'Telepon',\n            'is_superuser' => 'Is Superuser',\n            'user_type' => 'User Type',\n            'is_active' => 'Is Active',\n            'created_date' => 'Created Date',\n            'modified_date' => 'Modified Date',\n        ];\n    } \n\n\n    /**\n     * {@inheritdoc}\n     */\n    // public static function findIdentity($id)\n    // {\n    //     return static::findOne(['id' => $id, 'is_active' => self::STATUS_ACTIVE]);\n    // }\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function findIdentityByAccessToken($token, $type = null)\n    {\n        throw new NotSupportedException('\"findIdentityByAccessToken\" is not implemented.');\n    }\n\n    /**\n     * Finds user by username\n     *\n     * @param string $username\n     * @return static|null\n     */\n    public static function findByUsername($username)\n    {\n        return static::findOne(['username' => $username, 'status' => self::STATUS_ACTIVE]);\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getId()\n    {\n        return $this->getPrimaryKey();\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function getAuthKey()\n    {\n        return $this->auth_key;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function validateAuthKey($authKey)\n    {\n        return $this->auth_key === $authKey;\n    }\n\n    /**\n     * Validates password\n     *\n     * @param string $password password to validate\n     * @return bool if password provided is valid for current user\n     */\n    public function validatePassword($password)\n    {\n        return Yii::$app->security->validatePassword($password, $this->password_hash);\n    }\n\n    public function setPassword($password)\n    {\n        $this->password_hash = Yii::$app->security->generatePasswordHash($password);\n    }\n\n    public function generateAuthKey()\n    {\n        $this->auth_key = Yii::$app->security->generateRandomString();\n    }\n\n    public function getUserDinas()\n    {\n        return $this->hasOne(UserDinas::className(), ['user_id' => 'id']);\n    }\n\n}\n\n\n--- File: 683 # modules/Api/controllers/AuthController.php ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\LogHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse yii\\base\\Exception;\nuse app\\models\\User;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass AuthController extends Controller {\n\n    const EXPR_TIME_TOKEN = \"+30 minutes\";\n    private static $hash = 'sha512';\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    'login-jwt' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    public function actionLoginJwt() {\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_JWT_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                try {\n                    $dataXml = simplexml_load_string(Yii::$app->request->rawBody);\n                    $json = json_encode($dataXml);\n                    $dataJson = json_decode($json, true);\n                } catch (\\Exception $e) {\n                    throw new Exception(\"Format XML Tidak Valid\", 400);\n                }\n            }\n\n            if( !array_key_exists('username', $dataJson)) {\n                throw new Exception(\"Data Username Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('password', $dataJson)) {\n                throw new Exception(\"Data Password Tidak Ditemukan\", 400);\n            }\n            $username = $dataJson['username'];\n            $password = $dataJson['password'];\n\n            $dataUser = $this->getUserAuth($username, $password);\n\n            if( !$dataUser ) {\n                throw new Exception(\"User Tidak Ditemukan\", 401);\n            }\n\n            $hashKey = Setting::getValue('jwt_key');\n            $tokenId = $this->generate_sign();\n            $issuedAt = time();\n            $notBefore = $issuedAt;\n            $expire = $notBefore + 1800; // adding 60 minutes\n            $serverName = \"AHU-ONLINE\";\n\n            $token = new JWT();\n            $data = [\n                'iat' => $issuedAt,\n                'jti' => $tokenId,\n                'iss' => $serverName,\n                'nbf' => $notBefore,\n                'exp' => $expire,\n                'data' => [\n                    'theOneThatWeGaveId'   => $dataUser->id,\n                    'theOneThatWeGaveName' => $username,\n                ]\n            ];\n\n            $secretKey = base64_encode($hashKey);\n            $algorithm = 'HS256';\n            $token = $token::encode($data, $secretKey, $algorithm);\n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function actionAuthorization(){\n        $start = microtime(true);\n        $url = Yii::$app->request->absoluteUrl;\n        $type_api = \"GET_AUTH_TOKEN\";\n        $headers = Yii::$app->request->headers;\n        $body = Json::encode(Yii::$app->request->bodyParams);\n\n        try {\n            $dataJson = Json::decode($body);\n\n            if( !$dataJson ) {\n                throw new Exception(\"Format JSON Tidak Valid\");\n            }\n\n            if( !array_key_exists('nomor_transaksi', $dataJson)) {\n                throw new Exception(\"Data nomor_transaksi Tidak Ditemukan\", 400);\n            }\n\n            if( !array_key_exists('secret_key', $dataJson)) {\n                throw new Exception(\"Data secret_key Tidak Ditemukan\", 400);\n            }\n\n\n            $nomor_transaksi = $dataJson['nomor_transaksi'];\n            $secret_key = $dataJson['secret_key'];\n\n            $dataAuth = $this->getUpdateAuth($nomor_transaksi, $secret_key);\n\n            if( !$dataAuth ) {\n                throw new Exception(\"Auth Tidak Berhasil\", 401);\n            }\n\n            $token = $dataAuth;\n        \n        }\n        catch(\\Exception $e) {\n            $res = [\n                'code' => '01',\n                'message' => $e->getMessage(),\n                'status' => $e->getCode(),\n            ];\n            \n            $log = LogHelper::saveLog([\n                'service_uri' => $url,\n                'request' => $body,\n                'response' => $res,\n                'additional_data' => Json::encode( $headers->toArray() ),\n                'is_error' => 1,\n                'type' => $type_api,\n                'execution_time' => TimeHelper::getElapsedTime($start),\n            ]);\n\n            return $this->asJson($res);\n        }\n\n        $res = [\n            'code' => '02',\n            'message' => 'success',\n            'token' => $token,\n            'status' => 200\n        ];\n\n        $log = LogHelper::saveLog([\n            'service_uri' => $url,\n            'request' => $body,\n            'response' => $res,\n            'additional_data' => Json::encode( $headers->toArray() ),\n            'is_error' => 0,\n            'type' => $type_api,\n            'execution_time' => TimeHelper::getElapsedTime($start),\n        ]);\n        \n        return $this->asJson($res);\n    }\n\n    public function getUpdateAuth($nomor_transaksi, $secret_key){\n        $hashed = hash(self::$hash, $secret_key . $nomor_transaksi);\n        return $hashed;\n    }\n\n    public function getUserAuth($username, $password) {\n        // Tambahkan disini jika ada group lain yang diperbolehkan get JWT Token\n        $whitelist_group = [\n            'oss',\n            'ods',\n        ];\n        $user = User::findByUsername($username);\n\n        if( !$user ) {\n            throw new Exception(\"User Tidak Ditemukan\", 404);\n        }\n\n        $cekPass = $user->validatePassword($password);\n\n        if( !$cekPass ) {\n            throw new Exception(\"Username / Password Salah\", 401);\n        }\n\n        $groups = ArrayHelper::getColumn($user->userGroup, 'group_id');\n        \n        foreach($whitelist_group as $whitelist) {\n            if( in_array($whitelist, $groups) ) {\n                return $user;\n            }\n        }\n\n        return false;\n    }\n\n    public static function generate_sign() {\n        $now = time();\n        $setengah_jam = (int)floor($now / 30 / 60);\n        $t = 'candrabeqx' . $setengah_jam . 'docotel';\n        $x = crypt($t, \"$2y$10$\" . substr(md5($t),0,22));\n\n        return $x;\n    }\n\n}\n?>\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 2: JWT Authentication & Authorization\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"Web MVC Shell & Session Guard\n\". This is Chapter 3.\n\nConcept Details:\n- Name: Web MVC Shell & Session Guard\n\n- Description:\nThe Yii2 MVC layer renders the admin and user interfaces. AppAsset registers CSS/JS; layouts define the shell (header/sidebar/user menu); widgets (Alert) unify feedback; BaseController enforces session invariants and guards (e.g., notaris data presence). Think of it as the building\u2019s lobby and corridors: styles and scripts are the interior design, layouts are the floor plan, controllers are entrances, and the guard ensures only valid sessions roam the halls.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 8 # components/BaseController.php ---\n<?php\n\nnamespace app\\components;\n\nuse Yii;\nuse docotel\\dcms\\components\\BaseController as DocoController;\nuse yii\\filters\\AccessControl;\nuse yii\\web\\Response;\nuse yii\\filters\\VerbFilter;\nuse app\\models\\LoginForm;\nuse app\\models\\ContactForm;\nuse app\\models\\notariat\\Notaris;\n\nclass BaseController extends DocoController {\n    // public $layout = '@app/views/layouts/main.php';\n    public $dummy_login =[\n        'id_notaris' => 75561,\n        'nama_notaris' => \"SABH S.H M.Kn\",\n        'wilayah_id' => 1,\n        'email' => \"sabh@koperasi.com\",\n        'telepon' => \"0912345678\",\n    ];\n\n    public function init(){\n    \tif(!Yii::$app->user->isGuest) {\n    \t\tif(empty(Yii::$app->session->get('data_notaris')) && Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris') {\n                Yii::$app->user->logout();\n                return Yii::$app->response->redirect('/site/login');\n    \t\t}\n    \t}\n    \tparent::init();\n    }\n\n}\n\n--- File: 4 # assets/AppAsset.php ---\n<?php\n/**\n * @link http://www.yiiframework.com/\n * @copyright Copyright (c) 2008 Yii Software LLC\n * @license http://www.yiiframework.com/license/\n */\n\nnamespace app\\assets;\n\nuse yii\\web\\AssetBundle;\n\n/**\n * Main application asset bundle.\n *\n * @author Qiang Xue <qiang.xue@gmail.com>\n * @since 2.0\n */\nclass AppAsset extends AssetBundle\n{\n    public $basePath = '@webroot';\n    public $baseUrl = '@web';\n    public $css = [\n        'css/site.css',\n        'frontend/dist/styles/main.css',\n        // 'koperasi-dashboard/dist/styles/main.css',\n        // 'css/main.css',\n    ];\n    public $js = [\n        'http://cdnjs.cloudflare.com/ajax/libs/strophe.js/1.2.4/strophe.min.js',\n        'https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js',\n        // 'https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js',\n        'frontend/dist/scripts/main.js',\n        'frontend/dist/scripts/vendor.js',\n        'js/global/logSyarat.js',\n    ];\n    public $depends = [\n        'yii\\web\\JqueryAsset',\n        'yii\\web\\YiiAsset',\n        // 'yii\\bootstrap\\BootstrapAsset',\n        'yii\\bootstrap\\BootstrapPluginAsset'\n    ];\n}\n\n\n--- File: 845 # widgets/Alert.php ---\n<?php\nnamespace app\\widgets;\n\nuse Yii;\n\n/**\n * Alert widget renders a message from session flash. All flash messages are displayed\n * in the sequence they were assigned using setFlash. You can set message as following:\n *\n * ```php\n * Yii::$app->session->setFlash('error', 'This is the message');\n * Yii::$app->session->setFlash('success', 'This is the message');\n * Yii::$app->session->setFlash('info', 'This is the message');\n * ```\n *\n * Multiple messages could be set as follows:\n *\n * ```php\n * Yii::$app->session->setFlash('error', ['Error 1', 'Error 2']);\n * ```\n *\n * @author Kartik Visweswaran <kartikv2@gmail.com>\n * @author Alexander Makarov <sam@rmcreative.ru>\n */\nclass Alert extends \\yii\\bootstrap\\Widget\n{\n    /**\n     * @var array the alert types configuration for the flash messages.\n     * This array is setup as $key => $value, where:\n     * - key: the name of the session flash variable\n     * - value: the bootstrap alert type (i.e. danger, success, info, warning)\n     */\n    public $alertTypes = [\n        'error'   => 'alert-danger',\n        'danger'  => 'alert-danger',\n        'success' => 'alert-success',\n        'info'    => 'alert-info',\n        'warning' => 'alert-warning'\n    ];\n    /**\n     * @var array the options for rendering the close button tag.\n     * Array will be passed to [[\\yii\\bootstrap\\Alert::closeButton]].\n     */\n    public $closeButton = [];\n\n\n    /**\n     * {@inheritdoc}\n     */\n    public function run()\n    {\n        $session = Yii::$app->session;\n        $flashes = $session->getAllFlashes();\n        $appendClass = isset($this->options['class']) ? ' ' . $this->options['class'] : '';\n\n        foreach ($flashes as $type => $flash) {\n            if (!isset($this->alertTypes[$type])) {\n                continue;\n            }\n\n            foreach ((array) $flash as $i => $message) {\n                echo \\yii\\bootstrap\\Alert::widget([\n                    'body' => $message,\n                    'closeButton' => $this->closeButton,\n                    'options' => array_merge($this->options, [\n                        'id' => $this->getId() . '-' . $type . '-' . $i,\n                        'class' => $this->alertTypes[$type] . $appendClass,\n                    ]),\n                ]);\n            }\n\n            $session->removeFlash($type);\n        }\n    }\n}\n\n\n--- File: 726 # views/layouts/login.php ---\n<?php \n\tuse yii\\helpers\\Html;\n\tuse app\\assets\\AppAsset;\n\n\tAppAsset::register($this);\n?>\n\n<?php $this->beginPage() ?>\n<!DOCTYPE html>\n<html lang=\"<?= Yii::$app->language ?>\">\n<head>\n    <meta charset=\"<?= Yii::$app->charset ?>\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <?= Html::csrfMetaTags() ?>\n    <title><?= Html::encode($this->title) ?></title>\n\n    <link rel=\"manifest\" href=\"images/favicon/manifest.json\">\n    <link rel=\"stylesheet\" href=\"/css/main.css\">\n    <meta name=\"mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"theme-color\" content=\"transparent\">\n    <link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"images/favicon/apple-touch-icon-57x57.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"images/favicon/apple-touch-icon-60x60.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"images/favicon/apple-touch-icon-72x72.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"images/favicon/apple-touch-icon-76x76.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"images/favicon/apple-touch-icon-114x114.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"images/favicon/apple-touch-icon-120x120.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"images/favicon/apple-touch-icon-144x144.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"images/favicon/apple-touch-icon-152x152.png\">\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"images/favicon/apple-touch-icon-180x180.png\">\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black-translucent\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"228x228\" href=\"images/favicon/coast-228x228.png\">\n    <link rel=\"yandex-tableau-widget\" href=\"images/favicon/yandex-browser-manifest.json\">\n    <meta name=\"msapplication-TileColor\" content=\"transparent\">\n    <meta name=\"msapplication-TileImage\" content=\"images/favicon/mstile-144x144.png\">\n    <meta name=\"msapplication-config\" content=\"images/favicon/browserconfig.xml\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"images/favicon/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"images/favicon/favicon-16x16.png\">\n    <link rel=\"shortcut icon\" href=\"images/favicon/favicon.ico\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 480px) and (-webkit-device-pixel-ratio: 1)\" href=\"images/favicon/apple-touch-startup-image-320x460.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 480px) and (-webkit-device-pixel-ratio: 2)\" href=\"images/favicon/apple-touch-startup-image-640x920.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)\" href=\"images/favicon/apple-touch-startup-image-640x1096.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 375px) and (device-height: 667px) and (-webkit-device-pixel-ratio: 2)\" href=\"images/favicon/apple-touch-startup-image-750x1294.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 414px) and (device-height: 736px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 3)\" href=\"images/favicon/apple-touch-startup-image-1182x2208.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 414px) and (device-height: 736px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 3)\" href=\"images/favicon/apple-touch-startup-image-1242x2148.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 768px) and (device-height: 1024px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 1)\" href=\"images/favicon/apple-touch-startup-image-748x1024.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 768px) and (device-height: 1024px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 1)\" href=\"images/favicon/apple-touch-startup-image-768x1004.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 768px) and (device-height: 1024px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)\" href=\"images/favicon/apple-touch-startup-image-1496x2048.png\">\n    <link rel=\"apple-touch-startup-image\" media=\"(device-width: 768px) and (device-height: 1024px) and (orientation: portrait) and (-webkit-device-pixel-ratio: 2)\" href=\"images/favicon/apple-touch-startup-image-1536x2008.png\">\n    <?php $this->head() ?>\n    <script defer src=\"/js/themes/all.js\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<?php $this->beginBody() ?>\n  <div class=\"kop-header\">\n  <img src=\"/images/assets/pengayoman_logo.png\" alt=\"\">    \n    <div class=\"text-header\">\n      <div class=\"title\">DIREKTORAT JENDERAL ADMINISTRASI HUKUM UMUM</div>\n      <div class=\"subtitle\">KEMENTERIAN HUKUM REPUBLIK INDONESIA</div>\n    </div>\n  </div>    \n\t<!-- <div class=\"container centerized\">\n\t\t<div class=\"outer-wrapper\">\n\t\t\t<div class=\"inner-wrapper\">\n\t\t\t\t<?php //$content ?>\n\t\t\t</div>\t\t\t\n\t\t</div>\n    </div> -->\n    \n    <div class=\"contents\">\n        <?= $content ?>\n    </div>\n\n<?php $this->endBody() ?>\n</body>\n</html>\n<?php $this->endPage() ?>\n\n\n--- File: 728 # views/layouts/main.php ---\n<?php\n\n/* @var $this \\yii\\web\\View */\n/* @var $content string */\n\nuse app\\widgets\\Alert;\nuse yii\\helpers\\Html;\nuse yii\\bootstrap\\Nav;\nuse yii\\bootstrap\\NavBar;\nuse yii\\widgets\\Breadcrumbs;\nuse app\\assets\\AppAsset;\nuse docotel\\dcms\\widget\\SideNav;\nuse app\\components\\Menu;\nuse yii\\helpers\\ArrayHelper;\n\nAppAsset::register($this);\n?>\n<?php $this->beginPage() ?>\n<!DOCTYPE html>\n<html lang=\"<?= Yii::$app->language ?>\">\n<head>\n<meta charset=\"<?= Yii::$app->charset ?>\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\" />\n  <?= Html::csrfMetaTags() ?>\n  <title><?= Html::encode($this->title) ?></title>\n  <link rel=\"manifest\" href=\"images/favicon/manifest.json\">\n  <!-- <link rel=\"stylesheet\" href=\"/css/site.css\">\n  <link rel=\"stylesheet\" href=\"/frontend/dist/styles/main.css\"> -->\n  <style type=\"text/css\">\n    .treeview.menu-open > a > .pull-right-container > .fa-minus {\n      display: block;\n    }\n\n    .treeview.menu-open > a > .pull-right-container > .fa-plus {\n      display: none;\n    }\n    .treeview > a > .pull-right-container > .fa-minus {\n      display: none;\n    }\n\n    .treeview > a > .pull-right-container > .fa-plus {\n      display: block;\n    }\n    /*.treeview.menu-open .treeview-menu .pull-right-container .fa-minus {\n      display: block;\n    }*/\n\n  </style>\n  <?php $this->head() ?>\n  <link href=\"/css/font-awesome.min.css\" rel=\"stylesheet\">\n  <link rel=\"stylesheet\" href=\"/css/animate.css\">\n</head>\n<body class=\"hold-transition skin-blue sidebar-mini\">\n<?php $this->beginBody() ?>\n<div class=\"wrapper\">\n    <header class=\"main-header\">\n        <div class=\"navbar-top\">\n            <a href=\"#\" data-toggle=\"push-menu\" role=\"button\">\n                <div class=\"nav-toggle\" id=\"toggle-nav\" toggle-target=\"#side-nav\">\n                  <i class=\"fa fa-bars\" aria-hidden=\"true\"></i>\n                </div>\n            </a>\n\n            <h3 class=\"nav-title\">DITJEN AHU ONLINE</h3>\n            <div class=\"top-menu\">\n                <div class=\"navbar-custom-menu\">\n                    <ul class=\"nav navbar-nav\">\n                            <!-- Messages: style can be found in dropdown.less-->\n\n                            <!-- /.messages-menu -->\n                    </ul>\n                </div>\n                <div class=\"menu\"></div>\n            </div>\n            <div class=\"nav-right\">\n                <div class=\"user-info\">\n                    <div class=\"toggle-user\" id-target=\"#usermenu\">\n                      <?= Yii::$app->user->isGuest ? 'Guest' : (empty($data_notaris = Yii::$app->session->get('data_notaris')) ? Yii::$app->user->identity->username : ArrayHelper::getValue($data_notaris, 'value.username', '-'))  ?>\n                      <i class=\"fa fa-caret-down\" aria-hidden=\"true\"></i>\n                    </div>\n                    <ul class=\"user-menu\" id=\"usermenu\">\n                        <?php if(!empty(Yii::$app->user->identity->userGroup[0]->group_id) && Yii::$app->user->identity->userGroup[0]->group_id != 'notaris'):\n                          // cek halaman ubah password berdasarkan user grup\n                          $usergrup = Yii::$app->user->identity->userGroup[0]->group_id;\n                          $url_ubah_password = $usergrup != 'badan-hukum' ? \"/dcms/user/change-password\" : \"/users/change-password\";\n                          ?>\n                            <li class=\"\">\n                              <?=\n                                Html::a('<span class=\"menu-icon\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i></span> Ubah Password',\n                                  $url_ubah_password,\n                                  ['data-method' => 'post']\n\n                                )?>\n                            </li>\n                        <?php endif;?>\n                        <li class=\"green-panel logout\">\n                          <?=\n                            Html::a('<span class=\"menu-icon\"><i class=\"fa fa-cogs\" aria-hidden=\"true\"></i></span> Log Out',\n                              '/site/logout',\n                              ['data-method' => 'post']\n\n                            )?>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n    </header>\n    <aside class=\"main-sidebar\">\n\n      <!-- sidebar: style can be found in sidebar.less -->\n      <section class=\"sidebar\">\n\n      <?php\n    // dump($_SESSION);exit;\n    //   echo SideNav::widget([\n    //     'items' => !empty($this->params['menu']) ? $this->params['menu'] : []\n    //   ]);\n      ?>\n\n          <!-- Sidebar Menu -->\n          <?php\n            echo Menu::widget([\n              'items' => !empty($this->params['menu']) ? $this->params['menu'] : [],\n              // 'indMenuOpen' => '<i class=\"fas fa-minus pull-right\"></i>',\n              // 'indMenuClose' => '<i class=\"fas fa-plus pull-right\"></i>',\n              // 'heading' => true,\n            ]);\n          ?>\n          <!-- /.sidebar-menu -->\n      </section>\n      <!-- /.sidebar -->\n      </aside>\n      <div class=\"content-wrapper\">\n      <section class=\"content container-fluid\">\n      <?= Breadcrumbs::widget([\n            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],\n        ]) ?>\n        <?= Alert::widget() ?>\n        <?= $content ?>\n      </section>\n      </div>\n  <?php $this->endBody() ?>\n  </body>\n</html>\n<?php $this->endPage() ?>\n\n\n--- File: 50 # controllers/SiteController.php ---\n<?php\n\nnamespace app\\controllers;\n\nuse Yii;\nuse yii\\filters\\AccessControl;\nuse yii\\web\\Controller;\nuse yii\\web\\Response;\nuse yii\\web\\Session;\nuse yii\\helpers\\ArrayHelper;\nuse yii\\filters\\VerbFilter;\nuse app\\models\\LoginForm;\nuse app\\models\\ContactForm;\nuse app\\models\\NotarisNpak;\nuse app\\models\\User;\nuse docotel\\dcms\\models\\UserGroup;\nuse app\\components\\BaseController;\nuse app\\components\\KoperasiHelper;\nuse app\\components\\NpakHelper;\n\nclass SiteController extends BaseController\n{\n    /**\n     * {@inheritdoc}\n     */\n    public function behaviors()\n    {\n        return [\n            'access' => [\n                'class' => AccessControl::className(),\n                'only' => ['logout'],\n                'rules' => [\n                    [\n                        'actions' => ['logout'],\n                        'allow' => true,\n                        'roles' => ['@'],\n                    ],\n                ],\n            ],\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    'logout' => ['post'],\n                ],\n            ],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function actions()\n    {\n        return [\n            'error' => [\n                'class' => 'yii\\web\\ErrorAction',\n            ],\n            'captcha' => [\n                'class' => 'yii\\captcha\\CaptchaAction',\n                'fixedVerifyCode' => YII_ENV_TEST ? 'testme' : null,\n            ],\n        ];\n    }\n\n    /**\n     * Displays homepage.\n     *\n     * @return string\n     */\n    /**\n * @return string\n */\n   public function actionIndex()\n    {\n        // var_dump(Yii::$app->user->isGuest);\n\n        // return $this->goHome();\n\n        if (!Yii::$app->user->isGuest) {\n            return $this->redirect(Yii::$app->user->identity->userGroup[0]->group->url);\n        } else {\n            return $this->redirect(\"/site/login\");\n        }\n    }\n\n\n\n    /**\n     * Login action.\n     *\n     * @return Response|string\n     */\n    public function actionLogin()\n    {\n        // if (!Yii::$app->user->isGuest) {\n        //     return $this->goHome();\n        // }\n        Yii::$app->view->title = \"Aplikasi Koperasi\";\n\n        $model = new LoginForm();\n        if (!empty(Yii::$app->request->post())) {\n\n            if ($model->load(Yii::$app->request->post()) && $model->login()) {\n\n                return $this->goHome();\n            } else {\n\n                $post = Yii::$app->request->post();\n\n                $now = time();\n                $setengah_jam = (int) floor($now / 30 / 60);\n                $t = 'candrabeqx' . $setengah_jam . 'docotel';\n                $sign = crypt($t, \"$2y$10$\" . substr(md5($t), 0, 22));\n\n                // set HTTP header\n                // $headers = array(\n                //     'Content-Type: application/json'\n                // );\n\n                // set POST params\n                $fields = array(\n                    'username' => $model->username,\n                    // 'password' => 'notaris@global2018'\n                    'password' => $model->password\n                );\n                $url = Yii::$app->params['urlAhu'] . \"?sign=\" . urlencode($sign);\n                // $url = \"https://ahu.go.id/service/loginSabu?sign=\".urlencode($sign).\"\";\n\n                // Open connectiong\n                $ch = curl_init();\n\n                // Set the url, number of POST vars, POST data\n                curl_setopt($ch, CURLOPT_URL, $url);\n                curl_setopt($ch, CURLOPT_POST, true);\n                // curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);\n                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);\n\n                curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n                curl_setopt($ch, CURLOPT_POSTFIELDS, $fields);\n\n                // Execute post\n                $result = curl_exec($ch);\n                $error = curl_error($ch);\n\n                if (!empty($error)) {\n                    if (file_exists('login.log')) {\n                        $content = file_get_contents('login.log');\n                    } else {\n                        $content = \"\";\n                    }\n\n                    $content .= \"Error : \" . $error . \"\\n\";\n                    $content .= \"Data : \" . json_encode($fields) . \"\\n\\n\\n\\n\\n\";\n                    file_put_contents('login.log', $content);\n                }\n\n                // Close connection\n                curl_close($ch);\n                $result_arr = json_decode($result, true);\n                if (isset($result_arr['value']['id_notaris'])) {\n\n                    $flagPengecekanNpak = NpakHelper::checkNotarisNpak($result_arr['value']['id_notaris']);\n                    \n                    if ($flagPengecekanNpak) {\n                        $username = \"notaris-\" . $model->username;\n                        $notaris = User::findByUsername($username);\n                        if (empty($notaris)) {\n\n                            $user = new User();\n                            $user->username = $username;\n                            $user->email = ArrayHelper::getValue($result_arr, 'value.email', '-');\n                            $user->setPassword('-');\n                            $user->save();\n\n                            $userGroup = new UserGroup();\n                            $userGroup->user_id = $user->id;\n                            $userGroup->group_id = 'notaris'; // sementara\n\n                            $userGroup->save();\n\n                            $notaris = User::findByUsername($username);\n                        }\n                        $notaris->data_notaris = $result_arr;\n\n                        $session = Yii::$app->session;\n                        $session->set('data_notaris', $result_arr);\n\n                        KoperasiHelper::updateDataNotaris($result_arr['value']);\n\n                        Yii::$app->user->login($notaris, $model->rememberMe ? 3600 * 24 * 30 : 0);\n                        return $this->goHome();\n                    }\n                }\n            }\n        }\n\n        if (Yii::$app->user->isGuest) {\n\n            $this->layout = 'login';\n\n            $showNpakMessage = NpakHelper::isPengecekanNpak();\n\n            $model->password = '';\n            return $this->render('index', [\n                'model' => $model,\n                'showNpakMessage' => $showNpakMessage,\n            ]);\n        } else {\n\n            $this->goHome();\n        }\n    }\n\n    /**\n     * Logout action.\n     *\n     * @return Response\n     */\n    public function actionLogout()\n    {\n        Yii::$app->user->logout();\n        unset($_SESSION);\n\n        return $this->goHome();\n    }\n\n    /**\n     * Displays contact page.\n     *\n     * @return Response|string\n     */\n    public function actionContact()\n    {\n        $model = new ContactForm();\n        if ($model->load(Yii::$app->request->post()) && $model->contact(Yii::$app->params['adminEmail'])) {\n            Yii::$app->session->setFlash('contactFormSubmitted');\n\n            return $this->refresh();\n        }\n        return $this->render('contact', [\n            'model' => $model,\n        ]);\n    }\n\n    /**\n     * Displays about page.\n     *\n     * @return string\n     */\n    public function actionAbout()\n    {\n        return $this->render('about');\n    }\n}\n\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 3: Web MVC Shell & Session Guard\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"Koperasi Transaction Lifecycle Engine\n\". This is Chapter 4.\n\nConcept Details:\n- Name: Koperasi Transaction Lifecycle Engine\n\n- Description:\nThis is the business heart: receiving, creating, updating, and finalizing Koperasi transactions (pendirian/perubahan, etc). Controllers accept incoming payloads (often XML from ODS), then TransaksiHelper maps and persists them. SKHelper closes the loop by generating SK/SP numbers, toggling \u201cpesan nama,\u201d and updating related master records. Think of it as a factory line: intake (parse), assemble (validate/map), and finish (issue SK, update references), with each station encapsulated in a helper and data models representing the assembly parts.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n---\n# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 636 # models/TransaksiKoperasi.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse app\\models\\MKbli;\nuse app\\models\\PesanNama;\nuse app\\models\\Disclaimer;\nuse app\\models\\DataAnggota;\nuse app\\models\\JenisKoperasi;\nuse app\\models\\AktifitasUsaha;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\JenisTransaksi;\nuse app\\models\\WilayahNotariat;\nuse yii\\data\\ArrayDataProvider;\nuse app\\models\\KoperasiSekunder;\nuse yii\\data\\ActiveDataProvider;\nuse app\\models\\bakum\\WilayahSABH;\nuse app\\models\\TPendirianDokumen;\n\n/**\n * This is the model class for table \"{{%t_koperasi}}\".\n *\n * @property int $id\n * @property int $jenis_transaksi_id\n * @property int $m_tingkat_wilayah_id\n * @property int $b_koperasi_id\n * @property int $provinsi_id\n * @property int $kab_kota_id\n * @property int $kecamatan_id\n * @property int $kel_desa_id\n * @property string $alamat_koperasi\n * @property string $rt\n * @property string $rw\n * @property string $kode_pos\n * @property string $email\n * @property string $telepon\n * @property int $ahu_notaris_id\n * @property string $akta_koperasi\n * @property string $tanggal_akta\n * @property string $taggal_rapat\n * @property string $alamat_rapat\n * @property string $jumlah_rapat\n * @property int $modal_usaha\n * @property int $simpanan_pokok_anggota\n * @property int $simpanan_wajib_anggota\n * @property int $modal_lain\n * @property string $jumlah_anggota\n * @property string $usaha_utama\n * @property string $usaha_pendukung\n * @property string $usaha_tambahan\n * @property int $is_minuta\n * @property int $is_beria_acara\n * @property int $is_surat_bukti\n * @property int $is_rencana_kerja\n * @property string $file_akta\n * @property string $file_berita_acara\n * @property int $is_redaksi_persetujuan\n * @property int $is_confirm 0:Tidak, 1: Ya\n * @property string $tanggal_confirm\n * @property string $tanggal_akhir\n * @property string $is_deleted 0:Tidak,1:Ya\n * @property string $created_by\n * @property string $created_date\n * @property string $updated_by\n * @property string $updated_date\n * @property string $deleted_by\n * @property string $deleted_date\n * @property int $id_notaris_pengganti\n * @property string $no_sk_notaris_pengganti\n * @property int $is_perbaikan 0:Tidak, 1: Ya\n */\nclass TransaksiKoperasi extends \\yii\\db\\ActiveRecord\n{\n    const DISC_PERSETUJUAN_PENDIRIAN = \"persetujuan_pendirian\";\n    const DISC_PERSETUJUAN_PERUBAHAN = \"persetujuan_perubahan\";\n    const BEFORE_LATEST = 1;\n    const LATEST = 0;\n    const JANGKA_WAKTU_TERBATAS =  \"Terbatas\";\n    const JANGKA_WAKTU_TIDAK_TERBATAS =  \"Tidak Terbatas\";\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%t_koperasi}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    public function getJenisTransaksi()\n    {\n        return $this->hasOne( JenisTransaksi::className(), ['id' => 'jenis_transaksi_id'] );\n    }\n\n    public function getJeniskoperasi()\n    {\n        return $this->hasOne( JenisKoperasi::className(), ['id' => 'id'] );\n    }\n\n    public function getPesanNama()\n    {\n        return $this->hasOne( PesanNama::className(), ['id' => 't_pesan_nama_id'] );\n    }\n\n    public function getBakumsekunder()\n    {\n        return $this->hasMany(KoperasiSekunder::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getAktifitasusaha()\n    {\n        return $this->hasMany(AktifitasUsaha::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getDataanggota()\n    {\n        return $this->hasMany(DataAnggota::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getDokumenKoperasi()\n    {\n        return $this->hasMany(TPendirianDokumen::className(),['transaction_id' => 'id']);\n    }\n\n    public function getDataPerubahan() {\n        return $this->hasMany(ChecklistPerubahan::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getDataMaster() {\n        return $this->hasOne(MasterTransaction::className(),['id' => 'id_master']);\n    }\n\n    public function getDataSK() {\n        return $this->hasOne(SK::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getTingkatWilayah() {\n        return $this->hasOne(TingkatWilayah::className(),['id' => 'm_tingkat_wilayah_id']);\n    }\n\n    public function getBentukKoperasi() {\n        return $this->hasOne(BentukKoperasi::className(),['id' => 'b_koperasi_id']);\n    }\n\n    public function getPemilikManfaat() {\n        return $this->hasMany(PemilikManfaat::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getBakumGabung() {\n        return $this->hasMany(BHPenggabungan::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getBakumPisah() {\n        return $this->hasMany(BHPembagian::className(),['t_koperasi_id' => 'id']);\n    }\n\n    public function getTransaksiPerbaikan() {\n        return $this->hasOne(TransaksiPerbaikan::class,['t_koperasi_id' => 'id']);\n    }\n\n    /**\n     * Defines relation to WilayahSabh model using kel_desa_id.\n     * Assumes kel_desa_id in t_koperasi corresponds to ID_WIL in WILAYAH_SABH.\n     * @return \\yii\\db\\ActiveQuery\n     */\n    public function getWilayahSabh()\n    {\n        return $this->hasOne(WilayahSabh::className(), ['ID_WIL' => 'kel_desa_id']);\n    }\n\n    /**\n     * Retrieves the KD_WIL (Kode Wilayah) from WILAYAH_SABH related to this transaction.\n     * This KD_WIL can then be used as the base for NIK generation.\n     *\n     * @return string|null The KD_WIL value, or null if the relation is not found.\n     */\n    public function getKdWilForNikBase()\n    {\n        if ($this->wilayahSabh) {\n            return $this->wilayahSabh->KD_WIL;\n        }\n        return null;\n    }\n\n    /**\n     * Generates a new NIK for this TransaksiKoperasi instance and assigns it.\n     * Ensures the generated NIK is unique within the 'nik' column of the t_koperasi table.\n     * Retries NIK generation up to a maximum number of attempts if a duplicate is found.\n     *\n     * 1. Retrieves the KD_WIL from the associated WilayahSabh data.\n     * 2. In a loop, uses the KD_WIL as a base to generate a unique sequential NIK via BaseNik::generateNik().\n     * 3. Validates the generated NIK for uniqueness within TransaksiKoperasi.nik.\n     * 4. Assigns the generated NIK to the 'nik' attribute of this TransaksiKoperasi model.\n     * 5. Saves the TransaksiKoperasi model, ensuring the update only happens if NIK is currently NULL or empty.\n     *\n     * @param int $maxAttempts The maximum number of times to retry NIK generation if duplicates are found.\n     * @return bool True if NIK was successfully generated and assigned, false otherwise.\n     */\n    public function generateAndAssignNik($maxAttempts = 999)\n    {\n        // If NIK already exists and this is not a new record, no need to generate\n        if (!$this->isNewRecord && (!empty($this->nik))) {\n            Yii::info(\"NIK already exists for TransaksiKoperasi ID: {$this->id}. Skipping generation.\", __METHOD__);\n            return true;\n        }\n\n        // 1. Get KD_WIL from TransaksiKoperasi via WilayahSabh relation\n        $kdWil = $this->getKdWilForNikBase();\n\n        if (empty($kdWil)) {\n            Yii::error(\"Could not retrieve KD_WIL for TransaksiKoperasi ID: {$this->id}. Cannot generate NIK.\", __METHOD__);\n            $this->addError('nik', 'Tidak dapat mengambil data wilayah untuk NIK.'); // Add a model error\n            return false;\n        }\n\n        $generatedNik = null;\n        $attempt = 0;\n        $isUnique = false;\n\n        // Loop to generate NIK until a unique one is found or max attempts are reached\n        while ($attempt < $maxAttempts && !$isUnique) {\n            $attempt++;\n            Yii::info(\"Attempt {$attempt}/{$maxAttempts} to generate unique NIK for KD_WIL: {$kdWil}.\", __METHOD__);\n\n            // 2. Use the KD_WIL to generate NIK from BaseNik\n            $newNik = BaseNik::generateNik($kdWil);\n\n            if ($newNik === false) {\n                Yii::error(\"Failed to generate new NIK using BaseNik for KD_WIL: {$kdWil} on attempt {$attempt}. Check BaseNik logs.\", __METHOD__);\n                // It's possible BaseNik::generateNik had an internal error; stop trying\n                $this->addError('nik', 'Gagal menghasilkan NIK baru dari generator.');\n                return false;\n            }\n\n            // Validate uniqueness in TransaksiKoperasi table\n            // Ensure we don't compare against the current model's own NIK if it exists and is being re-assigned (unlikely for NIK generation)\n            $existingTransaksi = self::find()->where(['nik' => $newNik])->one();\n\n            if ($existingTransaksi === null) {\n                $generatedNik = $newNik;\n                $isUnique = true;\n                Yii::info(\"Unique NIK '{$generatedNik}' found on attempt {$attempt}.\", __METHOD__);\n            } else {\n                Yii::warning(\"Generated NIK '{$newNik}' already exists in TransaksiKoperasi. Retrying...\", __METHOD__);\n            }\n        }\n\n        if (!$isUnique) {\n            Yii::error(\"Failed to generate a unique NIK for TransaksiKoperasi ID: {$this->id} after {$maxAttempts} attempts. Last generated NIK was '{$newNik}' (duplicate).\", __METHOD__);\n            $this->addError('nik', 'Tidak dapat menghasilkan NIK unik setelah beberapa percobaan.');\n            return false;\n        }\n\n        // 3. Assign the generated unique NIK to TransaksiKoperasi.nik\n        $this->nik = $generatedNik;\n\n        // 4. Save the TransaksiKoperasi model\n        // We only save if the NIK field was genuinely empty or null before this process.\n        // getOldAttribute('nik') checks the original value before any changes in the current model instance.\n        if (empty($this->getOldAttribute('nik')) || $this->getOldAttribute('nik') === null) {\n            if ($this->save(false, ['nik'])) { // Save only the 'nik' attribute, skipping validation for other attributes\n                Yii::info(\"NIK '{$this->nik}' successfully assigned to TransaksiKoperasi ID: {$this->id}.\", __METHOD__);\n                return true;\n            } else {\n                Yii::error(\"Failed to save NIK '{$this->nik}' to TransaksiKoperasi ID: {$this->id}. Errors: \" . json_encode($this->getErrors()), __METHOD__);\n                $this->addError('nik', 'Gagal menyimpan NIK ke transaksi koperasi.');\n                return false;\n            }\n        } else {\n            Yii::warning(\"TransaksiKoperasi ID: {$this->id} already had an NIK: {$this->getOldAttribute('nik')} but generation was attempted. Skipping assignment.\", __METHOD__);\n            return true;\n        }\n    }\n\n    public function isMerahPutih() {\n        return strpos(strtoupper($this->jenis_koperasi), JenisKoperasi::NAME_MERAH_PUTIH) !== false;\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['jenis_transaksi_id', 'm_tingkat_wilayah_id', 'b_koperasi_id', 'm_pola_id', 'provinsi_id', 'kab_kota_id', 'kecamatan_id', 'kel_desa_id', 'alamat_koperasi', 'ahu_notaris_id', 'akta_koperasi', 'tanggal_akta', 'taggal_rapat', 'alamat_rapat', 'jumlah_rapat', 'modal_usaha', 'simpanan_pokok_anggota', 'simpanan_wajib_anggota', 'usaha_utama', 'file_akta', 'file_berita_acara', 'tanggal_akhir', 'created_by'], 'required'],\n            [['jenis_transaksi_id', 'm_tingkat_wilayah_id', 'b_koperasi_id', 'm_pola_id', 'provinsi_id', 'kab_kota_id', 'kecamatan_id', 'kel_desa_id', 'ahu_notaris_id', 'modal_usaha', 'simpanan_pokok_anggota', 'simpanan_wajib_anggota', 'modal_lain', 'is_minuta', 'is_beria_acara', 'is_surat_bukti', 'is_rencana_kerja', 'is_redaksi_persetujuan', 'is_confirm'], 'integer'],\n            [['created_date','deleted_date','t_pesan_nama_id', 'nomor_transaksi', 'nama_koperasi', 'nama_notaris', 'jenis_koperasi','id_master','t_pesan_nama_id','full_nama','tanggal_jangka_waktu','nik'], 'safe'],\n            [['usaha_utama', 'usaha_pendukung', 'usaha_tambahan', 'is_deleted'], 'string'],\n            [['alamat_koperasi', 'alamat_rapat', 'jumlah_rapat', 'jumlah_anggota'], 'string', 'max' => 250],\n            [['rt', 'rw'], 'string', 'max' => 3],\n            [['kode_pos'], 'string', 'max' => 10],\n            [['email'], 'string', 'max' => 100],\n            [['telepon', 'akta_koperasi'], 'string', 'max' => 50],\n            [['file_akta', 'file_berita_acara'], 'string', 'max' => 255],\n            [['created_by', 'updated_by', 'deleted_by'], 'string', 'max' => 36],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'jenis_transaksi_id' => 'Jenis Transaksi ID',\n            't_pesan_nama_id' => 'Pesan Nama ID',\n            'm_tingkat_wilayah_id' => 'M Tingkat Wilayah ID',\n            'b_koperasi_id' => 'B Koperasi ID',\n            'provinsi_id' => 'Provinsi ID',\n            'kab_kota_id' => 'Kab Kota ID',\n            'kecamatan_id' => 'Kecamatan ID',\n            'kel_desa_id' => 'Kel Desa ID',\n            'alamat_koperasi' => 'Alamat Koperasi',\n            'rt' => 'Rt',\n            'rw' => 'Rw',\n            'kode_pos' => 'Kode Pos',\n            'email' => 'Email',\n            'telepon' => 'Telepon',\n            'ahu_notaris_id' => 'Ahu Notaris ID',\n            'akta_koperasi' => 'Akta Koperasi',\n            'tanggal_akta' => 'Tanggal Akta',\n            'taggal_rapat' => 'Taggal Rapat',\n            'alamat_rapat' => 'Alamat Rapat',\n            'jumlah_rapat' => 'Jumlah Rapat',\n            'modal_usaha' => 'Modal Usaha',\n            'simpanan_pokok_anggota' => 'Simpanan Pokok Anggota',\n            'simpanan_wajib_anggota' => 'Simpanan Wajib Anggota',\n            'modal_lain' => 'Dana Hibah',\n            'jumlah_anggota' => 'Jumlah Anggota',\n            'usaha_utama' => 'Usaha Utama',\n            'usaha_pendukung' => 'Usaha Pendukung',\n            'usaha_tambahan' => 'Usaha Tambahan',\n            'is_minuta' => 'Is Minuta',\n            'is_beria_acara' => 'Is Beria Acara',\n            'is_surat_bukti' => 'Is Surat Bukti',\n            'is_rencana_kerja' => 'Is Rencana Kerja',\n            'file_akta' => 'File Akta',\n            'file_berita_acara' => 'File Berita Acara',\n            'is_redaksi_persetujuan' => 'Is Redaksi Persetujuan',\n            'is_confirm' => 'Is Confirm',\n            'tanggal_confirm' => 'Tanggal Confirm',\n            'tanggal_akhir' => 'Tanggal Akhir',\n            'is_deleted' => 'Is Deleted',\n            'created_by' => 'Created By',\n            'created_date' => 'Created Date',\n            'updated_by' => 'Updated By',\n            'updated_date' => 'Updated Date',\n            'deleted_by' => 'Deleted By',\n            'deleted_date' => 'Deleted Date',\n            'id_notaris_pengganti' => 'ID Notaris Pengganti',\n            'no_sk_notaris_pengganti' => 'No SK notaris Pengganti'\n        ];\n    }\n\n    public static function checkPendirian($model) {\n        if($model) {\n\n            if (empty($model->no_pesan)) {\n                return [\n                    'status' => true,\n                    'jenis_err' => 'PesanNamaKosong',\n                    'no_pesan' => $model->no_pesan,\n                ];\n            }\n\n            // Cek Available Nomor Pesan Nama\n            if (!self::CekAvailablePesanNama($model)) {\n                return [\n                    'status' => true,\n                    'jenis_err' => 'PesanNamaNotAvailable',\n                    'no_pesan' => $model->no_pesan,\n                ];\n            }\n\n            //Cek Expire\n            if (self::CekExpire($model)) {\n                return [\n                    'status' => true,\n                    'jenis_err' => 'ExpireTanggal',\n                    'no_pesan' => $model->no_pesan,\n                ];\n            }\n        }\n    }\n\n    public static function CekExpire($model) {\n        $data = self::getDataPesanNama($model);\n        if($data) {\n            $tgl_exp = $data->end_date;\n            $now = date(\"Y-m-d\");\n            return $now > $tgl_exp;\n        }\n    }\n\n    public static function getDataPesanNama($model) {\n        if($model) {\n            return PesanNama::find()\n                    ->where(['no_pesan' => $model->no_pesan])\n                    // ->andWhere(['ahu_notaris_id' => $model->ahu_notaris_id])\n                    ->andWhere(['is_deleted' => '0'])\n                    ->andWhere(['status' => 0])\n                    ->one();\n        }\n    }\n\n    public static function CekAvailablePesanNama($model) {\n        $data = self::getDataPesanNama($model);\n        if($data) {\n\n            // Cek apakah punya nama yang sama di table transaksi\n            $cek = self::find()->where(['nama_koperasi' => $data->nama_koperasi, 'is_finish' => 1])->one();\n            if (!$cek) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    public static function getWilayahNotariat( $data ) {\n\n        extract( $data );\n\n        $arr = array();\n\n        $raw1 = WilayahNotariat::find()\n            ->where('wilayah_id in ('.$provinsi.', '.$kabupaten.', '.$kecamatan.')')\n            ->orderBy(['TINGKAT_WILAYAH' => SORT_ASC])\n            ->all();\n\n        $raw2 = WilayahSABH::find()->where(['ID_WIL' => $kelurahan, 'ID_WILAYAH_M' => $kecamatan])->one();\n\n        return $arr = [\n            'provinsi' => $raw1[0]->NAMA,\n            'kabupaten' => $raw1[1]->NAMA,\n            'kecamatan' => $raw1[2]->NAMA,\n            'kelurahan' => !empty($raw2) ? $raw2->NM_KELURAHAN : \"\",\n        ];\n    }\n\n    public static function getKBLIType( $id, $type ) {\n\n        $ids = array();\n        $raw = AktifitasUsaha::find()->select('kbli_id')->where(['t_koperasi_id' => $id, 'jenis_kbli' => $type])->asArray()->all();\n\n\n        foreach ($raw as $list) {\n\n            array_push($ids, $list['kbli_id']);\n        }\n\n        return $ids;\n    }\n\n    public static function getPreviewData( $id, $disclaimerType = self::DISC_PERSETUJUAN_PENDIRIAN ) {\n\n        $data = self::find()\n            ->select('kop_t_koperasi.id as koperasi_id, kop_t_koperasi.nomor_transaksi, kop_t_koperasi.tanggal_akta, kop_t_koperasi.tanggal_rapat as tanggal_rapat, kop_t_koperasi.alamat_rapat, kop_t_koperasi.jumlah_peserta_rapat, kop_t_koperasi.modal_koperasi, kop_t_koperasi.simpanan_pokok, kop_t_koperasi.simpanan_wajib, kop_t_koperasi.dana_hibah, kop_t_koperasi.dana_cadangan, kop_t_koperasi.is_finish, kop_t_koperasi.provinsi_id, kop_t_koperasi.kab_kota_id, kop_t_koperasi.kecamatan_id, kop_t_koperasi.kel_desa_id, kop_t_koperasi.alamat_koperasi, kop_t_koperasi.rw, kop_t_koperasi.rt, kop_t_koperasi.kode_pos, kop_t_koperasi.telepon, kop_t_koperasi.email, kop_t_koperasi.akta_koperasi, kop_t_koperasi.t_pesan_nama_id, kop_t_koperasi.created_date, kop_t_koperasi.jangka_waktu, kop_t_koperasi.periode_pengurus_awal,kop_t_koperasi.periode_pengurus_akhir, kop_t_koperasi.full_nama, kop_t_koperasi.jumlah_jangka_waktu,\n                    nm_koperasi.*,\n                    w.nama as nama_wilayah,\n                    kp.nama as bentuk_koperasi,\n                    nn.nama_lengkap')\n            ->leftJoin('(select\n                            pn.id, pn.nama_koperasi,\n                            jk.nama as jenis_koperasi,\n                            pk.nama as pola_pengelolaan,\n                            pn.model_koperasi as model_koperasi\n                        from\n                            kop_pesan_nama pn\n                        left join\n                            kop_jenis_koperasi jk on\n                                case\n                                    when pn.c_jenis_koperasi_id is null then pn.jenis_koperasi_id = jk.id\n                                    else pn.c_jenis_koperasi_id = jk.id\n                                end\n                        left join\n                            kop_pola_pengelolaan pk on pn.m_pola_id = pk.id) as nm_koperasi on nm_koperasi.id = kop_t_koperasi.t_pesan_nama_id'\n                        )\n            ->leftJoin('kop_tingkat_wilayah w', 'kop_t_koperasi.m_tingkat_wilayah_id = w.id')\n            ->leftJoin('kop_b_koperasi kp', 'kop_t_koperasi.b_koperasi_id = kp.id')\n            ->leftJoin('kop_notaris_npak nn', 'kop_t_koperasi.ahu_notaris_id = nn.id_notaris')\n            // ->orderBy(['created_date' => SORT_DESC])\n            ->where(['kop_t_koperasi.id' => $id])\n            ->asArray()\n            ->one();\n\n        $data['BHPenggabungan'] = new ArrayDataProvider([\n                'allModels' => BHPenggabungan::find()->where(['t_koperasi_id' => $id])->asArray()->all()\n            ]);\n\n        $data['BHPembagian'] = new ArrayDataProvider([\n            'allModels' => BHPembagian::find()->where(['t_koperasi_id' => $id])->asArray()->all()\n        ]);\n\n        $dataKBLI = [\n            'KBLIUtama' => new ArrayDataProvider([\n                'allModels' => MKbli::getAktifitasUsaha(self::getKBLIType($id,'Utama')),\n            ]),\n            'KBLIPendukung' => new ArrayDataProvider([\n                'allModels' => MKbli::getAktifitasUsaha(self::getKBLIType($id,'Pendukung'))\n            ]),\n            'KBLITambahan' => new ArrayDataProvider([\n                'allModels' => MKbli::getAktifitasUsaha(self::getKBLIType($id,'Tambahan'))\n            ])\n        ];\n\n        $dataPengawasDanPengurus = new ArrayDataProvider([\n            'allModels' => DataAnggota::getAnggotaByID( $data['koperasi_id'] )\n        ]);\n\n        $dataBO = new ArrayDataProvider([\n            'allModels' => PemilikManfaat::getPemilikManfaatByID( $data['koperasi_id'] )\n        ]);\n\n        $caller = strtolower( debug_backtrace()[1]['class'] );\n        $type = [];\n\n        if( strpos($caller, 'pendirian') ) {\n            $type = [\n                1,\n                2,\n                3, \n                TPendirianDokumen::TYPE_MAPPING['PENDIRIAN_HASIL_MUSYAWARAH_DESA']\n            ];\n        }\n        else if ( strpos($caller, 'perubahan') ) {\n            $type = [\n                4,\n                5,\n                6, \n                TPendirianDokumen::TYPE_MAPPING['PERUBAHAN_HASIL_MUSYAWARAH_DESA']\n            ];\n        }\n        else if ( strpos($caller, 'pembubaran') ) {\n            $type = [7];\n        }\n\n        $dokumen = TPendirianDokumen::getDocumentByID( $data['koperasi_id'], $type );\n\n        $data['dataKBLI'] = $dataKBLI;\n        $data['dataAnggota'] = $dataPengawasDanPengurus;\n        $data['dataBO'] = $dataBO;\n        $data['bo_from_api'] = PemilikManfaat::isFromApi($data['koperasi_id']);\n        $data['dokumen'] = $dokumen;\n\n        $rawWilayah = self::getWilayahNotariat([\n            'provinsi' => $data['provinsi_id'],\n            'kabupaten' => $data['kab_kota_id'],\n            'kecamatan' => $data['kecamatan_id'],\n            'kelurahan' => $data['kel_desa_id']\n        ]);\n\n        extract($rawWilayah);\n\n        $data['provinsi'] = $provinsi;\n        $data['kabupaten'] = $kabupaten;\n        $data['kecamatan'] = $kecamatan;\n        $data['kelurahan'] = $kelurahan;\n        $data['disclaimer'] = Disclaimer::find()->where(['parent' => $disclaimerType])->all();\n\n        return $data;\n    }\n\n    public static function getStatusTrans($id) {\n        return self::findOne($id)->is_finish;\n    }\n\n    public function getDaftarTransaksiKoperasi( $get ) {\n\n        $query = self::find()->joinWith(['jenisTransaksi'])->where(['id_master' => Yii::$app->getRequest()->get('id')]);\n\n        if ( ! empty( $get ) ) {\n\n            if ( ! empty( $get['nama_koperasi'] ) ) {\n\n                $query->andFilterWhere(['like', 'nama_koperasi', $get['nama_koperasi']]);\n            }\n\n            if ( ! empty( $get['jenis_koperasi'] ) ) {\n\n                $query->andFilterWhere(['like', 'jenis_koperasi', $get['jenis_koperasi']]);\n            }\n\n            if ( ! empty( $get['jenis_koperasi'] ) ) {\n\n                $query->andFilterWhere(['like', 'jenis_koperasi', $get['jenis_koperasi']]);\n            }\n\n            if ( ! empty( $get['nama_notaris'] ) ) {\n\n                $query->andFilterWhere(['like', 'nama_notaris', $get['nama_notaris']]);\n            }\n\n            if ( ! empty( $get['nomor_transaksi'] ) ) {\n\n                $query->andFilterWhere(['nomor_transaksi' => $get['nomor_transaksi']]);\n            }\n\n            if ( Yii::$app->getRequest()->getQueryParam('created_date') ) {\n\n                $date = Yii::$app->getRequest()->getQueryParam('created_date');\n\n                $query->andFilterWhere(['between', 'created_date', date('Y-m-d', strtotime( $date )), date('Y-m-d', strtotime( \"+1 day\", strtotime( $date) ) ) ]);\n            }\n\n            if ( ! empty( $get['jenis_transaksi_id'] ) ) {\n\n                $query->andFilterWhere(['jenis_transaksi_id' => $get['jenis_transaksi_id']]);\n            }\n\n            if ( ! empty( $get['no_sk_koperasi'] ) ) {\n\n                $query->andFilterWhere(['kop_sk.no_sk_koperasi' => $get['no_sk_koperasi']]);\n            }\n\n        }\n\n        return $provider = new ActiveDataProvider([\n            'query' => $query,\n            'pagination' => [\n                'pageSize' => 10,\n            ]\n        ]);\n    }\n\n    public static function findLastTransaction( $type, $id ) {\n\n        $data = self::find()->where(['id_master' => $id])->orderBy(['created_date' => SORT_ASC])->asArray()->all();\n        $c = count( $data );\n\n        switch ( $type ) {\n\n            case 1:\n\n                $cBeforeLatest = $c - 2;\n                return $data[$cBeforeLatest];\n\n                break;\n\n            case 0:\n\n                $last = 0;\n                return $data[$last];\n\n                break;\n        }\n    }\n    /**\n     * Mendapatkan Transaksi Terakhir Berdasarkan NIK\n     *\n     * @param Integer Nomor Induk Koperasi\n     *\n     * @return TransaksiKoperasi Data Transaksi Koperasi\n     */\n    public static function getLastTransByNik($nik) {\n        if(!$nik) {\n            return false;\n        }\n\n        $data = self::find()\n                ->where(['nik' => $nik])\n                ->andWhere(['is_deleted' => '0'])\n                ->andWhere(['is_finish' => 1])\n                ->orderBy(['id' => SORT_DESC])->one();\n\n        if(!$data) {\n            return false;\n        }\n\n        return $data;\n    }\n    /**\n     * Mendapatkan Data Pendirian dari Pesan Nama\n     *\n     * @param Integer id_pesan_nama\n     *\n     * @return TransaksiKoperasi Data Transaksi Koperasi\n     * Waktu : 2019-12-06\n     * Keterangan : search semua transaksi baik selesai maupun belum issue https://gitlab.docotel.net/ws/koperasi/issues/173 oleh Dito\n     */\n    public static function checkStatusPendirian($id_pesan)\n    {\n        $data = TransaksiKoperasi::find()\n            ->where(['t_pesan_nama_id' => $id_pesan])\n            ->andWhere(['is_deleted' => '0'])->one();\n\n        return $data;\n    }\n\n    public static function checkNikByNama($nama_koperasi)\n    {\n        $res = [\n            'data' => null,\n            'error' => '',\n        ];\n\n        if ($nama_koperasi) {\n\n            $data = self::find()\n                ->where(['nama_koperasi' => $nama_koperasi])\n                ->andWhere(['is_deleted' => '0', 'is_finish' => '1'])\n                ->andWhere(['jenis_transaksi' => 'PENDIRIAN'])\n                ->one();\n\n            if ($data) {\n                $master = $data->dataMaster;\n\n                $list_transaksi = $master->getListTransaksi()->where(['is_deleted' => '0', 'is_finish' => '1'])->all();\n\n                foreach ($list_transaksi as $transaksi) {\n                    if (!empty($transaksi->nik)) {\n                        $res['error'] = \"Sudah Ada NIK dengan nomor {$transaksi->nik} di koperasi ini\";\n                        return $res;\n                    }\n                }\n\n                $res['data'] = $data;\n                return $res;\n            }\n\n            $res['error'] = \"Nama Koperasi Tidak Ditemukan\";\n            return $res;\n        }\n\n        $res['error'] = 'Nama Koperasi Kosong';\n        return $res;\n    }\n\n    public static function getNikById($id)\n    {\n        $data = self::find()\n            ->where(['id_master' => $id])\n            ->orderBy(['id' => SORT_DESC])\n            ->one();\n\n        if ($data) {\n            return $data->nik;\n        }\n\n        return null;\n    }\n}\n\n\n--- File: 583 # models/BHPenggabungan.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\n\n\nclass BHPenggabungan extends ActiveRecord \n{\n    public static function tableName()\n    {\n        return '{{%bh_penggabungan}}';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n}\n\n--- File: 617 # models/SK.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\n\n\nclass SK extends ActiveRecord \n{\n    const SK_PENDIRIAN = 1;\n    const SK_PERUBAHAN = 5;\n    const SP_PERUBAHAN = 7;\n    const SK_PEMBUBARAN = 6;\n\n    const SK_PENDIRIAN_DESC = 'sk_pendirian';\n    const SK_PERUBAHAN_DESC = 'sk_perubahan';\n    const SP_PERUBAHAN_DESC = 'sp_perubahan';\n    const SK_PEMBUBARAN_DESC = 'sk_pembubaran';\n    \n    public static function tableName()\n    {\n        return '{{%sk}}';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    public function getDataTransaksi()\n    {\n        return $this->hasOne(TransaksiKoperasi::className(), ['id' => 't_koperasi_id']);\n    }\n}\n\n--- File: 585 # models/ChecklistPerubahan.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\nuse yii\\helpers\\ArrayHelper;\nuse app\\models\\MasterPerubahan;\n\n/**\n * This is the model class for table \"{{%c_perubahan}}\".\n *\n * @property int $id\n * @property string $no_checklist\n * @property int $d_koperasi_id\n * @property int $t_koperasi_id\n * @property int $m_perubahan_id\n */\n\nclass ChecklistPerubahan extends ActiveRecord \n{\n\n    // Relasi\n    public function getMaster() {\n        return $this->hasOne(MasterTransaction::className(),['id' => 'd_koperasi_id']);\n    }\n\n    public static function tableName()\n    {\n        return '{{%c_perubahan}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n\n/**\n * {@inheritdoc}\n */\n    public function rules()\n    {\n        return [\n            [['d_koperasi_id', 't_koperasi_id', 'm_perubahan_id'], 'integer'],\n            [['no_checklist'], 'string', 'max' => 50],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'no_checklist' => 'No Checklist',\n            'd_koperasi_id' => 'D Koperasi ID',\n            't_koperasi_id' => 'T Koperasi ID',\n            'm_perubahan_id' => 'M Perubahan ID',\n        ];\n    }\n\n    public static function getKolomPerubahan($no) {\n        $data = ArrayHelper::getColumn(self::find()->where(['no_checklist' => $no])->all(),'m_perubahan_id');\n        if(!$data) {\n            return [];\n        }\n\n        $kolom = ArrayHelper::getColumn(EnableColumn::find()->where(['m_perubahan_id' => $data])->all(),'kolom');\n        if(!$kolom) {\n            return [];\n        }\n        \n        return $kolom;\n\n    }\n\n    public static function isPerubahanKoperasiMerahPutih($no){\n        $ids = ArrayHelper::getColumn(\n            self::find()\n                ->select('m_perubahan_id')\n                ->where(['no_checklist' => $no])\n                ->asArray()\n                ->all(),\n            'm_perubahan_id'\n        );\n\n        return in_array(MasterPerubahan::ID_KOPERASI_MERAH_PUTIH, $ids);\n    }\n\n\n\n    public static function getDataMasterByChecklist($no) {\n        $data = self::find()->where(['no_checklist' => $no])->one();\n        if(!$data) {\n            return null;\n        }\n        return $data->master;\n    }\n\n    public function getMasterPerubahan() {\n\n    \treturn $this->hasOne( MasterPerubahan::className(), ['id' => 'm_perubahan_id'] );\n    }\n}\n\n\n--- File: 680 # modules/Api/components/SKHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse Yii;\nuse app\\models\\SK;\nuse yii\\base\\Component;\nuse app\\models\\PesanNama;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\MasterTransaction;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\ChecklistPerubahan;\nuse app\\components\\helper\\Numbering;\nuse app\\components\\helper\\Disclaimer as DisclaimerHelper;\n\nclass SKHelper extends Component {\n\n    public static function pushPerubahan($id) {\n        \n        $transaksi = TransaksiKoperasi::find()->where(['id' => $id])->one();\n\n        if ( $transaksi->is_finish == -1 ) {\n\n            $transaksi->is_finish = 0;\n\n            DisclaimerHelper::generateValues('persetujuan', 'persetujuan_perubahan', $transaksi->id, $transaksi->t_pesan_nama_id)->save();\n        }\n        else {\n            $transaksi->is_finish = 1;\n\n            $pnID = [4]; // group of ids which needs to change pesan nama table\n            $bhPenggabungan = [2];\n            $group = [];\n            $idMaster = $transaksi->id_master;\n            $raw = ChecklistPerubahan::find()->joinWith(['masterPerubahan'])->where(['t_koperasi_id' => $id])->all();\n\n            if ( empty( $raw ) ) {\n\n            \techo 0; //data not found\n            \texit();\n            }\n\n            $changePesanNama = false;\n            $changePenggabungan = false;\n            foreach ($raw as $checks) {\n\n            \tif ( empty( $group ) OR ! in_array($checks->masterPerubahan->groups, $group) ) {\n\n\t            \tarray_push($group, $checks->masterPerubahan->groups);\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $pnID) ) {\n\n            \t\t$changePesanNama = true;\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $bhPenggabungan) ) {\n\n            \t\t$changePenggabungan = true;\n            \t}\n            }\n\n            $SKins = self::generateSurat( $group, $transaksi );\n\n            // change pesan nama status if master perubahan = 4 / Nama Koperasi\n            if ( $changePesanNama ) {\n            \t// var_dump('pesan');\n            \tself::changePesanNama( $transaksi, $idMaster );\n            }\n\n            // change is gabung if perubahan master id = 2 / penggabungan\n            if ( $changePenggabungan ) {\n            \t// var_dump( 'gabung' );\n            \tself::changeMasterTransactionIsGabung( $id );\n            }\n\n            // exit();\n\n            MasterTransaction::updateAll(['id_transaksi' => $id, 'id_sk' => $SKins->id], ['id' => $idMaster]);\n        }\n\n        $transaksi->tanggal_confirm = date('Y-m-d H:i:s');\n        $transaksi->tanggal_jangka_waktu = ! empty( $transaksi->jumlah_jangka_waktu ) ? date(\"Y-m-d\", strtotime($transaksi->tanggal_jangka_waktu . \" + \".$transaksi->jumlah_jangka_waktu.\" year\")) : $transaksi->tanggal_jangka_waktu;\n\n        return $transaksi->save(true, array('is_finish', 'tanggal_confirm', 'tanggal_jangka_waktu'));\n    }\n\n    public static function generateSurat( $group, $transaksi ) {\n\n        if ( empty( SK::find()->where(['t_koperasi_id' => $transaksi->id])->one() ) ) {\n\n\t        $SKins = new SK();\n\t        if ( count($group) < 2 ) {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = $group[0] == 1 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan() : self::getLastSK( $transaksi->id_master );\n\t            $SKins->no_sp_koperasi = $group[0] == 2 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan() : NULL;\n\t        }\n\t        else {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan();\n\t            $SKins->no_sp_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan();\n\t        }\n        }\n        else {\n\n        \t$SKins = SK::find()->where(['t_koperasi_id' => $transaksi->id])->one();\n        }\n\n        $SKins->save();\n\n        return $SKins;\n    }\n\n    public static function changePesanNama( $transaksi, $idMaster ) {\n\n    \t// change status of new name\n        PesanNama::updateAll(['status' => 1], ['id' => $transaksi->t_pesan_nama_id]);\n\n        // change is delete on before latest transaction\n    \t$raw = TransaksiKoperasi::findLastTransaction( TransaksiKoperasi::BEFORE_LATEST, $idMaster );\n    \t$lastID = $raw['id'];\n    \t$idPesanNama = $raw['t_pesan_nama_id'];\n\n        PesanNama::updateAll(['is_deleted' => 1], ['id' => $idPesanNama]);\n    }\n\n    public static function changeMasterTransactionIsGabung( $id ) {\n\n    \t// code goes here\n    \t$raw = BHPenggabungan::find()->where(['t_koperasi_id' => $id])->all();\n\n    \t// update master\n    \tforeach ($raw as $key) {\n\n\t\t\tMasterTransaction::updateAll(['is_gabung' => 1], ['id' => $key->d_koperasi_id]);\n    \t}\n    }\n    \n    public static function getLastSK( $idMaster ) {\n\n    \t$raw = MasterTransaction::find()->joinWith(['surat'])->where(['kop_master_transaksi.id' => $idMaster])->one();\n\n    \treturn $raw->surat->no_sk_koperasi;\n    }\n}\n?>\n\n--- File: 634 # models/MasterTransaction.php (structure only) ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\KoperasiBlokir;\nuse yii\\data\\ActiveDataProvider;\nuse app\\models\\SK;\n\nclass MasterTransaction extends ActiveRecord\n{\n    public static function tableName()\n    {\n        return '{{%master_transaksi}}';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    public function getTransaksiKoperasi()\n    {\n        return $this->hasOne(TransaksiKoperasi::className(), ['id' => 'id_transaksi']);\n    }\n\n    public function getListTransaksi()\n    {\n        return $this->hasMany(TransaksiKoperasi::className(), ['id_master' => 'id']);\n    }\n\n    public function getBlokir()\n    {\n        return $this->hasOne(KoperasiBlokir::className(), ['id' => 'id_master']);\n    }\n\n    public function getDataSK()\n    {\n        return $this->hasOne(SK::className(), ['id' => 'id_sk']);\n    }\n\n    public function getSurat()\n    {\n        return $this->hasOne(SK::className(), ['id' => 'id_sk']);\n    }\n\n    public static function getDaftarKoperasi($pid, $kid, $filter)\n    {\n... (455 more lines)\n\n--- File: 635 # models/PesanNama.php (structure only) ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse docotel\\dcms\\components\\Helper;\nuse yii\\helpers\\ArrayHelper;\nuse app\\components\\KoperasiHelper;\nuse yii\\helpers\\FileHelper;\n\n/**\n * This is the model class for table \"{{%pesan_nama}}\".\n *\n * @property int $id\n * @property string $no_pesan\n * @property string $nama_koperasi\n * @property int $jenis_koperasi_id\n * @property int $c_jenis_koperasi_id\n * @property int $m_pelabuhan_id\n * @property int $ahu_notaris_id\n * @property string $end_date\n * @property int $is_perpanjang 0:Tidak\n * @property int $status 0:Belum Pendirian, 1:Sudah Pendirian\n * @property string $is_deleted 0:Tidak, 1: Ya\n * @property string $created_by\n * @property string $created_date\n * @property string $updated_by\n * @property string $updated_date\n * @property string $deleted_by\n * @property string $deleted_date\n * @property string $file_surat_kuasa\n */\nclass PesanNama extends \\yii\\db\\ActiveRecord\n{\n    public static $modelKoperasi = [\n        0 => 'tidak multi pihak',\n        1 => 'multi pihak'\n    ];\n\n    public $ksop;\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%pesan_nama}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n... (562 more lines)\n\n--- File: 685 # modules/Api/controllers/TransaksiController.php (structure only) ---\n<?php \nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse yii\\helpers\\Url;\nuse yii\\helpers\\Json;\nuse yii\\rest\\Controller;\nuse yii\\filters\\VerbFilter;\nuse app\\components\\ApiHelper;\nuse app\\components\\LogHelper;\nuse app\\models\\TransaksiKoperasi;\nuse app\\modules\\Api\\components\\AuthHelper;\nuse app\\modules\\Api\\components\\TimeHelper;\nuse app\\modules\\Api\\components\\TransaksiHelper;\nuse app\\modules\\Api\\models\\JWTToken;\nuse yii\\base\\Exception;\nuse app\\models\\bakum\\LogCodex;\nuse app\\components\\helper\\TelegramHelper;\nuse app\\models\\Setting;\nuse Firebase\\JWT\\JWT;\n\nclass TransaksiController extends Controller\n{\n\n    public function behaviors()\n    {\n        return [\n            'verbs' => [\n                'class' => VerbFilter::className(),\n                'actions' => [\n                    // 'index' => ['POST'],\n                    'dummy' => ['POST'],\n                ],\n            ],\n        ];\n    }\n\n    /**\n     * Function untuk Output Response sekaligus Save Logging\n     * \n     * @param Array Data Request\n     * \n     * @return JSON/XML Output Response Berdasarkan\n     */\n    public function responseAndSaveLog(Array $data, $typeFormat = 'JSON')\n    {\n        $this->saveLog($data);\n\n        return $this->showResponse($data['response'], $typeFormat);\n    }\n... (899 more lines)\n\n--- File: 682 # modules/Api/components/TransaksiHelper.php (structure only) ---\n<?php\nnamespace app\\modules\\Api\\components;\n\nuse Yii;\nuse yii\\base\\Component;\nuse app\\models\\BHPembagian;\nuse app\\models\\DataAnggota;\nuse app\\models\\AktifitasUsaha;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\JenisTransaksi;\nuse app\\models\\PemilikManfaat;\nuse app\\models\\KoperasiSekunder;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\MasterTransaction;\nuse app\\models\\SK;\nuse app\\models\\PesanNama;\nuse app\\models\\JenisKoperasi;\nuse app\\models\\TingkatWilayah;\nuse app\\models\\BentukKoperasi;\nuse app\\models\\PolaPengelolaan;\nuse app\\models\\WilayahOds;\nuse app\\components\\KoperasiHelper;\nuse app\\models\\ChecklistPerubahan;\nuse app\\modules\\Api\\components\\SKHelper;\nuse app\\modules\\Api\\components\\DataAnggotaHelper;\nuse yii\\base\\Exception;\nuse app\\components\\ApiHelper;\nuse yii\\helpers\\ArrayHelper;\n\nclass TransaksiHelper extends Component\n{\n\n    public static function createTrans($data)\n    {\n        if(!$data) {\n            return [\n                'status' => false,\n                'info' => 'Data tidak Boleh Kosong',\n            ];\n        }\n\n        $nik = $data['data']['nik'];\n\n        if(!$nik) {\n            return [\n                'status' => false,\n                'info' => 'NIK Tidak Ditemukan',\n            ];\n        }\n\n... (1052 more lines)\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 4: Koperasi Transaction Lifecycle Engine\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 4: Koperasi Transaction Lifecycle Engine\n\nWelcome back! In the previous chapter, you built pages safely with the web shell and the session guard: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md). Now we\u2019ll go to the business \u201cfactory floor\u201d where koperasi transactions are processed end-to-end.\n\nThink of this engine as an assembly line:\n- Intake: accept and parse incoming payloads (often XML from ODS).\n- Assemble: validate and map data into our models; persist safely.\n- Finish: issue SK/SP numbers, update related records, and close the loop.\n\nBy the end of this chapter, you\u2019ll understand this flow and run a simple Pendirian transaction from XML all the way to finalized SK.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS sends a \u201cPendirian\u201d transaction:\n1) ODS authenticates with JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n2) ODS POSTs XML to /api/transaksi/insert with AuthJWT header.\n3) Our engine parses the XML, validates \u201cpesan nama,\u201d saves the transaction, and, when finalized, issues an SK number and updates references.\n\n---\n\n## Why this engine exists (beginner-friendly)\n\nWithout an engine, each endpoint would:\n- parse XML in different ways,\n- directly touch many tables,\n- and duplicate rules for finalization.\n\nThe Transaction Lifecycle Engine centralizes this in helpers so controllers stay tiny and the process is consistent and auditable. It reduces mistakes and makes maintenance easier.\n\n---\n\n## The factory line: three stations\n\n- Intake (Controller)\n  - Checks method/headers and JWT.\n  - Parses XML to a friendly array.\n  - Passes clean data into business helpers.\n\n- Assemble (TransaksiHelper)\n  - Validates business rules (e.g., \u201cpesan nama\u201d availability).\n  - Maps fields into TransaksiKoperasi and related models.\n  - Saves and returns IDs and statuses.\n\n- Finish (SKHelper)\n  - Issues SK/SP numbers.\n  - Toggles \u201cpesan nama\u201d (used \u2192 closed).\n  - Updates MasterTransaction and related references.\n\n---\n\n## Who does what (key actors)\n\n- TransaksiController (intake)\n  - File: modules/Api/controllers/TransaksiController.php\n  - Receives ODS calls (insert/update/edit), logs, and returns standard responses.\n  - Uses JWT and Content-Type checks from earlier chapters:\n    - [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n- TransaksiHelper (assemble)\n  - File: modules/Api/components/TransaksiHelper.php\n  - Maps the payload to our data models and enforces business rules.\n\n- SKHelper (finish)\n  - File: modules/Api/components/SKHelper.php\n  - Generates SK/SP numbers, flips \u201cpesan nama,\u201d updates master records.\n\n- Core data models (assembly parts)\n  - TransaksiKoperasi: main transaction record.\n  - MasterTransaction: ties a koperasi\u2019s transactions together.\n  - PesanNama: reservation of koperasi name.\n  - SK: stores SK/SP numbers.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant ODS as ODS Client\n  participant CTRL as TransaksiController\n  participant TH as TransaksiHelper\n  participant SKH as SKHelper\n  participant DB as DB\n\n  ODS->>CTRL: POST /api/transaksi/insert (XML + JWT)\n  CTRL->>TH: createTrans(parsedData)\n  TH->>DB: save transaksi + related data\n  TH-->>CTRL: {status, id}\n  CTRL->>SKH: pushPerubahan(id) when finalize\n  SKH->>DB: issue SK/SP + update master + pesan nama\n```\n\nNote: \u201cpushPerubahan\u201d is used broadly for finalization steps (both pendirian/perubahan scenarios). You\u2019ll see how it decides what to do.\n\n---\n\n## Try it end-to-end (recap)\n\n1) Get a JWT (from earlier):\n- Endpoint: POST /api/auth/login-jwt\n- See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nExpected short response:\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nBehind the scenes, the engine parsed your XML, validated, saved, and logged. For the logging pattern, see: [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Station 1: Intake (Controller)\n\nMinimal shape inside TransaksiController:\n```php\n// modules/Api/controllers/TransaksiController.php\npublic function actionInsert(){\n  $headers = Yii::$app->request->headers;\n  $xml = Yii::$app->request->rawBody; // XML payload\n  $data = ApiHelper::xmlToArray($xml); // parse\n  $this->verifyJwt($headers); // AuthJWT: Bearer {token}\n  return $this->handleCreate($data); // pass to helper\n}\n```\nExplanation:\n- The controller keeps logic small: parse \u2192 verify JWT \u2192 delegate.\n- It doesn\u2019t know business details\u2014those live in helpers.\n\nConsistent response + logging:\n```php\nprivate function handleCreate($data){\n  $res = TransaksiHelper::createTrans($data);\n  return $this->responseAndSaveLog([\n    'response' => $this->formatRes($res),\n    'request'  => $data\n  ], 'JSON');\n}\n```\nExplanation:\n- Whatever happens, we log the same way and return a standard shape.\n\n---\n\n## Station 2: Assemble (TransaksiHelper)\n\nCreate or update a transaction:\n```php\n// modules/Api/components/TransaksiHelper.php\npublic static function createTrans($data){\n  if(!$data) return ['status'=>false,'info'=>'Data kosong'];\n  $nik = $data['data']['nik'] ?? null;\n  if(!$nik) return ['status'=>false,'info'=>'NIK tidak ditemukan'];\n  return self::mapAndSave($data); // validate + persist\n}\n```\nExplanation:\n- Early guardrails (is data present? does it have NIK?).\n- Pass to a dedicated mapper/persister.\n\nMapping essentials (super simplified):\n```php\nprivate static function mapAndSave($data){\n  $m = new TransaksiKoperasi();\n  $m->attributes = self::mapFields($data); // field-by-field mapping\n  if(!self::validatePesanNama($m)) return ['status'=>false,'info'=>'Pesan nama invalid'];\n  return $m->save() ? ['status'=>true,'id'=>$m->id] : ['status'=>false,'info'=>'Save gagal'];\n}\n```\nExplanation:\n- Put business checks (like \u201cpesan nama\u201d) before saving.\n- Keep mapping logic in small functions so it\u2019s testable.\n\n\u201cPesan nama\u201d check (idea):\n```php\nprivate static function validatePesanNama($m){\n  $cek = TransaksiKoperasi::checkPendirian($m);\n  return empty($cek['status']); // if checks ok \u2192 true\n}\n```\nExplanation:\n- Centralize \u201cpendirian/perubahan\u201d rules on the model side.\n\nTip: If you generate or use NIK based on wilayah, see: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Station 3: Finish (SKHelper)\n\nWhen a transaction is ready to be finalized (issue SK/SP, close name reservation), the controller calls SKHelper. Minimal shape:\n\n```php\n// modules/Api/components/SKHelper.php\npublic static function pushPerubahan($id){\n  $t = TransaksiKoperasi::findOne($id);\n  if($t->is_finish == -1){ $t->is_finish = 0; return $t->save(false,['is_finish']); }\n  $sk = self::generateSurat(self::groupOfChanges($id), $t);\n  self::maybeChangePesanNama($t);\n  self::linkToMaster($t, $sk);\n  return self::finalize($t);\n}\n```\nExplanation:\n- If it\u2019s still a draft, move to \u201cassembled\u201d (is_finish 0).\n- Otherwise, issue SK/SP and finish (is_finish 1), update master and \u201cpesan nama\u201d.\n\nIssue SK/SP (simplified):\n```php\nprivate static function generateSurat($group, $t){\n  $sk = SK::find()->where(['t_koperasi_id'=>$t->id])->one() ?? new SK();\n  $sk->t_koperasi_id = $t->id;\n  $sk->no_sk_koperasi = Numbering::getCounter(...)->generateSKPerubahan();\n  $sk->no_sp_koperasi = Numbering::getCounter(...)->generateSKPelaporan();\n  $sk->save(false);\n  return $sk;\n}\n```\nExplanation:\n- Uses the centralized numbering system to generate SK/SP.\n- We\u2019ll deep dive into numbering next chapter: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nToggle \u201cpesan nama\u201d on name change:\n```php\nprivate static function maybeChangePesanNama($t){\n  // mark new name as used\n  PesanNama::updateAll(['status'=>1], ['id'=>$t->t_pesan_nama_id]);\n  // soft-delete old name from previous transaction\n  $prev = TransaksiKoperasi::findLastTransaction(1, $t->id_master);\n  PesanNama::updateAll(['is_deleted'=>1], ['id'=>$prev['t_pesan_nama_id'] ?? 0]);\n}\n```\nExplanation:\n- Keeps name reservation lifecycle correct: new name \u201cused,\u201d old name \u201cclosed.\u201d\n\nFinalize flags:\n```php\nprivate static function finalize($t){\n  $t->is_finish = 1;\n  $t->tanggal_confirm = date('Y-m-d H:i:s');\n  return $t->save(false,['is_finish','tanggal_confirm']);\n}\n```\nExplanation:\n- One place to switch a transaction to \u201cfinished.\u201d\n\n---\n\n## Inputs and outputs (what you send, what you get)\n\n- Input (example XML, minimum idea):\n```xml\n<root>\n  <data>\n    <koperasi>\n      <nik>1234567890123456</nik>\n      <!-- other mapped fields -->\n    </koperasi>\n  </data>\n</root>\n```\n- Output (standard, short):\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nIf something fails (format/auth/business rules), you\u2019ll get predictable codes. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Lifecycle states at a glance\n\n- Draft: is_finish = -1 (early staging, not ready)\n- Assembled: is_finish = 0 (validated/mapped, not yet issued)\n- Finalized: is_finish = 1 (SK/SP issued, references updated)\n\nThe engine moves transactions through these states via helpers, not manually sprinkled across controllers.\n\n---\n\n## Two common recipes\n\n- Insert \u201cPendirian\u201d and save draft\n  1) POST XML to /api/transaksi/insert (with JWT).\n  2) Controller parses and calls TransaksiHelper::createTrans.\n  3) You get a success response with saved state (often draft/assembled).\n\n- Finalize and issue SK\n  1) Call the finalize endpoint or business action triggering SKHelper::pushPerubahan.\n  2) SKHelper issues SK/SP, toggles \u201cpesan nama,\u201d updates MasterTransaction.\n  3) Transaction moves to is_finish = 1.\n\nNumbering details for SK/SP are covered next: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\n---\n\n## What happens under the hood (step-by-step)\n\n1) Controller checks method/headers/JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)  \n2) XML \u2192 array conversion (shape normalized).  \n3) TransaksiHelper validates business rules, maps fields, and saves models.  \n4) When finalizing, SKHelper generates SK/SP, updates \u201cpesan nama\u201d and master links.  \n5) Controller returns a consistent response and logs everything. See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Where to look in the code (quick map)\n\n- Controller intake:\n  - modules/Api/controllers/TransaksiController.php\n- Assemble logic:\n  - modules/Api/components/TransaksiHelper.php\n- Finalize logic:\n  - modules/Api/components/SKHelper.php\n- Models (data parts):\n  - models/TransaksiKoperasi.php\n  - models/MasterTransaction.php\n  - models/PesanNama.php\n  - models/SK.php\n\nTip: If you need wilayah or NIK generation details, jump to: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cFormat\u201d errors? Check Content-Type and XML shape. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- \u201cAuth\u201d errors? Ensure AuthJWT: Bearer {token}. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n- \u201cBusiness\u201d errors? Often related to \u201cpesan nama,\u201d missing fields, or invalid transitions.\n- \u201cSK\u201d not created? Ensure you triggered finalization (SKHelper) and see next chapter for numbering.\n\n---\n\n## Wrap-up and what\u2019s next\n\nYou learned how koperasi requests move through the factory line: Controller intake \u2192 TransaksiHelper assembly \u2192 SKHelper finish. You saw how \u201cpesan nama\u201d and MasterTransaction are updated when finalizing.\n\nNext, we\u2019ll zoom in on how SK and SP numbers are generated and tracked: [SK and Numbering System](05_sk_and_numbering_system_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"SK and Numbering System\n\". This is Chapter 5.\n\nConcept Details:\n- Name: SK and Numbering System\n\n- Description:\nOfficial documents (SK, SP) need unique, patterned numbers. This layer encapsulates how numbers are generated and assigned at the right moment in a transaction. SKHelper decides which counter to use, persists SK/SP pairs, and updates related entities. Numbering is centralized in helper/Numbering to ensure consistent sequences. Picture a ticket dispenser with rules: pick the correct series, increment safely, and stamp it back onto the transaction and its artifacts (PDFs/SK views).\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n---\n# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n---\n# Chapter 4: Koperasi Transaction Lifecycle Engine\n\nWelcome back! In the previous chapter, you built pages safely with the web shell and the session guard: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md). Now we\u2019ll go to the business \u201cfactory floor\u201d where koperasi transactions are processed end-to-end.\n\nThink of this engine as an assembly line:\n- Intake: accept and parse incoming payloads (often XML from ODS).\n- Assemble: validate and map data into our models; persist safely.\n- Finish: issue SK/SP numbers, update related records, and close the loop.\n\nBy the end of this chapter, you\u2019ll understand this flow and run a simple Pendirian transaction from XML all the way to finalized SK.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS sends a \u201cPendirian\u201d transaction:\n1) ODS authenticates with JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n2) ODS POSTs XML to /api/transaksi/insert with AuthJWT header.\n3) Our engine parses the XML, validates \u201cpesan nama,\u201d saves the transaction, and, when finalized, issues an SK number and updates references.\n\n---\n\n## Why this engine exists (beginner-friendly)\n\nWithout an engine, each endpoint would:\n- parse XML in different ways,\n- directly touch many tables,\n- and duplicate rules for finalization.\n\nThe Transaction Lifecycle Engine centralizes this in helpers so controllers stay tiny and the process is consistent and auditable. It reduces mistakes and makes maintenance easier.\n\n---\n\n## The factory line: three stations\n\n- Intake (Controller)\n  - Checks method/headers and JWT.\n  - Parses XML to a friendly array.\n  - Passes clean data into business helpers.\n\n- Assemble (TransaksiHelper)\n  - Validates business rules (e.g., \u201cpesan nama\u201d availability).\n  - Maps fields into TransaksiKoperasi and related models.\n  - Saves and returns IDs and statuses.\n\n- Finish (SKHelper)\n  - Issues SK/SP numbers.\n  - Toggles \u201cpesan nama\u201d (used \u2192 closed).\n  - Updates MasterTransaction and related references.\n\n---\n\n## Who does what (key actors)\n\n- TransaksiController (intake)\n  - File: modules/Api/controllers/TransaksiController.php\n  - Receives ODS calls (insert/update/edit), logs, and returns standard responses.\n  - Uses JWT and Content-Type checks from earlier chapters:\n    - [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n- TransaksiHelper (assemble)\n  - File: modules/Api/components/TransaksiHelper.php\n  - Maps the payload to our data models and enforces business rules.\n\n- SKHelper (finish)\n  - File: modules/Api/components/SKHelper.php\n  - Generates SK/SP numbers, flips \u201cpesan nama,\u201d updates master records.\n\n- Core data models (assembly parts)\n  - TransaksiKoperasi: main transaction record.\n  - MasterTransaction: ties a koperasi\u2019s transactions together.\n  - PesanNama: reservation of koperasi name.\n  - SK: stores SK/SP numbers.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant ODS as ODS Client\n  participant CTRL as TransaksiController\n  participant TH as TransaksiHelper\n  participant SKH as SKHelper\n  participant DB as DB\n\n  ODS->>CTRL: POST /api/transaksi/insert (XML + JWT)\n  CTRL->>TH: createTrans(parsedData)\n  TH->>DB: save transaksi + related data\n  TH-->>CTRL: {status, id}\n  CTRL->>SKH: pushPerubahan(id) when finalize\n  SKH->>DB: issue SK/SP + update master + pesan nama\n```\n\nNote: \u201cpushPerubahan\u201d is used broadly for finalization steps (both pendirian/perubahan scenarios). You\u2019ll see how it decides what to do.\n\n---\n\n## Try it end-to-end (recap)\n\n1) Get a JWT (from earlier):\n- Endpoint: POST /api/auth/login-jwt\n- See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nExpected short response:\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nBehind the scenes, the engine parsed your XML, validated, saved, and logged. For the logging pattern, see: [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Station 1: Intake (Controller)\n\nMinimal shape inside TransaksiController:\n```php\n// modules/Api/controllers/TransaksiController.php\npublic function actionInsert(){\n  $headers = Yii::$app->request->headers;\n  $xml = Yii::$app->request->rawBody; // XML payload\n  $data = ApiHelper::xmlToArray($xml); // parse\n  $this->verifyJwt($headers); // AuthJWT: Bearer {token}\n  return $this->handleCreate($data); // pass to helper\n}\n```\nExplanation:\n- The controller keeps logic small: parse \u2192 verify JWT \u2192 delegate.\n- It doesn\u2019t know business details\u2014those live in helpers.\n\nConsistent response + logging:\n```php\nprivate function handleCreate($data){\n  $res = TransaksiHelper::createTrans($data);\n  return $this->responseAndSaveLog([\n    'response' => $this->formatRes($res),\n    'request'  => $data\n  ], 'JSON');\n}\n```\nExplanation:\n- Whatever happens, we log the same way and return a standard shape.\n\n---\n\n## Station 2: Assemble (TransaksiHelper)\n\nCreate or update a transaction:\n```php\n// modules/Api/components/TransaksiHelper.php\npublic static function createTrans($data){\n  if(!$data) return ['status'=>false,'info'=>'Data kosong'];\n  $nik = $data['data']['nik'] ?? null;\n  if(!$nik) return ['status'=>false,'info'=>'NIK tidak ditemukan'];\n  return self::mapAndSave($data); // validate + persist\n}\n```\nExplanation:\n- Early guardrails (is data present? does it have NIK?).\n- Pass to a dedicated mapper/persister.\n\nMapping essentials (super simplified):\n```php\nprivate static function mapAndSave($data){\n  $m = new TransaksiKoperasi();\n  $m->attributes = self::mapFields($data); // field-by-field mapping\n  if(!self::validatePesanNama($m)) return ['status'=>false,'info'=>'Pesan nama invalid'];\n  return $m->save() ? ['status'=>true,'id'=>$m->id] : ['status'=>false,'info'=>'Save gagal'];\n}\n```\nExplanation:\n- Put business checks (like \u201cpesan nama\u201d) before saving.\n- Keep mapping logic in small functions so it\u2019s testable.\n\n\u201cPesan nama\u201d check (idea):\n```php\nprivate static function validatePesanNama($m){\n  $cek = TransaksiKoperasi::checkPendirian($m);\n  return empty($cek['status']); // if checks ok \u2192 true\n}\n```\nExplanation:\n- Centralize \u201cpendirian/perubahan\u201d rules on the model side.\n\nTip: If you generate or use NIK based on wilayah, see: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Station 3: Finish (SKHelper)\n\nWhen a transaction is ready to be finalized (issue SK/SP, close name reservation), the controller calls SKHelper. Minimal shape:\n\n```php\n// modules/Api/components/SKHelper.php\npublic static function pushPerubahan($id){\n  $t = TransaksiKoperasi::findOne($id);\n  if($t->is_finish == -1){ $t->is_finish = 0; return $t->save(false,['is_finish']); }\n  $sk = self::generateSurat(self::groupOfChanges($id), $t);\n  self::maybeChangePesanNama($t);\n  self::linkToMaster($t, $sk);\n  return self::finalize($t);\n}\n```\nExplanation:\n- If it\u2019s still a draft, move to \u201cassembled\u201d (is_finish 0).\n- Otherwise, issue SK/SP and finish (is_finish 1), update master and \u201cpesan nama\u201d.\n\nIssue SK/SP (simplified):\n```php\nprivate static function generateSurat($group, $t){\n  $sk = SK::find()->where(['t_koperasi_id'=>$t->id])->one() ?? new SK();\n  $sk->t_koperasi_id = $t->id;\n  $sk->no_sk_koperasi = Numbering::getCounter(...)->generateSKPerubahan();\n  $sk->no_sp_koperasi = Numbering::getCounter(...)->generateSKPelaporan();\n  $sk->save(false);\n  return $sk;\n}\n```\nExplanation:\n- Uses the centralized numbering system to generate SK/SP.\n- We\u2019ll deep dive into numbering next chapter: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nToggle \u201cpesan nama\u201d on name change:\n```php\nprivate static function maybeChangePesanNama($t){\n  // mark new name as used\n  PesanNama::updateAll(['status'=>1], ['id'=>$t->t_pesan_nama_id]);\n  // soft-delete old name from previous transaction\n  $prev = TransaksiKoperasi::findLastTransaction(1, $t->id_master);\n  PesanNama::updateAll(['is_deleted'=>1], ['id'=>$prev['t_pesan_nama_id'] ?? 0]);\n}\n```\nExplanation:\n- Keeps name reservation lifecycle correct: new name \u201cused,\u201d old name \u201cclosed.\u201d\n\nFinalize flags:\n```php\nprivate static function finalize($t){\n  $t->is_finish = 1;\n  $t->tanggal_confirm = date('Y-m-d H:i:s');\n  return $t->save(false,['is_finish','tanggal_confirm']);\n}\n```\nExplanation:\n- One place to switch a transaction to \u201cfinished.\u201d\n\n---\n\n## Inputs and outputs (what you send, what you get)\n\n- Input (example XML, minimum idea):\n```xml\n<root>\n  <data>\n    <koperasi>\n      <nik>1234567890123456</nik>\n      <!-- other mapped fields -->\n    </koperasi>\n  </data>\n</root>\n```\n- Output (standard, short):\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nIf something fails (format/auth/business rules), you\u2019ll get predictable codes. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Lifecycle states at a glance\n\n- Draft: is_finish = -1 (early staging, not ready)\n- Assembled: is_finish = 0 (validated/mapped, not yet issued)\n- Finalized: is_finish = 1 (SK/SP issued, references updated)\n\nThe engine moves transactions through these states via helpers, not manually sprinkled across controllers.\n\n---\n\n## Two common recipes\n\n- Insert \u201cPendirian\u201d and save draft\n  1) POST XML to /api/transaksi/insert (with JWT).\n  2) Controller parses and calls TransaksiHelper::createTrans.\n  3) You get a success response with saved state (often draft/assembled).\n\n- Finalize and issue SK\n  1) Call the finalize endpoint or business action triggering SKHelper::pushPerubahan.\n  2) SKHelper issues SK/SP, toggles \u201cpesan nama,\u201d updates MasterTransaction.\n  3) Transaction moves to is_finish = 1.\n\nNumbering details for SK/SP are covered next: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\n---\n\n## What happens under the hood (step-by-step)\n\n1) Controller checks method/headers/JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)  \n2) XML \u2192 array conversion (shape normalized).  \n3) TransaksiHelper validates business rules, maps fields, and saves models.  \n4) When finalizing, SKHelper generates SK/SP, updates \u201cpesan nama\u201d and master links.  \n5) Controller returns a consistent response and logs everything. See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Where to look in the code (quick map)\n\n- Controller intake:\n  - modules/Api/controllers/TransaksiController.php\n- Assemble logic:\n  - modules/Api/components/TransaksiHelper.php\n- Finalize logic:\n  - modules/Api/components/SKHelper.php\n- Models (data parts):\n  - models/TransaksiKoperasi.php\n  - models/MasterTransaction.php\n  - models/PesanNama.php\n  - models/SK.php\n\nTip: If you need wilayah or NIK generation details, jump to: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cFormat\u201d errors? Check Content-Type and XML shape. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- \u201cAuth\u201d errors? Ensure AuthJWT: Bearer {token}. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n- \u201cBusiness\u201d errors? Often related to \u201cpesan nama,\u201d missing fields, or invalid transitions.\n- \u201cSK\u201d not created? Ensure you triggered finalization (SKHelper) and see next chapter for numbering.\n\n---\n\n## Wrap-up and what\u2019s next\n\nYou learned how koperasi requests move through the factory line: Controller intake \u2192 TransaksiHelper assembly \u2192 SKHelper finish. You saw how \u201cpesan nama\u201d and MasterTransaction are updated when finalizing.\n\nNext, we\u2019ll zoom in on how SK and SP numbers are generated and tracked: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 617 # models/SK.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\n\n\nclass SK extends ActiveRecord \n{\n    const SK_PENDIRIAN = 1;\n    const SK_PERUBAHAN = 5;\n    const SP_PERUBAHAN = 7;\n    const SK_PEMBUBARAN = 6;\n\n    const SK_PENDIRIAN_DESC = 'sk_pendirian';\n    const SK_PERUBAHAN_DESC = 'sk_perubahan';\n    const SP_PERUBAHAN_DESC = 'sp_perubahan';\n    const SK_PEMBUBARAN_DESC = 'sk_pembubaran';\n    \n    public static function tableName()\n    {\n        return '{{%sk}}';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    public function getDataTransaksi()\n    {\n        return $this->hasOne(TransaksiKoperasi::className(), ['id' => 't_koperasi_id']);\n    }\n}\n\n--- File: 680 # modules/Api/components/SKHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse Yii;\nuse app\\models\\SK;\nuse yii\\base\\Component;\nuse app\\models\\PesanNama;\nuse app\\models\\BHPenggabungan;\nuse app\\models\\MasterTransaction;\nuse app\\models\\TransaksiKoperasi;\nuse app\\models\\ChecklistPerubahan;\nuse app\\components\\helper\\Numbering;\nuse app\\components\\helper\\Disclaimer as DisclaimerHelper;\n\nclass SKHelper extends Component {\n\n    public static function pushPerubahan($id) {\n        \n        $transaksi = TransaksiKoperasi::find()->where(['id' => $id])->one();\n\n        if ( $transaksi->is_finish == -1 ) {\n\n            $transaksi->is_finish = 0;\n\n            DisclaimerHelper::generateValues('persetujuan', 'persetujuan_perubahan', $transaksi->id, $transaksi->t_pesan_nama_id)->save();\n        }\n        else {\n            $transaksi->is_finish = 1;\n\n            $pnID = [4]; // group of ids which needs to change pesan nama table\n            $bhPenggabungan = [2];\n            $group = [];\n            $idMaster = $transaksi->id_master;\n            $raw = ChecklistPerubahan::find()->joinWith(['masterPerubahan'])->where(['t_koperasi_id' => $id])->all();\n\n            if ( empty( $raw ) ) {\n\n            \techo 0; //data not found\n            \texit();\n            }\n\n            $changePesanNama = false;\n            $changePenggabungan = false;\n            foreach ($raw as $checks) {\n\n            \tif ( empty( $group ) OR ! in_array($checks->masterPerubahan->groups, $group) ) {\n\n\t            \tarray_push($group, $checks->masterPerubahan->groups);\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $pnID) ) {\n\n            \t\t$changePesanNama = true;\n            \t}\n            \t\n            \tif ( in_array($checks->masterPerubahan->id, $bhPenggabungan) ) {\n\n            \t\t$changePenggabungan = true;\n            \t}\n            }\n\n            $SKins = self::generateSurat( $group, $transaksi );\n\n            // change pesan nama status if master perubahan = 4 / Nama Koperasi\n            if ( $changePesanNama ) {\n            \t// var_dump('pesan');\n            \tself::changePesanNama( $transaksi, $idMaster );\n            }\n\n            // change is gabung if perubahan master id = 2 / penggabungan\n            if ( $changePenggabungan ) {\n            \t// var_dump( 'gabung' );\n            \tself::changeMasterTransactionIsGabung( $id );\n            }\n\n            // exit();\n\n            MasterTransaction::updateAll(['id_transaksi' => $id, 'id_sk' => $SKins->id], ['id' => $idMaster]);\n        }\n\n        $transaksi->tanggal_confirm = date('Y-m-d H:i:s');\n        $transaksi->tanggal_jangka_waktu = ! empty( $transaksi->jumlah_jangka_waktu ) ? date(\"Y-m-d\", strtotime($transaksi->tanggal_jangka_waktu . \" + \".$transaksi->jumlah_jangka_waktu.\" year\")) : $transaksi->tanggal_jangka_waktu;\n\n        return $transaksi->save(true, array('is_finish', 'tanggal_confirm', 'tanggal_jangka_waktu'));\n    }\n\n    public static function generateSurat( $group, $transaksi ) {\n\n        if ( empty( SK::find()->where(['t_koperasi_id' => $transaksi->id])->one() ) ) {\n\n\t        $SKins = new SK();\n\t        if ( count($group) < 2 ) {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = $group[0] == 1 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan() : self::getLastSK( $transaksi->id_master );\n\t            $SKins->no_sp_koperasi = $group[0] == 2 ? Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan() : NULL;\n\t        }\n\t        else {\n\n\t            $SKins->t_koperasi_id = $transaksi->id;\n\t            $SKins->no_sk_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPerubahan();\n\t            $SKins->no_sp_koperasi = Numbering::getCounter(['id' => SK::SK_PENDIRIAN, 'description' => SK::SK_PENDIRIAN_DESC], 7)->generateSKPelaporan();\n\t        }\n        }\n        else {\n\n        \t$SKins = SK::find()->where(['t_koperasi_id' => $transaksi->id])->one();\n        }\n\n        $SKins->save();\n\n        return $SKins;\n    }\n\n    public static function changePesanNama( $transaksi, $idMaster ) {\n\n    \t// change status of new name\n        PesanNama::updateAll(['status' => 1], ['id' => $transaksi->t_pesan_nama_id]);\n\n        // change is delete on before latest transaction\n    \t$raw = TransaksiKoperasi::findLastTransaction( TransaksiKoperasi::BEFORE_LATEST, $idMaster );\n    \t$lastID = $raw['id'];\n    \t$idPesanNama = $raw['t_pesan_nama_id'];\n\n        PesanNama::updateAll(['is_deleted' => 1], ['id' => $idPesanNama]);\n    }\n\n    public static function changeMasterTransactionIsGabung( $id ) {\n\n    \t// code goes here\n    \t$raw = BHPenggabungan::find()->where(['t_koperasi_id' => $id])->all();\n\n    \t// update master\n    \tforeach ($raw as $key) {\n\n\t\t\tMasterTransaction::updateAll(['is_gabung' => 1], ['id' => $key->d_koperasi_id]);\n    \t}\n    }\n    \n    public static function getLastSK( $idMaster ) {\n\n    \t$raw = MasterTransaction::find()->joinWith(['surat'])->where(['kop_master_transaksi.id' => $idMaster])->one();\n\n    \treturn $raw->surat->no_sk_koperasi;\n    }\n}\n?>\n\n--- File: 744 # views/pendirian/sk_pendirian.php ---\n<?php\n\nuse app\\components\\helper\\FormatDate;\nuse app\\models\\BentukKoperasi;\n\nif (strtoupper($dataTransaksi['b_koperasi_id']) == BentukKoperasi::SEKUNDER) {\n    $skd = \"&nbsp;<span style='font-size:8pt'>(Skd)</span>\";\n} else {\n    $skd = '';\n}\n\n?>\n\n<style type=\"text/css\">\n\t.tengah {\n\t\ttext-align: center;\n\t}\n\n\t.pad30 {\n\t\tpadding-top: 30px;\n\t}\n\n\t.logo {\n\t\twidth: 100px;\n\t}\n\n\t.tebal {\n\t\tfont-weight: bold;\n\t}\n\n\t.pad4 {\n\t\tfont-size: 10pt;\n\t}\n\n\ttable {\n\t\twidth: 90%;\n\t\tmargin: auto;\n\t\ttext-align: justify;\n\t}\n\n\ttd {\n\t\tvertical-align: top;\n\t\tfont-size: 10pt;\n\t}\n\n\t.qrcode {\n\t\tpadding-left: 30px;\n\t\tpadding-top: 20px;\n\t\twidth: 100px;\n\t\theight:100px;\n\t\t/* filter: grayscale(1); */\n\t}\n\n\t.ttd {\n\t\tmax-height: 103px;\n\t}\n\n\t.judul {\n\t\twidth: 75%;\n\t\tmargin: auto;\n\t}\n\n\t.nama-koperasi {\n\t\tdisplay: inline-block;\n\t\tmax-width: 90%;\n\t\tword-break: break-word;\n\t\toverflow: hidden;\n\t\twhite-space: normal;\n\t\tvertical-align: bottom;\n\t}\n</style>\n\n<body>\n\t<div class=\"tengah pad30\">\n\t\t<img class=\"logo\" src=\"images/assets/logo-pengayoman.png\">\n\t</div>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<div class='judul tengah tebal'>\n\t\t<p class='pad4'>\n\t\t\tKEPUTUSAN MENTERI HUKUM DAN HAK ASASI MANUSIA REPUBLIK INDONESIA\n\t\t\t<br />\n\t\t\tNOMOR <?= $number ?>\n\t\t\t<br>\n\t\t\tTENTANG\n\t\t\t<br>\n\t\t\tPENGESAHAN PENDIRIAN BADAN HUKUM\n\t\t\t<br>\n\t\t\t<span class=\"nama-koperasi\"><?= htmlspecialchars($namaKoperasi) ?></span><?= $skd ?>\n\t\t</p>\n\t</div>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<table class='justify'>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\tMenimbang\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>a&nbsp;</td>\n\t\t\t<td>\n\t\t\t\t<?php if (isset($isNotarisPengganti) && $isNotarisPengganti): ?>\n\t\t\t\t\tBahwa berdasarkan Permohonan <?= $namaNotaris ?>, sesuai salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotarisPengganti ?>, sebagai Notaris pengganti dari <?= $namaNotaris ?>, tentang Pendirian Badan Hukum <?= $namaKoperasi ?><?= $skd ?> tanggal <?= FormatDate::formatDateIndonesia($tanggal_pendirian) ?> telah sesuai dengan persyaratan pengesahan Pendirian Badan Hukum Koperasi;\n\t\t\t\t<?php else: ?>\n\t\t\t\t\tBahwa berdasarkan Permohonan <?= $namaNotaris ?>, sesuai salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotaris ?>, tentang Pendirian Badan Hukum <?= $namaKoperasi ?><?= $skd ?> tanggal <?= FormatDate::formatDateIndonesia($tanggal_pendirian) ?> telah sesuai dengan persyaratan pengesahan Pendirian Badan Hukum Koperasi;\n\t\t\t\t<?php endif; ?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class='colkiri'>\n\t\t\t\t&nbsp;\n\t\t\t</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>b&nbsp;</td>\n\t\t\t<td class='justify'>\n\t\t\t\tBahwa berdasarkan pertimbangan sebagaimana dimaksud dalam huruf a, perlu menetapkan keputusan Menteri Hukum dan Hak Asasi Manusia tentang Pengesahan Pendirian Badan Hukum <?= $namaKoperasi ?><?= $skd ?>.\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<div class='tebal tengah'>\n\t\tM E M U T U S K A N :\n\t</div>\n\n\t<table class='justify'>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tMenetapkan\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>&nbsp;</td>\n\t\t</tr>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKESATU\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\t<?php if (isset($isNotarisPengganti) && $isNotarisPengganti): ?>\n\t\t\t\t\tMengesahkan pendirian badan hukum - <?= $namaKoperasi ?><?= $skd ?> - yang berkedudukan di <?= $kabupaten ?> karena telah sesuai dengan Data Format Isian Pendirian yang disimpan di dalam database Sistem Administrasi Badan Hukum Koperasi sebagaimana salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotarisPengganti ?>, sebagai Notaris pengganti dari <?= $namaNotaris ?>, yang berkedudukan di <?= $kedudukanNotaris ?>.\n\t\t\t\t<?php else: ?>\n\t\t\t\t\tMengesahkan pendirian badan hukum - <?= $namaKoperasi ?><?= $skd ?> - yang berkedudukan di <?= $kabupaten ?> karena telah sesuai dengan Data Format Isian Pendirian yang disimpan di dalam database Sistem Administrasi Badan Hukum Koperasi sebagaimana salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotaris ?>, yang berkedudukan di <?= $kedudukanNotaris ?>.\n\t\t\t\t<?php endif; ?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<!-- \t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKEDUA\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tModal dasar, modal yang ditempatkan dan modal disetor sebagaimana yang tercantum dalam akta yang disebut pada poin PERTAMA.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKETIGA\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tJenis Perseroan UMUM.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKEEMPAT\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tSusunan Pemegang Saham, Dewan Komisaris dan Direksi <i>Terlampir</i>.\n\t\t\t</td>\n\t\t</tr> -->\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKEDUA\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tKeputusan ini berlaku sejak tanggal ditetapkan.\n\t\t\t\t<br />\n\t\t\t\tApabila ternyata dikemudian hari terdapat kekeliruan dalam Keputusan ini maka akan diadakan perbaikan sebagaimana mestinya.\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n\t<div>\n\t\t&nbsp;\n\t</div>\n\n\t<table class='singlespace'>\n\t\t<tr>\n\t\t\t<td valign='middle' class='qrcode'>\n\t\t\t\t<img class=\"qrcode\" src=\"<?= $qrCodePath ?>\">\n\t\t\t</td>\n\t\t\t<td class='tengah'>\n\t\t\t\tDitetapkan di Jakarta, <?= FormatDate::formatDateIndonesia($number_tanggal) ?>.\n\t\t\t\t<br />&nbsp;<br />\n\t\t\t\ta.n. <?=($number_tanggal >= \"2019-10-01 00:00:00\" && $number_tanggal < \"2019-10-23 00:00:00\") ? \"Plt. \" : \"\" ;?>MENTERI HUKUM DAN HAK ASASI MANUSIA\n\t\t\t\t<br />\n\t\t\t\tREPUBLIK INDONESIA\n\t\t\t\t<br />\n\t\t\t\tDIREKTUR JENDERAL ADMINISTRASI HUKUM UMUM,\n\t\t\t\t<br />\n\t\t\t\t<img class=\"ttd\" src=\"images/assets/#ttd_dirjen\">\n\t\t\t\t<br />\n\t\t\t\t<b>#nama_dirjen</b>\n\t\t\t\t<br />\n\t\t\t\t<b>#nip_dirjen</b>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td colspan='2'>\n\t\t\t\tDICETAK PADA TANGGAL <?= FormatDate::formatDateIndonesia(date('Y-m-d')) ?>\n\t\t\t\t<br />\n\t\t\t\t<!-- <b>DAFTAR PERSEROAN NOMOR <?= $number ?> TANGGAL <?= date('d F Y') ?> </b> -->\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\tTEMBUSAN :\n\t\t\t\t<br>\n\t\t\t\tMENTERI KOPERASI\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n\n<!-- tanggal akta / tanggal cetak sk / kabupaten / nama notaris -->\n\n--- File: 759 # views/perubahan/sk_perubahan.php ---\n<?php\n\nuse app\\models\\BentukKoperasi;\nuse app\\components\\helper\\FormatDate;\n\nif (strtoupper($dataTransaksi['b_koperasi_id']) == BentukKoperasi::SEKUNDER) {\n    $skd = \"&nbsp;<span style='font-size:8pt'>(Skd)</span>\";\n} else {\n    $skd = '';\n}\n?>\n\n<style type=\"text/css\">\n\t.tengah {\n\t\ttext-align: center;\n\t}\n\n\t.pad30 {\n\t\tpadding-top: 30px;\n\t}\n\n\t.logo {\n\t\twidth: 100px;\n\t}\n\n\t.tebal {\n\t\tfont-weight: bold;\n\t}\n\n\t.pad4 {\n\t\tfont-size: 10pt;\n\t}\n\n\ttable {\n\t\twidth: 90%;\n\t\tmargin: auto;\n\t\ttext-align: justify;\n\t}\n\n\ttd {\n\t\tvertical-align: top;\n\t\tfont-size: 10pt;\n\t}\n\n\t.qrcode {\n\t\tpadding-left: 30px;\n\t\tpadding-top: 20px;\n\t\twidth: 140;\n\t\t/* filter: grayscale(1); */\n\t}\n\n\t.ttd {\n\t\tmax-height: 103px;\n\t}\n\n\t.judul {\n\t\twidth: 75%;\n\t\tmargin: auto;\n\t}\n\n\t.nama-koperasi {\n\t\tdisplay: inline-block;\n\t\tmax-width: 90%;\n\t\tword-break: break-word;\n\t\toverflow: hidden;\n\t\twhite-space: normal;\n\t\tvertical-align: bottom;\n\t}\n</style>\n\n<body>\n\t<div class=\"tengah pad30\">\n\t\t<img class=\"logo\" src=\"images/assets/logo-pengayoman.png\">\n\t</div>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<div class='judul tengah tebal'>\n\t\t<p class='pad4'>\n\t\t\tKEPUTUSAN MENTERI HUKUM DAN HAK ASASI MANUSIA REPUBLIK INDONESIA\n\t\t\t<br />\n\t\t\tNOMOR <?= $number ?>\n\t\t\t<br>\n\t\t\tTENTANG\n\t\t\t<br>\n\t\t\tPENGESAHAN PERUBAHAN ANGGARAN DASAR\n\t\t\t<br>\n\t\t\t<span class=\"nama-koperasi\"><?= htmlspecialchars($namaKoperasi) ?></span><?= $skd ?>\n\t\t</p>\n\t</div>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<table class='justify'>\n\t\t<tr>\n\t\t\t<td>\n\t\t\t\tMenimbang\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>a&nbsp;</td>\n\t\t\t<td>\n\t\t\t\t<?php if (isset($isNotarisPengganti) && $isNotarisPengganti): ?>\n\t\t\t\t\tBahwa berdasarkan Permohonan <?= $namaNotaris ?>, sesuai salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotarisPengganti ?>, sebagai Notaris pengganti dari <?= $namaNotaris ?>, tentang Perubahan Anggaran Dasar <?= $namaKoperasi ?><?= $skd ?> tanggal <?= FormatDate::formatDateIndonesia($tanggal_perubahan) ?> telah sesuai dengan persyaratan pengesahan Perubahan Anggaran Dasar Koperasi;\n\t\t\t\t<?php else: ?>\n\t\t\t\t\tBahwa berdasarkan Permohonan <?= $namaNotaris ?>, sesuai salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotaris ?>, tentang Perubahan Anggaran Dasar <?= $namaKoperasi ?><?= $skd ?> tanggal <?= FormatDate::formatDateIndonesia($tanggal_perubahan) ?> telah sesuai dengan persyaratan pengesahan Perubahan Anggaran Dasar Koperasi;\n\t\t\t\t<?php endif; ?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td class='colkiri'>\n\t\t\t\t&nbsp;\n\t\t\t</td>\n\t\t\t<td>&nbsp;</td>\n\t\t\t<td>b&nbsp;</td>\n\t\t\t<td class='justify'>\n\t\t\t\tBahwa berdasarkan pertimbangan sebagaimana dimaksud dalam huruf a, perlu menetapkan keputusan Menteri Hukum dan Hak Asasi Manusia tentang Pengesahan Perubahan Anggaran Dasar <?= $namaKoperasi ?><?= $skd ?>.\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<div class='pad4'>\n\t\t&nbsp;\n\t</div>\n\n\t<div class='tebal tengah'>\n\t\tM E M U T U S K A N :\n\t</div>\n\n\t<table class='justify'>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tMenetapkan\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>&nbsp;</td>\n\t\t</tr>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKESATU\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\t<?php if (isset($isNotarisPengganti) && $isNotarisPengganti): ?>\n\t\t\t\t\tMenyetujui Perubahan Anggaran Dasar - <?= $namaKoperasi ?><?= $skd ?> - yang berkedudukan di <?= $kabupaten ?> karena telah sesuai dengan Data Format Isian Perubahan yang disimpan di dalam database Sistem Administrasi Badan Hukum Koperasi sebagaimana salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotarisPengganti ?>, sebagai Notaris pengganti dari <?= $namaNotaris ?>, yang berkedudukan di <?= $kedudukanNotaris ?>.\n\t\t\t\t<?php else: ?>\n\t\t\t\t\tMenyetujui Perubahan Anggaran Dasar - <?= $namaKoperasi ?><?= $skd ?> - yang berkedudukan di <?= $kabupaten ?> karena telah sesuai dengan Data Format Isian Perubahan yang disimpan di dalam database Sistem Administrasi Badan Hukum Koperasi sebagaimana salinan Akta Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotaris ?>, yang berkedudukan di <?= $kedudukanNotaris ?>.\n\t\t\t\t<?php endif; ?>\n\t\t\t</td>\n\t\t</tr>\n\t\t<!-- \t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKEDUA\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tModal dasar, modal yang ditempatkan dan modal disetor sebagaimana yang tercantum dalam akta yang disebut pada poin PERTAMA.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKETIGA\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tJenis Perseroan UMUM.\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKEEMPAT\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tSusunan Pemegang Saham, Dewan Komisaris dan Direksi <i>Terlampir</i>.\n\t\t\t</td>\n\t\t</tr> -->\n\t\t<tr class='pad4'>\n\t\t\t<td class='colkiri'>\n\t\t\t\tKEDUA\n\t\t\t</td>\n\t\t\t<td>:</td>\n\t\t\t<td>\n\t\t\t\tKeputusan ini berlaku sejak tanggal ditetapkan.\n\t\t\t\t<br />\n\t\t\t\tApabila ternyata dikemudian hari terdapat kekeliruan dalam Keputusan ini maka akan diadakan perbaikan sebagaimana mestinya.\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n\n\t<div>\n\t\t&nbsp;\n\t</div>\n\n\t<table class='singlespace'>\n\t\t<tr>\n\t\t\t<td valign='middle' class='qrcode'>\n\t\t\t\t<img class=\"qrcode\" src=\"<?= $qrCodePath ?>\">\n\t\t\t</td>\n\t\t\t<td class='tengah'>\n\t\t\t\tDitetapkan di Jakarta, <?= FormatDate::formatDateIndonesia($number_tanggal) ?>.\n\t\t\t\t<br />&nbsp;<br />\n\t\t\t\ta.n. <?=($number_tanggal >= \"2019-10-01 00:00:00\" && $number_tanggal < \"2019-10-23 00:00:00\") ? \"Plt. \" : \"\" ;?>MENTERI HUKUM DAN HAK ASASI MANUSIA\n\t\t\t\t<br />\n\t\t\t\tREPUBLIK INDONESIA\n\t\t\t\t<br />\n\t\t\t\tDIREKTUR JENDERAL ADMINISTRASI HUKUM UMUM,\n\t\t\t\t<br />\n\t\t\t\t<img class=\"ttd\" src=\"images/assets/#ttd_dirjen\">\n\t\t\t\t<br />\n\t\t\t\t<b>#nama_dirjen</b>\n\t\t\t\t<br />\n\t\t\t\t<b>#nip_dirjen</b>\n\t\t\t</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td colspan='2'>\n\t\t\t\tDICETAK PADA TANGGAL <?= FormatDate::formatDateIndonesia(date('Y-m-d')) ?>\n\t\t\t\t<br />\n\t\t\t\t<!-- <b>DAFTAR PERSEROAN NOMOR <?= $number ?> TANGGAL <?= date('d F Y') ?> </b> -->\n\t\t\t\t<br>\n\t\t\t\t<br>\n\t\t\t\tTEMBUSAN :\n\t\t\t\t<br>\n\t\t\t\tMENTERI KOPERASI DAN USAHA KECIL DAN MENENGAH\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</body>\n\n<!-- tanggal akta / tanggal cetak sk / kabupaten / nama notaris -->\n\n--- File: 27 # components/helper/Numbering.php ---\n<?php \nnamespace app\\components\\helper;\n\nuse Yii;\nuse yii\\base\\Component;\nuse app\\models\\Counter;\n\nclass Numbering extends Component \n{\n\tpublic static $instance = null;\n\tpublic static $counter = 0;\n\tpublic static $result;\n\tpublic static $id = 0;\n\tpublic static $description = \"\";\n\n\tpublic static function getCounter($identifier,$longCounter = 7,$noupdate = false, $forceNumber = null) {\n\n\t\tif ( isset( $identifier['id'] ) ) {\n\t\t\tself::$id = $identifier['id'];\n\t\t}\n\n\t\tif ( isset( $identifier['description'] ) ) {\n\t\t\tself::$description = $identifier['description'];\n\t\t}\n\n\t\tYii::$app->db_koperasi->createCommand('LOCK TABLES `counting` WRITE')->execute();\n\n        self::$counter = Counter::find()->andWhere(['tahun' => date('Y')])->andFilterWhere(['or', ['id_aksi' => self::$id], ['keterangan' => self::$description]])->one();\n\n        if (self::$counter == null) {\n        \t$model = new Counter;\n        \t$model->nomor = 0;\n        \t$model->keterangan = self::$description;\n        \t$model->tahun = date('Y');\n        \t$model->id_aksi = self::$id;\n\n        \tif ($model->save()) {\n        \t\tself::$counter = $model;\n        \t}\n        }\n\n        self::$counter = self::$counter->nomor;\n\n\t\tself::$counter = str_pad((self::$counter + 1), $longCounter, 0, STR_PAD_LEFT);\n\n\t\tif($forceNumber) {\n\t\t\tself::$counter = str_pad(($forceNumber), $longCounter, 0, STR_PAD_LEFT);\n\t\t}\n\n\t\t$cond = \"\";\n\t\tif ( ! empty( self::$id ) ) {\n\n\t\t\t$cond = \"where id_aksi = \".self::$id;\n\t\t}\n\t\telse if( ! empty( self::$description ) ) {\n\n\t\t\t$cond = \"where keterangan = '\".self::$description.\"'\";\t\n\t\t}\n        $cond .= \" and tahun = \". date('Y');\n\n\t\tif ( $noupdate === false ) {\n\n\t\t\tYii::$app->db_koperasi->createCommand('update counting set nomor = nomor+1 '.$cond)->execute();\n\t\t}\n\n\t\tYii::$app->db_koperasi->createCommand('UNLOCK TABLES')->execute();\n\n\t\tif ( self::$instance === null ) {\n\n\t\t\tself::$instance = new self;\n\t\t}\n\n\t\treturn self::$instance;\n\t}\n\n\tpublic function generateSKPendirian() {\n\t\treturn 'AHU-'.self::$counter.'.AH.01.29.TAHUN '. date('Y');\n\t}\n\n\tpublic function generateSKPerubahan() {\n\t\treturn 'AHU-'.self::$counter.'.AH.01.38.TAHUN '. date('Y');\n\t}\n\n\tpublic function generateSKPelaporan() {\n\t\treturn 'AHU-'.self::$counter.'.AH.01.39.TAHUN '. date('Y');\n\t}\n\n\tpublic function generateSKPembubaran() {\n\t\treturn 'AHU-'.self::$counter.'.AH.01.40.TAHUN '. date('Y');\n\t}\n\n\tpublic function getNomorUrut() {\n\t\treturn self::$counter;\n\t}\n\n\n\tpublic static function clearInstance() {\n\t\tself::$instance = null;\n\t}\n}\n\n\n--- File: 761 # views/perubahan/sp_pelaporan.php ---\n<?php\n\nuse app\\models\\BentukKoperasi;\nuse app\\components\\helper\\FormatDate;\n\nif (strtoupper($dataTransaksi['b_koperasi_id']) == BentukKoperasi::SEKUNDER) {\n    $skd = \"&nbsp;<span style='font-size:8pt'>(Skd)</span>\";\n} else {\n    $skd = '';\n}\n?>\n\n<style type=\"text/css\">\n.tengah {\n    text-align: center;\n}\n\n.pad30 {\n    padding-top: 30px;\n}\n\n.logo-wrapper {\n    width: 30%;\n}\n\n.line {\n    margin-top: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    width: 87%;\n    border-top: 2px solid black !important;\n}\n\n.header-text {\n    width: 70%;\n}\n\n.logo {\n    width: 80px;\n}\n\n.tebal {\n    font-weight: bold;\n}\n\n.pad4 {\n    font-size: 10pt;\n}\n\ntable {\n    width: 90%;\n    margin: auto;\n    text-align: justify;\n}\n\ntd {\n    vertical-align: top;\n    font-size: 10pt;\n}\n\n.qrcode {\n    padding-left: 30px;\n    padding-top: 20px;\n    width: 140px;\n    /* filter: grayscale(1); */\n}\n\n.ttd {\n    max-height: 103px;\n}\n\n.subheader {\n    width: 50%;\n}\n\n.subheader-text {\n    font-size: 10pt;\n}\n\n.par {\n    line-height: 1.5;\n    text-align: justify;\n    text-indent: 2.5em;\n}\n</style>\n\n<body>\n<table class=\"pad30 kop\">\n    <tr>\n        <td class=\"tengah logo-wrapper\">\n            <img class=\"logo\" src=\"images/assets/logo-pengayoman.png\">\n        </td>\n        <td class=\"tengah header-text\">\n            <p class='pad4 tebal'>\n                KEMENTERIAN HUKUM DAN HAK ASASI MANUSIA\n                <br />\n                REPUBLIK INDONESIA\n                <br>\n                DIREKTORAT JENDERAL ADMINISTRASI HUKUM UMUM\n            </p>\n            <p>\n                Jl. H.R. Rasuna Said Kav 6-7 Kuningan, Jakarta Selatan\n                <br>\n                Telp. (021)5202387 - Hunting\n            </p>\n        </td>\n    </tr>\n</table>\n<div class=\"line\">\n    <table class=\"pad30\">\n        <tr>\n            <td class=\"subheader\">\n                <table>\n                    <tr>\n                        <td class=\"subheader-text\">Nomor</td>\n                        <td class=\"subheader-text\">: </td>\n                        <td class=\"subheader-text\"><?= $number ?></td>\n                    </tr>\n                    <tr>\n                        <td class=\"subheader-text\">Lampiran</td>\n                        <td class=\"subheader-text\">:</td>\n                    </tr>\n                    <tr>\n                        <td class=\"subheader-text\">Perihal</td>\n                        <td class=\"subheader-text\">: </td>\n                        <td class=\"subheader-text\">Penerimaan Pemberitahuan<br>Perubahan Data<br><b><?= $namaKoperasi ?><?= $skd ?></b></td>\n                    </tr>\n                </table>\n            </td>\n            <td class=\"subheader\">\n                <table>\n                    <tr>\n                        <td class=\"subheader-text\">Kepada Yth.</td>\n                    </tr>\n                    <tr>\n                        <td class=\"subheader-text\"><?= $namaNotaris ?></td>\n                    </tr>\n                    <tr>\n                        <td class=\"subheader-text\"><?= $alamat_koperasi ?></td>\n                    </tr>\n                    <tr>\n                        <td class=\"subheader-text\"><?= $kedudukanNotaris ?></td>\n                    </tr>\n                </table>\n            </td>\n        </tr>\n    </table>\n    <div class=\"pad30\">\n    </div>\n    <p class=\"par\">\n        <?php if (isset($isNotarisPengganti) && $isNotarisPengganti): ?>\n            Sesuai dengan data dalam format isian Perubahan yang disimpan di dalam sistem Administrasi Badan Hukum berdasarkan Akta Notaris Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotarisPengganti ?>, sebagai Notaris pengganti dari <?= $namaNotaris ?>, berkedudukan di <?= $kedudukanNotaris ?>, mengenai perubahan, <b><?= $namaKoperasi ?><?= $skd ?></b>, berkedudukan di <?= $kabupaten ?>, telah diterima dan dicatat di dalam Sistem Administrasi Badan Hukum.\n        <?php else: ?>\n            Sesuai dengan data dalam format isian Perubahan yang disimpan di dalam sistem Administrasi Badan Hukum berdasarkan Akta Notaris Nomor <?= $nomorAkta ?> Tanggal <?= $tanggalAkta ?> yang dibuat oleh <?= $namaNotaris ?>, berkedudukan di <?= $kedudukanNotaris ?>, mengenai perubahan, <b><?= $namaKoperasi ?><?= $skd ?></b>, berkedudukan di <?= $kabupaten ?>, telah diterima dan dicatat di dalam Sistem Administrasi Badan Hukum.\n        <?php endif; ?>\n    </p>\n</div>\n\n<div>\n    &nbsp;\n</div>\n\n<table class='singlespace'>\n    <tr>\n        <td valign='middle' class='qrcode'>\n            <img class=\"qrcode\" src=\"<?= $qrCodePath ?>\">\n        </td>\n        <td class='tengah'>\n            Ditetapkan di Jakarta, <?= FormatDate::formatDateIndonesia($number_tanggal) ?>.\n            <br />&nbsp;<br />\n            a.n. <?=($number_tanggal >= \"2019-10-01 00:00:00\" && $number_tanggal < \"2019-10-23 00:00:00\") ? \"Plt. \" : \"\" ;?>MENTERI HUKUM DAN HAK ASASI MANUSIA\n            <br />\n            REPUBLIK INDONESIA\n            <br />\n            DIREKTUR JENDERAL ADMINISTRASI HUKUM UMUM,\n            <br />\n            <img class=\"ttd\" src=\"images/assets/#ttd_dirjen\">\n            <br />\n            <b>#nama_dirjen</b>\n            <br />\n            <b>#nip_dirjen</b>\n        </td>\n    </tr>\n    <tr>\n        <td colspan='2'>\n            DICETAK PADA TANGGAL <?= FormatDate::formatDateIndonesia(date('Y-m-d')) ?>\n            <br />\n            <!-- <b>DAFTAR PERSEROAN NOMOR <?= $number ?> TANGGAL <?= date('d F Y') ?> </b> -->\n            <br>\n            <br>\n            TEMBUSAN :\n            <br>\n            MENTERI KOPERASI DAN USAHA KECIL DAN MENENGAH\n        </td>\n    </tr>\n</table>\n</body>\n\n<!-- tanggal akta / tanggal cetak sk / kabupaten / nama notaris -->\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 5: SK and Numbering System\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 5: SK and Numbering System\n\nIn the last chapter, you saw how a transaction moves from intake to \u201cfinalized\u201d: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md). This chapter zooms into the final step: assigning official SK/SP numbers safely and consistently.\n\nThink of it like a ticket dispenser at a service counter:\n- pick the right series (SK vs SP),\n- increment the correct counter (per year),\n- then stamp the number back onto the transaction and the PDF view.\n\nThat\u2019s exactly what the \u201cSK and Numbering System\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA transaction (pendirian or perubahan) is ready to be finalized. We need to:\n1) Generate an official number (SK and/or SP) using the correct pattern.\n2) Ensure uniqueness and ordering, even under heavy load.\n3) Save the numbers and update related records so PDFs and views display them.\n\nYou\u2019ll learn how to trigger this finalization and where the numbers come from.\n\n---\n\n## Why this layer exists\n\nWithout a centralized numbering system:\n- two requests could accidentally get the same number,\n- different modules might format numbers differently,\n- fixing numbering bugs would be scattered and risky.\n\nBy centralizing to SKHelper (when to assign) and helper/Numbering (how to assign), the app guarantees consistent, collision-free sequences.\n\n---\n\n## Key concepts (in plain words)\n\n- SK vs SP\n  - SK: Keputusan (decision), e.g., SK Pendirian, SK Perubahan.\n  - SP: Surat Penerimaan (ack letter), e.g., SP Pelaporan (for some perubahan).\n\n- Series and patterns\n  - Each document type has its series code and pattern, for example:\n    - SK Perubahan \u2192 AH.01.38\n    - SP Pelaporan \u2192 AH.01.39\n    - SK Pembubaran \u2192 AH.01.40\n  - Final shape: AHU-0000123.AH.01.38.TAHUN 2025\n\n- Counters are per year\n  - The counter resets each year (stored in table counting via model Counter).\n  - Identified by id_aksi or keterangan (description).\n\n- Two-layer responsibility\n  - SKHelper: decides the right moment, persists SK/SP, updates related entities (PesanNama, MasterTransaction).\n  - Numbering: holds the lock, increments the counter, and formats the number string.\n\n---\n\n## Quick start: finalize a transaction and get its SK\n\nCall SKHelper when your business flow says \u201cfinalize now.\u201d\n\nExample (from an admin action or job):\n\n```php\nuse app\\modules\\Api\\components\\SKHelper;\n\n$ok = SKHelper::pushPerubahan($transaksiId);\n```\n\nExplanation:\n- pushPerubahan handles both \u201cfirst finalize\u201d and \u201calready assembled\u201d flows.\n- It will create SK/SP if needed, update flags, and compute tanggal_confirm.\n\nRead back the saved numbers:\n\n```php\nuse app\\models\\SK;\n\n$sk = SK::find()->where(['t_koperasi_id' => $transaksiId])->one();\necho $sk->no_sk_koperasi; // e.g., AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- After finalization, SK is stored and linked by t_koperasi_id.\n\n---\n\n## What gets updated on finalization\n\n- Transaction flags\n  - is_finish set to 1, tanggal_confirm set, and (optionally) tanggal_jangka_waktu updated.\n\n- SK/SP creation\n  - A row in sk table holds no_sk_koperasi and no_sp_koperasi.\n\n- Related entities\n  - PesanNama: new name marked used; previous reservation soft-deleted (when name changed).\n  - MasterTransaction: linked to the final transaksi and SK.\n  - Penggabungan: sets is_gabung for merged koperasi (if applicable).\n\nYou don\u2019t have to do these manually\u2014SKHelper wraps it for you.\n\n---\n\n## How the number is generated (the friendly version)\n\n- Numbering gets a lock, reads the current counter for this year and series, increments it, then releases the lock.\n- It then formats a string like AHU-0000123.AH.01.38.TAHUN 2025 depending on the chosen document type.\n- By doing it in one place (with a DB lock), we avoid duplicates under concurrency.\n\nMinimal example:\n\n```php\nuse app\\components\\helper\\Numbering;\n\n$n = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'], 7);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- getCounter picks a row in counting for the current year, increments it, and returns a helper instance to format the final string.\n\n---\n\n## Under the hood (step-by-step)\n\n1) Controller/business code calls SKHelper::pushPerubahan($id).\n2) SKHelper decides if we\u2019re assembling (is_finish -1 \u2192 0) or finalizing (0 \u2192 1).\n3) If finalizing, SKHelper calls generateSurat to:\n   - pick the series (SK and/or SP),\n   - ask Numbering for the next number,\n   - save numbers in sk table.\n4) SKHelper toggles PesanNama and updates MasterTransaction.\n5) Transaction is marked finalized.\n\nA tiny picture:\n\n```mermaid\nsequenceDiagram\n  participant CTRL as Controller\n  participant SKH as SKHelper\n  participant NUM as Numbering\n  participant DB as Database\n\n  CTRL->>SKH: pushPerubahan(id)\n  SKH->>NUM: getCounter(...)+generate(...)\n  NUM->>DB: LOCK, read+increment, UNLOCK\n  SKH->>DB: save SK/SP + update refs\n  SKH-->>CTRL: done\n```\n\n---\n\n## Important files (small guided tour)\n\n- SK model\n  - File: models/SK.php\n  - Holds constants and relations, e.g., SK::SK_PENDIRIAN, SK::SK_PERUBAHAN.\n\n- SKHelper (the orchestrator)\n  - File: modules/Api/components/SKHelper.php\n  - Method pushPerubahan($id) moves status and issues numbers.\n\n- Numbering (the engine)\n  - File: components/helper/Numbering.php\n  - getCounter(...) manages safe increment and format helpers like generateSKPerubahan().\n\n- SK/SP Views (where the number is shown)\n  - views/pendirian/sk_pendirian.php\n  - views/perubahan/sk_perubahan.php\n  - views/perubahan/sp_pelaporan.php\n\n---\n\n## A closer look at SKHelper\n\nSet statuses and generate letters:\n\n```php\n// modules/Api/components/SKHelper.php\nif ($transaksi->is_finish == -1) {\n  $transaksi->is_finish = 0; // assembled\n} else {\n  $transaksi->is_finish = 1; // final\n  $SKins = self::generateSurat($group, $transaksi);\n}\n```\n\nExplanation:\n- First run may just assemble; final run creates SK/SP numbers and persists them.\n\nChoose SK/SP and persist:\n\n```php\n// modules/Api/components/SKHelper.php\n$sk = new \\app\\models\\SK();\n$sk->t_koperasi_id = $transaksi->id;\n$sk->no_sk_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPerubahan();\n$sk->no_sp_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPelaporan();\n$sk->save(false);\n```\n\nExplanation:\n- For some changes, both SK and SP are issued; for others, only one. The helper decides based on \u201cgroup\u201d of perubahan.\n\nUpdate related references:\n\n```php\n// modules/Api/components/SKHelper.php\n\\app\\models\\MasterTransaction::updateAll(\n  ['id_transaksi'=>$transaksi->id, 'id_sk'=>$sk->id],\n  ['id'=>$transaksi->id_master]\n);\n```\n\nExplanation:\n- MasterTransaction knows which finalized transaction and SK belongs to the koperasi.\n\n---\n\n## A closer look at Numbering\n\nLock, increment, release:\n\n```php\n// components/helper/Numbering.php\nYii::$app->db_koperasi->createCommand('LOCK TABLES `counting` WRITE')->execute();\n// find or create row for this year+series, then increment\nYii::$app->db_koperasi->createCommand('UNLOCK TABLES')->execute();\n```\n\nExplanation:\n- The lock prevents two requests from grabbing the same number.\n\nPick series and format:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PERUBAHAN], 7);\n$no = $n->generateSKPerubahan(); // AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- Choose the right generator for the document type:\n  - generateSKPendirian() \u2192 AH.01.29\n  - generateSKPerubahan() \u2192 AH.01.38\n  - generateSKPelaporan() \u2192 AH.01.39\n  - generateSKPembubaran() \u2192 AH.01.40\n\nPreview without increment (for tests):\n\n```php\n// noupdate=true means \"don\u2019t bump the DB counter\"\n$n = Numbering::getCounter(['description'=>'sk_pendirian'], 7, true);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- Useful for dry-runs; never use in real finalization.\n\n---\n\n## Showing the number in a PDF view\n\nPass values from your controller:\n\n```php\n$sk = \\app\\models\\SK::find()->where(['t_koperasi_id'=>$id])->one();\nreturn $this->render('sk_perubahan', ['number'=>$sk->no_sk_koperasi]);\n```\n\nIn the view (already prepared in repo):\n\n```php\n<p>NOMOR <?= $number ?></p>\n```\n\nExplanation:\n- The view templates read variables like $number and display them in the SK/SP body.\n\n---\n\n## Adding a new series (example: SK Pembubaran)\n\n- Use existing generator:\n  - Numbering::generateSKPembubaran() \u2192 AH.01.40\n\nMinimal usage:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PEMBUBARAN], 7);\necho $n->generateSKPembubaran();\n```\n\nExplanation:\n- If you introduce a new document type, map an id/description pair and pick the right generator.\n\n---\n\n## Best practices and common pitfalls\n\n- Generate once, persist forever\n  - Never \u201crecompute\u201d numbers; always store and reuse.\n\n- Let SKHelper orchestrate\n  - Don\u2019t call Numbering directly from random places. Keep numbering centralized for consistency.\n\n- Concurrency safe by default\n  - The DB lock avoids duplicates. If you ever see duplicates, investigate logs:\n    - See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n- Trigger from verified flows\n  - Finalization endpoints are protected:\n    - See auth details in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n    - See endpoint flow in: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n- Test with noupdate\n  - Use Numbering::getCounter(..., ..., true) to preview formats without consuming counters in dev.\n\n---\n\n## Summary\n\nYou learned:\n- What SK and SP are, and why numbering needs to be centralized and safe.\n- How SKHelper decides when to assign numbers and updates related entities.\n- How Numbering locks, increments, and formats numbers consistently (per year).\n- How to finalize a transaction and see the numbers in SK/SP PDFs.\n\nNext, we\u2019ll move to identity and geography foundations that many flows depend on: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"Wilayah & NIK Base Management\n\". This is Chapter 6.\n\nConcept Details:\n- Name: Wilayah & NIK Base Management\n\n- Description:\nRegional data (provinsi/kabupaten/kecamatan/kelurahan) powers dependent dropdowns and NIK derivations. WilayahController exposes an AJAX endpoint to get children by type; Wilayah models encapsulate queries. BaseNik manages a table that tracks a prefix and an atomic counter to generate sequential NIKs safely inside transactions. Think of it as a structured address book plus a serial-number engraver that uses those addresses to mint consistent, unique identifiers.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n---\n# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n---\n# Chapter 4: Koperasi Transaction Lifecycle Engine\n\nWelcome back! In the previous chapter, you built pages safely with the web shell and the session guard: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md). Now we\u2019ll go to the business \u201cfactory floor\u201d where koperasi transactions are processed end-to-end.\n\nThink of this engine as an assembly line:\n- Intake: accept and parse incoming payloads (often XML from ODS).\n- Assemble: validate and map data into our models; persist safely.\n- Finish: issue SK/SP numbers, update related records, and close the loop.\n\nBy the end of this chapter, you\u2019ll understand this flow and run a simple Pendirian transaction from XML all the way to finalized SK.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS sends a \u201cPendirian\u201d transaction:\n1) ODS authenticates with JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n2) ODS POSTs XML to /api/transaksi/insert with AuthJWT header.\n3) Our engine parses the XML, validates \u201cpesan nama,\u201d saves the transaction, and, when finalized, issues an SK number and updates references.\n\n---\n\n## Why this engine exists (beginner-friendly)\n\nWithout an engine, each endpoint would:\n- parse XML in different ways,\n- directly touch many tables,\n- and duplicate rules for finalization.\n\nThe Transaction Lifecycle Engine centralizes this in helpers so controllers stay tiny and the process is consistent and auditable. It reduces mistakes and makes maintenance easier.\n\n---\n\n## The factory line: three stations\n\n- Intake (Controller)\n  - Checks method/headers and JWT.\n  - Parses XML to a friendly array.\n  - Passes clean data into business helpers.\n\n- Assemble (TransaksiHelper)\n  - Validates business rules (e.g., \u201cpesan nama\u201d availability).\n  - Maps fields into TransaksiKoperasi and related models.\n  - Saves and returns IDs and statuses.\n\n- Finish (SKHelper)\n  - Issues SK/SP numbers.\n  - Toggles \u201cpesan nama\u201d (used \u2192 closed).\n  - Updates MasterTransaction and related references.\n\n---\n\n## Who does what (key actors)\n\n- TransaksiController (intake)\n  - File: modules/Api/controllers/TransaksiController.php\n  - Receives ODS calls (insert/update/edit), logs, and returns standard responses.\n  - Uses JWT and Content-Type checks from earlier chapters:\n    - [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n- TransaksiHelper (assemble)\n  - File: modules/Api/components/TransaksiHelper.php\n  - Maps the payload to our data models and enforces business rules.\n\n- SKHelper (finish)\n  - File: modules/Api/components/SKHelper.php\n  - Generates SK/SP numbers, flips \u201cpesan nama,\u201d updates master records.\n\n- Core data models (assembly parts)\n  - TransaksiKoperasi: main transaction record.\n  - MasterTransaction: ties a koperasi\u2019s transactions together.\n  - PesanNama: reservation of koperasi name.\n  - SK: stores SK/SP numbers.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant ODS as ODS Client\n  participant CTRL as TransaksiController\n  participant TH as TransaksiHelper\n  participant SKH as SKHelper\n  participant DB as DB\n\n  ODS->>CTRL: POST /api/transaksi/insert (XML + JWT)\n  CTRL->>TH: createTrans(parsedData)\n  TH->>DB: save transaksi + related data\n  TH-->>CTRL: {status, id}\n  CTRL->>SKH: pushPerubahan(id) when finalize\n  SKH->>DB: issue SK/SP + update master + pesan nama\n```\n\nNote: \u201cpushPerubahan\u201d is used broadly for finalization steps (both pendirian/perubahan scenarios). You\u2019ll see how it decides what to do.\n\n---\n\n## Try it end-to-end (recap)\n\n1) Get a JWT (from earlier):\n- Endpoint: POST /api/auth/login-jwt\n- See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nExpected short response:\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nBehind the scenes, the engine parsed your XML, validated, saved, and logged. For the logging pattern, see: [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Station 1: Intake (Controller)\n\nMinimal shape inside TransaksiController:\n```php\n// modules/Api/controllers/TransaksiController.php\npublic function actionInsert(){\n  $headers = Yii::$app->request->headers;\n  $xml = Yii::$app->request->rawBody; // XML payload\n  $data = ApiHelper::xmlToArray($xml); // parse\n  $this->verifyJwt($headers); // AuthJWT: Bearer {token}\n  return $this->handleCreate($data); // pass to helper\n}\n```\nExplanation:\n- The controller keeps logic small: parse \u2192 verify JWT \u2192 delegate.\n- It doesn\u2019t know business details\u2014those live in helpers.\n\nConsistent response + logging:\n```php\nprivate function handleCreate($data){\n  $res = TransaksiHelper::createTrans($data);\n  return $this->responseAndSaveLog([\n    'response' => $this->formatRes($res),\n    'request'  => $data\n  ], 'JSON');\n}\n```\nExplanation:\n- Whatever happens, we log the same way and return a standard shape.\n\n---\n\n## Station 2: Assemble (TransaksiHelper)\n\nCreate or update a transaction:\n```php\n// modules/Api/components/TransaksiHelper.php\npublic static function createTrans($data){\n  if(!$data) return ['status'=>false,'info'=>'Data kosong'];\n  $nik = $data['data']['nik'] ?? null;\n  if(!$nik) return ['status'=>false,'info'=>'NIK tidak ditemukan'];\n  return self::mapAndSave($data); // validate + persist\n}\n```\nExplanation:\n- Early guardrails (is data present? does it have NIK?).\n- Pass to a dedicated mapper/persister.\n\nMapping essentials (super simplified):\n```php\nprivate static function mapAndSave($data){\n  $m = new TransaksiKoperasi();\n  $m->attributes = self::mapFields($data); // field-by-field mapping\n  if(!self::validatePesanNama($m)) return ['status'=>false,'info'=>'Pesan nama invalid'];\n  return $m->save() ? ['status'=>true,'id'=>$m->id] : ['status'=>false,'info'=>'Save gagal'];\n}\n```\nExplanation:\n- Put business checks (like \u201cpesan nama\u201d) before saving.\n- Keep mapping logic in small functions so it\u2019s testable.\n\n\u201cPesan nama\u201d check (idea):\n```php\nprivate static function validatePesanNama($m){\n  $cek = TransaksiKoperasi::checkPendirian($m);\n  return empty($cek['status']); // if checks ok \u2192 true\n}\n```\nExplanation:\n- Centralize \u201cpendirian/perubahan\u201d rules on the model side.\n\nTip: If you generate or use NIK based on wilayah, see: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Station 3: Finish (SKHelper)\n\nWhen a transaction is ready to be finalized (issue SK/SP, close name reservation), the controller calls SKHelper. Minimal shape:\n\n```php\n// modules/Api/components/SKHelper.php\npublic static function pushPerubahan($id){\n  $t = TransaksiKoperasi::findOne($id);\n  if($t->is_finish == -1){ $t->is_finish = 0; return $t->save(false,['is_finish']); }\n  $sk = self::generateSurat(self::groupOfChanges($id), $t);\n  self::maybeChangePesanNama($t);\n  self::linkToMaster($t, $sk);\n  return self::finalize($t);\n}\n```\nExplanation:\n- If it\u2019s still a draft, move to \u201cassembled\u201d (is_finish 0).\n- Otherwise, issue SK/SP and finish (is_finish 1), update master and \u201cpesan nama\u201d.\n\nIssue SK/SP (simplified):\n```php\nprivate static function generateSurat($group, $t){\n  $sk = SK::find()->where(['t_koperasi_id'=>$t->id])->one() ?? new SK();\n  $sk->t_koperasi_id = $t->id;\n  $sk->no_sk_koperasi = Numbering::getCounter(...)->generateSKPerubahan();\n  $sk->no_sp_koperasi = Numbering::getCounter(...)->generateSKPelaporan();\n  $sk->save(false);\n  return $sk;\n}\n```\nExplanation:\n- Uses the centralized numbering system to generate SK/SP.\n- We\u2019ll deep dive into numbering next chapter: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nToggle \u201cpesan nama\u201d on name change:\n```php\nprivate static function maybeChangePesanNama($t){\n  // mark new name as used\n  PesanNama::updateAll(['status'=>1], ['id'=>$t->t_pesan_nama_id]);\n  // soft-delete old name from previous transaction\n  $prev = TransaksiKoperasi::findLastTransaction(1, $t->id_master);\n  PesanNama::updateAll(['is_deleted'=>1], ['id'=>$prev['t_pesan_nama_id'] ?? 0]);\n}\n```\nExplanation:\n- Keeps name reservation lifecycle correct: new name \u201cused,\u201d old name \u201cclosed.\u201d\n\nFinalize flags:\n```php\nprivate static function finalize($t){\n  $t->is_finish = 1;\n  $t->tanggal_confirm = date('Y-m-d H:i:s');\n  return $t->save(false,['is_finish','tanggal_confirm']);\n}\n```\nExplanation:\n- One place to switch a transaction to \u201cfinished.\u201d\n\n---\n\n## Inputs and outputs (what you send, what you get)\n\n- Input (example XML, minimum idea):\n```xml\n<root>\n  <data>\n    <koperasi>\n      <nik>1234567890123456</nik>\n      <!-- other mapped fields -->\n    </koperasi>\n  </data>\n</root>\n```\n- Output (standard, short):\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nIf something fails (format/auth/business rules), you\u2019ll get predictable codes. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Lifecycle states at a glance\n\n- Draft: is_finish = -1 (early staging, not ready)\n- Assembled: is_finish = 0 (validated/mapped, not yet issued)\n- Finalized: is_finish = 1 (SK/SP issued, references updated)\n\nThe engine moves transactions through these states via helpers, not manually sprinkled across controllers.\n\n---\n\n## Two common recipes\n\n- Insert \u201cPendirian\u201d and save draft\n  1) POST XML to /api/transaksi/insert (with JWT).\n  2) Controller parses and calls TransaksiHelper::createTrans.\n  3) You get a success response with saved state (often draft/assembled).\n\n- Finalize and issue SK\n  1) Call the finalize endpoint or business action triggering SKHelper::pushPerubahan.\n  2) SKHelper issues SK/SP, toggles \u201cpesan nama,\u201d updates MasterTransaction.\n  3) Transaction moves to is_finish = 1.\n\nNumbering details for SK/SP are covered next: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\n---\n\n## What happens under the hood (step-by-step)\n\n1) Controller checks method/headers/JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)  \n2) XML \u2192 array conversion (shape normalized).  \n3) TransaksiHelper validates business rules, maps fields, and saves models.  \n4) When finalizing, SKHelper generates SK/SP, updates \u201cpesan nama\u201d and master links.  \n5) Controller returns a consistent response and logs everything. See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Where to look in the code (quick map)\n\n- Controller intake:\n  - modules/Api/controllers/TransaksiController.php\n- Assemble logic:\n  - modules/Api/components/TransaksiHelper.php\n- Finalize logic:\n  - modules/Api/components/SKHelper.php\n- Models (data parts):\n  - models/TransaksiKoperasi.php\n  - models/MasterTransaction.php\n  - models/PesanNama.php\n  - models/SK.php\n\nTip: If you need wilayah or NIK generation details, jump to: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cFormat\u201d errors? Check Content-Type and XML shape. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- \u201cAuth\u201d errors? Ensure AuthJWT: Bearer {token}. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n- \u201cBusiness\u201d errors? Often related to \u201cpesan nama,\u201d missing fields, or invalid transitions.\n- \u201cSK\u201d not created? Ensure you triggered finalization (SKHelper) and see next chapter for numbering.\n\n---\n\n## Wrap-up and what\u2019s next\n\nYou learned how koperasi requests move through the factory line: Controller intake \u2192 TransaksiHelper assembly \u2192 SKHelper finish. You saw how \u201cpesan nama\u201d and MasterTransaction are updated when finalizing.\n\nNext, we\u2019ll zoom in on how SK and SP numbers are generated and tracked: [SK and Numbering System](05_sk_and_numbering_system_.md)\n---\n# Chapter 5: SK and Numbering System\n\nIn the last chapter, you saw how a transaction moves from intake to \u201cfinalized\u201d: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md). This chapter zooms into the final step: assigning official SK/SP numbers safely and consistently.\n\nThink of it like a ticket dispenser at a service counter:\n- pick the right series (SK vs SP),\n- increment the correct counter (per year),\n- then stamp the number back onto the transaction and the PDF view.\n\nThat\u2019s exactly what the \u201cSK and Numbering System\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA transaction (pendirian or perubahan) is ready to be finalized. We need to:\n1) Generate an official number (SK and/or SP) using the correct pattern.\n2) Ensure uniqueness and ordering, even under heavy load.\n3) Save the numbers and update related records so PDFs and views display them.\n\nYou\u2019ll learn how to trigger this finalization and where the numbers come from.\n\n---\n\n## Why this layer exists\n\nWithout a centralized numbering system:\n- two requests could accidentally get the same number,\n- different modules might format numbers differently,\n- fixing numbering bugs would be scattered and risky.\n\nBy centralizing to SKHelper (when to assign) and helper/Numbering (how to assign), the app guarantees consistent, collision-free sequences.\n\n---\n\n## Key concepts (in plain words)\n\n- SK vs SP\n  - SK: Keputusan (decision), e.g., SK Pendirian, SK Perubahan.\n  - SP: Surat Penerimaan (ack letter), e.g., SP Pelaporan (for some perubahan).\n\n- Series and patterns\n  - Each document type has its series code and pattern, for example:\n    - SK Perubahan \u2192 AH.01.38\n    - SP Pelaporan \u2192 AH.01.39\n    - SK Pembubaran \u2192 AH.01.40\n  - Final shape: AHU-0000123.AH.01.38.TAHUN 2025\n\n- Counters are per year\n  - The counter resets each year (stored in table counting via model Counter).\n  - Identified by id_aksi or keterangan (description).\n\n- Two-layer responsibility\n  - SKHelper: decides the right moment, persists SK/SP, updates related entities (PesanNama, MasterTransaction).\n  - Numbering: holds the lock, increments the counter, and formats the number string.\n\n---\n\n## Quick start: finalize a transaction and get its SK\n\nCall SKHelper when your business flow says \u201cfinalize now.\u201d\n\nExample (from an admin action or job):\n\n```php\nuse app\\modules\\Api\\components\\SKHelper;\n\n$ok = SKHelper::pushPerubahan($transaksiId);\n```\n\nExplanation:\n- pushPerubahan handles both \u201cfirst finalize\u201d and \u201calready assembled\u201d flows.\n- It will create SK/SP if needed, update flags, and compute tanggal_confirm.\n\nRead back the saved numbers:\n\n```php\nuse app\\models\\SK;\n\n$sk = SK::find()->where(['t_koperasi_id' => $transaksiId])->one();\necho $sk->no_sk_koperasi; // e.g., AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- After finalization, SK is stored and linked by t_koperasi_id.\n\n---\n\n## What gets updated on finalization\n\n- Transaction flags\n  - is_finish set to 1, tanggal_confirm set, and (optionally) tanggal_jangka_waktu updated.\n\n- SK/SP creation\n  - A row in sk table holds no_sk_koperasi and no_sp_koperasi.\n\n- Related entities\n  - PesanNama: new name marked used; previous reservation soft-deleted (when name changed).\n  - MasterTransaction: linked to the final transaksi and SK.\n  - Penggabungan: sets is_gabung for merged koperasi (if applicable).\n\nYou don\u2019t have to do these manually\u2014SKHelper wraps it for you.\n\n---\n\n## How the number is generated (the friendly version)\n\n- Numbering gets a lock, reads the current counter for this year and series, increments it, then releases the lock.\n- It then formats a string like AHU-0000123.AH.01.38.TAHUN 2025 depending on the chosen document type.\n- By doing it in one place (with a DB lock), we avoid duplicates under concurrency.\n\nMinimal example:\n\n```php\nuse app\\components\\helper\\Numbering;\n\n$n = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'], 7);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- getCounter picks a row in counting for the current year, increments it, and returns a helper instance to format the final string.\n\n---\n\n## Under the hood (step-by-step)\n\n1) Controller/business code calls SKHelper::pushPerubahan($id).\n2) SKHelper decides if we\u2019re assembling (is_finish -1 \u2192 0) or finalizing (0 \u2192 1).\n3) If finalizing, SKHelper calls generateSurat to:\n   - pick the series (SK and/or SP),\n   - ask Numbering for the next number,\n   - save numbers in sk table.\n4) SKHelper toggles PesanNama and updates MasterTransaction.\n5) Transaction is marked finalized.\n\nA tiny picture:\n\n```mermaid\nsequenceDiagram\n  participant CTRL as Controller\n  participant SKH as SKHelper\n  participant NUM as Numbering\n  participant DB as Database\n\n  CTRL->>SKH: pushPerubahan(id)\n  SKH->>NUM: getCounter(...)+generate(...)\n  NUM->>DB: LOCK, read+increment, UNLOCK\n  SKH->>DB: save SK/SP + update refs\n  SKH-->>CTRL: done\n```\n\n---\n\n## Important files (small guided tour)\n\n- SK model\n  - File: models/SK.php\n  - Holds constants and relations, e.g., SK::SK_PENDIRIAN, SK::SK_PERUBAHAN.\n\n- SKHelper (the orchestrator)\n  - File: modules/Api/components/SKHelper.php\n  - Method pushPerubahan($id) moves status and issues numbers.\n\n- Numbering (the engine)\n  - File: components/helper/Numbering.php\n  - getCounter(...) manages safe increment and format helpers like generateSKPerubahan().\n\n- SK/SP Views (where the number is shown)\n  - views/pendirian/sk_pendirian.php\n  - views/perubahan/sk_perubahan.php\n  - views/perubahan/sp_pelaporan.php\n\n---\n\n## A closer look at SKHelper\n\nSet statuses and generate letters:\n\n```php\n// modules/Api/components/SKHelper.php\nif ($transaksi->is_finish == -1) {\n  $transaksi->is_finish = 0; // assembled\n} else {\n  $transaksi->is_finish = 1; // final\n  $SKins = self::generateSurat($group, $transaksi);\n}\n```\n\nExplanation:\n- First run may just assemble; final run creates SK/SP numbers and persists them.\n\nChoose SK/SP and persist:\n\n```php\n// modules/Api/components/SKHelper.php\n$sk = new \\app\\models\\SK();\n$sk->t_koperasi_id = $transaksi->id;\n$sk->no_sk_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPerubahan();\n$sk->no_sp_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPelaporan();\n$sk->save(false);\n```\n\nExplanation:\n- For some changes, both SK and SP are issued; for others, only one. The helper decides based on \u201cgroup\u201d of perubahan.\n\nUpdate related references:\n\n```php\n// modules/Api/components/SKHelper.php\n\\app\\models\\MasterTransaction::updateAll(\n  ['id_transaksi'=>$transaksi->id, 'id_sk'=>$sk->id],\n  ['id'=>$transaksi->id_master]\n);\n```\n\nExplanation:\n- MasterTransaction knows which finalized transaction and SK belongs to the koperasi.\n\n---\n\n## A closer look at Numbering\n\nLock, increment, release:\n\n```php\n// components/helper/Numbering.php\nYii::$app->db_koperasi->createCommand('LOCK TABLES `counting` WRITE')->execute();\n// find or create row for this year+series, then increment\nYii::$app->db_koperasi->createCommand('UNLOCK TABLES')->execute();\n```\n\nExplanation:\n- The lock prevents two requests from grabbing the same number.\n\nPick series and format:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PERUBAHAN], 7);\n$no = $n->generateSKPerubahan(); // AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- Choose the right generator for the document type:\n  - generateSKPendirian() \u2192 AH.01.29\n  - generateSKPerubahan() \u2192 AH.01.38\n  - generateSKPelaporan() \u2192 AH.01.39\n  - generateSKPembubaran() \u2192 AH.01.40\n\nPreview without increment (for tests):\n\n```php\n// noupdate=true means \"don\u2019t bump the DB counter\"\n$n = Numbering::getCounter(['description'=>'sk_pendirian'], 7, true);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- Useful for dry-runs; never use in real finalization.\n\n---\n\n## Showing the number in a PDF view\n\nPass values from your controller:\n\n```php\n$sk = \\app\\models\\SK::find()->where(['t_koperasi_id'=>$id])->one();\nreturn $this->render('sk_perubahan', ['number'=>$sk->no_sk_koperasi]);\n```\n\nIn the view (already prepared in repo):\n\n```php\n<p>NOMOR <?= $number ?></p>\n```\n\nExplanation:\n- The view templates read variables like $number and display them in the SK/SP body.\n\n---\n\n## Adding a new series (example: SK Pembubaran)\n\n- Use existing generator:\n  - Numbering::generateSKPembubaran() \u2192 AH.01.40\n\nMinimal usage:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PEMBUBARAN], 7);\necho $n->generateSKPembubaran();\n```\n\nExplanation:\n- If you introduce a new document type, map an id/description pair and pick the right generator.\n\n---\n\n## Best practices and common pitfalls\n\n- Generate once, persist forever\n  - Never \u201crecompute\u201d numbers; always store and reuse.\n\n- Let SKHelper orchestrate\n  - Don\u2019t call Numbering directly from random places. Keep numbering centralized for consistency.\n\n- Concurrency safe by default\n  - The DB lock avoids duplicates. If you ever see duplicates, investigate logs:\n    - See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n- Trigger from verified flows\n  - Finalization endpoints are protected:\n    - See auth details in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n    - See endpoint flow in: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n- Test with noupdate\n  - Use Numbering::getCounter(..., ..., true) to preview formats without consuming counters in dev.\n\n---\n\n## Summary\n\nYou learned:\n- What SK and SP are, and why numbering needs to be centralized and safe.\n- How SKHelper decides when to assign numbers and updates related entities.\n- How Numbering locks, increments, and formats numbers consistently (per year).\n- How to finalize a transaction and see the numbers in SK/SP PDFs.\n\nNext, we\u2019ll move to identity and geography foundations that many flows depend on: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 686 # modules/Api/controllers/WilayahController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse Yii;\nuse app\\models\\Wilayah;\nuse yii\\rest\\Controller;\n\nclass WilayahController extends Controller {\n\n    public function actionGetChildWilayah($id, $tipe) {\n        if (!$id || !Yii::$app->request->isAjax) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n        \n        $data = Wilayah::getChildWilayah($id, $tipe);\n        \n        if (!$data) {\n            return json_encode([['id' => '0','nama' => 'Tidak Ditemukan']]);\n        }\n\n        $arr = [];\n        foreach($data as $d) {\n            if($tipe == 'Kelurahan') {\n                $arr[] = [\n                    'id' => $d['ID_WIL'],\n                    'nama' => $d['NM_KELURAHAN'],\n                ];\n                continue;\n            }\n\n            $arr[] = [\n                'id' => $d['WILAYAH_ID'],\n                'nama' => $d['NAMA'],\n            ];\n        }\n        return json_encode($arr);\n    }\n\n}\n\n--- File: 623 # models/TingkatWilayah.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\n\n/**\n * This is the model class for table \"{{%tingkat_wilayah}}\".\n *\n * @property int $id\n * @property string $nama\n */\nclass TingkatWilayah extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%tingkat_wilayah}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['nama'], 'required'],\n            [['nama'], 'string', 'max' => 50],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'nama' => 'Nama',\n        ];\n    }\n\n    public static function getListTingkatWilayah()\n    {\n        return self::find()\n                    ->all();\n    }\n\n    public static function getDDListTingkatWilayah($exceptId = [])\n    {\n        $data = self::getListTingkatWilayah();\n        $arr = [];\n        foreach ($data as $val) {\n            if(!in_array($val['id'], $exceptId)){\n                $arr[$val['id']] = $val['nama']; \n            }\n        }\n        return $arr;\n    }\n\n    public static function getPrimaryByNama($nama)\n    {\n        $data = self::find()\n                ->where(['LOWER(nama)' => strtolower($nama)])\n                ->one();\n\n        return $data ? $data->id : null;\n    }\n\n}\n\n\n--- File: 627 # models/Wilayah.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\nuse app\\models\\bakum\\WilayahSABH;\n\n\nclass Wilayah extends ActiveRecord \n{\n    \n    public static function tableName()\n    {\n        return 'WILAYAH';\n    }\n\n    public static function getDb()\n    {\n        return Yii::$app->get('db_notariat2');\n    }\n\n    public static function getDataProvinsi() {\n        return self::find()\n                ->where(['PARENT_ID' => '0'])\n                ->andWhere(['TIPE' => 'Provinsi'])\n                ->orderBy('NAMA')\n                ->all();\n    }\n\n    public static function getChildWilayah($parent,$tipe) {\n        if($tipe != 'Kelurahan') {\n            $data = self::find()\n                        ->where(['PARENT_ID' => $parent])\n                        ->andWhere(['TIPE' => $tipe])\n                        ->orderBy('NAMA')\n                        ->all();\n        }\n        else {\n            $data = WilayahSABH::find()\n                            ->where(['ID_WILAYAH_M' => $parent])\n                            ->orderBy('NM_KELURAHAN')\n                            ->all();\n        }\n        return $data;\n    }\n\n    public static function getDDListProvinsi() {\n        $data = self::getDataProvinsi();\n        $arr = [];\n        foreach ($data as $val) {\n            $arr[$val['WILAYAH_ID']] = $val['NAMA']; \n        }\n        return $arr;\n    }\n\n    public static function getKodeWilayah($id) {\n        $data = self::find()->where(['WILAYAH_ID' => $id])->one();\n        if(!$data) {\n            return null;\n        }\n        return $data->KODE;\n    }\n\n    public static function getNama($id) {\n        $data = self::find()->where(['WILAYAH_ID' => $id])->one();\n        if(!$data) {\n            return null;\n        }\n        return $data->NAMA;\n    }\n}\n\n\n\n--- File: 629 # models/WilayahOds.php ---\n<?php\n\nnamespace app\\models;\n\nuse app\\models\\Wilayah;\nuse app\\models\\WilayahSabh;\nuse Yii;\n\n/**\n * This is the model class for table \"kop_m_wilayah_ods\".\n *\n * @property int $id\n * @property string $id_provinsi\n * @property string $provinsi\n * @property string $id_kabupaten\n * @property string $kabupaten\n * @property string $id_kecamatan\n * @property string $kecamatan\n * @property string $id_kelurahan\n * @property string $kelurahan\n * @property int $wilayah_kelurahan_id\n * @property string $counter\n */\nclass WilayahOds extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%m_wilayah_ods}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['wilayah_kelurahan_id', 'counter'], 'integer'],\n            [['id_provinsi', 'provinsi', 'id_kabupaten', 'kabupaten', 'id_kecamatan', 'kecamatan', 'id_kelurahan', 'kelurahan'], 'string', 'max' => 50],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'id_provinsi' => 'Id Provinsi',\n            'provinsi' => 'Provinsi',\n            'id_kabupaten' => 'Id Kabupaten',\n            'kabupaten' => 'Kabupaten',\n            'id_kecamatan' => 'Id Kecamatan',\n            'kecamatan' => 'Kecamatan',\n            'id_kelurahan' => 'Id Kelurahan',\n            'kelurahan' => 'Kelurahan',\n            'wilayah_kelurahan_id' => 'Wilayah Kelurahan ID',\n            'counter' => 'Counter',\n        ];\n    }\n\n    public static function getKodeWilayah($id)\n    {\n        $data = self::find()->where(['wilayah_kelurahan_id' => $id])->one();\n\n        if ($data) {\n            return $data->id_provinsi.$data->id_kabupaten.$data->id_kecamatan.$data->id_kelurahan;\n        }\n\n        return null;\n    }\n\n    public static function getWilayah($full_id)\n    {\n        $data = self::find()\n                    ->where(['CONCAT(id_provinsi, id_kabupaten, id_kecamatan, id_kelurahan)' => $full_id])->one();\n\n        if ($data) {\n            $kelurahan = WilayahSabh::find()->where(['ID_WIL' => $data->wilayah_kelurahan_id])->one();\n\n            if ($kelurahan) {\n                $wilayah = Wilayah::find()\n                            ->alias('kecamatan')\n                            ->select([\n                                'kecamatan.WILAYAH_ID AS kecamatan_id', 'kecamatan.nama AS nama_kecamatan',\n                                'kabupaten.WILAYAH_ID AS kab_kota_id', 'kabupaten.nama AS nama_kabupaten',\n                                'provinsi.WILAYAH_ID AS provinsi_id', 'provinsi.nama AS nama_provinsi',\n                            ])\n                            ->leftJoin('WILAYAH kabupaten', 'kecamatan.PARENT_ID = kabupaten.WILAYAH_ID')\n                            ->leftJoin('WILAYAH provinsi', 'kabupaten.PARENT_ID = provinsi.WILAYAH_ID')\n                            ->where(['kecamatan.WILAYAH_ID' => $kelurahan->ID_WILAYAH_M])\n                            ->asArray()\n                            ->one();\n\n                if ($wilayah) {\n                    return [\n                        'provinsi_id' => $wilayah['provinsi_id'],\n                        'nama_provinsi' => $wilayah['nama_provinsi'],\n                        'kab_kota_id' => $wilayah['kab_kota_id'],\n                        'nama_kabupaten' => $wilayah['nama_kabupaten'],\n                        'kecamatan_id' => $wilayah['kecamatan_id'],\n                        'nama_kecamatan' => $wilayah['nama_kecamatan'],\n                        'kel_desa_id' => $kelurahan['ID_WIL'],\n                        'nama_kelurahan' => $kelurahan['NM_KELURAHAN'],\n                    ];\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\n\n--- File: 630 # models/BaseNik.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\db\\ActiveRecord;\nuse yii\\db\\Exception as DbException;\nuse yii\\db\\StaleObjectException;\n\n/**\n * This is the model class for table \"kop_base_nik\".\n *\n * @property int $id\n * @property string $base\n * @property int $count\n */\nclass BaseNik extends ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%base_nik}}';\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['base'], 'required'],\n            [['base'], 'string', 'max' => 10],\n            [['base'], 'unique'],\n            [['count'], 'integer'],\n            [['count'], 'default', 'value' => 0],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'base' => 'Base NIK Prefix',\n            'count' => 'Current Count',\n        ];\n    }\n\n    /**\n     * Generates the next sequential NIK based on a given base prefix.\n     * It uses the `kop_base_nik` table to atomically manage the sequence count.\n     *\n     * @param string $base The base NIK prefix (e.g., '10203040' derived from wilayah IDs).\n     * @return string|false The generated full NIK string (e.g., '10203040001') on success, or false on failure.\n     */\n    public static function generateNik($base)\n    {\n        $db = self::getDb();\n        $transaction = $db->beginTransaction();\n\n        try {\n            // Find the BaseNik record. We acquire a lock for update to prevent race conditions.\n            // Using queryOne with FOR UPDATE is more explicit for locking the row.\n            // Alternatively, ActiveRecord's findOne() followed by save() inside a transaction\n            // usually provides sufficient atomicity for counters in most cases.\n            // For simplicity and common use-case, let's stick with findOne/save for ActiveRecord.\n            // If very high concurrency is expected and explicit row locking is needed,\n            // a raw SQL query with \"FOR UPDATE\" might be considered.\n\n            $baseNikRecord = self::findOne(['base' => $base]);\n            $newCount = 0;\n\n            if ($baseNikRecord) {\n                // Base NIK exists, increment the count\n                $baseNikRecord->count += 1;\n                $newCount = $baseNikRecord->count;\n                if (!$baseNikRecord->save()) {\n                    throw new DbException('Failed to update NIK count for base: ' . $base . '. Errors: ' . json_encode($baseNikRecord->getErrors()));\n                }\n                Yii::info(\"Updated NIK count for base '{$base}' to {$newCount}.\", __METHOD__);\n            } else {\n                // Base NIK does not exist, insert a new record with count 1\n                $baseNikRecord = new self();\n                $baseNikRecord->base = $base;\n                $baseNikRecord->count = 1; // Start with 1\n                $newCount = 1;\n                if (!$baseNikRecord->save()) {\n                    throw new DbException('Failed to insert new NIK base: ' . $base . '. Errors: ' . json_encode($baseNikRecord->getErrors()));\n                }\n                Yii::info(\"Inserted new NIK base '{$base}' with count {$newCount}.\", __METHOD__);\n            }\n\n            $transaction->commit(); // Commit the transaction if everything is successful\n\n            // Format the new count to be 3 digits with leading zeros\n            $sequentialSuffix = sprintf(\"%03d\", $newCount);\n            $fullNik = $base . $sequentialSuffix;\n\n            Yii::info(\"Generated NIK: {$fullNik}\", __METHOD__);\n            return $fullNik;\n\n        } catch (DbException $e) {\n            $transaction->rollBack(); // Rollback on database errors\n            Yii::error(\"Database error during NIK generation for base '{$base}'. Error: \" . $e->getMessage(), __METHOD__);\n            return false;\n        } catch (\\Throwable $e) {\n            // Catch any other general exceptions (e.g., PHP errors, unexpected issues)\n            $transaction->rollBack(); // Rollback on any general error\n            Yii::error(\"An unexpected error occurred during NIK generation for base '{$base}'. Error: \" . $e->getMessage(), __METHOD__);\n            return false;\n        }\n    }\n\n    public static function cleanWilayahName($name) {\n        if ($name === null) {\n            return '';\n        }\n        return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i', '', $name));\n    }\n\n    public static function getWilayahIds($provCleaned, $kabCleaned, $kelCleaned) {\n        $row = (new \\yii\\db\\Query())\n            ->select(['id_provinsi', 'id_kabupaten', 'id_kecamatan', 'id_kelurahan'])\n            ->from('kop_m_wilayah_ods') // Assuming this table exists\n            ->where(['provinsi' => $provCleaned]) // Exact match for province\n            ->andWhere(['like', 'kabupaten', '%' . $kabCleaned . '%']) // Partial match for kabupaten\n            ->andWhere(['like', 'kelurahan', '%' . $kelCleaned . '%']) // Partial match for kelurahan\n            ->orderBy(['id' => SORT_DESC]) // Assuming 'id' is a good ordering for 'latest'\n            ->one(self::getDb()); // Use the correct DB connection\n\n        if ($row) {\n            return $row; // Returns an associative array of IDs\n        }\n        return null; // No IDs found\n    }\n}\n\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 6: Wilayah & NIK Base Management\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 6: Wilayah & NIK Base Management\n\nComing from [SK and Numbering System](05_sk_and_numbering_system_.md), you learned how we safely mint SK/SP numbers. This chapter explains the foundation that many flows rely on: regional (wilayah) data and how we derive consistent NIKs from it.\n\nThink of it as:\n- An address book: provinsi \u2192 kabupaten \u2192 kecamatan \u2192 kelurahan.\n- A serial-number engraver: given a wilayah-based prefix, it mints unique, sequential NIKs.\n\nWe\u2019ll keep it beginner-friendly and solve one practical use case end-to-end.\n\n---\n\n## The use case we\u2019ll solve\n\nA user fills a form:\n1) They pick Provinsi \u2192 Kabupaten \u2192 Kecamatan \u2192 Kelurahan using dependent dropdowns.\n2) The system builds a wilayah-based prefix (base).\n3) The system generates a unique NIK: base + 3-digit counter, safely inside a DB transaction.\n\nYou\u2019ll learn how to:\n- Load child wilayah via AJAX.\n- Compose the base using our ODS mirror table.\n- Generate a sequential NIK with BaseNik.\n\n---\n\n## Key concepts (in plain words)\n\n- Wilayah hierarchy (address book)\n  - A tree: Provinsi \u2192 Kabupaten/Kota \u2192 Kecamatan \u2192 Kelurahan.\n  - Models and queries live in models/Wilayah.php (source) and models/WilayahOds.php (ODS mirror).\n\n- Dependent dropdowns (AJAX helper)\n  - Endpoint: GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Returns JSON of child wilayah for the next dropdown.\n\n- ODS mirror table (shortcut to codes)\n  - Table: kop_m_wilayah_ods stores standardized IDs per level.\n  - You can reconstruct a \u201cfull code\u201d by concatenating those IDs.\n\n- BaseNik (serial engraver)\n  - Table: kop_base_nik tracks prefix and a counter.\n  - Function: BaseNik::generateNik('PREFIX') \u2192 'PREFIX' + '001', '002', ...\n  - Wrapped in a transaction to avoid duplicates.\n\nTip: For gateway behavior, headers, and logging, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Try it: Dependent dropdowns in 2 calls\n\n1) Get Kabupaten of a Provinsi (example: id=31)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=31&tipe=Kabupaten\"\n```\n- Output: JSON array like [{ \"id\":\"3171\", \"nama\":\"KOTA JAKARTA SELATAN\" }, ...]\n\n2) Get Kecamatan of that Kabupaten (example: id=3171)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan\"\n```\n- Output: JSON array like [{ \"id\":\"3171050\", \"nama\":\"KEBAYORAN BARU\" }, ...]\n\nFor Kelurahan, use tipe=Kelurahan and pass kecamatan\u2019s id. The JSON shape keys differ slightly for kelurahan but the controller normalizes them to id and nama.\n\nMinimal JS fetch to fill a <select>:\n```js\nfetch('/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan',\n  { headers: { 'X-Requested-With': 'XMLHttpRequest' } })\n  .then(r => r.json()).then(rows => {\n    // rows: [{id:'...', nama:'...'}, ...]\n  });\n```\nExplanation: Always send X-Requested-With so the endpoint knows it\u2019s an AJAX request.\n\n---\n\n## Compose a wilayah-based base (prefix)\n\nOption A: You already have the kelurahan\u2019s internal ID (wilayah_kelurahan_id).\n```php\nuse app\\models\\WilayahOds;\n\n$base = WilayahOds::getKodeWilayah($kelId);\n// returns \"id_provinsi . id_kabupaten . id_kecamatan . id_kelurahan\" or null\n```\nExplanation: This concatenates 4 level codes from our ODS mirror.\n\nOption B: You have names (Provinsi/Kabupaten/Kelurahan). Clean and resolve IDs:\n```php\nuse app\\models\\BaseNik;\n\n$prov = BaseNik::cleanWilayahName('PROVINSI DKI JAKARTA');\n$ids  = BaseNik::getWilayahIds($prov, 'Jakarta Selatan', 'Gandaria Selatan');\n```\nExplanation: cleanWilayahName strips words like PROVINSI/KABUPATEN, then getWilayahIds tries to find matching ID set.\n\nBuild the base (from Option B):\n```php\n$base = $ids\n  ? $ids['id_provinsi'].$ids['id_kabupaten'].$ids['id_kecamatan'].$ids['id_kelurahan']\n  : null;\n```\nExplanation: Concatenate four parts. If null, verify your names.\n\n---\n\n## Generate a unique NIK (safe and sequential)\n\nOnce you have base, mint a NIK:\n```php\nuse app\\models\\BaseNik;\n\n$nik = $base ? BaseNik::generateNik($base) : false;\n```\n- If success: \"base\" + \"001\" (zero-padded to 3 digits).\n- If repeated calls with the same base: \"002\", \"003\", etc.\n- If false: check DB connection, base length, or table existence.\n\nExample:\n- base = 3171310101 (example only)\n- NIKs: 3171310101001, 3171310101002, 3171310101003\n\nNote: BaseNik::generateNik runs inside a DB transaction so two concurrent requests won\u2019t get the same number.\n\n---\n\n## What happens behind the scenes (simple picture)\n\nWilayah AJAX:\n```mermaid\nsequenceDiagram\n  participant UI as Browser\n  participant CTRL as WilayahController\n  participant W as Wilayah Model\n  participant DB as DB\n\n  UI->>CTRL: GET get-child-wilayah?id&tipe\n  CTRL->>W: getChildWilayah(parent, tipe)\n  W->>DB: Query children by tipe\n  CTRL-->>UI: JSON [{id, nama}, ...]\n```\n\nNIK generation:\n```mermaid\nsequenceDiagram\n  participant App\n  participant BN as BaseNik\n  participant DB as DB\n\n  App->>BN: generateNik(base)\n  BN->>DB: beginTransaction + read/update counter\n  DB-->>BN: new count\n  BN-->>App: base + zeroPadded(count)\n```\n\n---\n\n## Inside the code (gentle tour)\n\n1) WilayahController (AJAX endpoint)\n```php\n// modules/Api/controllers/WilayahController.php\npublic function actionGetChildWilayah($id, $tipe){\n  if(!$id || !Yii::$app->request->isAjax){\n    return json_encode([['id'=>'0','nama'=>'Tidak Ditemukan']]);\n  }\n  $data = \\app\\models\\Wilayah::getChildWilayah($id, $tipe);\n  // map records -> [{id, nama}]\n  // special: tipe 'Kelurahan' uses different fields\n  // return json\n}\n```\nExplanation: Validates it\u2019s AJAX, fetches child rows, normalizes to id/nama.\n\n2) Wilayah model (queries by type)\n```php\n// models/Wilayah.php\npublic static function getChildWilayah($parent, $tipe){\n  if($tipe != 'Kelurahan'){\n    return self::find()->where(['PARENT_ID'=>$parent,'TIPE'=>$tipe])\n      ->orderBy('NAMA')->all();\n  }\n  return \\app\\models\\bakum\\WilayahSABH::find()\n    ->where(['ID_WILAYAH_M'=>$parent])->orderBy('NM_KELURAHAN')->all();\n}\n```\nExplanation: Kelurahan data comes from a different table (WilayahSABH).\n\n3) WilayahOds model (codes and reverse lookup)\n```php\n// models/WilayahOds.php\npublic static function getKodeWilayah($kelId){\n  $row = self::find()->where(['wilayah_kelurahan_id'=>$kelId])->one();\n  return $row ? $row->id_provinsi.$row->id_kabupaten.$row->id_kecamatan.$row->id_kelurahan : null;\n}\n```\nExplanation: Concatenates standardized IDs to form the base.\n\n4) BaseNik model (atomic counter)\n```php\n// models/BaseNik.php\npublic static function generateNik($base){\n  $tx = self::getDb()->beginTransaction();\n  try {\n    $row = self::findOne(['base'=>$base]);\n    if($row){ $row->count += 1; $row->save(); }\n    else { $row = new self(); $row->base=$base; $row->count=1; $row->save(); }\n    $tx->commit();\n    return $base . sprintf('%03d', $row->count);\n  } catch (\\Throwable $e){\n    $tx->rollBack(); return false;\n  }\n}\n```\nExplanation: Transaction ensures the count is updated safely. Returns base + 3-digit suffix.\n\nHelper: cleaning names and looking up IDs\n```php\n// models/BaseNik.php\npublic static function cleanWilayahName($name){\n  return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i','',$name));\n}\n```\nExplanation: Removes prefixes like \u201cPROVINSI\u201d so searches match the stored values.\n\n---\n\n## Putting it together (mini recipe)\n\n- On the form:\n  - Load Provinsi once (static).\n  - When Provinsi changes, call get-child-wilayah for Kabupaten.\n  - When Kabupaten changes, call get-child-wilayah for Kecamatan.\n  - When Kecamatan changes, call get-child-wilayah for Kelurahan.\n\n- On submit:\n  - Resolve base:\n    - If you kept wilayah_kelurahan_id, use WilayahOds::getKodeWilayah($kelId).\n    - If you have names, clean and resolve IDs, then concatenate.\n  - Generate NIK: BaseNik::generateNik($base).\n  - Save the record with the generated NIK.\n\nIf this is part of an API flow, remember the gateway rules from [API Gateway & Endpoints](01_api_gateway___endpoints_.md), and protect calls with JWT as needed from [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Best practices\n\n- Always send X-Requested-With: XMLHttpRequest for wilayah AJAX.\n- Validate tipe strictly: Kabupaten, Kecamatan, Kelurahan.\n- Do not craft NIK manually\u2014always call BaseNik::generateNik inside the save flow.\n- Base length: keep base short enough to fit model constraints (BaseNik.base max 10 chars).\n- High concurrency? The current transaction approach is safe for typical loads. Under very heavy load, consider explicit row locking (SELECT ... FOR UPDATE).\n\n---\n\n## Troubleshooting\n\n- Dropdown returns \u201cTidak Ditemukan\u201d:\n  - Check the id and tipe chain is correct.\n  - Ensure it\u2019s an AJAX request.\n  - For Kelurahan, confirm the parent is a valid kecamatan id.\n\n- NIK generation returns false:\n  - base is null or too long.\n  - The kop_base_nik table or DB connection isn\u2019t available.\n  - Check application logs for exception messages.\n\n- Name-based lookup fails:\n  - Use cleanWilayahName to strip titles.\n  - Provide more specific names (the lookup uses partial matches for kabupaten/kelurahan).\n  - Try resolving via kelurahan id if possible.\n\nFor how failures are logged and surfaced, see: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Wrap-up and next steps\n\nYou learned how wilayah data powers dependent dropdowns and how we derive a stable wilayah-based prefix to generate unique NIKs safely. This \u201caddress book + serial engraver\u201d provides reliable foundations for identity-related flows.\n\nNext, we\u2019ll validate those identities against the national service: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"Dukcapil Identity Verification Client\n\". This is Chapter 7.\n\nConcept Details:\n- Name: Dukcapil Identity Verification Client\n\n- Description:\nExternal identity checks run through a dedicated client. HelperDukcapil loads credentials from settings, maps inputs, calls the Dukcapil API, normalizes responses, applies friendly error messages, and logs every call (including latency and HTTP codes). It can be toggled on/off via settings and can send \u201cdata balikan\u201d back to the service for beneficiaries (Pemilik Manfaat). Think of it as an embassy counter: submit IDs and names, get validated stamps, and record each interaction for traceability and audits.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n---\n# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n---\n# Chapter 4: Koperasi Transaction Lifecycle Engine\n\nWelcome back! In the previous chapter, you built pages safely with the web shell and the session guard: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md). Now we\u2019ll go to the business \u201cfactory floor\u201d where koperasi transactions are processed end-to-end.\n\nThink of this engine as an assembly line:\n- Intake: accept and parse incoming payloads (often XML from ODS).\n- Assemble: validate and map data into our models; persist safely.\n- Finish: issue SK/SP numbers, update related records, and close the loop.\n\nBy the end of this chapter, you\u2019ll understand this flow and run a simple Pendirian transaction from XML all the way to finalized SK.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS sends a \u201cPendirian\u201d transaction:\n1) ODS authenticates with JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n2) ODS POSTs XML to /api/transaksi/insert with AuthJWT header.\n3) Our engine parses the XML, validates \u201cpesan nama,\u201d saves the transaction, and, when finalized, issues an SK number and updates references.\n\n---\n\n## Why this engine exists (beginner-friendly)\n\nWithout an engine, each endpoint would:\n- parse XML in different ways,\n- directly touch many tables,\n- and duplicate rules for finalization.\n\nThe Transaction Lifecycle Engine centralizes this in helpers so controllers stay tiny and the process is consistent and auditable. It reduces mistakes and makes maintenance easier.\n\n---\n\n## The factory line: three stations\n\n- Intake (Controller)\n  - Checks method/headers and JWT.\n  - Parses XML to a friendly array.\n  - Passes clean data into business helpers.\n\n- Assemble (TransaksiHelper)\n  - Validates business rules (e.g., \u201cpesan nama\u201d availability).\n  - Maps fields into TransaksiKoperasi and related models.\n  - Saves and returns IDs and statuses.\n\n- Finish (SKHelper)\n  - Issues SK/SP numbers.\n  - Toggles \u201cpesan nama\u201d (used \u2192 closed).\n  - Updates MasterTransaction and related references.\n\n---\n\n## Who does what (key actors)\n\n- TransaksiController (intake)\n  - File: modules/Api/controllers/TransaksiController.php\n  - Receives ODS calls (insert/update/edit), logs, and returns standard responses.\n  - Uses JWT and Content-Type checks from earlier chapters:\n    - [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n- TransaksiHelper (assemble)\n  - File: modules/Api/components/TransaksiHelper.php\n  - Maps the payload to our data models and enforces business rules.\n\n- SKHelper (finish)\n  - File: modules/Api/components/SKHelper.php\n  - Generates SK/SP numbers, flips \u201cpesan nama,\u201d updates master records.\n\n- Core data models (assembly parts)\n  - TransaksiKoperasi: main transaction record.\n  - MasterTransaction: ties a koperasi\u2019s transactions together.\n  - PesanNama: reservation of koperasi name.\n  - SK: stores SK/SP numbers.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant ODS as ODS Client\n  participant CTRL as TransaksiController\n  participant TH as TransaksiHelper\n  participant SKH as SKHelper\n  participant DB as DB\n\n  ODS->>CTRL: POST /api/transaksi/insert (XML + JWT)\n  CTRL->>TH: createTrans(parsedData)\n  TH->>DB: save transaksi + related data\n  TH-->>CTRL: {status, id}\n  CTRL->>SKH: pushPerubahan(id) when finalize\n  SKH->>DB: issue SK/SP + update master + pesan nama\n```\n\nNote: \u201cpushPerubahan\u201d is used broadly for finalization steps (both pendirian/perubahan scenarios). You\u2019ll see how it decides what to do.\n\n---\n\n## Try it end-to-end (recap)\n\n1) Get a JWT (from earlier):\n- Endpoint: POST /api/auth/login-jwt\n- See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nExpected short response:\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nBehind the scenes, the engine parsed your XML, validated, saved, and logged. For the logging pattern, see: [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Station 1: Intake (Controller)\n\nMinimal shape inside TransaksiController:\n```php\n// modules/Api/controllers/TransaksiController.php\npublic function actionInsert(){\n  $headers = Yii::$app->request->headers;\n  $xml = Yii::$app->request->rawBody; // XML payload\n  $data = ApiHelper::xmlToArray($xml); // parse\n  $this->verifyJwt($headers); // AuthJWT: Bearer {token}\n  return $this->handleCreate($data); // pass to helper\n}\n```\nExplanation:\n- The controller keeps logic small: parse \u2192 verify JWT \u2192 delegate.\n- It doesn\u2019t know business details\u2014those live in helpers.\n\nConsistent response + logging:\n```php\nprivate function handleCreate($data){\n  $res = TransaksiHelper::createTrans($data);\n  return $this->responseAndSaveLog([\n    'response' => $this->formatRes($res),\n    'request'  => $data\n  ], 'JSON');\n}\n```\nExplanation:\n- Whatever happens, we log the same way and return a standard shape.\n\n---\n\n## Station 2: Assemble (TransaksiHelper)\n\nCreate or update a transaction:\n```php\n// modules/Api/components/TransaksiHelper.php\npublic static function createTrans($data){\n  if(!$data) return ['status'=>false,'info'=>'Data kosong'];\n  $nik = $data['data']['nik'] ?? null;\n  if(!$nik) return ['status'=>false,'info'=>'NIK tidak ditemukan'];\n  return self::mapAndSave($data); // validate + persist\n}\n```\nExplanation:\n- Early guardrails (is data present? does it have NIK?).\n- Pass to a dedicated mapper/persister.\n\nMapping essentials (super simplified):\n```php\nprivate static function mapAndSave($data){\n  $m = new TransaksiKoperasi();\n  $m->attributes = self::mapFields($data); // field-by-field mapping\n  if(!self::validatePesanNama($m)) return ['status'=>false,'info'=>'Pesan nama invalid'];\n  return $m->save() ? ['status'=>true,'id'=>$m->id] : ['status'=>false,'info'=>'Save gagal'];\n}\n```\nExplanation:\n- Put business checks (like \u201cpesan nama\u201d) before saving.\n- Keep mapping logic in small functions so it\u2019s testable.\n\n\u201cPesan nama\u201d check (idea):\n```php\nprivate static function validatePesanNama($m){\n  $cek = TransaksiKoperasi::checkPendirian($m);\n  return empty($cek['status']); // if checks ok \u2192 true\n}\n```\nExplanation:\n- Centralize \u201cpendirian/perubahan\u201d rules on the model side.\n\nTip: If you generate or use NIK based on wilayah, see: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Station 3: Finish (SKHelper)\n\nWhen a transaction is ready to be finalized (issue SK/SP, close name reservation), the controller calls SKHelper. Minimal shape:\n\n```php\n// modules/Api/components/SKHelper.php\npublic static function pushPerubahan($id){\n  $t = TransaksiKoperasi::findOne($id);\n  if($t->is_finish == -1){ $t->is_finish = 0; return $t->save(false,['is_finish']); }\n  $sk = self::generateSurat(self::groupOfChanges($id), $t);\n  self::maybeChangePesanNama($t);\n  self::linkToMaster($t, $sk);\n  return self::finalize($t);\n}\n```\nExplanation:\n- If it\u2019s still a draft, move to \u201cassembled\u201d (is_finish 0).\n- Otherwise, issue SK/SP and finish (is_finish 1), update master and \u201cpesan nama\u201d.\n\nIssue SK/SP (simplified):\n```php\nprivate static function generateSurat($group, $t){\n  $sk = SK::find()->where(['t_koperasi_id'=>$t->id])->one() ?? new SK();\n  $sk->t_koperasi_id = $t->id;\n  $sk->no_sk_koperasi = Numbering::getCounter(...)->generateSKPerubahan();\n  $sk->no_sp_koperasi = Numbering::getCounter(...)->generateSKPelaporan();\n  $sk->save(false);\n  return $sk;\n}\n```\nExplanation:\n- Uses the centralized numbering system to generate SK/SP.\n- We\u2019ll deep dive into numbering next chapter: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nToggle \u201cpesan nama\u201d on name change:\n```php\nprivate static function maybeChangePesanNama($t){\n  // mark new name as used\n  PesanNama::updateAll(['status'=>1], ['id'=>$t->t_pesan_nama_id]);\n  // soft-delete old name from previous transaction\n  $prev = TransaksiKoperasi::findLastTransaction(1, $t->id_master);\n  PesanNama::updateAll(['is_deleted'=>1], ['id'=>$prev['t_pesan_nama_id'] ?? 0]);\n}\n```\nExplanation:\n- Keeps name reservation lifecycle correct: new name \u201cused,\u201d old name \u201cclosed.\u201d\n\nFinalize flags:\n```php\nprivate static function finalize($t){\n  $t->is_finish = 1;\n  $t->tanggal_confirm = date('Y-m-d H:i:s');\n  return $t->save(false,['is_finish','tanggal_confirm']);\n}\n```\nExplanation:\n- One place to switch a transaction to \u201cfinished.\u201d\n\n---\n\n## Inputs and outputs (what you send, what you get)\n\n- Input (example XML, minimum idea):\n```xml\n<root>\n  <data>\n    <koperasi>\n      <nik>1234567890123456</nik>\n      <!-- other mapped fields -->\n    </koperasi>\n  </data>\n</root>\n```\n- Output (standard, short):\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nIf something fails (format/auth/business rules), you\u2019ll get predictable codes. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Lifecycle states at a glance\n\n- Draft: is_finish = -1 (early staging, not ready)\n- Assembled: is_finish = 0 (validated/mapped, not yet issued)\n- Finalized: is_finish = 1 (SK/SP issued, references updated)\n\nThe engine moves transactions through these states via helpers, not manually sprinkled across controllers.\n\n---\n\n## Two common recipes\n\n- Insert \u201cPendirian\u201d and save draft\n  1) POST XML to /api/transaksi/insert (with JWT).\n  2) Controller parses and calls TransaksiHelper::createTrans.\n  3) You get a success response with saved state (often draft/assembled).\n\n- Finalize and issue SK\n  1) Call the finalize endpoint or business action triggering SKHelper::pushPerubahan.\n  2) SKHelper issues SK/SP, toggles \u201cpesan nama,\u201d updates MasterTransaction.\n  3) Transaction moves to is_finish = 1.\n\nNumbering details for SK/SP are covered next: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\n---\n\n## What happens under the hood (step-by-step)\n\n1) Controller checks method/headers/JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)  \n2) XML \u2192 array conversion (shape normalized).  \n3) TransaksiHelper validates business rules, maps fields, and saves models.  \n4) When finalizing, SKHelper generates SK/SP, updates \u201cpesan nama\u201d and master links.  \n5) Controller returns a consistent response and logs everything. See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Where to look in the code (quick map)\n\n- Controller intake:\n  - modules/Api/controllers/TransaksiController.php\n- Assemble logic:\n  - modules/Api/components/TransaksiHelper.php\n- Finalize logic:\n  - modules/Api/components/SKHelper.php\n- Models (data parts):\n  - models/TransaksiKoperasi.php\n  - models/MasterTransaction.php\n  - models/PesanNama.php\n  - models/SK.php\n\nTip: If you need wilayah or NIK generation details, jump to: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cFormat\u201d errors? Check Content-Type and XML shape. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- \u201cAuth\u201d errors? Ensure AuthJWT: Bearer {token}. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n- \u201cBusiness\u201d errors? Often related to \u201cpesan nama,\u201d missing fields, or invalid transitions.\n- \u201cSK\u201d not created? Ensure you triggered finalization (SKHelper) and see next chapter for numbering.\n\n---\n\n## Wrap-up and what\u2019s next\n\nYou learned how koperasi requests move through the factory line: Controller intake \u2192 TransaksiHelper assembly \u2192 SKHelper finish. You saw how \u201cpesan nama\u201d and MasterTransaction are updated when finalizing.\n\nNext, we\u2019ll zoom in on how SK and SP numbers are generated and tracked: [SK and Numbering System](05_sk_and_numbering_system_.md)\n---\n# Chapter 5: SK and Numbering System\n\nIn the last chapter, you saw how a transaction moves from intake to \u201cfinalized\u201d: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md). This chapter zooms into the final step: assigning official SK/SP numbers safely and consistently.\n\nThink of it like a ticket dispenser at a service counter:\n- pick the right series (SK vs SP),\n- increment the correct counter (per year),\n- then stamp the number back onto the transaction and the PDF view.\n\nThat\u2019s exactly what the \u201cSK and Numbering System\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA transaction (pendirian or perubahan) is ready to be finalized. We need to:\n1) Generate an official number (SK and/or SP) using the correct pattern.\n2) Ensure uniqueness and ordering, even under heavy load.\n3) Save the numbers and update related records so PDFs and views display them.\n\nYou\u2019ll learn how to trigger this finalization and where the numbers come from.\n\n---\n\n## Why this layer exists\n\nWithout a centralized numbering system:\n- two requests could accidentally get the same number,\n- different modules might format numbers differently,\n- fixing numbering bugs would be scattered and risky.\n\nBy centralizing to SKHelper (when to assign) and helper/Numbering (how to assign), the app guarantees consistent, collision-free sequences.\n\n---\n\n## Key concepts (in plain words)\n\n- SK vs SP\n  - SK: Keputusan (decision), e.g., SK Pendirian, SK Perubahan.\n  - SP: Surat Penerimaan (ack letter), e.g., SP Pelaporan (for some perubahan).\n\n- Series and patterns\n  - Each document type has its series code and pattern, for example:\n    - SK Perubahan \u2192 AH.01.38\n    - SP Pelaporan \u2192 AH.01.39\n    - SK Pembubaran \u2192 AH.01.40\n  - Final shape: AHU-0000123.AH.01.38.TAHUN 2025\n\n- Counters are per year\n  - The counter resets each year (stored in table counting via model Counter).\n  - Identified by id_aksi or keterangan (description).\n\n- Two-layer responsibility\n  - SKHelper: decides the right moment, persists SK/SP, updates related entities (PesanNama, MasterTransaction).\n  - Numbering: holds the lock, increments the counter, and formats the number string.\n\n---\n\n## Quick start: finalize a transaction and get its SK\n\nCall SKHelper when your business flow says \u201cfinalize now.\u201d\n\nExample (from an admin action or job):\n\n```php\nuse app\\modules\\Api\\components\\SKHelper;\n\n$ok = SKHelper::pushPerubahan($transaksiId);\n```\n\nExplanation:\n- pushPerubahan handles both \u201cfirst finalize\u201d and \u201calready assembled\u201d flows.\n- It will create SK/SP if needed, update flags, and compute tanggal_confirm.\n\nRead back the saved numbers:\n\n```php\nuse app\\models\\SK;\n\n$sk = SK::find()->where(['t_koperasi_id' => $transaksiId])->one();\necho $sk->no_sk_koperasi; // e.g., AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- After finalization, SK is stored and linked by t_koperasi_id.\n\n---\n\n## What gets updated on finalization\n\n- Transaction flags\n  - is_finish set to 1, tanggal_confirm set, and (optionally) tanggal_jangka_waktu updated.\n\n- SK/SP creation\n  - A row in sk table holds no_sk_koperasi and no_sp_koperasi.\n\n- Related entities\n  - PesanNama: new name marked used; previous reservation soft-deleted (when name changed).\n  - MasterTransaction: linked to the final transaksi and SK.\n  - Penggabungan: sets is_gabung for merged koperasi (if applicable).\n\nYou don\u2019t have to do these manually\u2014SKHelper wraps it for you.\n\n---\n\n## How the number is generated (the friendly version)\n\n- Numbering gets a lock, reads the current counter for this year and series, increments it, then releases the lock.\n- It then formats a string like AHU-0000123.AH.01.38.TAHUN 2025 depending on the chosen document type.\n- By doing it in one place (with a DB lock), we avoid duplicates under concurrency.\n\nMinimal example:\n\n```php\nuse app\\components\\helper\\Numbering;\n\n$n = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'], 7);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- getCounter picks a row in counting for the current year, increments it, and returns a helper instance to format the final string.\n\n---\n\n## Under the hood (step-by-step)\n\n1) Controller/business code calls SKHelper::pushPerubahan($id).\n2) SKHelper decides if we\u2019re assembling (is_finish -1 \u2192 0) or finalizing (0 \u2192 1).\n3) If finalizing, SKHelper calls generateSurat to:\n   - pick the series (SK and/or SP),\n   - ask Numbering for the next number,\n   - save numbers in sk table.\n4) SKHelper toggles PesanNama and updates MasterTransaction.\n5) Transaction is marked finalized.\n\nA tiny picture:\n\n```mermaid\nsequenceDiagram\n  participant CTRL as Controller\n  participant SKH as SKHelper\n  participant NUM as Numbering\n  participant DB as Database\n\n  CTRL->>SKH: pushPerubahan(id)\n  SKH->>NUM: getCounter(...)+generate(...)\n  NUM->>DB: LOCK, read+increment, UNLOCK\n  SKH->>DB: save SK/SP + update refs\n  SKH-->>CTRL: done\n```\n\n---\n\n## Important files (small guided tour)\n\n- SK model\n  - File: models/SK.php\n  - Holds constants and relations, e.g., SK::SK_PENDIRIAN, SK::SK_PERUBAHAN.\n\n- SKHelper (the orchestrator)\n  - File: modules/Api/components/SKHelper.php\n  - Method pushPerubahan($id) moves status and issues numbers.\n\n- Numbering (the engine)\n  - File: components/helper/Numbering.php\n  - getCounter(...) manages safe increment and format helpers like generateSKPerubahan().\n\n- SK/SP Views (where the number is shown)\n  - views/pendirian/sk_pendirian.php\n  - views/perubahan/sk_perubahan.php\n  - views/perubahan/sp_pelaporan.php\n\n---\n\n## A closer look at SKHelper\n\nSet statuses and generate letters:\n\n```php\n// modules/Api/components/SKHelper.php\nif ($transaksi->is_finish == -1) {\n  $transaksi->is_finish = 0; // assembled\n} else {\n  $transaksi->is_finish = 1; // final\n  $SKins = self::generateSurat($group, $transaksi);\n}\n```\n\nExplanation:\n- First run may just assemble; final run creates SK/SP numbers and persists them.\n\nChoose SK/SP and persist:\n\n```php\n// modules/Api/components/SKHelper.php\n$sk = new \\app\\models\\SK();\n$sk->t_koperasi_id = $transaksi->id;\n$sk->no_sk_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPerubahan();\n$sk->no_sp_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPelaporan();\n$sk->save(false);\n```\n\nExplanation:\n- For some changes, both SK and SP are issued; for others, only one. The helper decides based on \u201cgroup\u201d of perubahan.\n\nUpdate related references:\n\n```php\n// modules/Api/components/SKHelper.php\n\\app\\models\\MasterTransaction::updateAll(\n  ['id_transaksi'=>$transaksi->id, 'id_sk'=>$sk->id],\n  ['id'=>$transaksi->id_master]\n);\n```\n\nExplanation:\n- MasterTransaction knows which finalized transaction and SK belongs to the koperasi.\n\n---\n\n## A closer look at Numbering\n\nLock, increment, release:\n\n```php\n// components/helper/Numbering.php\nYii::$app->db_koperasi->createCommand('LOCK TABLES `counting` WRITE')->execute();\n// find or create row for this year+series, then increment\nYii::$app->db_koperasi->createCommand('UNLOCK TABLES')->execute();\n```\n\nExplanation:\n- The lock prevents two requests from grabbing the same number.\n\nPick series and format:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PERUBAHAN], 7);\n$no = $n->generateSKPerubahan(); // AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- Choose the right generator for the document type:\n  - generateSKPendirian() \u2192 AH.01.29\n  - generateSKPerubahan() \u2192 AH.01.38\n  - generateSKPelaporan() \u2192 AH.01.39\n  - generateSKPembubaran() \u2192 AH.01.40\n\nPreview without increment (for tests):\n\n```php\n// noupdate=true means \"don\u2019t bump the DB counter\"\n$n = Numbering::getCounter(['description'=>'sk_pendirian'], 7, true);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- Useful for dry-runs; never use in real finalization.\n\n---\n\n## Showing the number in a PDF view\n\nPass values from your controller:\n\n```php\n$sk = \\app\\models\\SK::find()->where(['t_koperasi_id'=>$id])->one();\nreturn $this->render('sk_perubahan', ['number'=>$sk->no_sk_koperasi]);\n```\n\nIn the view (already prepared in repo):\n\n```php\n<p>NOMOR <?= $number ?></p>\n```\n\nExplanation:\n- The view templates read variables like $number and display them in the SK/SP body.\n\n---\n\n## Adding a new series (example: SK Pembubaran)\n\n- Use existing generator:\n  - Numbering::generateSKPembubaran() \u2192 AH.01.40\n\nMinimal usage:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PEMBUBARAN], 7);\necho $n->generateSKPembubaran();\n```\n\nExplanation:\n- If you introduce a new document type, map an id/description pair and pick the right generator.\n\n---\n\n## Best practices and common pitfalls\n\n- Generate once, persist forever\n  - Never \u201crecompute\u201d numbers; always store and reuse.\n\n- Let SKHelper orchestrate\n  - Don\u2019t call Numbering directly from random places. Keep numbering centralized for consistency.\n\n- Concurrency safe by default\n  - The DB lock avoids duplicates. If you ever see duplicates, investigate logs:\n    - See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n- Trigger from verified flows\n  - Finalization endpoints are protected:\n    - See auth details in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n    - See endpoint flow in: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n- Test with noupdate\n  - Use Numbering::getCounter(..., ..., true) to preview formats without consuming counters in dev.\n\n---\n\n## Summary\n\nYou learned:\n- What SK and SP are, and why numbering needs to be centralized and safe.\n- How SKHelper decides when to assign numbers and updates related entities.\n- How Numbering locks, increments, and formats numbers consistently (per year).\n- How to finalize a transaction and see the numbers in SK/SP PDFs.\n\nNext, we\u2019ll move to identity and geography foundations that many flows depend on: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n---\n# Chapter 6: Wilayah & NIK Base Management\n\nComing from [SK and Numbering System](05_sk_and_numbering_system_.md), you learned how we safely mint SK/SP numbers. This chapter explains the foundation that many flows rely on: regional (wilayah) data and how we derive consistent NIKs from it.\n\nThink of it as:\n- An address book: provinsi \u2192 kabupaten \u2192 kecamatan \u2192 kelurahan.\n- A serial-number engraver: given a wilayah-based prefix, it mints unique, sequential NIKs.\n\nWe\u2019ll keep it beginner-friendly and solve one practical use case end-to-end.\n\n---\n\n## The use case we\u2019ll solve\n\nA user fills a form:\n1) They pick Provinsi \u2192 Kabupaten \u2192 Kecamatan \u2192 Kelurahan using dependent dropdowns.\n2) The system builds a wilayah-based prefix (base).\n3) The system generates a unique NIK: base + 3-digit counter, safely inside a DB transaction.\n\nYou\u2019ll learn how to:\n- Load child wilayah via AJAX.\n- Compose the base using our ODS mirror table.\n- Generate a sequential NIK with BaseNik.\n\n---\n\n## Key concepts (in plain words)\n\n- Wilayah hierarchy (address book)\n  - A tree: Provinsi \u2192 Kabupaten/Kota \u2192 Kecamatan \u2192 Kelurahan.\n  - Models and queries live in models/Wilayah.php (source) and models/WilayahOds.php (ODS mirror).\n\n- Dependent dropdowns (AJAX helper)\n  - Endpoint: GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Returns JSON of child wilayah for the next dropdown.\n\n- ODS mirror table (shortcut to codes)\n  - Table: kop_m_wilayah_ods stores standardized IDs per level.\n  - You can reconstruct a \u201cfull code\u201d by concatenating those IDs.\n\n- BaseNik (serial engraver)\n  - Table: kop_base_nik tracks prefix and a counter.\n  - Function: BaseNik::generateNik('PREFIX') \u2192 'PREFIX' + '001', '002', ...\n  - Wrapped in a transaction to avoid duplicates.\n\nTip: For gateway behavior, headers, and logging, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Try it: Dependent dropdowns in 2 calls\n\n1) Get Kabupaten of a Provinsi (example: id=31)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=31&tipe=Kabupaten\"\n```\n- Output: JSON array like [{ \"id\":\"3171\", \"nama\":\"KOTA JAKARTA SELATAN\" }, ...]\n\n2) Get Kecamatan of that Kabupaten (example: id=3171)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan\"\n```\n- Output: JSON array like [{ \"id\":\"3171050\", \"nama\":\"KEBAYORAN BARU\" }, ...]\n\nFor Kelurahan, use tipe=Kelurahan and pass kecamatan\u2019s id. The JSON shape keys differ slightly for kelurahan but the controller normalizes them to id and nama.\n\nMinimal JS fetch to fill a <select>:\n```js\nfetch('/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan',\n  { headers: { 'X-Requested-With': 'XMLHttpRequest' } })\n  .then(r => r.json()).then(rows => {\n    // rows: [{id:'...', nama:'...'}, ...]\n  });\n```\nExplanation: Always send X-Requested-With so the endpoint knows it\u2019s an AJAX request.\n\n---\n\n## Compose a wilayah-based base (prefix)\n\nOption A: You already have the kelurahan\u2019s internal ID (wilayah_kelurahan_id).\n```php\nuse app\\models\\WilayahOds;\n\n$base = WilayahOds::getKodeWilayah($kelId);\n// returns \"id_provinsi . id_kabupaten . id_kecamatan . id_kelurahan\" or null\n```\nExplanation: This concatenates 4 level codes from our ODS mirror.\n\nOption B: You have names (Provinsi/Kabupaten/Kelurahan). Clean and resolve IDs:\n```php\nuse app\\models\\BaseNik;\n\n$prov = BaseNik::cleanWilayahName('PROVINSI DKI JAKARTA');\n$ids  = BaseNik::getWilayahIds($prov, 'Jakarta Selatan', 'Gandaria Selatan');\n```\nExplanation: cleanWilayahName strips words like PROVINSI/KABUPATEN, then getWilayahIds tries to find matching ID set.\n\nBuild the base (from Option B):\n```php\n$base = $ids\n  ? $ids['id_provinsi'].$ids['id_kabupaten'].$ids['id_kecamatan'].$ids['id_kelurahan']\n  : null;\n```\nExplanation: Concatenate four parts. If null, verify your names.\n\n---\n\n## Generate a unique NIK (safe and sequential)\n\nOnce you have base, mint a NIK:\n```php\nuse app\\models\\BaseNik;\n\n$nik = $base ? BaseNik::generateNik($base) : false;\n```\n- If success: \"base\" + \"001\" (zero-padded to 3 digits).\n- If repeated calls with the same base: \"002\", \"003\", etc.\n- If false: check DB connection, base length, or table existence.\n\nExample:\n- base = 3171310101 (example only)\n- NIKs: 3171310101001, 3171310101002, 3171310101003\n\nNote: BaseNik::generateNik runs inside a DB transaction so two concurrent requests won\u2019t get the same number.\n\n---\n\n## What happens behind the scenes (simple picture)\n\nWilayah AJAX:\n```mermaid\nsequenceDiagram\n  participant UI as Browser\n  participant CTRL as WilayahController\n  participant W as Wilayah Model\n  participant DB as DB\n\n  UI->>CTRL: GET get-child-wilayah?id&tipe\n  CTRL->>W: getChildWilayah(parent, tipe)\n  W->>DB: Query children by tipe\n  CTRL-->>UI: JSON [{id, nama}, ...]\n```\n\nNIK generation:\n```mermaid\nsequenceDiagram\n  participant App\n  participant BN as BaseNik\n  participant DB as DB\n\n  App->>BN: generateNik(base)\n  BN->>DB: beginTransaction + read/update counter\n  DB-->>BN: new count\n  BN-->>App: base + zeroPadded(count)\n```\n\n---\n\n## Inside the code (gentle tour)\n\n1) WilayahController (AJAX endpoint)\n```php\n// modules/Api/controllers/WilayahController.php\npublic function actionGetChildWilayah($id, $tipe){\n  if(!$id || !Yii::$app->request->isAjax){\n    return json_encode([['id'=>'0','nama'=>'Tidak Ditemukan']]);\n  }\n  $data = \\app\\models\\Wilayah::getChildWilayah($id, $tipe);\n  // map records -> [{id, nama}]\n  // special: tipe 'Kelurahan' uses different fields\n  // return json\n}\n```\nExplanation: Validates it\u2019s AJAX, fetches child rows, normalizes to id/nama.\n\n2) Wilayah model (queries by type)\n```php\n// models/Wilayah.php\npublic static function getChildWilayah($parent, $tipe){\n  if($tipe != 'Kelurahan'){\n    return self::find()->where(['PARENT_ID'=>$parent,'TIPE'=>$tipe])\n      ->orderBy('NAMA')->all();\n  }\n  return \\app\\models\\bakum\\WilayahSABH::find()\n    ->where(['ID_WILAYAH_M'=>$parent])->orderBy('NM_KELURAHAN')->all();\n}\n```\nExplanation: Kelurahan data comes from a different table (WilayahSABH).\n\n3) WilayahOds model (codes and reverse lookup)\n```php\n// models/WilayahOds.php\npublic static function getKodeWilayah($kelId){\n  $row = self::find()->where(['wilayah_kelurahan_id'=>$kelId])->one();\n  return $row ? $row->id_provinsi.$row->id_kabupaten.$row->id_kecamatan.$row->id_kelurahan : null;\n}\n```\nExplanation: Concatenates standardized IDs to form the base.\n\n4) BaseNik model (atomic counter)\n```php\n// models/BaseNik.php\npublic static function generateNik($base){\n  $tx = self::getDb()->beginTransaction();\n  try {\n    $row = self::findOne(['base'=>$base]);\n    if($row){ $row->count += 1; $row->save(); }\n    else { $row = new self(); $row->base=$base; $row->count=1; $row->save(); }\n    $tx->commit();\n    return $base . sprintf('%03d', $row->count);\n  } catch (\\Throwable $e){\n    $tx->rollBack(); return false;\n  }\n}\n```\nExplanation: Transaction ensures the count is updated safely. Returns base + 3-digit suffix.\n\nHelper: cleaning names and looking up IDs\n```php\n// models/BaseNik.php\npublic static function cleanWilayahName($name){\n  return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i','',$name));\n}\n```\nExplanation: Removes prefixes like \u201cPROVINSI\u201d so searches match the stored values.\n\n---\n\n## Putting it together (mini recipe)\n\n- On the form:\n  - Load Provinsi once (static).\n  - When Provinsi changes, call get-child-wilayah for Kabupaten.\n  - When Kabupaten changes, call get-child-wilayah for Kecamatan.\n  - When Kecamatan changes, call get-child-wilayah for Kelurahan.\n\n- On submit:\n  - Resolve base:\n    - If you kept wilayah_kelurahan_id, use WilayahOds::getKodeWilayah($kelId).\n    - If you have names, clean and resolve IDs, then concatenate.\n  - Generate NIK: BaseNik::generateNik($base).\n  - Save the record with the generated NIK.\n\nIf this is part of an API flow, remember the gateway rules from [API Gateway & Endpoints](01_api_gateway___endpoints_.md), and protect calls with JWT as needed from [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Best practices\n\n- Always send X-Requested-With: XMLHttpRequest for wilayah AJAX.\n- Validate tipe strictly: Kabupaten, Kecamatan, Kelurahan.\n- Do not craft NIK manually\u2014always call BaseNik::generateNik inside the save flow.\n- Base length: keep base short enough to fit model constraints (BaseNik.base max 10 chars).\n- High concurrency? The current transaction approach is safe for typical loads. Under very heavy load, consider explicit row locking (SELECT ... FOR UPDATE).\n\n---\n\n## Troubleshooting\n\n- Dropdown returns \u201cTidak Ditemukan\u201d:\n  - Check the id and tipe chain is correct.\n  - Ensure it\u2019s an AJAX request.\n  - For Kelurahan, confirm the parent is a valid kecamatan id.\n\n- NIK generation returns false:\n  - base is null or too long.\n  - The kop_base_nik table or DB connection isn\u2019t available.\n  - Check application logs for exception messages.\n\n- Name-based lookup fails:\n  - Use cleanWilayahName to strip titles.\n  - Provide more specific names (the lookup uses partial matches for kabupaten/kelurahan).\n  - Try resolving via kelurahan id if possible.\n\nFor how failures are logged and surfaced, see: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Wrap-up and next steps\n\nYou learned how wilayah data powers dependent dropdowns and how we derive a stable wilayah-based prefix to generate unique NIKs safely. This \u201caddress book + serial engraver\u201d provides reliable foundations for identity-related flows.\n\nNext, we\u2019ll validate those identities against the national service: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 684 # modules/Api/controllers/DukcapilController.php ---\n<?php\nnamespace app\\modules\\Api\\controllers;\n\nuse app\\components\\HelperDukcapil;\nuse Yii;\nuse yii\\rest\\Controller;\n\nclass DukcapilController extends Controller {\n\n    public function actionValidasiData() {\n        if(Yii::$app->user->isGuest){\n            return $this->redirect(['/']);\n        }\n        $status = HelperDukcapil::CheckIsActiveValidateDukcapil();\n        if($status){\n            $validate = new HelperDukcapil($_POST);\n            $error = $validate->curlValidDukcapil();\n            if ($error !== true) {\n                Yii::error(\"Dukcapil error: $error | Params: \" . json_encode($_POST), __METHOD__);\n            }\n            $response = $validate->response();\n        }else{\n            $response = HelperDukcapil::AllowValidation();\n        }\n\n        return $this->asJson($response);\n    }\n\n}\n\n--- File: 602 # models/LogDukcapil.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse app\\services\\ElkLoggingService;\nuse DateTime;\nuse DateTimeZone;\n\n/**\n * This is the model class for table \"log_service\".\n *\n * @property int $id\n * @property string $ip_address\n * @property string $service_uri\n * @property string $nik\n * @property string $request\n * @property string $response\n * @property string $additional_data\n * @property string $created_at\n * @property int $is_error\n * @property string $type\n * @property string $execution_time\n */\nclass LogDukcapil extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'log_dukcapil';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('dbLogSimpadhu');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            array('nik, ip_address, type, is_error, created_at, header_code, request, response, additional_data, execution_time, service_uri, parent_id, resend, layanan', 'safe'),\n        ];\n    }\n\n\tpublic static function logDcp(\n        $params, \n        $response, \n        $status, \n        $type = 'VERIFNIK', \n        $exetime = 0, \n        $layanan, \n        $additional_data, \n        $parent_id = null, \n        $nik = null\n    ){\n        $request = is_string($params) ? json_decode($params) : $params;\n\n        $log = new LogDukcapil();\n        $log->nik = $nik;\n        $log->ip_address = Yii::$app->request->userIP;\n        $log->type = $type;\n        $log->is_error = $status == 200 ? 0 : 1;\n        $log->created_at = date(\"Y-m-d H:i:s\");\n        $log->header_code = $status;\n        $log->request = json_encode($request);\n        $log->response =json_encode(is_string($response) ? json_decode($response) : $response);\n        $log->additional_data = json_encode($additional_data);\n        $log->execution_time = $exetime;\n        $log->service_uri = Yii::$app->request->url;\n        $log->resend = $status == 200 ? 0 : 1;\n        $log->layanan = $layanan;\n        $log->parent_id = $parent_id;\n\n        // Penyesuaian Date agar menggunakan Timezone\n        $old_date = $log->created_at;\n        // Explicitly tell PHP that this time is already in WIB\n        $timezone = new DateTimeZone('Asia/Jakarta');\n        $newDate = new DateTime($old_date, $timezone);\n        \n        // Ensure no UTC conversion happens\n        $newDate->setTimezone($timezone);\n        \n        // Convert to ISO 8601 format with WIB timezone\n        $log->created_at = $newDate->format(DateTime::ATOM); \n\n        // Insert ke ELK\n        $elkLogging = new ElkLoggingService('dukcapil');\n\n        $elk_logging = $elkLogging->logApplication([\n            'nik' => $log->nik,\n            'ip_address' => $log->ip_address,\n            'type' => $log->type,\n            'is_error' => $log->is_error,\n            'created_at' => $log->created_at,\n            'header_code' => $log->header_code,\n            'request' => $log->request,\n            'response' => $log->response,\n            'additional_data' => $log->additional_data,\n            'execution_time' => strval($log->execution_time),\n            'service_uri' => $log->service_uri,\n            'resend' => $log->resend,\n            'layanan' => $log->layanan,\n            'parent_id' => $log->parent_id,\n        ]);\n\n        if ($elk_logging !== false) {\n            $result = $elk_logging;\n        } else {\n            $log->created_at = $old_date;\n            $log->save();\n        }\n    }\n}\n\n\n--- File: 10 # components/HelperDukcapil.php ---\n<?php\n\nnamespace app\\components;\n\nuse app\\models\\LogDukcapil;\nuse app\\models\\PemilikManfaat;\nuse Yii;\nuse yii\\base\\Component;\n\nclass HelperDukcapil extends Component\n{    \n    public $USER_ID;\n    public $PASSWORD;\n    public $IP_USER;\n    public $TRESHOLD;\n    public $NIK;\n    public $NAMA_LGKP;\n    public $URL_API;\n    public $ID_KOPERASI;\n\n    public $FILTER_RESPONSE = [\n        'NAMA_LGKP' => 'NAMA tidak sesuai dengan data yang terdapat di database Kependudukan',\n    ];\n\n    protected $responseCurl;\n\n    public function __construct($data = [])\n    {\n        $this->getConfigDukcapil();\n\n        $this->ID_KOPERASI = isset($data['id_koperasi']) ? $data['id_koperasi'] : '';\n        $this->NIK = isset($data['nik']) ? $data['nik'] : '';\n        $this->NAMA_LGKP = isset($data['nama']) ? $data['nama'] : '';\n    }\n\n    protected function getConfigDukcapil()\n    {\n        $config = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'credential_dukcapil'\"\n        )->queryOne();\n\n        if($config){\n            $decode = json_decode($config['value']);\n            $this->USER_ID = $decode->user_id;\n            $this->PASSWORD = $decode->password;\n            $this->IP_USER = $decode->ip_user;\n            $this->TRESHOLD = $decode->treshold;\n            $this->URL_API = $decode->url_api;\n        }\n    }\n\n    public function mappingDataDukcapil(){\n        $data = array(\n            'USER_ID' => $this->USER_ID,\n            'PASSWORD' => $this->PASSWORD,\n            'IP_USER' => $this->IP_USER,\n            'TRESHOLD' => $this->TRESHOLD,\n            'NIK' => $this->NIK,\n            'NAMA_LGKP' => $this->NAMA_LGKP\n        );\n        return json_encode($data);\n    }\n\n    public function curlValidDukcapil() {\n        $params = str_replace(\"\\\\/\",\"/\",$this->mappingDataDukcapil());\n\n        $ch = curl_init();\n        curl_setopt($ch,CURLOPT_URL, $this->URL_API);\n        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n        curl_setopt($ch,CURLOPT_HTTPHEADER, array(\"Accept:application/json\", \"Content-Type:application/json\"));\n        curl_setopt($ch,CURLOPT_POST, true);\n        curl_setopt($ch,CURLOPT_POSTFIELDS, $params);\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\n        curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n\n        $time_start = microtime(true);\n        $result = curl_exec($ch);\n        $time = sprintf('%.3f', microtime(true) - $time_start) . 's';\n        $info = curl_getinfo($ch);\n\n        $error = null;\n        if(curl_errno($ch)) {\n            $error = curl_error($ch);\n            if (in_array(curl_errno($ch), array(CURLE_OPERATION_TIMEDOUT, CURLE_OPERATION_TIMEOUTED))) {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'],\n                    ])\n                );\n            } else {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => curl_error($ch)],\n                    ])\n                );\n            }\n        }\n\n        curl_close($ch);\n        \n        $res = json_decode($result, true);\n\n        $data = (object)$res;\n        \n        LogDukcapil::logDcp($params, $result, $info['http_code'], 'VERIFNIK',$time,'KOPERASI', $info, $this->ID_KOPERASI, $this->NIK);\n\n        $data = $data->content[0];\n        $this->responseCurl = (object) $data;\n        return $error ?: true;\n    }\n\n    public function mapingResponse($res)\n    {\n        $response = [\n            'status' => 1,\n            'data' => []\n        ];\n\n        if (isset($res)) {\n            if (isset($res->RESPONSE_CODE)) {\n                $data = $this->processCode($res->RESPONSE_CODE, $res->RESPONSE);\n                if($data){\n                    $response['status'] = 0;\n                    $response['data'][] = $data;\n                }\n            } elseif (isset($res->RESPONSE)){\n                $response['status'] = 0;\n                $response['data'][] = $res->RESPONSE;\n            }else {\n                $data = [];\n                $string = \"Sesuai (100)\";\n                \n                foreach ($res as $key => $value) {\n                    if(in_array($key, array_keys($this->FILTER_RESPONSE)) && stripos($value, \"Tidak Sesuai\") !== false){\n                        $data[$key] = $this->FILTER_RESPONSE[$key];\n                    }\n                }\n\n                if(count($data) >= 1){\n                    $response['status'] = 0;\n                    $response['data'] = $data;\n                }\n            }\n            \n            return $response;\n        }else{\n            $response['status'] = 0;\n            $response['data'] = ['Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'];\n            return $response;\n        }\n    }\n    \n    private function processCode($code, $message)\n    {\n        switch ($code) {\n            case 11:\n                return 'Data yang dimasukkan merupakan data orang yang telah dinyatakan meninggal';\n            case 12:\n                return 'Data Ditemukan, Status Data Ganda';\n            case 13:\n                return 'Data Tidak Ditemukan, NIK tidak terdapat di database Kependudukan';\n            case 14:\n            case 15:\n                return $message;\n            default:\n                return 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi';\n        }\n    }\n    \n\n    public function response(){\n        return $this->mapingResponse($this->responseCurl);\n    }\n\n    public static function DataBalikan($id, $model){\n        $config = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'credential_data_balikan'\"\n        )->queryOne();\n\n        $token = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'token_data_balikan'\"\n        )->queryOne();\n\n        $token = $token['value'];\n\n        $data = PemilikManfaat::findAll(['t_koperasi_id' => $id]);\n\n        if(isset($config['value'])){\n            $decode = json_decode($config['value']);\n\n            $params = [];\n            $params['id_lembaga'] = $decode->id_lembaga;\n            $params['nama_lembaga'] = $decode->nama_lembaga;\n            $nik = 0;\n            foreach ($data as $key => $value) {\n                if($value->m_jenis_identitas_id == 1){\n                    $params['data'][] = [\n                        'NIK' => $value->no_identitas,\n                        'param' => [\n                            [\"hubungan_dengan_korporasi\" => \"Pemilik Manfaat KOPERASI \" . $model->nama_koperasi],\n                        ]\n                    ];\n                    $nik = $value->no_identitas;\n                }\n            }\n\n            if(!empty($params)){\n                self::curlDataBalikan($decode->url_api, json_encode([$params]), $token, $id, $nik);\n            }\n        }\n\n    } \n\n    public static function curlDataBalikan($url, $params, $token, $id = null, $nik){\n        $time_start = microtime(true);\n        $ch = curl_init();\n        curl_setopt($ch,CURLOPT_URL, $url);\n        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);\n        curl_setopt($ch,CURLOPT_HTTPHEADER, array(\"Accept:application/json\", \"Content-Type:application/json\", \"Authorization:Bearer \".$token));\n        curl_setopt($ch,CURLOPT_POST, true);\n        curl_setopt($ch,CURLOPT_POSTFIELDS, $params);\n\n        // Set timeout\n        curl_setopt($ch, CURLOPT_TIMEOUT, 10);\n        curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10);\n\n        $result = curl_exec($ch);\n        $time = sprintf('%.3f', microtime(true) - $time_start) . 's';\n        $info = curl_getinfo($ch);\n\n        if(curl_errno($ch)){\n            // check is error timeout or not \n            if (in_array(curl_errno($ch), array(CURLE_OPERATION_TIMEDOUT, CURLE_OPERATION_TIMEOUTED))) {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi'],\n                    ])\n                );\n            } else {\n                $result = json_encode(array(\n                    'content' => [\n                        ['RESPONSE' => curl_error($ch)],\n                    ])\n                );\n            }\n        }\n        curl_close($ch);\n        \n        LogDukcapil::logDcp($params, $result, $info['http_code'], 'DATABALIKAN',$time,'KOPERASI', $info, $id, $nik);\n\n        return $result;\n    }\n\n    public static function CheckIsActiveValidateDukcapil(){\n        $isActive = Yii::$app->db_koperasi->createCommand(\n            \"SELECT value from kop_setting WHERE nama = 'is_active_dukcapil'\"\n        )->queryOne();\n        \n        $status = 0;\n        if(!empty($isActive) && $isActive['value'] == 1){\n            $status = 1;\n        }\n\n        return $status;\n    }\n\n    public static function AllowValidation(){\n        $response = [\n            'status' => 1,\n            'data' => []\n        ];\n\n        return $response;\n    }\n}\n\n\n--- File: 615 # models/PemilikManfaat.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\n\n/**\n * This is the model class for table \"{{%pemilik_manfaat}}\".\n *\n * @property int $id\n * @property int $t_koperasi_id\n * @property string $nama\n * @property int $m_jenis_identitas_id\n * @property string $no_identitas\n * @property string $tempat_lahir\n * @property string $tanggal_lahir\n * @property string $alamat\n * @property string $kewarganegaraan\n * @property string $npwp\n * @property string $hubungan\n * @property string $json_checkbox\n */\nclass PemilikManfaat extends \\yii\\db\\ActiveRecord\n{\n    const FROM_APP = 0;\n    const FROM_API = 1;\n    \n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return '{{%pemilik_manfaat}}';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['t_koperasi_id', 'm_jenis_identitas_id'], 'integer'],\n            [['tanggal_lahir', 'is_from_api'], 'safe'],\n            [['kewarganegaraan', 'hubungan', 'json_checkbox'], 'string'],\n            [['nama', 'no_identitas', 'tempat_lahir'], 'string', 'max' => 50],\n            [['alamat'], 'string', 'max' => 100],\n            [['npwp'], 'string', 'max' => 16],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            't_koperasi_id' => 'T Koperasi ID',\n            'nama' => 'Nama',\n            'm_jenis_identitas_id' => 'M Jenis Identitas ID',\n            'no_identitas' => 'No Identitas',\n            'tempat_lahir' => 'Tempat Lahir',\n            'tanggal_lahir' => 'Tanggal Lahir',\n            'alamat' => 'Alamat',\n            'kewarganegaraan' => 'Kewarganegaraan',\n            'npwp' => 'Npwp',\n            'hubungan' => 'Hubungan',\n            'json_checkbox' => 'Json Checkbox',\n        ];\n    }\n\n    public static function getPemilikManfaatByID($kode) {\n\n        return self::find()\n            ->where(['t_koperasi_id' => $kode])\n            ->asArray()\n            ->all();\n    }\n\n    public static function isFromApi($id)\n    {\n        if ($data_bo = self::find()->where(['t_koperasi_id' => $id])->all()) {\n            foreach ($data_bo as $bo) {\n                if ($bo->is_from_api == self::FROM_API) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n}\n\n\n--- File: 688 # services/ElkLoggingService.php ---\n<?php\nnamespace app\\services;\nuse Yii;\n\nclass ElkLoggingService\n{\n    private $elastic;\n    public $index;\n    private $indexFidusia; //index untuk fidusia yang ada di ahu online\n    private $appsName;\n\n    public function __construct($tableName, $service = '')\n    {\n        $this->elastic = Yii::$app->elkAuditTrail->getClientInstance();\n        $this->index = Yii::$app->elkAuditTrail->env .'-log-<table>';\n        $this->indexFidusia = Yii::$app->elkAuditTrail->env .'-fidusia-';\n        $this->appsName = $tableName;\n\n        if ($service) {\n            $this->index = Yii::$app->elkAuditTrail->env .'-'. $service .'-log-<table>';\n        }\n\n        $this->index = strtolower(str_replace('<table>', $tableName, $this->index));\n    }\n\n    public function logBakum($attributes, $mappings = [])\n    {\n        try {\n            // Pastikan indeks sudah ada, jika belum maka buat\n            $this->createIndexIfNotExists($this->index, $mappings);\n\n            // Query untuk memeriksa apakah log sudah ada\n            $params = [\n                'index' => $this->index,\n                'body' => [\n                    'query' => [\n                        'bool' => [\n                            'must' => [\n                                ['match_phrase' => ['persyaratan' => $attributes['persyaratan']]],\n                                ['match_phrase' => ['ref' => $attributes['ref']]],\n                                ['match_phrase' => ['ip_address' => $attributes['ip_address']]]\n                            ]\n                        ]\n                    ]\n                ]\n            ];\n\n            // Eksekusi query pencarian\n            $response = $this->elastic->search($params);\n\n            if ($response['hits']['total']['value'] > 0) {\n                // Jika log ditemukan, hapus dokumen tersebut\n                $logId = $response['hits']['hits'][0]['_id'];\n\n                $deleteResponse = $this->elastic->delete([\n                    'index' => $this->index,\n                    'type' => '_doc',\n                    'id' => $logId,\n                ]);\n\n                return isset($deleteResponse['result']) && $deleteResponse['result'] === 'deleted' ? 1 : 0;\n            } else {\n                // Jika log tidak ditemukan, buat dokumen baru\n                $insertResponse = $this->elastic->index([\n                    'index' => $this->index,\n                    'type' => '_doc',\n                    'body' => $attributes\n                ]);\n\n                return isset($insertResponse['_id']) ? 1 : 0;\n            }\n        } catch (\\Exception $e) {\n            // Log error ke Yii logger\n            Yii::error(\"ES Log Error: \" . $e->getMessage(), 'application');\n            return false;\n        }\n    }\n\n    private function createIndexIfNotExists($indexName, $mappings = [])\n    {\n        try {\n            // Coba periksa apakah indeks sudah ada\n            $exists = $this->elastic->indices()->exists(['index' => $indexName]);\n\n            $index_properties = [\n                'index' => $indexName\n            ];\n\n            if ($mappings) {\n                $index_properties['body']['mappings'] = [\n                    'properties' => $mappings\n                ];\n            }\n\n            if (!$exists) {\n                // Buat indeks jika belum ada\n                $this->elastic->indices()->create($index_properties);\n\n                Yii::info(\"Index '$indexName' created successfully.\", 'application');\n            } else {\n                Yii::info(\"Index '$indexName' already exists. Skipping creation.\", 'application');\n            }\n\n        } catch (\\Elasticsearch\\Common\\Exceptions\\Missing404Exception $e) {\n            // Tangkap exception 404 (indeks tidak ditemukan)\n            $this->elastic->indices()->create($index_properties);\n\n            Yii::info(\"Index '$indexName' did not exist and has been created.\", 'application');\n        } catch (\\Exception $e) {\n            // Tangani error lainnya\n            Yii::error(\"Error creating index '$indexName': \" . $e->getMessage(), 'application');\n        }\n    }\n\n    // Method buat search mirip existing (return CActiveDataProvider-like array)\n    public function search($params, $service = '')\n    {\n        $query = [\n            'bool' => [\n                'must' => []\n            ]\n        ];\n\n        // filter\n        if (!empty($params['persyaratan'])) {\n            $query['bool']['must'][] = ['term' => ['persyaratan' => $params['persyaratan']]];\n        }\n        if (!empty($params['ip_address'])) {\n            $query['bool']['must'][] = ['term' => ['ip_address' => $params['ip_address']]];\n        }\n        if (!empty($params['ref'])) {\n            $query['bool']['must'][] = ['term' => ['ref' => $params['ref']]];\n        }\n        if (!empty($params['created_user'])) {\n            $query['bool']['must'][] = ['term' => ['created_user' => $params['created_user']]];\n        }\n        //Untuk pencarian Fidusia\n        if (!empty($params['search'])) {\n            $query['bool']['must'][] = ['term' => ['search' => $params['search']]];\n        }\n\n        //Cek index apabila ada kiriman khusus untuk fidusia\n        $indexName = $this->index;\n        if($this->appsName == 'fidusia' && !empty($service)) {\n            $indexName = $this->indexFidusia . $service;\n        }\n\n        $result = $this->elastic->search([\n            'index' => $indexName,\n            // 'type' => '_doc',\n            'body' => [\n                'query' => $query\n            ]\n        ]);\n\n        return $this->formatToDataProvider($result);\n    }\n\n    private function formatToDataProvider($esResult)\n    {\n        $data = [];\n        foreach ($esResult['hits']['hits'] as $hit) {\n            $data[] = $hit['_source'];\n        }\n        return new CArrayDataProvider($data, [\n            'pagination' => ['pageSize' => 20],\n        ]);\n    }\n\n    public function logApplication($attributes, $mappings = [], $service = '')\n    {\n        try {\n            // Pastikan indeks sudah ada, jika belum maka buat\n            $this->createIndexIfNotExists($this->index, $mappings);\n\n            //Cek index apabila ada kiriman khusus untuk fidusia\n            $indexName = $this->index;\n            if($this->appsName == 'fidusia' && !empty($service)) {\n                $indexName = $this->indexFidusia . $service;\n                $this->createIndexIfNotExists($indexName, $mappings);\n            }\n\n            // Jika response hanya angka seperti 1\n            if(!empty($attributes['response'])){\n                if(is_int($attributes['response'])){\n                    $attributes['response'] = (object) ['value' => $attributes['response']];\n                }\n            }\n            \n            // Jika response ada message, dan message bukan teks\n            if(!empty($attributes['response']->message)){\n                if (is_object($attributes['response']->message) || is_array($attributes['response']->message)) {\n                    $attributes['response']->message = json_encode($attributes['response']->message);\n                }   \n            }\n\n            // Insert ke Elastic\n            $insertResponse = $this->elastic->index([\n                'index' => $indexName, //Ambil nama yang didefinisikan\n                'type' => '_doc',\n                'body' => $attributes\n            ]);\n\n            return isset($insertResponse['_id']) ? 1 : 0;\n        } catch (\\Exception $e) {\n            // Log error ke Yii logger\n            Yii::error(\"ES Log Error: \" . $e->getMessage(), 'application');\n            return false;\n        }\n    }\n}\n\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 7: Dukcapil Identity Verification Client\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 7: Dukcapil Identity Verification Client\n\nComing from [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md), you now know how we build NIKs consistently. Next, we\u2019ll validate those identities against the national service. Meet our \u201cembassy counter\u201d: the Dukcapil Identity Verification Client.\n\nThink of an embassy window:\n- You submit an ID (NIK) and full name.\n- The officer checks it against the master record.\n- You get a \u201cstamp\u201d (match or not), and the visit is recorded for audits.\n\nThat\u2019s exactly what HelperDukcapil does\u2014simple, consistent, and fully logged.\n\n---\n\n## What problem does this solve?\n\nUse case: Before finalizing a koperasi transaction, we must confirm a person\u2019s identity with Dukcapil:\n1) A user enters NIK and full name.\n2) We call Dukcapil via a dedicated client (HelperDukcapil).\n3) We normalize the response into friendly messages.\n4) We log every call (HTTP code, latency, request, response) for audits.\n5) Optionally, we send \u201cdata balikan\u201d back for Pemilik Manfaat.\n\nIf Dukcapil is temporarily disabled (maintenance, sandbox), we can toggle validation off so screens still move forward safely.\n\n---\n\n## Key concepts (plain and friendly)\n\n- Dedicated client (HelperDukcapil)\n  - Loads credentials and base URL from settings.\n  - Maps inputs (USER_ID, PASSWORD, IP_USER, TRESHOLD, NIK, NAMA_LGKP).\n  - Sends one POST to Dukcapil; normalizes and returns a simple result.\n\n- Toggle on/off\n  - A setting flag decides whether to call Dukcapil or instantly \u201callow\u201d validation.\n\n- Friendly error messages\n  - Converts raw codes into human-readable messages (e.g., \u201cNIK tidak ditemukan\u201d).\n\n- Full logging\n  - Logs request/response, HTTP status, latency, and more into Elasticsearch or DB for traceability.\n\n- Data Balikan\n  - Optional postback of Pemilik Manfaat data to a partner service with a Bearer token.\n\nTip: If you\u2019re calling from an API route, revisit the \u201cfront desk\u201d rules in [API Gateway & Endpoints](01_api_gateway___endpoints_.md). If you need tokens for protected APIs, see [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Quick start: Validate NIK + Name in 3 steps\n\nPrerequisites:\n- You\u2019re logged into the web app (this endpoint needs a session).\n- Settings are filled:\n  - credential_dukcapil (JSON)\n  - is_active_dukcapil (1 or 0)\n\n1) Turn validation on\n```sql\n-- kop_setting\n-- nama: is_active_dukcapil, value: 1\n```\nExplanation: With \u201c1\u201d, we call Dukcapil. With \u201c0\u201d, we instantly allow.\n\n2) Configure credentials (example shape)\n```json\n{\n  \"user_id\": \"your-user\",\n  \"password\": \"your-pass\",\n  \"ip_user\": \"1.2.3.4\",\n  \"treshold\": \"85\",\n  \"url_api\": \"https://dukcapil.service/verify\"\n}\n```\nExplanation: Save this JSON under kop_setting.nama = credential_dukcapil.\n\n3) From a logged-in browser, POST your form\n```js\nfetch('/api/dukcapil/validasi-data', {\n  method: 'POST',\n  body: new URLSearchParams({ nik:'1234567890123456', nama:'BUDI SANTOSO' })\n}).then(r=>r.json()).then(console.log);\n```\nExpected success (match):\n```json\n{ \"status\": 1, \"data\": [] }\n```\nExpected failure (mismatch/issue):\n```json\n{ \"status\": 0, \"data\": [\"NIK tidak terdapat di database Kependudukan\"] }\n```\nExplanation: status=1 means \u201cvalidated\u201d. status=0 contains friendly messages. All calls are logged with HTTP code and elapsed time.\n\n---\n\n## How it works (small picture)\n\n```mermaid\nsequenceDiagram\n  participant UI as Web UI\n  participant DC as DukcapilController\n  participant HD as HelperDukcapil\n  participant DCP as Dukcapil API\n  participant LG as LogDukcapil\n\n  UI->>DC: POST nik, nama\n  DC->>HD: new HelperDukcapil($_POST)\n  HD->>DCP: POST credential + NIK+Nama\n  DCP-->>HD: JSON result + HTTP code\n  HD->>LG: log request/response+latency\n  DC-->>UI: {status, data[]}\n```\n\nAnalogy: The controller is the receptionist, HelperDukcapil is the embassy officer, and LogDukcapil is the CCTV + ledger.\n\n---\n\n## The endpoint you call\n\nFile: modules/Api/controllers/DukcapilController.php\n\n```php\npublic function actionValidasiData(){\n  if(Yii::$app->user->isGuest){ return $this->redirect(['/']); }\n  if(HelperDukcapil::CheckIsActiveValidateDukcapil()){\n    $h = new HelperDukcapil($_POST);\n    $h->curlValidDukcapil();\n    return $this->asJson($h->response());\n  }\n  return $this->asJson(HelperDukcapil::AllowValidation());\n}\n```\nExplanation:\n- Requires a logged-in web session.\n- If active, calls Dukcapil; if not, returns \u201callowed\u201d immediately.\n\nTip: For machine-to-machine flows, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and secure with JWT in [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Inside HelperDukcapil (the embassy officer)\n\nLoad credentials from settings\n```php\nprotected function getConfigDukcapil(){\n  $row = Yii::$app->db_koperasi\n    ->createCommand(\"SELECT value FROM kop_setting WHERE nama='credential_dukcapil'\")\n    ->queryOne();\n  // parse JSON \u2192 fill USER_ID, PASSWORD, IP_USER, TRESHOLD, URL_API\n}\n```\nExplanation: Everything is centrally configured; no hardcoded secrets.\n\nPrepare the request payload\n```php\npublic function mappingDataDukcapil(){\n  return json_encode([\n    'USER_ID'=>$this->USER_ID, 'PASSWORD'=>$this->PASSWORD,\n    'IP_USER'=>$this->IP_USER, 'TRESHOLD'=>$this->TRESHOLD,\n    'NIK'=>$this->NIK, 'NAMA_LGKP'=>$this->NAMA_LGKP\n  ]);\n}\n```\nExplanation: We map our input to Dukcapil\u2019s expected fields.\n\nCall Dukcapil (with timeout and logging)\n```php\npublic function curlValidDukcapil(){\n  // POST JSON to $this->URL_API with 10s timeout\n  // Measure elapsed time; capture HTTP code\n  // On timeout \u2192 friendly \u201ctry again later\u201d\n  // Always LogDukcapil::logDcp(...)\n}\n```\nExplanation: Even on errors/timeouts, we produce a friendly message and log the attempt.\n\nNormalize the response\n```php\npublic function response(){\n  return $this->mapingResponse($this->responseCurl);\n}\n```\nExplanation: Returns:\n- status: 1 \u2192 pass\n- status: 0 \u2192 {data: [messages or key-specific hints]}\n\nError code mapping\n```php\nprivate function processCode($code,$msg){\n  if($code==13) return 'NIK tidak terdapat di database Kependudukan';\n  if($code==11) return 'Data orang telah dinyatakan meninggal';\n  if($code==12) return 'Data Ditemukan, Status Data Ganda';\n  if($code==14||$code==15) return $msg;\n  return 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi';\n}\n```\nExplanation: Dukcapil\u2019s codes \u2192 clear, end-user-friendly messages.\n\nName mismatch hints\n```php\npublic $FILTER_RESPONSE=['NAMA_LGKP'=>'NAMA tidak sesuai dengan database Kependudukan'];\n```\nExplanation: If Dukcapil says \u201cTidak Sesuai\u201d for name, we show a friendlier message.\n\n---\n\n## Full logging for audits (to ES or DB)\n\nFile: models/LogDukcapil.php\n\nWrite one log per call\n```php\npublic static function logDcp($req,$res,$code,$type,$time,$lay,$info,$pid,$nik){\n  $log = new LogDukcapil();\n  $log->nik = $nik; $log->type = $type;          // VERIFNIK / DATABALIKAN\n  $log->header_code = $code; $log->execution_time = $time;\n  $log->request = json_encode($req); $log->response = json_encode($res);\n  // send to Elasticsearch; fallback save to DB\n}\n```\nExplanation:\n- We store NIK, service URI, HTTP code, elapsed time, IP, request/response.\n- If ES down, we save to table log_dukcapil.\n\nLearn more about logs in [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Data Balikan (optional postback)\n\nWhen finishing a koperasi, we can send its Pemilik Manfaat to a partner service.\n\nBuild and send\n```php\npublic static function DataBalikan($id,$model){\n  // read credential_data_balikan + token_data_balikan\n  // collect PemilikManfaat with NIK\n  // POST to partner with Authorization: Bearer <token>\n}\n```\nExplanation: The payload includes:\n- id_lembaga, nama_lembaga (from settings),\n- data: [{ NIK, param:[{ hubungan_dengan_korporasi: \"Pemilik Manfaat KOPERASI X\" }] }]\n\nPostback call (short)\n```php\npublic static function curlDataBalikan($url,$params,$token,$id,$nik){\n  // POST JSON with Authorization: Bearer <token>\n  // 10s timeout; log via LogDukcapil::logDcp(..., 'DATABALIKAN', ...)\n}\n```\nExplanation: Same robust logging applies. Failures don\u2019t crash your flow; they\u2019re recorded.\n\nModel used\n```php\nPemilikManfaat::findAll(['t_koperasi_id'=>$id]);\n```\nExplanation: We collect beneficiaries tied to this koperasi.\n\n---\n\n## Two common recipes\n\n- Validate before saving a form (web)\n  1) User fills nik + nama.\n  2) Frontend POSTs to /api/dukcapil/validasi-data (session required).\n  3) If status=1, proceed to save; if 0, show messages.\n\n- Validate inside PHP (no controller)\n```php\n$h = new \\app\\components\\HelperDukcapil(['nik'=>$nik,'nama'=>$nama]);\nif(\\app\\components\\HelperDukcapil::CheckIsActiveValidateDukcapil()){\n  $h->curlValidDukcapil();\n  $res = $h->response(); // {status, data[]}\n} else {\n  $res = \\app\\components\\HelperDukcapil::AllowValidation();\n}\n```\nExplanation: Same result structure, same behavior.\n\nBonus: Send data balikan after finalization:\n```php\n\\app\\components\\HelperDukcapil::DataBalikan($tKoperasiId, $koperasiModel);\n```\nExplanation: Fire-and-log; failures won\u2019t block your page.\n\n---\n\n## Configuration cheatsheet\n\n- Toggle\n  - kop_setting.nama = is_active_dukcapil\n  - value: 1 (on) or 0 (off)\n\n- Dukcapil credentials (JSON)\n  - kop_setting.nama = credential_dukcapil\n  - Keys: user_id, password, ip_user, treshold, url_api\n\n- Data Balikan\n  - kop_setting.nama = credential_data_balikan (JSON: id_lembaga, nama_lembaga, url_api)\n  - kop_setting.nama = token_data_balikan (string token)\n\nSecurity tips:\n- Keep tokens and passwords in settings, not in code.\n- Always use HTTPS for remote calls.\n- Don\u2019t show raw responses to end users; rely on the friendly messages provided.\n\n---\n\n## Troubleshooting\n\n- Always \u201callowed\u201d even with wrong data\n  - Check is_active_dukcapil = 1.\n\n- Timeouts or \u201ctry again later\u201d\n  - The client returns a friendly message on network timeout (10s).\n  - Check logs (ES/DB) for header_code and execution_time.\n\n- \u201cNIK tidak terdapat\u2026\u201d\n  - That\u2019s code 13 from Dukcapil. Ask user to check their NIK.\n\n- Name mismatch\n  - You\u2019ll see \u201cNAMA tidak sesuai\u2026\u201d if Dukcapil says \u201cTidak Sesuai\u201d.\n  - Confirm capitalization/spaces, then resubmit.\n\n- Where are the logs?\n  - Elasticsearch index (via ElkLoggingService) or DB table log_dukcapil.\n  - For patterns and search, see [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\nTip: If you need to generate valid NIKs for testing, revisit [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md).\n\n---\n\n## Summary and next steps\n\nYou learned how HelperDukcapil acts like an embassy counter:\n- It loads credentials, maps your inputs, calls Dukcapil, normalizes results, and logs everything with latency and HTTP codes.\n- You can toggle it on/off, and optionally send \u201cdata balikan\u201d for Pemilik Manfaat.\n\nNext, we\u2019ll see where all these logs live and how to search them: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"Centralized Logging & Audit Trail\n\". This is Chapter 8.\n\nConcept Details:\n- Name: Centralized Logging & Audit Trail\n\n- Description:\nThe system meticulously logs inbound/outbound calls, errors, timings, and user actions. A LogHelper funnels events; Log and LogDukcapil models persist records; an ELK service streams structured logs to Elasticsearch for search and dashboards. Views provide operators with filters, status coloring, and expandable details. Imagine a black box and radar combined: every request/response is captured, marked with status and execution time, and can be reviewed later for debugging, reporting, or compliance.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n---\n# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n---\n# Chapter 4: Koperasi Transaction Lifecycle Engine\n\nWelcome back! In the previous chapter, you built pages safely with the web shell and the session guard: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md). Now we\u2019ll go to the business \u201cfactory floor\u201d where koperasi transactions are processed end-to-end.\n\nThink of this engine as an assembly line:\n- Intake: accept and parse incoming payloads (often XML from ODS).\n- Assemble: validate and map data into our models; persist safely.\n- Finish: issue SK/SP numbers, update related records, and close the loop.\n\nBy the end of this chapter, you\u2019ll understand this flow and run a simple Pendirian transaction from XML all the way to finalized SK.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS sends a \u201cPendirian\u201d transaction:\n1) ODS authenticates with JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n2) ODS POSTs XML to /api/transaksi/insert with AuthJWT header.\n3) Our engine parses the XML, validates \u201cpesan nama,\u201d saves the transaction, and, when finalized, issues an SK number and updates references.\n\n---\n\n## Why this engine exists (beginner-friendly)\n\nWithout an engine, each endpoint would:\n- parse XML in different ways,\n- directly touch many tables,\n- and duplicate rules for finalization.\n\nThe Transaction Lifecycle Engine centralizes this in helpers so controllers stay tiny and the process is consistent and auditable. It reduces mistakes and makes maintenance easier.\n\n---\n\n## The factory line: three stations\n\n- Intake (Controller)\n  - Checks method/headers and JWT.\n  - Parses XML to a friendly array.\n  - Passes clean data into business helpers.\n\n- Assemble (TransaksiHelper)\n  - Validates business rules (e.g., \u201cpesan nama\u201d availability).\n  - Maps fields into TransaksiKoperasi and related models.\n  - Saves and returns IDs and statuses.\n\n- Finish (SKHelper)\n  - Issues SK/SP numbers.\n  - Toggles \u201cpesan nama\u201d (used \u2192 closed).\n  - Updates MasterTransaction and related references.\n\n---\n\n## Who does what (key actors)\n\n- TransaksiController (intake)\n  - File: modules/Api/controllers/TransaksiController.php\n  - Receives ODS calls (insert/update/edit), logs, and returns standard responses.\n  - Uses JWT and Content-Type checks from earlier chapters:\n    - [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n- TransaksiHelper (assemble)\n  - File: modules/Api/components/TransaksiHelper.php\n  - Maps the payload to our data models and enforces business rules.\n\n- SKHelper (finish)\n  - File: modules/Api/components/SKHelper.php\n  - Generates SK/SP numbers, flips \u201cpesan nama,\u201d updates master records.\n\n- Core data models (assembly parts)\n  - TransaksiKoperasi: main transaction record.\n  - MasterTransaction: ties a koperasi\u2019s transactions together.\n  - PesanNama: reservation of koperasi name.\n  - SK: stores SK/SP numbers.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant ODS as ODS Client\n  participant CTRL as TransaksiController\n  participant TH as TransaksiHelper\n  participant SKH as SKHelper\n  participant DB as DB\n\n  ODS->>CTRL: POST /api/transaksi/insert (XML + JWT)\n  CTRL->>TH: createTrans(parsedData)\n  TH->>DB: save transaksi + related data\n  TH-->>CTRL: {status, id}\n  CTRL->>SKH: pushPerubahan(id) when finalize\n  SKH->>DB: issue SK/SP + update master + pesan nama\n```\n\nNote: \u201cpushPerubahan\u201d is used broadly for finalization steps (both pendirian/perubahan scenarios). You\u2019ll see how it decides what to do.\n\n---\n\n## Try it end-to-end (recap)\n\n1) Get a JWT (from earlier):\n- Endpoint: POST /api/auth/login-jwt\n- See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nExpected short response:\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nBehind the scenes, the engine parsed your XML, validated, saved, and logged. For the logging pattern, see: [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Station 1: Intake (Controller)\n\nMinimal shape inside TransaksiController:\n```php\n// modules/Api/controllers/TransaksiController.php\npublic function actionInsert(){\n  $headers = Yii::$app->request->headers;\n  $xml = Yii::$app->request->rawBody; // XML payload\n  $data = ApiHelper::xmlToArray($xml); // parse\n  $this->verifyJwt($headers); // AuthJWT: Bearer {token}\n  return $this->handleCreate($data); // pass to helper\n}\n```\nExplanation:\n- The controller keeps logic small: parse \u2192 verify JWT \u2192 delegate.\n- It doesn\u2019t know business details\u2014those live in helpers.\n\nConsistent response + logging:\n```php\nprivate function handleCreate($data){\n  $res = TransaksiHelper::createTrans($data);\n  return $this->responseAndSaveLog([\n    'response' => $this->formatRes($res),\n    'request'  => $data\n  ], 'JSON');\n}\n```\nExplanation:\n- Whatever happens, we log the same way and return a standard shape.\n\n---\n\n## Station 2: Assemble (TransaksiHelper)\n\nCreate or update a transaction:\n```php\n// modules/Api/components/TransaksiHelper.php\npublic static function createTrans($data){\n  if(!$data) return ['status'=>false,'info'=>'Data kosong'];\n  $nik = $data['data']['nik'] ?? null;\n  if(!$nik) return ['status'=>false,'info'=>'NIK tidak ditemukan'];\n  return self::mapAndSave($data); // validate + persist\n}\n```\nExplanation:\n- Early guardrails (is data present? does it have NIK?).\n- Pass to a dedicated mapper/persister.\n\nMapping essentials (super simplified):\n```php\nprivate static function mapAndSave($data){\n  $m = new TransaksiKoperasi();\n  $m->attributes = self::mapFields($data); // field-by-field mapping\n  if(!self::validatePesanNama($m)) return ['status'=>false,'info'=>'Pesan nama invalid'];\n  return $m->save() ? ['status'=>true,'id'=>$m->id] : ['status'=>false,'info'=>'Save gagal'];\n}\n```\nExplanation:\n- Put business checks (like \u201cpesan nama\u201d) before saving.\n- Keep mapping logic in small functions so it\u2019s testable.\n\n\u201cPesan nama\u201d check (idea):\n```php\nprivate static function validatePesanNama($m){\n  $cek = TransaksiKoperasi::checkPendirian($m);\n  return empty($cek['status']); // if checks ok \u2192 true\n}\n```\nExplanation:\n- Centralize \u201cpendirian/perubahan\u201d rules on the model side.\n\nTip: If you generate or use NIK based on wilayah, see: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Station 3: Finish (SKHelper)\n\nWhen a transaction is ready to be finalized (issue SK/SP, close name reservation), the controller calls SKHelper. Minimal shape:\n\n```php\n// modules/Api/components/SKHelper.php\npublic static function pushPerubahan($id){\n  $t = TransaksiKoperasi::findOne($id);\n  if($t->is_finish == -1){ $t->is_finish = 0; return $t->save(false,['is_finish']); }\n  $sk = self::generateSurat(self::groupOfChanges($id), $t);\n  self::maybeChangePesanNama($t);\n  self::linkToMaster($t, $sk);\n  return self::finalize($t);\n}\n```\nExplanation:\n- If it\u2019s still a draft, move to \u201cassembled\u201d (is_finish 0).\n- Otherwise, issue SK/SP and finish (is_finish 1), update master and \u201cpesan nama\u201d.\n\nIssue SK/SP (simplified):\n```php\nprivate static function generateSurat($group, $t){\n  $sk = SK::find()->where(['t_koperasi_id'=>$t->id])->one() ?? new SK();\n  $sk->t_koperasi_id = $t->id;\n  $sk->no_sk_koperasi = Numbering::getCounter(...)->generateSKPerubahan();\n  $sk->no_sp_koperasi = Numbering::getCounter(...)->generateSKPelaporan();\n  $sk->save(false);\n  return $sk;\n}\n```\nExplanation:\n- Uses the centralized numbering system to generate SK/SP.\n- We\u2019ll deep dive into numbering next chapter: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nToggle \u201cpesan nama\u201d on name change:\n```php\nprivate static function maybeChangePesanNama($t){\n  // mark new name as used\n  PesanNama::updateAll(['status'=>1], ['id'=>$t->t_pesan_nama_id]);\n  // soft-delete old name from previous transaction\n  $prev = TransaksiKoperasi::findLastTransaction(1, $t->id_master);\n  PesanNama::updateAll(['is_deleted'=>1], ['id'=>$prev['t_pesan_nama_id'] ?? 0]);\n}\n```\nExplanation:\n- Keeps name reservation lifecycle correct: new name \u201cused,\u201d old name \u201cclosed.\u201d\n\nFinalize flags:\n```php\nprivate static function finalize($t){\n  $t->is_finish = 1;\n  $t->tanggal_confirm = date('Y-m-d H:i:s');\n  return $t->save(false,['is_finish','tanggal_confirm']);\n}\n```\nExplanation:\n- One place to switch a transaction to \u201cfinished.\u201d\n\n---\n\n## Inputs and outputs (what you send, what you get)\n\n- Input (example XML, minimum idea):\n```xml\n<root>\n  <data>\n    <koperasi>\n      <nik>1234567890123456</nik>\n      <!-- other mapped fields -->\n    </koperasi>\n  </data>\n</root>\n```\n- Output (standard, short):\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nIf something fails (format/auth/business rules), you\u2019ll get predictable codes. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Lifecycle states at a glance\n\n- Draft: is_finish = -1 (early staging, not ready)\n- Assembled: is_finish = 0 (validated/mapped, not yet issued)\n- Finalized: is_finish = 1 (SK/SP issued, references updated)\n\nThe engine moves transactions through these states via helpers, not manually sprinkled across controllers.\n\n---\n\n## Two common recipes\n\n- Insert \u201cPendirian\u201d and save draft\n  1) POST XML to /api/transaksi/insert (with JWT).\n  2) Controller parses and calls TransaksiHelper::createTrans.\n  3) You get a success response with saved state (often draft/assembled).\n\n- Finalize and issue SK\n  1) Call the finalize endpoint or business action triggering SKHelper::pushPerubahan.\n  2) SKHelper issues SK/SP, toggles \u201cpesan nama,\u201d updates MasterTransaction.\n  3) Transaction moves to is_finish = 1.\n\nNumbering details for SK/SP are covered next: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\n---\n\n## What happens under the hood (step-by-step)\n\n1) Controller checks method/headers/JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)  \n2) XML \u2192 array conversion (shape normalized).  \n3) TransaksiHelper validates business rules, maps fields, and saves models.  \n4) When finalizing, SKHelper generates SK/SP, updates \u201cpesan nama\u201d and master links.  \n5) Controller returns a consistent response and logs everything. See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Where to look in the code (quick map)\n\n- Controller intake:\n  - modules/Api/controllers/TransaksiController.php\n- Assemble logic:\n  - modules/Api/components/TransaksiHelper.php\n- Finalize logic:\n  - modules/Api/components/SKHelper.php\n- Models (data parts):\n  - models/TransaksiKoperasi.php\n  - models/MasterTransaction.php\n  - models/PesanNama.php\n  - models/SK.php\n\nTip: If you need wilayah or NIK generation details, jump to: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cFormat\u201d errors? Check Content-Type and XML shape. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- \u201cAuth\u201d errors? Ensure AuthJWT: Bearer {token}. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n- \u201cBusiness\u201d errors? Often related to \u201cpesan nama,\u201d missing fields, or invalid transitions.\n- \u201cSK\u201d not created? Ensure you triggered finalization (SKHelper) and see next chapter for numbering.\n\n---\n\n## Wrap-up and what\u2019s next\n\nYou learned how koperasi requests move through the factory line: Controller intake \u2192 TransaksiHelper assembly \u2192 SKHelper finish. You saw how \u201cpesan nama\u201d and MasterTransaction are updated when finalizing.\n\nNext, we\u2019ll zoom in on how SK and SP numbers are generated and tracked: [SK and Numbering System](05_sk_and_numbering_system_.md)\n---\n# Chapter 5: SK and Numbering System\n\nIn the last chapter, you saw how a transaction moves from intake to \u201cfinalized\u201d: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md). This chapter zooms into the final step: assigning official SK/SP numbers safely and consistently.\n\nThink of it like a ticket dispenser at a service counter:\n- pick the right series (SK vs SP),\n- increment the correct counter (per year),\n- then stamp the number back onto the transaction and the PDF view.\n\nThat\u2019s exactly what the \u201cSK and Numbering System\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA transaction (pendirian or perubahan) is ready to be finalized. We need to:\n1) Generate an official number (SK and/or SP) using the correct pattern.\n2) Ensure uniqueness and ordering, even under heavy load.\n3) Save the numbers and update related records so PDFs and views display them.\n\nYou\u2019ll learn how to trigger this finalization and where the numbers come from.\n\n---\n\n## Why this layer exists\n\nWithout a centralized numbering system:\n- two requests could accidentally get the same number,\n- different modules might format numbers differently,\n- fixing numbering bugs would be scattered and risky.\n\nBy centralizing to SKHelper (when to assign) and helper/Numbering (how to assign), the app guarantees consistent, collision-free sequences.\n\n---\n\n## Key concepts (in plain words)\n\n- SK vs SP\n  - SK: Keputusan (decision), e.g., SK Pendirian, SK Perubahan.\n  - SP: Surat Penerimaan (ack letter), e.g., SP Pelaporan (for some perubahan).\n\n- Series and patterns\n  - Each document type has its series code and pattern, for example:\n    - SK Perubahan \u2192 AH.01.38\n    - SP Pelaporan \u2192 AH.01.39\n    - SK Pembubaran \u2192 AH.01.40\n  - Final shape: AHU-0000123.AH.01.38.TAHUN 2025\n\n- Counters are per year\n  - The counter resets each year (stored in table counting via model Counter).\n  - Identified by id_aksi or keterangan (description).\n\n- Two-layer responsibility\n  - SKHelper: decides the right moment, persists SK/SP, updates related entities (PesanNama, MasterTransaction).\n  - Numbering: holds the lock, increments the counter, and formats the number string.\n\n---\n\n## Quick start: finalize a transaction and get its SK\n\nCall SKHelper when your business flow says \u201cfinalize now.\u201d\n\nExample (from an admin action or job):\n\n```php\nuse app\\modules\\Api\\components\\SKHelper;\n\n$ok = SKHelper::pushPerubahan($transaksiId);\n```\n\nExplanation:\n- pushPerubahan handles both \u201cfirst finalize\u201d and \u201calready assembled\u201d flows.\n- It will create SK/SP if needed, update flags, and compute tanggal_confirm.\n\nRead back the saved numbers:\n\n```php\nuse app\\models\\SK;\n\n$sk = SK::find()->where(['t_koperasi_id' => $transaksiId])->one();\necho $sk->no_sk_koperasi; // e.g., AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- After finalization, SK is stored and linked by t_koperasi_id.\n\n---\n\n## What gets updated on finalization\n\n- Transaction flags\n  - is_finish set to 1, tanggal_confirm set, and (optionally) tanggal_jangka_waktu updated.\n\n- SK/SP creation\n  - A row in sk table holds no_sk_koperasi and no_sp_koperasi.\n\n- Related entities\n  - PesanNama: new name marked used; previous reservation soft-deleted (when name changed).\n  - MasterTransaction: linked to the final transaksi and SK.\n  - Penggabungan: sets is_gabung for merged koperasi (if applicable).\n\nYou don\u2019t have to do these manually\u2014SKHelper wraps it for you.\n\n---\n\n## How the number is generated (the friendly version)\n\n- Numbering gets a lock, reads the current counter for this year and series, increments it, then releases the lock.\n- It then formats a string like AHU-0000123.AH.01.38.TAHUN 2025 depending on the chosen document type.\n- By doing it in one place (with a DB lock), we avoid duplicates under concurrency.\n\nMinimal example:\n\n```php\nuse app\\components\\helper\\Numbering;\n\n$n = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'], 7);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- getCounter picks a row in counting for the current year, increments it, and returns a helper instance to format the final string.\n\n---\n\n## Under the hood (step-by-step)\n\n1) Controller/business code calls SKHelper::pushPerubahan($id).\n2) SKHelper decides if we\u2019re assembling (is_finish -1 \u2192 0) or finalizing (0 \u2192 1).\n3) If finalizing, SKHelper calls generateSurat to:\n   - pick the series (SK and/or SP),\n   - ask Numbering for the next number,\n   - save numbers in sk table.\n4) SKHelper toggles PesanNama and updates MasterTransaction.\n5) Transaction is marked finalized.\n\nA tiny picture:\n\n```mermaid\nsequenceDiagram\n  participant CTRL as Controller\n  participant SKH as SKHelper\n  participant NUM as Numbering\n  participant DB as Database\n\n  CTRL->>SKH: pushPerubahan(id)\n  SKH->>NUM: getCounter(...)+generate(...)\n  NUM->>DB: LOCK, read+increment, UNLOCK\n  SKH->>DB: save SK/SP + update refs\n  SKH-->>CTRL: done\n```\n\n---\n\n## Important files (small guided tour)\n\n- SK model\n  - File: models/SK.php\n  - Holds constants and relations, e.g., SK::SK_PENDIRIAN, SK::SK_PERUBAHAN.\n\n- SKHelper (the orchestrator)\n  - File: modules/Api/components/SKHelper.php\n  - Method pushPerubahan($id) moves status and issues numbers.\n\n- Numbering (the engine)\n  - File: components/helper/Numbering.php\n  - getCounter(...) manages safe increment and format helpers like generateSKPerubahan().\n\n- SK/SP Views (where the number is shown)\n  - views/pendirian/sk_pendirian.php\n  - views/perubahan/sk_perubahan.php\n  - views/perubahan/sp_pelaporan.php\n\n---\n\n## A closer look at SKHelper\n\nSet statuses and generate letters:\n\n```php\n// modules/Api/components/SKHelper.php\nif ($transaksi->is_finish == -1) {\n  $transaksi->is_finish = 0; // assembled\n} else {\n  $transaksi->is_finish = 1; // final\n  $SKins = self::generateSurat($group, $transaksi);\n}\n```\n\nExplanation:\n- First run may just assemble; final run creates SK/SP numbers and persists them.\n\nChoose SK/SP and persist:\n\n```php\n// modules/Api/components/SKHelper.php\n$sk = new \\app\\models\\SK();\n$sk->t_koperasi_id = $transaksi->id;\n$sk->no_sk_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPerubahan();\n$sk->no_sp_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPelaporan();\n$sk->save(false);\n```\n\nExplanation:\n- For some changes, both SK and SP are issued; for others, only one. The helper decides based on \u201cgroup\u201d of perubahan.\n\nUpdate related references:\n\n```php\n// modules/Api/components/SKHelper.php\n\\app\\models\\MasterTransaction::updateAll(\n  ['id_transaksi'=>$transaksi->id, 'id_sk'=>$sk->id],\n  ['id'=>$transaksi->id_master]\n);\n```\n\nExplanation:\n- MasterTransaction knows which finalized transaction and SK belongs to the koperasi.\n\n---\n\n## A closer look at Numbering\n\nLock, increment, release:\n\n```php\n// components/helper/Numbering.php\nYii::$app->db_koperasi->createCommand('LOCK TABLES `counting` WRITE')->execute();\n// find or create row for this year+series, then increment\nYii::$app->db_koperasi->createCommand('UNLOCK TABLES')->execute();\n```\n\nExplanation:\n- The lock prevents two requests from grabbing the same number.\n\nPick series and format:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PERUBAHAN], 7);\n$no = $n->generateSKPerubahan(); // AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- Choose the right generator for the document type:\n  - generateSKPendirian() \u2192 AH.01.29\n  - generateSKPerubahan() \u2192 AH.01.38\n  - generateSKPelaporan() \u2192 AH.01.39\n  - generateSKPembubaran() \u2192 AH.01.40\n\nPreview without increment (for tests):\n\n```php\n// noupdate=true means \"don\u2019t bump the DB counter\"\n$n = Numbering::getCounter(['description'=>'sk_pendirian'], 7, true);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- Useful for dry-runs; never use in real finalization.\n\n---\n\n## Showing the number in a PDF view\n\nPass values from your controller:\n\n```php\n$sk = \\app\\models\\SK::find()->where(['t_koperasi_id'=>$id])->one();\nreturn $this->render('sk_perubahan', ['number'=>$sk->no_sk_koperasi]);\n```\n\nIn the view (already prepared in repo):\n\n```php\n<p>NOMOR <?= $number ?></p>\n```\n\nExplanation:\n- The view templates read variables like $number and display them in the SK/SP body.\n\n---\n\n## Adding a new series (example: SK Pembubaran)\n\n- Use existing generator:\n  - Numbering::generateSKPembubaran() \u2192 AH.01.40\n\nMinimal usage:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PEMBUBARAN], 7);\necho $n->generateSKPembubaran();\n```\n\nExplanation:\n- If you introduce a new document type, map an id/description pair and pick the right generator.\n\n---\n\n## Best practices and common pitfalls\n\n- Generate once, persist forever\n  - Never \u201crecompute\u201d numbers; always store and reuse.\n\n- Let SKHelper orchestrate\n  - Don\u2019t call Numbering directly from random places. Keep numbering centralized for consistency.\n\n- Concurrency safe by default\n  - The DB lock avoids duplicates. If you ever see duplicates, investigate logs:\n    - See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n- Trigger from verified flows\n  - Finalization endpoints are protected:\n    - See auth details in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n    - See endpoint flow in: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n- Test with noupdate\n  - Use Numbering::getCounter(..., ..., true) to preview formats without consuming counters in dev.\n\n---\n\n## Summary\n\nYou learned:\n- What SK and SP are, and why numbering needs to be centralized and safe.\n- How SKHelper decides when to assign numbers and updates related entities.\n- How Numbering locks, increments, and formats numbers consistently (per year).\n- How to finalize a transaction and see the numbers in SK/SP PDFs.\n\nNext, we\u2019ll move to identity and geography foundations that many flows depend on: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n---\n# Chapter 6: Wilayah & NIK Base Management\n\nComing from [SK and Numbering System](05_sk_and_numbering_system_.md), you learned how we safely mint SK/SP numbers. This chapter explains the foundation that many flows rely on: regional (wilayah) data and how we derive consistent NIKs from it.\n\nThink of it as:\n- An address book: provinsi \u2192 kabupaten \u2192 kecamatan \u2192 kelurahan.\n- A serial-number engraver: given a wilayah-based prefix, it mints unique, sequential NIKs.\n\nWe\u2019ll keep it beginner-friendly and solve one practical use case end-to-end.\n\n---\n\n## The use case we\u2019ll solve\n\nA user fills a form:\n1) They pick Provinsi \u2192 Kabupaten \u2192 Kecamatan \u2192 Kelurahan using dependent dropdowns.\n2) The system builds a wilayah-based prefix (base).\n3) The system generates a unique NIK: base + 3-digit counter, safely inside a DB transaction.\n\nYou\u2019ll learn how to:\n- Load child wilayah via AJAX.\n- Compose the base using our ODS mirror table.\n- Generate a sequential NIK with BaseNik.\n\n---\n\n## Key concepts (in plain words)\n\n- Wilayah hierarchy (address book)\n  - A tree: Provinsi \u2192 Kabupaten/Kota \u2192 Kecamatan \u2192 Kelurahan.\n  - Models and queries live in models/Wilayah.php (source) and models/WilayahOds.php (ODS mirror).\n\n- Dependent dropdowns (AJAX helper)\n  - Endpoint: GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Returns JSON of child wilayah for the next dropdown.\n\n- ODS mirror table (shortcut to codes)\n  - Table: kop_m_wilayah_ods stores standardized IDs per level.\n  - You can reconstruct a \u201cfull code\u201d by concatenating those IDs.\n\n- BaseNik (serial engraver)\n  - Table: kop_base_nik tracks prefix and a counter.\n  - Function: BaseNik::generateNik('PREFIX') \u2192 'PREFIX' + '001', '002', ...\n  - Wrapped in a transaction to avoid duplicates.\n\nTip: For gateway behavior, headers, and logging, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Try it: Dependent dropdowns in 2 calls\n\n1) Get Kabupaten of a Provinsi (example: id=31)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=31&tipe=Kabupaten\"\n```\n- Output: JSON array like [{ \"id\":\"3171\", \"nama\":\"KOTA JAKARTA SELATAN\" }, ...]\n\n2) Get Kecamatan of that Kabupaten (example: id=3171)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan\"\n```\n- Output: JSON array like [{ \"id\":\"3171050\", \"nama\":\"KEBAYORAN BARU\" }, ...]\n\nFor Kelurahan, use tipe=Kelurahan and pass kecamatan\u2019s id. The JSON shape keys differ slightly for kelurahan but the controller normalizes them to id and nama.\n\nMinimal JS fetch to fill a <select>:\n```js\nfetch('/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan',\n  { headers: { 'X-Requested-With': 'XMLHttpRequest' } })\n  .then(r => r.json()).then(rows => {\n    // rows: [{id:'...', nama:'...'}, ...]\n  });\n```\nExplanation: Always send X-Requested-With so the endpoint knows it\u2019s an AJAX request.\n\n---\n\n## Compose a wilayah-based base (prefix)\n\nOption A: You already have the kelurahan\u2019s internal ID (wilayah_kelurahan_id).\n```php\nuse app\\models\\WilayahOds;\n\n$base = WilayahOds::getKodeWilayah($kelId);\n// returns \"id_provinsi . id_kabupaten . id_kecamatan . id_kelurahan\" or null\n```\nExplanation: This concatenates 4 level codes from our ODS mirror.\n\nOption B: You have names (Provinsi/Kabupaten/Kelurahan). Clean and resolve IDs:\n```php\nuse app\\models\\BaseNik;\n\n$prov = BaseNik::cleanWilayahName('PROVINSI DKI JAKARTA');\n$ids  = BaseNik::getWilayahIds($prov, 'Jakarta Selatan', 'Gandaria Selatan');\n```\nExplanation: cleanWilayahName strips words like PROVINSI/KABUPATEN, then getWilayahIds tries to find matching ID set.\n\nBuild the base (from Option B):\n```php\n$base = $ids\n  ? $ids['id_provinsi'].$ids['id_kabupaten'].$ids['id_kecamatan'].$ids['id_kelurahan']\n  : null;\n```\nExplanation: Concatenate four parts. If null, verify your names.\n\n---\n\n## Generate a unique NIK (safe and sequential)\n\nOnce you have base, mint a NIK:\n```php\nuse app\\models\\BaseNik;\n\n$nik = $base ? BaseNik::generateNik($base) : false;\n```\n- If success: \"base\" + \"001\" (zero-padded to 3 digits).\n- If repeated calls with the same base: \"002\", \"003\", etc.\n- If false: check DB connection, base length, or table existence.\n\nExample:\n- base = 3171310101 (example only)\n- NIKs: 3171310101001, 3171310101002, 3171310101003\n\nNote: BaseNik::generateNik runs inside a DB transaction so two concurrent requests won\u2019t get the same number.\n\n---\n\n## What happens behind the scenes (simple picture)\n\nWilayah AJAX:\n```mermaid\nsequenceDiagram\n  participant UI as Browser\n  participant CTRL as WilayahController\n  participant W as Wilayah Model\n  participant DB as DB\n\n  UI->>CTRL: GET get-child-wilayah?id&tipe\n  CTRL->>W: getChildWilayah(parent, tipe)\n  W->>DB: Query children by tipe\n  CTRL-->>UI: JSON [{id, nama}, ...]\n```\n\nNIK generation:\n```mermaid\nsequenceDiagram\n  participant App\n  participant BN as BaseNik\n  participant DB as DB\n\n  App->>BN: generateNik(base)\n  BN->>DB: beginTransaction + read/update counter\n  DB-->>BN: new count\n  BN-->>App: base + zeroPadded(count)\n```\n\n---\n\n## Inside the code (gentle tour)\n\n1) WilayahController (AJAX endpoint)\n```php\n// modules/Api/controllers/WilayahController.php\npublic function actionGetChildWilayah($id, $tipe){\n  if(!$id || !Yii::$app->request->isAjax){\n    return json_encode([['id'=>'0','nama'=>'Tidak Ditemukan']]);\n  }\n  $data = \\app\\models\\Wilayah::getChildWilayah($id, $tipe);\n  // map records -> [{id, nama}]\n  // special: tipe 'Kelurahan' uses different fields\n  // return json\n}\n```\nExplanation: Validates it\u2019s AJAX, fetches child rows, normalizes to id/nama.\n\n2) Wilayah model (queries by type)\n```php\n// models/Wilayah.php\npublic static function getChildWilayah($parent, $tipe){\n  if($tipe != 'Kelurahan'){\n    return self::find()->where(['PARENT_ID'=>$parent,'TIPE'=>$tipe])\n      ->orderBy('NAMA')->all();\n  }\n  return \\app\\models\\bakum\\WilayahSABH::find()\n    ->where(['ID_WILAYAH_M'=>$parent])->orderBy('NM_KELURAHAN')->all();\n}\n```\nExplanation: Kelurahan data comes from a different table (WilayahSABH).\n\n3) WilayahOds model (codes and reverse lookup)\n```php\n// models/WilayahOds.php\npublic static function getKodeWilayah($kelId){\n  $row = self::find()->where(['wilayah_kelurahan_id'=>$kelId])->one();\n  return $row ? $row->id_provinsi.$row->id_kabupaten.$row->id_kecamatan.$row->id_kelurahan : null;\n}\n```\nExplanation: Concatenates standardized IDs to form the base.\n\n4) BaseNik model (atomic counter)\n```php\n// models/BaseNik.php\npublic static function generateNik($base){\n  $tx = self::getDb()->beginTransaction();\n  try {\n    $row = self::findOne(['base'=>$base]);\n    if($row){ $row->count += 1; $row->save(); }\n    else { $row = new self(); $row->base=$base; $row->count=1; $row->save(); }\n    $tx->commit();\n    return $base . sprintf('%03d', $row->count);\n  } catch (\\Throwable $e){\n    $tx->rollBack(); return false;\n  }\n}\n```\nExplanation: Transaction ensures the count is updated safely. Returns base + 3-digit suffix.\n\nHelper: cleaning names and looking up IDs\n```php\n// models/BaseNik.php\npublic static function cleanWilayahName($name){\n  return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i','',$name));\n}\n```\nExplanation: Removes prefixes like \u201cPROVINSI\u201d so searches match the stored values.\n\n---\n\n## Putting it together (mini recipe)\n\n- On the form:\n  - Load Provinsi once (static).\n  - When Provinsi changes, call get-child-wilayah for Kabupaten.\n  - When Kabupaten changes, call get-child-wilayah for Kecamatan.\n  - When Kecamatan changes, call get-child-wilayah for Kelurahan.\n\n- On submit:\n  - Resolve base:\n    - If you kept wilayah_kelurahan_id, use WilayahOds::getKodeWilayah($kelId).\n    - If you have names, clean and resolve IDs, then concatenate.\n  - Generate NIK: BaseNik::generateNik($base).\n  - Save the record with the generated NIK.\n\nIf this is part of an API flow, remember the gateway rules from [API Gateway & Endpoints](01_api_gateway___endpoints_.md), and protect calls with JWT as needed from [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Best practices\n\n- Always send X-Requested-With: XMLHttpRequest for wilayah AJAX.\n- Validate tipe strictly: Kabupaten, Kecamatan, Kelurahan.\n- Do not craft NIK manually\u2014always call BaseNik::generateNik inside the save flow.\n- Base length: keep base short enough to fit model constraints (BaseNik.base max 10 chars).\n- High concurrency? The current transaction approach is safe for typical loads. Under very heavy load, consider explicit row locking (SELECT ... FOR UPDATE).\n\n---\n\n## Troubleshooting\n\n- Dropdown returns \u201cTidak Ditemukan\u201d:\n  - Check the id and tipe chain is correct.\n  - Ensure it\u2019s an AJAX request.\n  - For Kelurahan, confirm the parent is a valid kecamatan id.\n\n- NIK generation returns false:\n  - base is null or too long.\n  - The kop_base_nik table or DB connection isn\u2019t available.\n  - Check application logs for exception messages.\n\n- Name-based lookup fails:\n  - Use cleanWilayahName to strip titles.\n  - Provide more specific names (the lookup uses partial matches for kabupaten/kelurahan).\n  - Try resolving via kelurahan id if possible.\n\nFor how failures are logged and surfaced, see: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Wrap-up and next steps\n\nYou learned how wilayah data powers dependent dropdowns and how we derive a stable wilayah-based prefix to generate unique NIKs safely. This \u201caddress book + serial engraver\u201d provides reliable foundations for identity-related flows.\n\nNext, we\u2019ll validate those identities against the national service: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n---\n# Chapter 7: Dukcapil Identity Verification Client\n\nComing from [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md), you now know how we build NIKs consistently. Next, we\u2019ll validate those identities against the national service. Meet our \u201cembassy counter\u201d: the Dukcapil Identity Verification Client.\n\nThink of an embassy window:\n- You submit an ID (NIK) and full name.\n- The officer checks it against the master record.\n- You get a \u201cstamp\u201d (match or not), and the visit is recorded for audits.\n\nThat\u2019s exactly what HelperDukcapil does\u2014simple, consistent, and fully logged.\n\n---\n\n## What problem does this solve?\n\nUse case: Before finalizing a koperasi transaction, we must confirm a person\u2019s identity with Dukcapil:\n1) A user enters NIK and full name.\n2) We call Dukcapil via a dedicated client (HelperDukcapil).\n3) We normalize the response into friendly messages.\n4) We log every call (HTTP code, latency, request, response) for audits.\n5) Optionally, we send \u201cdata balikan\u201d back for Pemilik Manfaat.\n\nIf Dukcapil is temporarily disabled (maintenance, sandbox), we can toggle validation off so screens still move forward safely.\n\n---\n\n## Key concepts (plain and friendly)\n\n- Dedicated client (HelperDukcapil)\n  - Loads credentials and base URL from settings.\n  - Maps inputs (USER_ID, PASSWORD, IP_USER, TRESHOLD, NIK, NAMA_LGKP).\n  - Sends one POST to Dukcapil; normalizes and returns a simple result.\n\n- Toggle on/off\n  - A setting flag decides whether to call Dukcapil or instantly \u201callow\u201d validation.\n\n- Friendly error messages\n  - Converts raw codes into human-readable messages (e.g., \u201cNIK tidak ditemukan\u201d).\n\n- Full logging\n  - Logs request/response, HTTP status, latency, and more into Elasticsearch or DB for traceability.\n\n- Data Balikan\n  - Optional postback of Pemilik Manfaat data to a partner service with a Bearer token.\n\nTip: If you\u2019re calling from an API route, revisit the \u201cfront desk\u201d rules in [API Gateway & Endpoints](01_api_gateway___endpoints_.md). If you need tokens for protected APIs, see [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Quick start: Validate NIK + Name in 3 steps\n\nPrerequisites:\n- You\u2019re logged into the web app (this endpoint needs a session).\n- Settings are filled:\n  - credential_dukcapil (JSON)\n  - is_active_dukcapil (1 or 0)\n\n1) Turn validation on\n```sql\n-- kop_setting\n-- nama: is_active_dukcapil, value: 1\n```\nExplanation: With \u201c1\u201d, we call Dukcapil. With \u201c0\u201d, we instantly allow.\n\n2) Configure credentials (example shape)\n```json\n{\n  \"user_id\": \"your-user\",\n  \"password\": \"your-pass\",\n  \"ip_user\": \"1.2.3.4\",\n  \"treshold\": \"85\",\n  \"url_api\": \"https://dukcapil.service/verify\"\n}\n```\nExplanation: Save this JSON under kop_setting.nama = credential_dukcapil.\n\n3) From a logged-in browser, POST your form\n```js\nfetch('/api/dukcapil/validasi-data', {\n  method: 'POST',\n  body: new URLSearchParams({ nik:'1234567890123456', nama:'BUDI SANTOSO' })\n}).then(r=>r.json()).then(console.log);\n```\nExpected success (match):\n```json\n{ \"status\": 1, \"data\": [] }\n```\nExpected failure (mismatch/issue):\n```json\n{ \"status\": 0, \"data\": [\"NIK tidak terdapat di database Kependudukan\"] }\n```\nExplanation: status=1 means \u201cvalidated\u201d. status=0 contains friendly messages. All calls are logged with HTTP code and elapsed time.\n\n---\n\n## How it works (small picture)\n\n```mermaid\nsequenceDiagram\n  participant UI as Web UI\n  participant DC as DukcapilController\n  participant HD as HelperDukcapil\n  participant DCP as Dukcapil API\n  participant LG as LogDukcapil\n\n  UI->>DC: POST nik, nama\n  DC->>HD: new HelperDukcapil($_POST)\n  HD->>DCP: POST credential + NIK+Nama\n  DCP-->>HD: JSON result + HTTP code\n  HD->>LG: log request/response+latency\n  DC-->>UI: {status, data[]}\n```\n\nAnalogy: The controller is the receptionist, HelperDukcapil is the embassy officer, and LogDukcapil is the CCTV + ledger.\n\n---\n\n## The endpoint you call\n\nFile: modules/Api/controllers/DukcapilController.php\n\n```php\npublic function actionValidasiData(){\n  if(Yii::$app->user->isGuest){ return $this->redirect(['/']); }\n  if(HelperDukcapil::CheckIsActiveValidateDukcapil()){\n    $h = new HelperDukcapil($_POST);\n    $h->curlValidDukcapil();\n    return $this->asJson($h->response());\n  }\n  return $this->asJson(HelperDukcapil::AllowValidation());\n}\n```\nExplanation:\n- Requires a logged-in web session.\n- If active, calls Dukcapil; if not, returns \u201callowed\u201d immediately.\n\nTip: For machine-to-machine flows, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and secure with JWT in [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Inside HelperDukcapil (the embassy officer)\n\nLoad credentials from settings\n```php\nprotected function getConfigDukcapil(){\n  $row = Yii::$app->db_koperasi\n    ->createCommand(\"SELECT value FROM kop_setting WHERE nama='credential_dukcapil'\")\n    ->queryOne();\n  // parse JSON \u2192 fill USER_ID, PASSWORD, IP_USER, TRESHOLD, URL_API\n}\n```\nExplanation: Everything is centrally configured; no hardcoded secrets.\n\nPrepare the request payload\n```php\npublic function mappingDataDukcapil(){\n  return json_encode([\n    'USER_ID'=>$this->USER_ID, 'PASSWORD'=>$this->PASSWORD,\n    'IP_USER'=>$this->IP_USER, 'TRESHOLD'=>$this->TRESHOLD,\n    'NIK'=>$this->NIK, 'NAMA_LGKP'=>$this->NAMA_LGKP\n  ]);\n}\n```\nExplanation: We map our input to Dukcapil\u2019s expected fields.\n\nCall Dukcapil (with timeout and logging)\n```php\npublic function curlValidDukcapil(){\n  // POST JSON to $this->URL_API with 10s timeout\n  // Measure elapsed time; capture HTTP code\n  // On timeout \u2192 friendly \u201ctry again later\u201d\n  // Always LogDukcapil::logDcp(...)\n}\n```\nExplanation: Even on errors/timeouts, we produce a friendly message and log the attempt.\n\nNormalize the response\n```php\npublic function response(){\n  return $this->mapingResponse($this->responseCurl);\n}\n```\nExplanation: Returns:\n- status: 1 \u2192 pass\n- status: 0 \u2192 {data: [messages or key-specific hints]}\n\nError code mapping\n```php\nprivate function processCode($code,$msg){\n  if($code==13) return 'NIK tidak terdapat di database Kependudukan';\n  if($code==11) return 'Data orang telah dinyatakan meninggal';\n  if($code==12) return 'Data Ditemukan, Status Data Ganda';\n  if($code==14||$code==15) return $msg;\n  return 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi';\n}\n```\nExplanation: Dukcapil\u2019s codes \u2192 clear, end-user-friendly messages.\n\nName mismatch hints\n```php\npublic $FILTER_RESPONSE=['NAMA_LGKP'=>'NAMA tidak sesuai dengan database Kependudukan'];\n```\nExplanation: If Dukcapil says \u201cTidak Sesuai\u201d for name, we show a friendlier message.\n\n---\n\n## Full logging for audits (to ES or DB)\n\nFile: models/LogDukcapil.php\n\nWrite one log per call\n```php\npublic static function logDcp($req,$res,$code,$type,$time,$lay,$info,$pid,$nik){\n  $log = new LogDukcapil();\n  $log->nik = $nik; $log->type = $type;          // VERIFNIK / DATABALIKAN\n  $log->header_code = $code; $log->execution_time = $time;\n  $log->request = json_encode($req); $log->response = json_encode($res);\n  // send to Elasticsearch; fallback save to DB\n}\n```\nExplanation:\n- We store NIK, service URI, HTTP code, elapsed time, IP, request/response.\n- If ES down, we save to table log_dukcapil.\n\nLearn more about logs in [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Data Balikan (optional postback)\n\nWhen finishing a koperasi, we can send its Pemilik Manfaat to a partner service.\n\nBuild and send\n```php\npublic static function DataBalikan($id,$model){\n  // read credential_data_balikan + token_data_balikan\n  // collect PemilikManfaat with NIK\n  // POST to partner with Authorization: Bearer <token>\n}\n```\nExplanation: The payload includes:\n- id_lembaga, nama_lembaga (from settings),\n- data: [{ NIK, param:[{ hubungan_dengan_korporasi: \"Pemilik Manfaat KOPERASI X\" }] }]\n\nPostback call (short)\n```php\npublic static function curlDataBalikan($url,$params,$token,$id,$nik){\n  // POST JSON with Authorization: Bearer <token>\n  // 10s timeout; log via LogDukcapil::logDcp(..., 'DATABALIKAN', ...)\n}\n```\nExplanation: Same robust logging applies. Failures don\u2019t crash your flow; they\u2019re recorded.\n\nModel used\n```php\nPemilikManfaat::findAll(['t_koperasi_id'=>$id]);\n```\nExplanation: We collect beneficiaries tied to this koperasi.\n\n---\n\n## Two common recipes\n\n- Validate before saving a form (web)\n  1) User fills nik + nama.\n  2) Frontend POSTs to /api/dukcapil/validasi-data (session required).\n  3) If status=1, proceed to save; if 0, show messages.\n\n- Validate inside PHP (no controller)\n```php\n$h = new \\app\\components\\HelperDukcapil(['nik'=>$nik,'nama'=>$nama]);\nif(\\app\\components\\HelperDukcapil::CheckIsActiveValidateDukcapil()){\n  $h->curlValidDukcapil();\n  $res = $h->response(); // {status, data[]}\n} else {\n  $res = \\app\\components\\HelperDukcapil::AllowValidation();\n}\n```\nExplanation: Same result structure, same behavior.\n\nBonus: Send data balikan after finalization:\n```php\n\\app\\components\\HelperDukcapil::DataBalikan($tKoperasiId, $koperasiModel);\n```\nExplanation: Fire-and-log; failures won\u2019t block your page.\n\n---\n\n## Configuration cheatsheet\n\n- Toggle\n  - kop_setting.nama = is_active_dukcapil\n  - value: 1 (on) or 0 (off)\n\n- Dukcapil credentials (JSON)\n  - kop_setting.nama = credential_dukcapil\n  - Keys: user_id, password, ip_user, treshold, url_api\n\n- Data Balikan\n  - kop_setting.nama = credential_data_balikan (JSON: id_lembaga, nama_lembaga, url_api)\n  - kop_setting.nama = token_data_balikan (string token)\n\nSecurity tips:\n- Keep tokens and passwords in settings, not in code.\n- Always use HTTPS for remote calls.\n- Don\u2019t show raw responses to end users; rely on the friendly messages provided.\n\n---\n\n## Troubleshooting\n\n- Always \u201callowed\u201d even with wrong data\n  - Check is_active_dukcapil = 1.\n\n- Timeouts or \u201ctry again later\u201d\n  - The client returns a friendly message on network timeout (10s).\n  - Check logs (ES/DB) for header_code and execution_time.\n\n- \u201cNIK tidak terdapat\u2026\u201d\n  - That\u2019s code 13 from Dukcapil. Ask user to check their NIK.\n\n- Name mismatch\n  - You\u2019ll see \u201cNAMA tidak sesuai\u2026\u201d if Dukcapil says \u201cTidak Sesuai\u201d.\n  - Confirm capitalization/spaces, then resubmit.\n\n- Where are the logs?\n  - Elasticsearch index (via ElkLoggingService) or DB table log_dukcapil.\n  - For patterns and search, see [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\nTip: If you need to generate valid NIKs for testing, revisit [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md).\n\n---\n\n## Summary and next steps\n\nYou learned how HelperDukcapil acts like an embassy counter:\n- It loads credentials, maps your inputs, calls Dukcapil, normalizes results, and logs everything with latency and HTTP codes.\n- You can toggle it on/off, and optionally send \u201cdata balikan\u201d for Pemilik Manfaat.\n\nNext, we\u2019ll see where all these logs live and how to search them: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 681 # modules/Api/components/TimeHelper.php ---\n<?php \nnamespace app\\modules\\Api\\components;\n\nuse yii\\base\\Component;\n\nclass TimeHelper extends Component {\n\n    public static function getElapsedTime($start, $percision = 3) {\n        return (string) round(microtime(true) - $start, $percision) . \" sec\";\n    }\n}\n?>\n\n--- File: 13 # components/LogHelper.php ---\n<?php\nnamespace app\\components;\nuse yii\\base\\Component;\nuse app\\models\\LogService;\n\nclass LogHelper extends Component\n{\n\n    public static function saveLog($data = [])\n    {\n        if (empty($data)) {\n            return false;\n        }\n        $model =  new LogService;\n\n        if(!isset($data['created_at'])) {\n            $data['created_at'] = (String) date('Y-m-d H:i:s');\n        }\n\n        if(!isset($data['ip_address'])) {\n            $data['ip_address'] = (String) self::getUserHostAddress();\n        }\n        foreach ($data as $key => $val) {\n            if(is_array($val) || is_object($val)) {\n                $data[$key] = json_encode($val);\n            }\n        }\n        $model->attributes = $data;\n        if (!$model->save()) {\n            return false;\n        }\n        return true;\n    }\n\n    public static function getUserHostAddress()\n    {\n        $ipaddress = '';\n        if (getenv('HTTP_CLIENT_IP'))\n            $ipaddress = getenv('HTTP_CLIENT_IP');\n        else if(getenv('HTTP_X_FORWARDED_FOR'))\n            $ipaddress = getenv('HTTP_X_FORWARDED_FOR');\n        else if(getenv('HTTP_X_FORWARDED'))\n            $ipaddress = getenv('HTTP_X_FORWARDED');\n        else if(getenv('HTTP_FORWARDED_FOR'))\n            $ipaddress = getenv('HTTP_FORWARDED_FOR');\n        else if(getenv('HTTP_FORWARDED'))\n           $ipaddress = getenv('HTTP_FORWARDED');\n        else if(getenv('REMOTE_ADDR'))\n            $ipaddress = getenv('REMOTE_ADDR');\n        else\n            $ipaddress = 'UNKNOWN';\n        return $ipaddress;\n    }\n\n}\n\n--- File: 603 # models/LogService.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\n\n/**\n * This is the model class for table \"log_service\".\n *\n * @property int $id\n * @property string $ip_address\n * @property string $service_uri\n * @property string $nik\n * @property string $request\n * @property string $response\n * @property string $additional_data\n * @property string $created_at\n * @property int $is_error\n * @property string $type\n * @property string $execution_time\n */\nclass LogService extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'log_service';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['request', 'response', 'additional_data'], 'string'],\n            [['nik', 'created_at'], 'safe'],\n            [['is_error'], 'integer'],\n            [['ip_address'], 'string', 'max' => 16],\n            [['service_uri'], 'string', 'max' => 255],\n            // [['nik'], 'string', 'max' => 32],\n            [['type'], 'string', 'max' => 50],\n            [['execution_time'], 'string', 'max' => 100],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'ip_address' => 'Ip Address',\n            'service_uri' => 'Service Uri',\n            'nik' => 'Nik',\n            'request' => 'Request',\n            'response' => 'Response',\n            'additional_data' => 'Additional Data',\n            'created_at' => 'Created At',\n            'is_error' => 'Is Error',\n            'type' => 'Type',\n            'execution_time' => 'Execution Time',\n        ];\n    }\n}\n\n\n--- File: 602 # models/LogDukcapil.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse app\\services\\ElkLoggingService;\nuse DateTime;\nuse DateTimeZone;\n\n/**\n * This is the model class for table \"log_service\".\n *\n * @property int $id\n * @property string $ip_address\n * @property string $service_uri\n * @property string $nik\n * @property string $request\n * @property string $response\n * @property string $additional_data\n * @property string $created_at\n * @property int $is_error\n * @property string $type\n * @property string $execution_time\n */\nclass LogDukcapil extends \\yii\\db\\ActiveRecord\n{\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return 'log_dukcapil';\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('dbLogSimpadhu');\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            array('nik, ip_address, type, is_error, created_at, header_code, request, response, additional_data, execution_time, service_uri, parent_id, resend, layanan', 'safe'),\n        ];\n    }\n\n\tpublic static function logDcp(\n        $params, \n        $response, \n        $status, \n        $type = 'VERIFNIK', \n        $exetime = 0, \n        $layanan, \n        $additional_data, \n        $parent_id = null, \n        $nik = null\n    ){\n        $request = is_string($params) ? json_decode($params) : $params;\n\n        $log = new LogDukcapil();\n        $log->nik = $nik;\n        $log->ip_address = Yii::$app->request->userIP;\n        $log->type = $type;\n        $log->is_error = $status == 200 ? 0 : 1;\n        $log->created_at = date(\"Y-m-d H:i:s\");\n        $log->header_code = $status;\n        $log->request = json_encode($request);\n        $log->response =json_encode(is_string($response) ? json_decode($response) : $response);\n        $log->additional_data = json_encode($additional_data);\n        $log->execution_time = $exetime;\n        $log->service_uri = Yii::$app->request->url;\n        $log->resend = $status == 200 ? 0 : 1;\n        $log->layanan = $layanan;\n        $log->parent_id = $parent_id;\n\n        // Penyesuaian Date agar menggunakan Timezone\n        $old_date = $log->created_at;\n        // Explicitly tell PHP that this time is already in WIB\n        $timezone = new DateTimeZone('Asia/Jakarta');\n        $newDate = new DateTime($old_date, $timezone);\n        \n        // Ensure no UTC conversion happens\n        $newDate->setTimezone($timezone);\n        \n        // Convert to ISO 8601 format with WIB timezone\n        $log->created_at = $newDate->format(DateTime::ATOM); \n\n        // Insert ke ELK\n        $elkLogging = new ElkLoggingService('dukcapil');\n\n        $elk_logging = $elkLogging->logApplication([\n            'nik' => $log->nik,\n            'ip_address' => $log->ip_address,\n            'type' => $log->type,\n            'is_error' => $log->is_error,\n            'created_at' => $log->created_at,\n            'header_code' => $log->header_code,\n            'request' => $log->request,\n            'response' => $log->response,\n            'additional_data' => $log->additional_data,\n            'execution_time' => strval($log->execution_time),\n            'service_uri' => $log->service_uri,\n            'resend' => $log->resend,\n            'layanan' => $log->layanan,\n            'parent_id' => $log->parent_id,\n        ]);\n\n        if ($elk_logging !== false) {\n            $result = $elk_logging;\n        } else {\n            $log->created_at = $old_date;\n            $log->save();\n        }\n    }\n}\n\n\n--- File: 730 # views/log/index.php ---\n<?php\n\nuse yii\\helpers\\Html;\nuse kartik\\grid\\GridView;\nuse yii\\widgets\\Pjax;\nuse yii\\widgets\\ActiveForm;\nuse app\\models\\Log;\n\n/* @var $this yii\\web\\View */\n/* @var $dataProvider yii\\data\\ActiveDataProvider */\n$this->title = 'Log Aktivitas';\n$this->params['breadcrumbs'][] = $this->title;\n?>\n<div class=\"log-index\">\n    <div class=\"panel panel-default\">\n        <div class=\"panel-header\" align=\"center\">\n            <h2 style=\"float: none;\"><?= Html::encode($this->title) ?></h2>\n            <hr>\n        </div>\n        <div class=\"x_content\">\n\n            <?php $form = ActiveForm::begin([\n                'method' => 'get',\n                'action' => ['index'],\n            ]); ?>\n\n            <div class=\"row\">\n                <div class=\"col-md-3\">\n                    <?= Html::dropDownList('Log[month]', $month, $months, [\n                        'class' => 'form-control',\n                    ]) ?>\n                </div>\n                <div class=\"col-md-3\">\n                    <?= Html::dropDownList('Log[year]', $year, $years, [\n                        'class' => 'form-control',\n                    ]) ?>\n                </div>\n                <div class=\"col-md-2\">\n                    <?= Html::submitButton('Cari', ['class' => 'btn btn-success']) ?>\n                </div>\n            </div>\n\n            <?php ActiveForm::end(); ?>\n            <?php Pjax::begin(); ?>\n            <?= GridView::widget([\n                'dataProvider' => $dataProvider,\n                'filterModel' => $searchModel,\n                'layout' => \"<div align='center'>{pager}</div>\\n<div align='right'>{summary}</div>\\n{items}\\n<div align='center'>{pager}</div>\",\n                'pager' => [\n                    'firstPageLabel' => '<< Pertama',\n                    'lastPageLabel'  => 'Terakhir >>',\n                    'nextPageLabel'  => 'Berikutnya >',\n                    'prevPageLabel'  => '< Sebelumnya',\n                ],\n                'formatter' => [\n                    'class' => 'yii\\i18n\\Formatter',\n                    'nullDisplay' => '-',\n                ],\n                'rowOptions' => function ($model) {\n                    if ($model->is_error === Log::ERROR) {\n                        return ['class' => GridView::TYPE_DANGER];\n                    } else if ($model->is_error === Log::DATA_TIDAK_DITEMUKAN) {\n                        return ['class' => GridView::TYPE_WARNING];\n                    }\n                },\n                'columns' => [\n                    [\n                        'class' => 'kartik\\grid\\ExpandRowColumn',\n                        'value' => function () {\n                            return 1;\n                        },\n                        'detail' => function ($model) {\n                            return $model->getDetail($model);\n                        }\n                    ],\n                    'id',\n                    'ip_address',\n                    'nik',\n                    [\n                        'attribute' => 'type',\n                        'filter' => Log::getBase(),\n                    ],\n                    [\n                        'attribute' => 'is_error',\n                        'value' => function($model) {\n                            if ($model->is_error === Log::ERROR) {\n                                return \"ERROR\";\n                            } else if ($model->is_error === Log::DATA_TIDAK_DITEMUKAN) {\n                                return \"DATA TIDAK DITEMUKAN\";\n                            } else {\n                                return \"TIDAK ERROR\";\n                            }\n                        },\n                        'filter' => Log::getStatus(),\n                    ],\n                    [\n                        'attribute' => 'created_at',\n                        'filter' => false,\n                    ],\n                    [\n                        'attribute' => 'execution_time',\n                        'value' => function($model) {\n                            return '<div class=\"koket\"><div><b>Exec Time:</b><pre class=\"koket_execution_time\">' . $model->execution_time . '</pre></div></div>';\n                        },\n                        'format' => 'html',\n                        'filter' => false,\n                    ],\n                ],\n            ]); ?>\n            <?php Pjax::end(); ?>\n        </div>\n    </div>\n</div>\n\n<?php\n$this->registerCss(\"\n    .error {\n        color: red;\n        font-size: 2em;\n    }\n    div.koket {\n        display: inline-block;\n        width: 100%;\n        float: left;\n    }\n    div.koket > div {\n        white-space: nowrap;\n        float: left;\n    }\n    div.koket > div:not(:last-child) {\n        margin-right: .3em;\n    }\n    div.koket > div > * {\n        vertical-align: middle;\n        margin: 0;\n        padding: .1em .3em;\n        display: inline-block;\n    }\n    div.koket > div b {\n        font-weight: 600;\n    }\n    div.koket > div pre {\n        background-color: rgba(0, 255, 0, .07);\n        color: #080;\n    }\n    div.koket > div > pre a {\n        color: inherit;\n        font-style: none;\n    }\n    pre.koket {\n        text-align: center;\n    }\n\");\n?>\n\n\n--- File: 601 # models/Log.php ---\n<?php\n\nnamespace app\\models;\n\nuse Yii;\nuse yii\\data\\ActiveDataProvider;\n\n/**\n * This is the model class for table \"log\".\n *\n * @property int $id\n * @property string $ip_address\n * @property string $service_uri\n * @property string $request\n * @property string $response\n * @property string $additional_data\n * @property string $created_at\n * @property int $is_error\n * @property string $execution_time\n */\nclass Log extends \\yii\\db\\ActiveRecord\n{\n    private static $_tablePrefix = 'log_';\n    static $_tableName = 'log_service';\n    static $_prefix = '';\n\n    const TIDAK_ERROR = 0;\n    const ERROR = 1;\n    const DATA_TIDAK_DITEMUKAN = 2;\n\n    // public $start_date, $end_date;\n    // public $month, $year;\n\n    private static $detail_info = [\n        'request',\n        'response',\n        'additional_data',\n        'service_uri',\n    ];\n\n    private static $status = [\n        self::TIDAK_ERROR => 'TIDAK ERROR',\n        self::ERROR => 'ERROR',\n        self::DATA_TIDAK_DITEMUKAN => 'DATA TIDAK DITEMUKAN',\n    ];\n\n    private static $base = [\n        // 'BO_API_OUTCOMING' => 'BO_API_OUTCOMING',\n        'GET_AUTH_TOKEN' => 'GET_AUTH_TOKEN',\n        'GET_JWT_TOKEN' => 'GET_JWT_TOKEN',\n        'HIT_BY_OSS' => 'HIT_BY_OSS',\n        'ODS_API_INCOMMING' => 'ODS_API_INCOMMING',\n        'ODS_API_OUTCOMING' => 'ODS_API_OUTCOMING',\n    ];\n\n    /**\n     * {@inheritdoc}\n     */\n    public static function tableName()\n    {\n        return static::$_tableName;\n    }\n\n    /**\n     * @return \\yii\\db\\Connection the database connection used by this AR class.\n     */\n    public static function getDb()\n    {\n        return Yii::$app->get('db_koperasi');\n    }\n\n\n    /**\n     * {@inheritdoc}\n     */\n    public function rules()\n    {\n        return [\n            [['request', 'nik','type','response', 'additional_data'], 'string'],\n            [['id', 'is_error', 'execution_time', 'created_at'], 'safe'],\n            [['is_error'], 'integer'],\n            [['ip_address'], 'string', 'max' => 16],\n            [['service_uri'], 'string', 'max' => 255],\n            [['execution_time'], 'string', 'max' => 100],\n        ];\n    }\n\n    /**\n     * {@inheritdoc}\n     */\n    public function attributeLabels()\n    {\n        return [\n            'id' => 'ID',\n            'ip_address' => 'Ip Address',\n            'type' => 'Type',\n            'nik' => 'NIK',\n            'service_uri' => 'URL',\n            'request' => 'Request',\n            'response' => 'Response',\n            'additional_data' => 'Additional Data',\n            'created_at' => 'Created Date',\n            'is_error' => 'Status',\n            'execution_time' => 'Brief Activity',\n        ];\n    }\n\n    public function search($params)\n    {\n        $query = self::find();\n\n        // add conditions that should always apply here\n\n        $dataProvider = new ActiveDataProvider([\n            'query' => $query,\n            'sort' => false,\n        ]);\n\n        $this->load($params);\n\n        if (!$this->validate()) {\n            // uncomment the following line if you do not want to return any records when validation fails\n            // $query->where('0=1');\n            return $dataProvider;\n        }\n\n        // grid filtering conditions\n        $query->andFilterWhere(['id' => $this->id])\n              ->andFilterWhere(['ip_address' => $this->ip_address])\n              ->andFilterWhere(['nik' => $this->nik])\n              ->andFilterWhere(['type' => $this->type])\n              ->andFilterWhere(['is_error' => $this->is_error]);\n\n        $query->orderBy(['created_at' => SORT_DESC]);\n\n        return $dataProvider;\n    }\n\n    public static function getStatus()\n    {\n        return static::$status;\n    }\n\n    public static function getBase()\n    {\n        return static::$base;\n    }\n\n    public static function checkTableExist($prefix, $now)\n    {\n        $prefix_exist = array_keys(Log::getDropdownTableList());\n\n        return !empty($prefix)\n            && preg_match('/^\\d{6}$/', $prefix)\n            && in_array($prefix, $prefix_exist)\n            && $prefix <= $now;\n    }\n\n    public function getDetail($data)\n    {\n        $ret = '';\n\n        foreach (self::$detail_info as $detail) {\n            $ret .= '<h5 class=\"detail-title\">' . $this->getAttributeLabel($detail) . '</h5>' . $this->prettyPrint($data->$detail);\n        }\n\n        return $ret;\n    }\n\n    private function prettyPrint($text)\n    {\n        if (in_array(substr($text, 0, 1), ['{', '['])) {\n            $json = json_decode($text);\n            if (json_last_error() === JSON_ERROR_NONE)\n                return \"<pre>\" . json_encode($json, JSON_PRETTY_PRINT) . \"</pre>\";\n        }\n\n        return \"<pre>\" . $text . \"</pre>\";\n    }\n\n    public static function getTableList($year = null, $month = null)\n    {\n        $table_prefix = static::$_tablePrefix;\n\n        if ($year) {\n            $table_prefix = static::$_tablePrefix . $year;\n\n            if ($month) {\n                $table_prefix .= $month;\n            }\n        }\n\n        $tbl_list = Yii::$app->db_koperasi->createCommand(\"SHOW TABLES LIKE '\" . $table_prefix . \"%'\")->queryColumn();\n\n        return $tbl_list;\n    }\n\n    public static function getDropdownTableList()\n    {\n        $tbl_list = [];\n        $tbls = self::getTableList();\n\n        foreach ($tbls as $tbl) {\n            $prefix = substr($tbl, -6);\n            $tbl_list[$prefix] = $tbl;\n        }\n\n        return $tbl_list;\n    }\n}\n\n\n--- File: 688 # services/ElkLoggingService.php ---\n<?php\nnamespace app\\services;\nuse Yii;\n\nclass ElkLoggingService\n{\n    private $elastic;\n    public $index;\n    private $indexFidusia; //index untuk fidusia yang ada di ahu online\n    private $appsName;\n\n    public function __construct($tableName, $service = '')\n    {\n        $this->elastic = Yii::$app->elkAuditTrail->getClientInstance();\n        $this->index = Yii::$app->elkAuditTrail->env .'-log-<table>';\n        $this->indexFidusia = Yii::$app->elkAuditTrail->env .'-fidusia-';\n        $this->appsName = $tableName;\n\n        if ($service) {\n            $this->index = Yii::$app->elkAuditTrail->env .'-'. $service .'-log-<table>';\n        }\n\n        $this->index = strtolower(str_replace('<table>', $tableName, $this->index));\n    }\n\n    public function logBakum($attributes, $mappings = [])\n    {\n        try {\n            // Pastikan indeks sudah ada, jika belum maka buat\n            $this->createIndexIfNotExists($this->index, $mappings);\n\n            // Query untuk memeriksa apakah log sudah ada\n            $params = [\n                'index' => $this->index,\n                'body' => [\n                    'query' => [\n                        'bool' => [\n                            'must' => [\n                                ['match_phrase' => ['persyaratan' => $attributes['persyaratan']]],\n                                ['match_phrase' => ['ref' => $attributes['ref']]],\n                                ['match_phrase' => ['ip_address' => $attributes['ip_address']]]\n                            ]\n                        ]\n                    ]\n                ]\n            ];\n\n            // Eksekusi query pencarian\n            $response = $this->elastic->search($params);\n\n            if ($response['hits']['total']['value'] > 0) {\n                // Jika log ditemukan, hapus dokumen tersebut\n                $logId = $response['hits']['hits'][0]['_id'];\n\n                $deleteResponse = $this->elastic->delete([\n                    'index' => $this->index,\n                    'type' => '_doc',\n                    'id' => $logId,\n                ]);\n\n                return isset($deleteResponse['result']) && $deleteResponse['result'] === 'deleted' ? 1 : 0;\n            } else {\n                // Jika log tidak ditemukan, buat dokumen baru\n                $insertResponse = $this->elastic->index([\n                    'index' => $this->index,\n                    'type' => '_doc',\n                    'body' => $attributes\n                ]);\n\n                return isset($insertResponse['_id']) ? 1 : 0;\n            }\n        } catch (\\Exception $e) {\n            // Log error ke Yii logger\n            Yii::error(\"ES Log Error: \" . $e->getMessage(), 'application');\n            return false;\n        }\n    }\n\n    private function createIndexIfNotExists($indexName, $mappings = [])\n    {\n        try {\n            // Coba periksa apakah indeks sudah ada\n            $exists = $this->elastic->indices()->exists(['index' => $indexName]);\n\n            $index_properties = [\n                'index' => $indexName\n            ];\n\n            if ($mappings) {\n                $index_properties['body']['mappings'] = [\n                    'properties' => $mappings\n                ];\n            }\n\n            if (!$exists) {\n                // Buat indeks jika belum ada\n                $this->elastic->indices()->create($index_properties);\n\n                Yii::info(\"Index '$indexName' created successfully.\", 'application');\n            } else {\n                Yii::info(\"Index '$indexName' already exists. Skipping creation.\", 'application');\n            }\n\n        } catch (\\Elasticsearch\\Common\\Exceptions\\Missing404Exception $e) {\n            // Tangkap exception 404 (indeks tidak ditemukan)\n            $this->elastic->indices()->create($index_properties);\n\n            Yii::info(\"Index '$indexName' did not exist and has been created.\", 'application');\n        } catch (\\Exception $e) {\n            // Tangani error lainnya\n            Yii::error(\"Error creating index '$indexName': \" . $e->getMessage(), 'application');\n        }\n    }\n\n    // Method buat search mirip existing (return CActiveDataProvider-like array)\n    public function search($params, $service = '')\n    {\n        $query = [\n            'bool' => [\n                'must' => []\n            ]\n        ];\n\n        // filter\n        if (!empty($params['persyaratan'])) {\n            $query['bool']['must'][] = ['term' => ['persyaratan' => $params['persyaratan']]];\n        }\n        if (!empty($params['ip_address'])) {\n            $query['bool']['must'][] = ['term' => ['ip_address' => $params['ip_address']]];\n        }\n        if (!empty($params['ref'])) {\n            $query['bool']['must'][] = ['term' => ['ref' => $params['ref']]];\n        }\n        if (!empty($params['created_user'])) {\n            $query['bool']['must'][] = ['term' => ['created_user' => $params['created_user']]];\n        }\n        //Untuk pencarian Fidusia\n        if (!empty($params['search'])) {\n            $query['bool']['must'][] = ['term' => ['search' => $params['search']]];\n        }\n\n        //Cek index apabila ada kiriman khusus untuk fidusia\n        $indexName = $this->index;\n        if($this->appsName == 'fidusia' && !empty($service)) {\n            $indexName = $this->indexFidusia . $service;\n        }\n\n        $result = $this->elastic->search([\n            'index' => $indexName,\n            // 'type' => '_doc',\n            'body' => [\n                'query' => $query\n            ]\n        ]);\n\n        return $this->formatToDataProvider($result);\n    }\n\n    private function formatToDataProvider($esResult)\n    {\n        $data = [];\n        foreach ($esResult['hits']['hits'] as $hit) {\n            $data[] = $hit['_source'];\n        }\n        return new CArrayDataProvider($data, [\n            'pagination' => ['pageSize' => 20],\n        ]);\n    }\n\n    public function logApplication($attributes, $mappings = [], $service = '')\n    {\n        try {\n            // Pastikan indeks sudah ada, jika belum maka buat\n            $this->createIndexIfNotExists($this->index, $mappings);\n\n            //Cek index apabila ada kiriman khusus untuk fidusia\n            $indexName = $this->index;\n            if($this->appsName == 'fidusia' && !empty($service)) {\n                $indexName = $this->indexFidusia . $service;\n                $this->createIndexIfNotExists($indexName, $mappings);\n            }\n\n            // Jika response hanya angka seperti 1\n            if(!empty($attributes['response'])){\n                if(is_int($attributes['response'])){\n                    $attributes['response'] = (object) ['value' => $attributes['response']];\n                }\n            }\n            \n            // Jika response ada message, dan message bukan teks\n            if(!empty($attributes['response']->message)){\n                if (is_object($attributes['response']->message) || is_array($attributes['response']->message)) {\n                    $attributes['response']->message = json_encode($attributes['response']->message);\n                }   \n            }\n\n            // Insert ke Elastic\n            $insertResponse = $this->elastic->index([\n                'index' => $indexName, //Ambil nama yang didefinisikan\n                'type' => '_doc',\n                'body' => $attributes\n            ]);\n\n            return isset($insertResponse['_id']) ? 1 : 0;\n        } catch (\\Exception $e) {\n            // Log error ke Yii logger\n            Yii::error(\"ES Log Error: \" . $e->getMessage(), 'application');\n            return false;\n        }\n    }\n}\n\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 8: Centralized Logging & Audit Trail\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 8: Centralized Logging & Audit Trail\n\nPreviously, you learned how we verify identities and log every call to Dukcapil: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md). Now, let\u2019s open the \u201cblack box\u201d and \u201cradar\u201d that watch everything in koperasi: Centralized Logging & Audit Trail.\n\nImagine a flight recorder + control tower:\n- Every inbound/outbound request is captured (who, where, how long).\n- Each event is marked as success/error.\n- Operators can search, filter, and drill into details later.\n- Elasticsearch keeps the stream searchable for dashboards.\n\nBy the end of this chapter, you\u2019ll add reliable logs to any flow and inspect them in the built-in Logs page.\n\n---\n\n## A simple use case to keep in mind\n\nAn ODS client says their \u201cinsert transaksi\u201d call failed. You need to:\n1) See the exact request/response we processed.\n2) Check timing, status, and IP.\n3) Filter by time and quickly spot errors.\n\nWe\u2019ll do this using our centralized logging patterns.\n\n---\n\n## Key concepts (beginner-friendly)\n\n- What gets logged\n  - service_uri: which endpoint or service\n  - request/response: payloads (safely sanitized)\n  - ip_address: who called\n  - is_error: error or not (0/1/2)\n  - execution_time: how long it took\n  - created_at: when it happened\n  - nik/type/additional_data: extra context\n\n- Where logs go\n  - Database tables: log_service, log_dukcapil\n  - Elasticsearch: for search and dashboards (via ElkLoggingService)\n\n- Who does the logging\n  - LogHelper: general-purpose logger for API/business events\n  - LogService (model): persistence in DB\n  - LogDukcapil: specialized audit for Dukcapil flows (writes to ES, then DB as fallback)\n  - TimeHelper: friendly elapsed time text (e.g., \u201c0.123 sec\u201d)\n\n- How operators read logs\n  - Logs page with filters, color-coded rows, and expandable details\n  - Quick month/year filters\n  - Expand to see formatted request/response\n\nHelpful links while you work:\n- Gateway pattern and response codes: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- Protected endpoints/tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Quick start: Add logs to an API endpoint\n\n1) Start a timer at the top of your action:\n```php\n$start = microtime(true);\n// ...do work...\n```\nExplanation: We\u2019ll use this to compute execution_time.\n\n2) Build your response as usual (keep it consistent):\n```php\n$res = ['code'=>'00','message'=>'Success','status'=>200];\n// or set error shape on failures\n```\nExplanation: Same shape used across the app. See [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n3) Save a log event with LogHelper:\n```php\nuse app\\components\\LogHelper;\nuse app\\modules\\Api\\components\\TimeHelper;\n\nLogHelper::saveLog([\n  'service_uri'    => Yii::$app->request->absoluteUrl,\n  'request'        => $payload,          // sanitized array\n  'response'       => $res,              // final response\n  'is_error'       => $res['code']=='00' ? 0 : 1,\n  'execution_time' => TimeHelper::getElapsedTime($start),\n  'type'           => 'ODS_API_INCOMMING',\n]);\n```\nExplanation: This writes a structured row to log_service. Keep \u201ctype\u201d meaningful for filtering.\n\n4) Return the response:\n```php\nreturn $this->asJson($res);\n```\nExplanation: Done. You now have a full audit of this request.\n\nWhere this pattern comes from: controllers in [API Gateway & Endpoints](01_api_gateway___endpoints_.md) already follow this approach.\n\n---\n\n## See logs in the UI (filters, colors, expand)\n\nOpen the Logs page (admin shell) and filter:\n- Dropdowns for Month/Year\n- Color-coded rows:\n  - Red: error\n  - Yellow: data not found\n  - Default: success\n\nClick the expand icon to view:\n- Request (pretty JSON if possible)\n- Response\n- Additional data\n- Service URI\n- Exec time badge\n\nTip: If you\u2019re new to the admin shell and guards, see: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n\n---\n\n## Logging Dukcapil flows (specialized audit)\n\nDukcapil calls are logged automatically by HelperDukcapil via LogDukcapil:\n- Logs to Elasticsearch first\n- If ES is down, saves to DB (log_dukcapil)\n- Records nik, HTTP code, latency, and more\n\nMinimal example (what the helper does under the hood):\n```php\nuse app\\models\\LogDukcapil;\n\nLogDukcapil::logDcp(\n  $req, $res, $httpCode, 'VERIFNIK',\n  $elapsed, 'dukcapil.verify', ['note'=>'name check'], null, $nik\n);\n```\nExplanation: You don\u2019t need to call this directly when using the controller in [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md). It\u2019s already wired.\n\n---\n\n## Under the hood (what happens step-by-step)\n\nGeneric API logging flow:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant C as Controller\n  participant LH as LogHelper\n  participant ES as Elasticsearch\n  participant DB as DB\n\n  Client->>C: Call endpoint\n  C->>C: Do work + build response\n  C->>LH: saveLog({...})\n  LH->>DB: Insert log_service row\n  C-->>Client: Standard response\n```\n\nDukcapil flow (special path):\n\n```mermaid\nsequenceDiagram\n  participant UI as Web UI\n  participant D as DukcapilClient\n  participant LD as LogDukcapil\n  participant ES as Elasticsearch\n  participant DB as DB\n\n  UI->>D: Validate NIK+Nama\n  D->>LD: logDcp(req,res,code,...)\n  LD->>ES: Index document\n  ES-->>LD: OK or error\n  alt ES error\n    LD->>DB: save log_dukcapil\n  end\n```\n\n---\n\n## Code tour: tiny, focused snippets\n\nTimeHelper (friendly timing)\n```php\n// modules/Api/components/TimeHelper.php\npublic static function getElapsedTime($start,$p=3){\n  return round(microtime(true)-$start,$p).\" sec\";\n}\n```\nExplanation: Measures how long your action took.\n\nLogHelper (normalize + persist)\n```php\n// components/LogHelper.php\npublic static function saveLog($data=[]){\n  $m = new \\app\\models\\LogService;\n  $data['created_at'] = $data['created_at'] ?? date('Y-m-d H:i:s');\n  $data['ip_address'] = $data['ip_address'] ?? self::getUserHostAddress();\n  foreach($data as $k=>$v){ if(is_array($v)) $data[$k]=json_encode($v); }\n  $m->attributes = $data; return $m->save();\n}\n```\nExplanation: Ensures timestamps/IP exist, stringifies arrays, and saves.\n\nLogService (DB model, main fields)\n```php\n// models/LogService.php\nclass LogService extends \\yii\\db\\ActiveRecord{\n  public static function tableName(){ return 'log_service'; }\n  public static function getDb(){ return Yii::$app->get('db_koperasi'); }\n}\n```\nExplanation: ActiveRecord backed by db_koperasi.\n\nLogDukcapil (ES-first, DB fallback)\n```php\n// models/LogDukcapil.php\n$elk = new \\app\\services\\ElkLoggingService('dukcapil');\n$ok  = $elk->logApplication($payload);\nif($ok===false){ /* save to DB as fallback */ }\n```\nExplanation: Tries ES; if not possible, writes to log_dukcapil.\n\nElkLoggingService (simple ES insert)\n```php\n// services/ElkLoggingService.php\npublic function logApplication($attrs,$maps=[],$svc=''){\n  $this->createIndexIfNotExists($this->index,$maps);\n  $res = $this->elastic->index([\n    'index'=>$this->index,'type'=>'_doc','body'=>$attrs\n  ]);\n  return isset($res['_id'])?1:0;\n}\n```\nExplanation: Creates index if needed, then inserts the log.\n\nLogs view (expand + color)\n```php\n// views/log/index.php (excerpt)\n'rowOptions'=>function($m){\n  if($m->is_error===1) return ['class'=>'danger'];\n  if($m->is_error===2) return ['class'=>'warning'];\n},\n```\nExplanation: Red for errors, yellow for \u201cdata not found\u201d.\n\n---\n\n## Good event design (keep logs useful)\n\n- Be consistent\n  - Use \u201ctype\u201d values the team recognizes:\n    - GET_JWT_TOKEN, ODS_API_INCOMMING, ODS_API_OUTCOMING, etc.\n- Add context\n  - Include nik or transaction IDs in \u2018nik\u2019 or \u2018additional_data\u2019\n- Mask secrets\n  - Never log passwords, raw tokens, or full PAN-like numbers\n  - If needed, mask: abcd...wxyz\n- Keep payloads small\n  - Log only what\u2019s necessary (large documents \u2192 store a summary + ref)\n- Always time your actions\n  - Use TimeHelper to fill execution_time\n\nMinimal mask idea:\n```php\nfunction mask($s){\n  return strlen($s)>8 ? substr($s,0,4).'...'.substr($s,-4) : '***';\n}\n```\nExplanation: Simple approach to avoid leaking secrets in logs.\n\n---\n\n## Inspecting and filtering logs (operator guide)\n\n- Open Logs\n  - Use the Logs page in the admin shell (controller route typically /log/index)\n- Filter quickly\n  - Month/Year dropdowns\n  - Type/status filters\n- Read details\n  - Click expand to view formatted request/response\n  - Check execution_time to spot slow calls\n- Cross-check\n  - For Dukcapil, search the ES dashboard (if available) or check log_dukcapil when ES is down\n\nNote: Elasticsearch configuration and usage are covered next in detail.\n\n---\n\n## Troubleshooting\n\n- \u201cMy logs don\u2019t show up\u201d\n  - Ensure LogHelper::saveLog(...) is called before returning\n  - Confirm db_koperasi connection and log_service table exist\n- \u201cES logs missing\u201d\n  - ES might be down; Dukcapil logs fall back to DB\n  - Configure ES client and index: see next chapter\n- \u201cPayload is too big\u201d\n  - Store a compact summary, add a link or reference id in additional_data\n- \u201cSensitive data leaked\u201d\n  - Remove or mask secrets before logging; never log passwords\n\n---\n\n## Summary and what\u2019s next\n\nYou learned how koperasi captures a full audit trail across APIs and external services:\n- LogHelper + LogService for general events\n- LogDukcapil + ElkLoggingService for ES streaming with DB fallback\n- A Logs page that helps operators filter, color-spot, and expand details\n\nNext, we\u2019ll connect the dots with the vendor client and indices used under the hood: [Elasticsearch Client Integration (Vendor Stack)](09_elasticsearch_client_integration__vendor_stack__.md)", "\nWrite a very beginner-friendly tutorial chapter (in Markdown format) for the project `koperasi` about the concept: \"Elasticsearch Client Integration (Vendor Stack)\n\". This is Chapter 9.\n\nConcept Details:\n- Name: Elasticsearch Client Integration (Vendor Stack)\n\n- Description:\nFor scalable, queryable logs, the app ships an embedded Elasticsearch PHP client stack (Guzzle + RingPHP + Streams). ElkLoggingService likely uses this to index structured events. While you\u2019ll rarely touch vendor code, knowing the layers helps debug: requests are built by Client/Endpoints, sent via Transport using Guzzle handlers, and responses flow through stream abstractions. Picture a courier network: endpoints prepare parcels, transport routes them, and streams are the conveyor belts moving bytes efficiently.\n\n\nComplete Tutorial Structure:\n1. [API Gateway & Endpoints\n](01_api_gateway___endpoints_.md)\n2. [JWT Authentication & Authorization\n](02_jwt_authentication___authorization_.md)\n3. [Web MVC Shell & Session Guard\n](03_web_mvc_shell___session_guard_.md)\n4. [Koperasi Transaction Lifecycle Engine\n](04_koperasi_transaction_lifecycle_engine_.md)\n5. [SK and Numbering System\n](05_sk_and_numbering_system_.md)\n6. [Wilayah & NIK Base Management\n](06_wilayah___nik_base_management_.md)\n7. [Dukcapil Identity Verification Client\n](07_dukcapil_identity_verification_client_.md)\n8. [Centralized Logging & Audit Trail\n](08_centralized_logging___audit_trail_.md)\n9. [Elasticsearch Client Integration (Vendor Stack)\n](09_elasticsearch_client_integration__vendor_stack__.md)\n\nContext from previous chapters:\n# Chapter 1: API Gateway & Endpoints\n\nWelcome! In koperasi, the API Gateway is the \u201cfront desk\u201d where all machine-to-machine requests arrive. It checks who you are, what you\u2019re asking for, whether you\u2019re speaking in the right format, and then sends your request to the right place (transactions, wilayah, Dukcapil, etc.). It also wraps responses the same way and logs what happened with timing.\n\nThink of it like a receptionist who:\n- asks you to sign in (auth),\n- checks you\u2019re speaking the right language (JSON/XML),\n- and directs you to the right department (transaction, Dukcapil, wilayah).\n\nIn this chapter, we\u2019ll learn the essentials and try a small end-to-end call.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS wants to insert a new koperasi transaction. They:\n1. Ask for a JWT access token.\n2. Use that token to call our transaction insert endpoint with XML.\n3. Get a standard response, and we log everything with execution time.\n\nWe\u2019ll walk through doing exactly this.\n\n---\n\n## Key ideas\n\n- Module: Api is a Yii module that groups all API controllers.\n- Endpoints: Each controller action is a specific route. New features usually start here.\n- Formats: We accept JSON or XML in most places (and convert as needed).\n- Authentication: JWT headers (AuthJWT: Bearer <token>) or custom auth for certain endpoints.\n- Logging: We save request/response, headers, and elapsed time for observability.\n- Consistent responses: Small, predictable JSON (or XML) with code, message, status.\n\n---\n\n## Quick start: Try the gateway end-to-end\n\nWe\u2019ll call two endpoints:\n- Get JWT: POST /api/auth/login-jwt (JSON or XML)\n- Insert Transaction: POST /api/transaksi/insert (XML, with JWT)\n\nReplace BASE_URL with your server.\n\n1) Get a JWT token (JSON request):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/json\" \\\n  -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n  BASE_URL/api/auth/login-jwt\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"02\",\n  \"message\": \"success\",\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6...\",\n  \"status\": 200\n}\n```\nIf your client sends XML, that works too for this endpoint.\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n  -H \"Content-Type: application/xml\" \\\n  -H \"AuthJWT: Bearer YOUR_JWT_TOKEN\" \\\n  -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n  BASE_URL/api/transaksi/insert\n```\nExpected JSON response:\n```json\n{\n  \"code\": \"00\",\n  \"message\": \"Success\",\n  \"status\": 200\n}\n```\n\nThat\u2019s it. The gateway validated method and headers, parsed XML into JSON, verified your token, called helper logic, and logged the whole trip with execution time.\n\n---\n\n## Meet the cast\n\n- Api Module (modules/Api/Api.php): groups all API controllers.\n- Controllers (under modules/Api/controllers):\n  - AuthController: issues tokens, simple authorization helper.\n  - TransaksiController: receives ODS hits (insert/update/edit), consistent logging + responses.\n  - WilayahController: lookup helper for wilayah children (AJAX).\n  - DukcapilController: identity validation endpoint (requires logged-in session).\n- Helpers:\n  - TimeHelper: measures how long requests took.\n  - LogHelper: central place to save logs to DB.\n  - TransaksiHelper / ApiHelper: business logic and shaping data.\n\n---\n\n## What happens under the hood (step-by-step)\n\nHere\u2019s the happy path for POST /api/transaksi/insert:\n\n1. Controller checks HTTP method is POST.\n2. Controller checks Content-Type is application/xml.\n3. Controller parses XML, converts to array.\n4. Controller validates JWT in AuthJWT header.\n5. Controller calls TransaksiHelper to do the work.\n6. Controller builds a standard response and logs everything (including time).\n7. Client gets JSON (or XML if requested elsewhere).\n\nMinimal diagram:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Gateway as Api Gateway (Controller)\n  participant Auth as JWT Verify\n  participant Biz as TransaksiHelper\n  participant Log as LogHelper\n\n  Client->>Gateway: POST /api/transaksi/insert (XML, JWT)\n  Gateway->>Auth: Decode & verify token\n  Gateway->>Biz: Create/Insert transaction\n  Gateway->>Log: Save log + execution time\n  Gateway-->>Client: Standard response (code/message/status)\n```\n\n---\n\n## Files to know (gentle tour)\n\n1) Api module\n- File: modules/Api/Api.php\n```php\nclass Api extends Module {\n  public function init() { parent::init(); }\n}\n```\nThe module simply groups our API controllers under /api routes.\n\n2) Time measurement\n- File: modules/Api/components/TimeHelper.php\n```php\nclass TimeHelper extends Component {\n  public static function getElapsedTime($start, $precision = 3) {\n    return round(microtime(true) - $start, $precision) . \" sec\";\n  }\n}\n```\nWe start a timer at the beginning of controller actions and log the elapsed time at the end.\n\n3) Standard response + logging pattern\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function responseAndSaveLog(array $d, $fmt='JSON') {\n  $this->saveLog($d);\n  return $this->showResponse($d['response'], $fmt);\n}\n```\nThis helper ensures every response also passes through the logging pipeline.\n\n4) JSON/XML response selector\n- File: modules/Api/controllers/TransaksiController.php\n```php\npublic function showResponse(array $res, $type='JSON') {\n  $type = strtoupper($type);\n  if ($type == 'XML') { return $this->asXml($res); }\n  if ($type == 'JSON') { return $this->asJson($res); }\n  throw new \\Exception;\n}\n```\nMost of our endpoints return JSON, but the pattern supports XML output too.\n\n5) JWT issuance (accepts JSON or XML input)\n- File: modules/Api/controllers/AuthController.php\n```php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nThis makes the endpoint friendly to clients that send JSON or XML.\n\n6) JWT verification (for ODS transaction endpoints)\n- File: modules/Api/controllers/TransaksiController.php\n```php\n$jwt = explode(\"Bearer \", $headers['AuthJWT']);\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$token = (new JWT())::decode($jwt[1], $secret, ['HS256']);\n```\nThe token is verified using HS256 and a shared secret.\n\n7) Central logging\n- File: components/LogHelper.php\n```php\npublic static function saveLog($data=[]) {\n  $m = new LogService;\n  $m->attributes = /* normalized $data */;\n  return $m->save();\n}\n```\nWe save service URI, headers, body, response, error flag, and execution time, which supports later observability and audits. Learn more in: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Endpoint guide (beginner-friendly)\n\n- POST /api/auth/login-jwt\n  - Input: JSON or XML with username and password.\n  - Output: JSON with token.\n  - Next: Use the token in AuthJWT: Bearer <token>.\n\n- POST /api/transaksi/insert\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Internals: Creates a new transaction via TransaksiHelper. See: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n\n- POST /api/transaksi/update\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Update existing transaction.\n\n- POST /api/transaksi/edit\n  - Input: XML only, Content-Type: application/xml.\n  - Headers: AuthJWT: Bearer <token>.\n  - Output: JSON standard response.\n  - Purpose: Edit transactions created from migration (is_migrasi = 1).\n\n- POST /api/transaksi/dummy\n  - Input: JSON, Content-Type: application/json.\n  - Headers: auth: custom key, used by AuthHelper.\n  - Output: JSON. Useful for quick integration checks.\n\n- GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Headers: X-Requested-With: XMLHttpRequest (AJAX).\n  - Output: JSON of child wilayah.\n  - See: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n- POST /api/dukcapil/validasi-data\n  - Requires web session (not guest). If guest, redirects to /.\n  - Output: JSON validation result.\n  - See: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n\n---\n\n## Response shape (what to expect)\n\nMost endpoints return:\n```json\n{ \"code\": \"00\", \"message\": \"Success\", \"status\": 200 }\n```\nCommon failures:\n- 01 Method Not Allowed (405)\n- 02 Wrong Content-Type (415)\n- 03 Invalid format (400)\n- 04 Authentication failed (400/401)\n- 05/06 Business-level failure (400/500), often with additional_info\n\nThese codes help you quickly diagnose where the request failed (method, headers, format, auth, or business logic).\n\n---\n\n## Add a new API endpoint (the safe way)\n\nFollow the pattern: check method, validate headers, parse body, do work, respond + log.\n\nExample mini-template:\n```php\npublic function actionMyNewEndpoint() {\n  $start = microtime(true);\n  $url = Yii::$app->request->absoluteUrl;\n  $headers = Yii::$app->request->headers;\n\n  // 1) validate (method/headers) ...\n  // 2) parse (JSON/XML) ...\n  // 3) auth (JWT) if needed ...\n  // 4) do work via Helper ...\n  // 5) build $res and save log\n  return $this->asJson($res);\n}\n```\nTips:\n- Reuse responseAndSaveLog(...) if you\u2019re inside TransaksiController, or follow the same pattern (saveLog + TimeHelper).\n- Keep responses consistent: code/message/status.\n- Always record execution time with TimeHelper for observability.\n- If you add JWT, learn more in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why the receptionist pattern helps\n\n- Consistency: Every response looks familiar to clients.\n- Safety: Early checks (method, content-type, format) reduce noise in the business layer.\n- Observability: Central logging + elapsed time = easier debugging and performance tuning.\n- Extensibility: New endpoints can plug into the same pipelines (auth, logging, response).\n\n---\n\n## Troubleshooting cheatsheet\n\n- Got code \"01\" (405)? Use POST where required.\n- Got code \"02\" (415)? Set Content-Type properly (XML or JSON).\n- Got code \"03\" (400)? Fix your JSON/XML structure.\n- Got code \"04\" (401/400)? Check AuthJWT header format: \u201cBearer {token}\u201d.\n- Got code \"05\"/\"06\" (400/500)? Business rules failed; see additional_info.\n\n---\n\n## Wrap-up and next steps\n\nYou learned what the API Gateway is, how it checks requests, how it routes them to helpers, and how it logs everything. You also made a real end-to-end call using JWT and XML.\n\nNext, dive deeper into how tokens work and how we secure calls: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n---\n# Chapter 2: JWT Authentication & Authorization\n\nIn the previous chapter, we reached the \u201cfront desk\u201d and tried a full request via the gateway: [API Gateway & Endpoints](01_api_gateway___endpoints_.md). Now we\u2019ll focus on the \u201cvisitor badge\u201d itself: the JSON Web Token (JWT).\n\nThink of JWT like a temporary access card. You show your username/password at the security desk, get a signed card that expires soon, and present it at every protected door. Each door checks that:\n- the card hasn\u2019t expired,\n- the card hasn\u2019t been tampered with,\n- and you actually got it from our security desk.\n\nWe\u2019ll keep this chapter friendly and practical. By the end, you\u2019ll issue a token, send it correctly, and understand what\u2019s happening under the hood.\n\n---\n\n## The main use case we\u2019ll solve\n\nExternal system ODS needs to call a protected API (insert/update transaksi). It must:\n1) Get a JWT token using username/password.\n2) Include that token in the AuthJWT header.\n3) Call the protected endpoint successfully.\n\n---\n\n## What is a JWT? (super simple)\n\nA JWT has three parts: header.payload.signature\n\n- Header: says which algorithm we use (HS256) and that it\u2019s a JWT.\n- Payload: contains \u201cclaims\u201d like who you are and when it expires.\n- Signature: a cryptographic stamp that proves we issued it and it wasn\u2019t changed.\n\nIf any part is altered or it\u2019s expired, the server rejects it.\n\n---\n\n## What koperasi puts inside the token\n\nWe include standard claims and a small \u201cdata\u201d block:\n- iat: when it was issued\n- nbf: not valid before\n- exp: when it expires (30 minutes)\n- iss: who issued it (\u201cAHU-ONLINE\u201d)\n- jti: a unique ID for the token\n- data: the user\u2019s id and username\n\nExample (conceptually):\n```json\n{\n  \"iat\": 1690000000,\n  \"nbf\": 1690000000,\n  \"exp\": 1690001800,\n  \"iss\": \"AHU-ONLINE\",\n  \"jti\": \"random-ish\",\n  \"data\": { \"theOneThatWeGaveId\": 12, \"theOneThatWeGaveName\": \"oss-user\" }\n}\n```\n\n---\n\n## How to use it (quick start)\n\n1) Request a token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/json\" \\\n -d '{\"username\":\"oss-user\",\"password\":\"secret\"}' \\\n BASE_URL/api/auth/login-jwt\n```\n\nExpected (shortened):\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"eyJhbGciOi...\", \"status\":200 }\n```\n\n2) Call a protected endpoint with the token:\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data>...</data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nIf valid, you\u2019ll get a standard success response. If expired or invalid, the API rejects it.\n\nTip: In koperasi, we use a custom header name: AuthJWT, not the common Authorization header.\n\n---\n\n## Key concepts (in plain words)\n\n- Signing: We sign tokens with a secret (in Settings). Only the server knows it.\n- Verification: Every protected endpoint decodes and verifies the token. If signature or claims fail \u2192 reject.\n- Expiration: Tokens are short-lived (30 minutes). After that, get a new one.\n- Claims: Small facts inside the token (user id, timestamps). Controllers can read them to make decisions.\n- Authorization: We only issue tokens to allowed user groups (\u201coss\u201d, \u201cods\u201d). This is a basic \u201cwho can get a token\u201d check.\n\nBonus (non-JWT helper): There is also an \u201cauthorization\u201d endpoint returning a hash for certain flows. It\u2019s not a JWT, just a simple HMAC-style token for specific use cases.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant Auth as AuthController\n  participant Verify as JWT Verify\n  participant TX as TransaksiController\n\n  Client->>Auth: POST /api/auth/login-jwt\n  Auth-->>Client: token (30 min)\n  Client->>TX: POST /api/transaksi/insert + AuthJWT\n  TX->>Verify: Decode & validate token\n  TX-->>Client: Standard response\n```\n\n---\n\n## Where things live (files you\u2019ll meet)\n\n- Issue tokens: modules/Api/controllers/AuthController.php\n- Verify tokens: modules/Api/controllers/TransaksiController.php (and other protected controllers)\n- Low-level helpers: modules/Api/components/JWTHelper.php, modules/Api/models/JWTToken.php\n- Settings storage: models/Setting.php (holds the JWT secret)\n- Credential checks: models/User.php (validate username/password)\n\nWe\u2019ll tour small pieces of each next.\n\n---\n\n## Issuing a token (AuthController)\n\n1) Parse JSON or XML (both accepted):\n```php\n// modules/Api/controllers/AuthController.php\n$data = Json::decode(Yii::$app->request->rawBody);\nif (!$data) {\n  $xml = simplexml_load_string(Yii::$app->request->rawBody);\n  $data = json_decode(json_encode($xml), true);\n}\n```\nExplanation: We try JSON first. If not JSON, we try XML. This makes the endpoint friendly to different clients.\n\n2) Validate credentials and groups:\n```php\n// still AuthController\n$user = $this->getUserAuth($data['username'], $data['password']);\nif (!$user) { throw new Exception(\"User Tidak Ditemukan\", 401); }\n```\nExplanation: We fetch the user and check password. Only whitelisted groups can receive a token.\n\n3) Build claims and sign with secret:\n```php\n// still AuthController\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$claims = ['iat'=>time(),'nbf'=>time(),'exp'=>time()+1800]; // 30 min\n$claims['iss'] = \"AHU-ONLINE\";\n$claims['data'] = ['theOneThatWeGaveId'=>$user->id,'theOneThatWeGaveName'=>$user->username];\n$token = \\Firebase\\JWT\\JWT::encode($claims, $secret, 'HS256');\n```\nExplanation: We create a 30-minute token and sign it with the HS256 algorithm and your configured secret.\n\nReturn shape:\n```json\n{ \"code\":\"02\", \"message\":\"success\", \"token\":\"...\", \"status\":200 }\n```\n\n---\n\n## Verifying a token (Protected controllers)\n\nEvery protected endpoint expects:\n- Header: AuthJWT: Bearer YOUR_JWT\n- The token must be valid and not expired.\n\nExample decode:\n```php\n// e.g., in TransaksiController\n$jwt = explode(\"Bearer \", $headers['AuthJWT'])[1] ?? '';\n$secret = base64_encode(Setting::getValue('jwt_key'));\n$data = \\Firebase\\JWT\\JWT::decode($jwt, $secret, ['HS256']);\n```\nExplanation: We extract the token from the custom header, decode it using the same secret, and reject if invalid.\n\nUsing claims after decode:\n```php\n// claims became $data\n$userId = $data->data->theOneThatWeGaveId ?? null;\n// ...use $userId for audit/log or authorization\n```\nExplanation: Claims tell us who is calling; we can use them for logging or extra checks.\n\n---\n\n## Low-level helpers (when you want to peek under the hood)\n\nWe also have simple helper classes for manual composition/parsing of JWT-like strings. These are useful to understand the structure.\n\nHeader + payload + signature:\n```php\n// modules/Api/components/JWTHelper.php\npublic static function makeHeader(){ return base64_encode(Json::encode([\"alg\"=>\"HS256\",\"typ\"=>\"JWT\"])); }\npublic static function makePayload($p){ return base64_encode(Json::encode($p)); }\npublic static function makeSignature($h,$p){\n  return hash_hmac(\"sha256\", \"$h.$p\", JWTHelper::SECRET);\n}\n```\nExplanation: This shows the 3 parts. In production, AuthController uses Firebase JWT for robustness and standards.\n\nMapping and checks:\n```php\n// modules/Api/models/JWTToken.php\npublic function mappingToken($t){ [$h,$p,$s] = explode(\".\", $t); $this->header=$h; $this->payload=$p; $this->signature=$s; }\npublic function validateSignature(){ return JWTHelper::validateSignature($this->header,$this->payload,$this->signature); }\npublic function getDataPayload(){ return Json::decode(JWTHelper::getDataPayload($this->payload)); }\n```\nExplanation: Splits the token and checks the signature. Good for learning; in endpoints we stick to Firebase JWT.\n\nNote: Production signing uses the secret from settings (nama: jwt_key). Keep it safe and rotate when needed.\n\n---\n\n## Settings and User (the two pillars)\n\nGet the secret from DB:\n```php\n// models/Setting.php\npublic static function getValue($nama,$default=null){\n  $row = self::find()->where(['nama'=>$nama])->one();\n  return $row ? $row->value : $default;\n}\n```\nExplanation: We store the signing key as setting \u201cjwt_key\u201d. Ask your admin to set it to a strong random value.\n\nPassword validation:\n```php\n// models/User.php\npublic function validatePassword($password){\n  return Yii::$app->security->validatePassword($password, $this->password_hash);\n}\n```\nExplanation: User passwords are hashed. Only valid credentials can receive a token.\n\nWhitelist groups:\n```php\n// AuthController::getUserAuth(...)\n$whitelist = ['oss','ods'];\n// ...if user\u2019s group is in whitelist, allow issuing a token\n```\nExplanation: Even with valid credentials, only allowed groups can get a JWT for the API.\n\n---\n\n## A note on the \u201cauthorization\u201d endpoint\n\nThere\u2019s an extra helper endpoint:\n- POST /api/auth/authorization\n- It returns a hash based on nomor_transaksi + secret_key.\n- It is not a JWT, but a small, specific authorization scheme for certain flows.\n\nHash example:\n```php\n// AuthController\n$hashed = hash('sha512', $secret_key . $nomor_transaksi);\n```\nUse this only where required by those specific endpoints. For general API access, use JWT.\n\n---\n\n## Common pitfalls and fixes\n\n- Missing header AuthJWT: Make sure you send: AuthJWT: Bearer YOUR_JWT\n- Token expired: Get a new one (valid for ~30 minutes).\n- Wrong secret: Server and token must share the same secret (settings.jwt_key).\n- Wrong format: login-jwt accepts JSON or XML; protected endpoints may require XML body and correct Content-Type.\n\nFor end-to-end request shape and error codes, revisit: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n---\n\n## Security quick checklist\n\n- Always use HTTPS in production.\n- Keep jwt_key long and secret; rotate periodically.\n- Keep token lifetimes short (we use 30 min).\n- Log minimally; never log passwords; tokens only when necessary and masked.\n\n---\n\n## Wrap-up\n\nYou learned:\n- What a JWT is and how koperasi uses it as a time-boxed visitor badge.\n- How to get a token and call protected endpoints with AuthJWT.\n- Where issuance, verification, and settings live in the code.\n- The difference between JWT and the small \u201cauthorization\u201d hash endpoint.\n\nNext, we\u2019ll look at the browser-facing side and how we guard user sessions: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n---\n# Chapter 3: Web MVC Shell & Session Guard\n\nIn the last chapter, we learned how servers trust machines via tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md). Now we\u2019ll switch to the browser-facing side. When a human logs in, what draws the page, where do styles/scripts come from, and who checks the session is valid on every page?\n\nThink of the web app as a building:\n- Layouts are the floor plan (header, sidebar, user menu).\n- CSS/JS are the interior design.\n- Controllers are the entrances.\n- The guard stops anyone with a broken badge from roaming the halls.\n\nThat\u2019s exactly what \u201cWeb MVC Shell & Session Guard\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA notaris logs into koperasi and should:\n1) See a consistent admin shell (header, sidebar, user menu).\n2) Get clear feedback (success/error banners).\n3) Be blocked if their session is missing required notaris data.\n\nWe\u2019ll walk through how this works and how to build pages that automatically inherit this behavior.\n\n---\n\n## Key concepts (in plain words)\n\n- AppAsset (interior design): Registers CSS/JS used across the site.\n- Layouts (floor plan): login shell vs main admin shell (header, sidebar, content).\n- Widgets (unified feedback): Alert widget shows flash messages in a standard style.\n- Controllers (entrances): Handle page requests and render views.\n- BaseController (the guard): Checks essential session invariants (e.g., notaris needs data_notaris). If missing, user is logged out and sent back to login.\n\n---\n\n## Quick start: See the shell and the guard in action\n\n1) Visit /site/login\n- You\u2019ll see the login layout (a simple, focused shell).\n- After valid login, you\u2019re redirected to your group home page.\n\n2) After login, the main layout appears\n- Header + sidebar + user menu.\n- Your name or notaris name is shown if available.\n\n3) The guard is always watching\n- If your session loses required data (e.g., data_notaris), the guard logs you out and redirects to login.\n\nYou don\u2019t need to manually secure each page\u2014just extend BaseController.\n\n---\n\n## The \u201cShell\u201d: layouts and assets\n\nThe main skeleton is in two layouts:\n- views/layouts/login.php (minimal shell for login)\n- views/layouts/main.php (admin shell with header, sidebar, user menu)\n\nBoth register AppAsset, which brings in shared CSS/JS.\n\nExample (layout registers the asset):\n```php\nuse app\\assets\\AppAsset;\nAppAsset::register($this);\n```\nExplanation: AppAsset centrally lists CSS/JS so every page that uses the layout gets the same look and behavior.\n\nAppAsset (where CSS/JS live):\n```php\nclass AppAsset extends AssetBundle {\n  public $css = ['css/site.css','frontend/dist/styles/main.css'];\n  public $js  = ['frontend/dist/scripts/main.js','js/global/logSyarat.js'];\n}\n```\nExplanation: Add your global CSS/JS here. The layout automatically includes them.\n\n---\n\n## Unified feedback with the Alert widget\n\nControllers set flash messages; the layout displays them via Alert.\n\nSet a flash (in any controller):\n```php\nYii::$app->session->setFlash('success','Welcome back!');\n```\nDisplay flashes (already in main layout):\n```php\nuse app\\widgets\\Alert;\necho Alert::widget();\n```\nExplanation: Any flash you set appears as a styled banner (success, error, info, etc.).\n\n---\n\n## The guard: BaseController session checks\n\nAll web controllers extend BaseController, which enforces session invariants. For notaris users, we must have data_notaris in the session. If not, logout and redirect.\n\nSnippet (components/BaseController.php):\n```php\npublic function init(){\n  if(!Yii::$app->user->isGuest){\n    $isNotaris = Yii::$app->user->identity->userGroup[0]->group->group_id == 'notaris';\n    $hasData   = !empty(Yii::$app->session->get('data_notaris'));\n    if($isNotaris && !$hasData){\n      Yii::$app->user->logout();\n      return Yii::$app->response->redirect('/site/login');\n    }\n  }\n  parent::init();\n}\n```\nExplanation: The guard runs before your controller action logic. It ensures sessions are \u201ccomplete\u201d for their role.\n\n---\n\n## Where the notaris data is set\n\nDuring login, if the remote auth returns valid notaris info, we store it in the session. Later, layouts can show the name, and the guard ensures it exists.\n\nSnippet (controllers/SiteController.php):\n```php\n$session = Yii::$app->session;\n$session->set('data_notaris', $result_arr);\n// ...then Yii::$app->user->login($notaris)\n```\nExplanation: This populates a key piece of context the guard requires.\n\nAnd the layout reads it safely:\n```php\n$data = Yii::$app->session->get('data_notaris');\necho empty($data) ? Yii::$app->user->identity->username : $data['value']['username'];\n```\nExplanation: If data_notaris exists, show the notaris username; otherwise show the regular username.\n\n---\n\n## What happens on a page request (simple picture)\n\n```mermaid\nsequenceDiagram\n  participant User\n  participant Controller\n  participant Guard as BaseController\n  participant Layout\n  participant Widget as Alert\n\n  User->>Controller: GET /some-page\n  Controller->>Guard: init() session check\n  Guard-->>Controller: ok or redirect to login\n  Controller->>Layout: render view with shell\n  Layout->>Widget: display flashes (if any)\n```\n\n- If the guard fails (e.g., missing data_notaris for notaris), you\u2019re logged out and redirected.\n- If it passes, you get the full shell with content and unified messages.\n\n---\n\n## Build a page that \u201cjust works\u201d with the shell and guard\n\n1) Create a controller that extends BaseController:\n```php\nnamespace app\\controllers;\nuse app\\components\\BaseController;\n\nclass DashboardController extends BaseController {\n  public function actionIndex(){ return $this->render('index'); }\n}\n```\nExplanation: Extending BaseController gives you the session guard for free. Rendering uses the main layout by default.\n\n2) Add a quick flash in your action:\n```php\nYii::$app->session->setFlash('info','Hello from Dashboard!');\n```\nExplanation: The message will appear via the Alert widget in the layout.\n\n3) Add a small view (views/dashboard/index.php):\n```php\n<h3>Welcome to Dashboard</h3>\n<p>Your session is healthy and guarded.</p>\n```\nExplanation: The view content goes inside the main shell.\n\n---\n\n## Under the hood (files you\u2019ll frequently touch)\n\n- components/BaseController.php\n  - Enforces session invariants for logged-in users (e.g., notaris data).\n- assets/AppAsset.php\n  - Lists shared CSS/JS. Update this to add or remove global assets.\n- views/layouts/login.php\n  - Simple shell for login pages; still registers AppAsset.\n- views/layouts/main.php\n  - Full admin shell: header, sidebar, user menu, breadcrumbs, alerts.\n- widgets/Alert.php\n  - Reads all session flashes and renders Bootstrap alerts.\n\nSmall example: show a new CSS file\n```php\n// assets/AppAsset.php\npublic $css = ['css/site.css','css/my-custom.css'];\n```\nExplanation: Put my-custom.css under web/css, and all pages using the layout will get it.\n\n---\n\n## Troubleshooting (fast)\n\n- You keep getting redirected to login:\n  - If your account is in the notaris group, ensure session key data_notaris exists.\n  - Try logging out/in or clear cookies to refresh the session.\n\n- Flash messages don\u2019t appear:\n  - Ensure you setFlash in the controller before rendering.\n  - Confirm Alert::widget() is present (it\u2019s in main.php by default).\n\n- Styles/scripts missing:\n  - Check AppAsset paths are correct and files exist.\n  - Make sure the layout calls AppAsset::register($this).\n\n- Need machine-to-machine access?\n  - Use APIs with tokens instead of web sessions:\n    - Start at [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - Then [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Why this pattern helps\n\n- Consistency: One place to style the whole app (AppAsset + layout).\n- Clarity: Alerts unify how we communicate success/fail states to users.\n- Safety: The guard ensures only valid sessions roam the halls.\n- Productivity: Extend BaseController and focus on business, not boilerplate.\n\n---\n\n## Wrap-up and next steps\n\nYou learned how koperasi\u2019s web shell is put together and how the session guard protects every page. You can now create pages that automatically inherit the admin look, messages, and session safety.\n\nNext, let\u2019s step into the core business flow of this app: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md)\n---\n# Chapter 4: Koperasi Transaction Lifecycle Engine\n\nWelcome back! In the previous chapter, you built pages safely with the web shell and the session guard: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md). Now we\u2019ll go to the business \u201cfactory floor\u201d where koperasi transactions are processed end-to-end.\n\nThink of this engine as an assembly line:\n- Intake: accept and parse incoming payloads (often XML from ODS).\n- Assemble: validate and map data into our models; persist safely.\n- Finish: issue SK/SP numbers, update related records, and close the loop.\n\nBy the end of this chapter, you\u2019ll understand this flow and run a simple Pendirian transaction from XML all the way to finalized SK.\n\n---\n\n## A simple use case to keep in mind\n\nExternal system ODS sends a \u201cPendirian\u201d transaction:\n1) ODS authenticates with JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n2) ODS POSTs XML to /api/transaksi/insert with AuthJWT header.\n3) Our engine parses the XML, validates \u201cpesan nama,\u201d saves the transaction, and, when finalized, issues an SK number and updates references.\n\n---\n\n## Why this engine exists (beginner-friendly)\n\nWithout an engine, each endpoint would:\n- parse XML in different ways,\n- directly touch many tables,\n- and duplicate rules for finalization.\n\nThe Transaction Lifecycle Engine centralizes this in helpers so controllers stay tiny and the process is consistent and auditable. It reduces mistakes and makes maintenance easier.\n\n---\n\n## The factory line: three stations\n\n- Intake (Controller)\n  - Checks method/headers and JWT.\n  - Parses XML to a friendly array.\n  - Passes clean data into business helpers.\n\n- Assemble (TransaksiHelper)\n  - Validates business rules (e.g., \u201cpesan nama\u201d availability).\n  - Maps fields into TransaksiKoperasi and related models.\n  - Saves and returns IDs and statuses.\n\n- Finish (SKHelper)\n  - Issues SK/SP numbers.\n  - Toggles \u201cpesan nama\u201d (used \u2192 closed).\n  - Updates MasterTransaction and related references.\n\n---\n\n## Who does what (key actors)\n\n- TransaksiController (intake)\n  - File: modules/Api/controllers/TransaksiController.php\n  - Receives ODS calls (insert/update/edit), logs, and returns standard responses.\n  - Uses JWT and Content-Type checks from earlier chapters:\n    - [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n    - [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n- TransaksiHelper (assemble)\n  - File: modules/Api/components/TransaksiHelper.php\n  - Maps the payload to our data models and enforces business rules.\n\n- SKHelper (finish)\n  - File: modules/Api/components/SKHelper.php\n  - Generates SK/SP numbers, flips \u201cpesan nama,\u201d updates master records.\n\n- Core data models (assembly parts)\n  - TransaksiKoperasi: main transaction record.\n  - MasterTransaction: ties a koperasi\u2019s transactions together.\n  - PesanNama: reservation of koperasi name.\n  - SK: stores SK/SP numbers.\n\n---\n\n## A tiny picture of the flow\n\n```mermaid\nsequenceDiagram\n  participant ODS as ODS Client\n  participant CTRL as TransaksiController\n  participant TH as TransaksiHelper\n  participant SKH as SKHelper\n  participant DB as DB\n\n  ODS->>CTRL: POST /api/transaksi/insert (XML + JWT)\n  CTRL->>TH: createTrans(parsedData)\n  TH->>DB: save transaksi + related data\n  TH-->>CTRL: {status, id}\n  CTRL->>SKH: pushPerubahan(id) when finalize\n  SKH->>DB: issue SK/SP + update master + pesan nama\n```\n\nNote: \u201cpushPerubahan\u201d is used broadly for finalization steps (both pendirian/perubahan scenarios). You\u2019ll see how it decides what to do.\n\n---\n\n## Try it end-to-end (recap)\n\n1) Get a JWT (from earlier):\n- Endpoint: POST /api/auth/login-jwt\n- See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n2) Insert a transaction (XML + JWT):\n```bash\ncurl -X POST \\\n -H \"Content-Type: application/xml\" \\\n -H \"AuthJWT: Bearer YOUR_JWT\" \\\n -d '<root><data><koperasi><nik>1234567890123456</nik></koperasi></data></root>' \\\n BASE_URL/api/transaksi/insert\n```\n\nExpected short response:\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nBehind the scenes, the engine parsed your XML, validated, saved, and logged. For the logging pattern, see: [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Station 1: Intake (Controller)\n\nMinimal shape inside TransaksiController:\n```php\n// modules/Api/controllers/TransaksiController.php\npublic function actionInsert(){\n  $headers = Yii::$app->request->headers;\n  $xml = Yii::$app->request->rawBody; // XML payload\n  $data = ApiHelper::xmlToArray($xml); // parse\n  $this->verifyJwt($headers); // AuthJWT: Bearer {token}\n  return $this->handleCreate($data); // pass to helper\n}\n```\nExplanation:\n- The controller keeps logic small: parse \u2192 verify JWT \u2192 delegate.\n- It doesn\u2019t know business details\u2014those live in helpers.\n\nConsistent response + logging:\n```php\nprivate function handleCreate($data){\n  $res = TransaksiHelper::createTrans($data);\n  return $this->responseAndSaveLog([\n    'response' => $this->formatRes($res),\n    'request'  => $data\n  ], 'JSON');\n}\n```\nExplanation:\n- Whatever happens, we log the same way and return a standard shape.\n\n---\n\n## Station 2: Assemble (TransaksiHelper)\n\nCreate or update a transaction:\n```php\n// modules/Api/components/TransaksiHelper.php\npublic static function createTrans($data){\n  if(!$data) return ['status'=>false,'info'=>'Data kosong'];\n  $nik = $data['data']['nik'] ?? null;\n  if(!$nik) return ['status'=>false,'info'=>'NIK tidak ditemukan'];\n  return self::mapAndSave($data); // validate + persist\n}\n```\nExplanation:\n- Early guardrails (is data present? does it have NIK?).\n- Pass to a dedicated mapper/persister.\n\nMapping essentials (super simplified):\n```php\nprivate static function mapAndSave($data){\n  $m = new TransaksiKoperasi();\n  $m->attributes = self::mapFields($data); // field-by-field mapping\n  if(!self::validatePesanNama($m)) return ['status'=>false,'info'=>'Pesan nama invalid'];\n  return $m->save() ? ['status'=>true,'id'=>$m->id] : ['status'=>false,'info'=>'Save gagal'];\n}\n```\nExplanation:\n- Put business checks (like \u201cpesan nama\u201d) before saving.\n- Keep mapping logic in small functions so it\u2019s testable.\n\n\u201cPesan nama\u201d check (idea):\n```php\nprivate static function validatePesanNama($m){\n  $cek = TransaksiKoperasi::checkPendirian($m);\n  return empty($cek['status']); // if checks ok \u2192 true\n}\n```\nExplanation:\n- Centralize \u201cpendirian/perubahan\u201d rules on the model side.\n\nTip: If you generate or use NIK based on wilayah, see: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Station 3: Finish (SKHelper)\n\nWhen a transaction is ready to be finalized (issue SK/SP, close name reservation), the controller calls SKHelper. Minimal shape:\n\n```php\n// modules/Api/components/SKHelper.php\npublic static function pushPerubahan($id){\n  $t = TransaksiKoperasi::findOne($id);\n  if($t->is_finish == -1){ $t->is_finish = 0; return $t->save(false,['is_finish']); }\n  $sk = self::generateSurat(self::groupOfChanges($id), $t);\n  self::maybeChangePesanNama($t);\n  self::linkToMaster($t, $sk);\n  return self::finalize($t);\n}\n```\nExplanation:\n- If it\u2019s still a draft, move to \u201cassembled\u201d (is_finish 0).\n- Otherwise, issue SK/SP and finish (is_finish 1), update master and \u201cpesan nama\u201d.\n\nIssue SK/SP (simplified):\n```php\nprivate static function generateSurat($group, $t){\n  $sk = SK::find()->where(['t_koperasi_id'=>$t->id])->one() ?? new SK();\n  $sk->t_koperasi_id = $t->id;\n  $sk->no_sk_koperasi = Numbering::getCounter(...)->generateSKPerubahan();\n  $sk->no_sp_koperasi = Numbering::getCounter(...)->generateSKPelaporan();\n  $sk->save(false);\n  return $sk;\n}\n```\nExplanation:\n- Uses the centralized numbering system to generate SK/SP.\n- We\u2019ll deep dive into numbering next chapter: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\nToggle \u201cpesan nama\u201d on name change:\n```php\nprivate static function maybeChangePesanNama($t){\n  // mark new name as used\n  PesanNama::updateAll(['status'=>1], ['id'=>$t->t_pesan_nama_id]);\n  // soft-delete old name from previous transaction\n  $prev = TransaksiKoperasi::findLastTransaction(1, $t->id_master);\n  PesanNama::updateAll(['is_deleted'=>1], ['id'=>$prev['t_pesan_nama_id'] ?? 0]);\n}\n```\nExplanation:\n- Keeps name reservation lifecycle correct: new name \u201cused,\u201d old name \u201cclosed.\u201d\n\nFinalize flags:\n```php\nprivate static function finalize($t){\n  $t->is_finish = 1;\n  $t->tanggal_confirm = date('Y-m-d H:i:s');\n  return $t->save(false,['is_finish','tanggal_confirm']);\n}\n```\nExplanation:\n- One place to switch a transaction to \u201cfinished.\u201d\n\n---\n\n## Inputs and outputs (what you send, what you get)\n\n- Input (example XML, minimum idea):\n```xml\n<root>\n  <data>\n    <koperasi>\n      <nik>1234567890123456</nik>\n      <!-- other mapped fields -->\n    </koperasi>\n  </data>\n</root>\n```\n- Output (standard, short):\n```json\n{ \"code\":\"00\", \"message\":\"Success\", \"status\":200 }\n```\n\nIf something fails (format/auth/business rules), you\u2019ll get predictable codes. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Lifecycle states at a glance\n\n- Draft: is_finish = -1 (early staging, not ready)\n- Assembled: is_finish = 0 (validated/mapped, not yet issued)\n- Finalized: is_finish = 1 (SK/SP issued, references updated)\n\nThe engine moves transactions through these states via helpers, not manually sprinkled across controllers.\n\n---\n\n## Two common recipes\n\n- Insert \u201cPendirian\u201d and save draft\n  1) POST XML to /api/transaksi/insert (with JWT).\n  2) Controller parses and calls TransaksiHelper::createTrans.\n  3) You get a success response with saved state (often draft/assembled).\n\n- Finalize and issue SK\n  1) Call the finalize endpoint or business action triggering SKHelper::pushPerubahan.\n  2) SKHelper issues SK/SP, toggles \u201cpesan nama,\u201d updates MasterTransaction.\n  3) Transaction moves to is_finish = 1.\n\nNumbering details for SK/SP are covered next: [SK and Numbering System](05_sk_and_numbering_system_.md)\n\n---\n\n## What happens under the hood (step-by-step)\n\n1) Controller checks method/headers/JWT. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)  \n2) XML \u2192 array conversion (shape normalized).  \n3) TransaksiHelper validates business rules, maps fields, and saves models.  \n4) When finalizing, SKHelper generates SK/SP, updates \u201cpesan nama\u201d and master links.  \n5) Controller returns a consistent response and logs everything. See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Where to look in the code (quick map)\n\n- Controller intake:\n  - modules/Api/controllers/TransaksiController.php\n- Assemble logic:\n  - modules/Api/components/TransaksiHelper.php\n- Finalize logic:\n  - modules/Api/components/SKHelper.php\n- Models (data parts):\n  - models/TransaksiKoperasi.php\n  - models/MasterTransaction.php\n  - models/PesanNama.php\n  - models/SK.php\n\nTip: If you need wilayah or NIK generation details, jump to: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cFormat\u201d errors? Check Content-Type and XML shape. See: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- \u201cAuth\u201d errors? Ensure AuthJWT: Bearer {token}. See: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n- \u201cBusiness\u201d errors? Often related to \u201cpesan nama,\u201d missing fields, or invalid transitions.\n- \u201cSK\u201d not created? Ensure you triggered finalization (SKHelper) and see next chapter for numbering.\n\n---\n\n## Wrap-up and what\u2019s next\n\nYou learned how koperasi requests move through the factory line: Controller intake \u2192 TransaksiHelper assembly \u2192 SKHelper finish. You saw how \u201cpesan nama\u201d and MasterTransaction are updated when finalizing.\n\nNext, we\u2019ll zoom in on how SK and SP numbers are generated and tracked: [SK and Numbering System](05_sk_and_numbering_system_.md)\n---\n# Chapter 5: SK and Numbering System\n\nIn the last chapter, you saw how a transaction moves from intake to \u201cfinalized\u201d: [Koperasi Transaction Lifecycle Engine](04_koperasi_transaction_lifecycle_engine_.md). This chapter zooms into the final step: assigning official SK/SP numbers safely and consistently.\n\nThink of it like a ticket dispenser at a service counter:\n- pick the right series (SK vs SP),\n- increment the correct counter (per year),\n- then stamp the number back onto the transaction and the PDF view.\n\nThat\u2019s exactly what the \u201cSK and Numbering System\u201d does.\n\n---\n\n## The use case we\u2019ll solve\n\nA transaction (pendirian or perubahan) is ready to be finalized. We need to:\n1) Generate an official number (SK and/or SP) using the correct pattern.\n2) Ensure uniqueness and ordering, even under heavy load.\n3) Save the numbers and update related records so PDFs and views display them.\n\nYou\u2019ll learn how to trigger this finalization and where the numbers come from.\n\n---\n\n## Why this layer exists\n\nWithout a centralized numbering system:\n- two requests could accidentally get the same number,\n- different modules might format numbers differently,\n- fixing numbering bugs would be scattered and risky.\n\nBy centralizing to SKHelper (when to assign) and helper/Numbering (how to assign), the app guarantees consistent, collision-free sequences.\n\n---\n\n## Key concepts (in plain words)\n\n- SK vs SP\n  - SK: Keputusan (decision), e.g., SK Pendirian, SK Perubahan.\n  - SP: Surat Penerimaan (ack letter), e.g., SP Pelaporan (for some perubahan).\n\n- Series and patterns\n  - Each document type has its series code and pattern, for example:\n    - SK Perubahan \u2192 AH.01.38\n    - SP Pelaporan \u2192 AH.01.39\n    - SK Pembubaran \u2192 AH.01.40\n  - Final shape: AHU-0000123.AH.01.38.TAHUN 2025\n\n- Counters are per year\n  - The counter resets each year (stored in table counting via model Counter).\n  - Identified by id_aksi or keterangan (description).\n\n- Two-layer responsibility\n  - SKHelper: decides the right moment, persists SK/SP, updates related entities (PesanNama, MasterTransaction).\n  - Numbering: holds the lock, increments the counter, and formats the number string.\n\n---\n\n## Quick start: finalize a transaction and get its SK\n\nCall SKHelper when your business flow says \u201cfinalize now.\u201d\n\nExample (from an admin action or job):\n\n```php\nuse app\\modules\\Api\\components\\SKHelper;\n\n$ok = SKHelper::pushPerubahan($transaksiId);\n```\n\nExplanation:\n- pushPerubahan handles both \u201cfirst finalize\u201d and \u201calready assembled\u201d flows.\n- It will create SK/SP if needed, update flags, and compute tanggal_confirm.\n\nRead back the saved numbers:\n\n```php\nuse app\\models\\SK;\n\n$sk = SK::find()->where(['t_koperasi_id' => $transaksiId])->one();\necho $sk->no_sk_koperasi; // e.g., AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- After finalization, SK is stored and linked by t_koperasi_id.\n\n---\n\n## What gets updated on finalization\n\n- Transaction flags\n  - is_finish set to 1, tanggal_confirm set, and (optionally) tanggal_jangka_waktu updated.\n\n- SK/SP creation\n  - A row in sk table holds no_sk_koperasi and no_sp_koperasi.\n\n- Related entities\n  - PesanNama: new name marked used; previous reservation soft-deleted (when name changed).\n  - MasterTransaction: linked to the final transaksi and SK.\n  - Penggabungan: sets is_gabung for merged koperasi (if applicable).\n\nYou don\u2019t have to do these manually\u2014SKHelper wraps it for you.\n\n---\n\n## How the number is generated (the friendly version)\n\n- Numbering gets a lock, reads the current counter for this year and series, increments it, then releases the lock.\n- It then formats a string like AHU-0000123.AH.01.38.TAHUN 2025 depending on the chosen document type.\n- By doing it in one place (with a DB lock), we avoid duplicates under concurrency.\n\nMinimal example:\n\n```php\nuse app\\components\\helper\\Numbering;\n\n$n = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'], 7);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- getCounter picks a row in counting for the current year, increments it, and returns a helper instance to format the final string.\n\n---\n\n## Under the hood (step-by-step)\n\n1) Controller/business code calls SKHelper::pushPerubahan($id).\n2) SKHelper decides if we\u2019re assembling (is_finish -1 \u2192 0) or finalizing (0 \u2192 1).\n3) If finalizing, SKHelper calls generateSurat to:\n   - pick the series (SK and/or SP),\n   - ask Numbering for the next number,\n   - save numbers in sk table.\n4) SKHelper toggles PesanNama and updates MasterTransaction.\n5) Transaction is marked finalized.\n\nA tiny picture:\n\n```mermaid\nsequenceDiagram\n  participant CTRL as Controller\n  participant SKH as SKHelper\n  participant NUM as Numbering\n  participant DB as Database\n\n  CTRL->>SKH: pushPerubahan(id)\n  SKH->>NUM: getCounter(...)+generate(...)\n  NUM->>DB: LOCK, read+increment, UNLOCK\n  SKH->>DB: save SK/SP + update refs\n  SKH-->>CTRL: done\n```\n\n---\n\n## Important files (small guided tour)\n\n- SK model\n  - File: models/SK.php\n  - Holds constants and relations, e.g., SK::SK_PENDIRIAN, SK::SK_PERUBAHAN.\n\n- SKHelper (the orchestrator)\n  - File: modules/Api/components/SKHelper.php\n  - Method pushPerubahan($id) moves status and issues numbers.\n\n- Numbering (the engine)\n  - File: components/helper/Numbering.php\n  - getCounter(...) manages safe increment and format helpers like generateSKPerubahan().\n\n- SK/SP Views (where the number is shown)\n  - views/pendirian/sk_pendirian.php\n  - views/perubahan/sk_perubahan.php\n  - views/perubahan/sp_pelaporan.php\n\n---\n\n## A closer look at SKHelper\n\nSet statuses and generate letters:\n\n```php\n// modules/Api/components/SKHelper.php\nif ($transaksi->is_finish == -1) {\n  $transaksi->is_finish = 0; // assembled\n} else {\n  $transaksi->is_finish = 1; // final\n  $SKins = self::generateSurat($group, $transaksi);\n}\n```\n\nExplanation:\n- First run may just assemble; final run creates SK/SP numbers and persists them.\n\nChoose SK/SP and persist:\n\n```php\n// modules/Api/components/SKHelper.php\n$sk = new \\app\\models\\SK();\n$sk->t_koperasi_id = $transaksi->id;\n$sk->no_sk_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPerubahan();\n$sk->no_sp_koperasi = Numbering::getCounter(['id'=>1,'description'=>'sk_pendirian'],7)\n  ->generateSKPelaporan();\n$sk->save(false);\n```\n\nExplanation:\n- For some changes, both SK and SP are issued; for others, only one. The helper decides based on \u201cgroup\u201d of perubahan.\n\nUpdate related references:\n\n```php\n// modules/Api/components/SKHelper.php\n\\app\\models\\MasterTransaction::updateAll(\n  ['id_transaksi'=>$transaksi->id, 'id_sk'=>$sk->id],\n  ['id'=>$transaksi->id_master]\n);\n```\n\nExplanation:\n- MasterTransaction knows which finalized transaction and SK belongs to the koperasi.\n\n---\n\n## A closer look at Numbering\n\nLock, increment, release:\n\n```php\n// components/helper/Numbering.php\nYii::$app->db_koperasi->createCommand('LOCK TABLES `counting` WRITE')->execute();\n// find or create row for this year+series, then increment\nYii::$app->db_koperasi->createCommand('UNLOCK TABLES')->execute();\n```\n\nExplanation:\n- The lock prevents two requests from grabbing the same number.\n\nPick series and format:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PERUBAHAN], 7);\n$no = $n->generateSKPerubahan(); // AHU-0000123.AH.01.38.TAHUN 2025\n```\n\nExplanation:\n- Choose the right generator for the document type:\n  - generateSKPendirian() \u2192 AH.01.29\n  - generateSKPerubahan() \u2192 AH.01.38\n  - generateSKPelaporan() \u2192 AH.01.39\n  - generateSKPembubaran() \u2192 AH.01.40\n\nPreview without increment (for tests):\n\n```php\n// noupdate=true means \"don\u2019t bump the DB counter\"\n$n = Numbering::getCounter(['description'=>'sk_pendirian'], 7, true);\necho $n->generateSKPendirian();\n```\n\nExplanation:\n- Useful for dry-runs; never use in real finalization.\n\n---\n\n## Showing the number in a PDF view\n\nPass values from your controller:\n\n```php\n$sk = \\app\\models\\SK::find()->where(['t_koperasi_id'=>$id])->one();\nreturn $this->render('sk_perubahan', ['number'=>$sk->no_sk_koperasi]);\n```\n\nIn the view (already prepared in repo):\n\n```php\n<p>NOMOR <?= $number ?></p>\n```\n\nExplanation:\n- The view templates read variables like $number and display them in the SK/SP body.\n\n---\n\n## Adding a new series (example: SK Pembubaran)\n\n- Use existing generator:\n  - Numbering::generateSKPembubaran() \u2192 AH.01.40\n\nMinimal usage:\n\n```php\n$n = Numbering::getCounter(['id'=>\\app\\models\\SK::SK_PEMBUBARAN], 7);\necho $n->generateSKPembubaran();\n```\n\nExplanation:\n- If you introduce a new document type, map an id/description pair and pick the right generator.\n\n---\n\n## Best practices and common pitfalls\n\n- Generate once, persist forever\n  - Never \u201crecompute\u201d numbers; always store and reuse.\n\n- Let SKHelper orchestrate\n  - Don\u2019t call Numbering directly from random places. Keep numbering centralized for consistency.\n\n- Concurrency safe by default\n  - The DB lock avoids duplicates. If you ever see duplicates, investigate logs:\n    - See: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n- Trigger from verified flows\n  - Finalization endpoints are protected:\n    - See auth details in: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n    - See endpoint flow in: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n\n- Test with noupdate\n  - Use Numbering::getCounter(..., ..., true) to preview formats without consuming counters in dev.\n\n---\n\n## Summary\n\nYou learned:\n- What SK and SP are, and why numbering needs to be centralized and safe.\n- How SKHelper decides when to assign numbers and updates related entities.\n- How Numbering locks, increments, and formats numbers consistently (per year).\n- How to finalize a transaction and see the numbers in SK/SP PDFs.\n\nNext, we\u2019ll move to identity and geography foundations that many flows depend on: [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md)\n---\n# Chapter 6: Wilayah & NIK Base Management\n\nComing from [SK and Numbering System](05_sk_and_numbering_system_.md), you learned how we safely mint SK/SP numbers. This chapter explains the foundation that many flows rely on: regional (wilayah) data and how we derive consistent NIKs from it.\n\nThink of it as:\n- An address book: provinsi \u2192 kabupaten \u2192 kecamatan \u2192 kelurahan.\n- A serial-number engraver: given a wilayah-based prefix, it mints unique, sequential NIKs.\n\nWe\u2019ll keep it beginner-friendly and solve one practical use case end-to-end.\n\n---\n\n## The use case we\u2019ll solve\n\nA user fills a form:\n1) They pick Provinsi \u2192 Kabupaten \u2192 Kecamatan \u2192 Kelurahan using dependent dropdowns.\n2) The system builds a wilayah-based prefix (base).\n3) The system generates a unique NIK: base + 3-digit counter, safely inside a DB transaction.\n\nYou\u2019ll learn how to:\n- Load child wilayah via AJAX.\n- Compose the base using our ODS mirror table.\n- Generate a sequential NIK with BaseNik.\n\n---\n\n## Key concepts (in plain words)\n\n- Wilayah hierarchy (address book)\n  - A tree: Provinsi \u2192 Kabupaten/Kota \u2192 Kecamatan \u2192 Kelurahan.\n  - Models and queries live in models/Wilayah.php (source) and models/WilayahOds.php (ODS mirror).\n\n- Dependent dropdowns (AJAX helper)\n  - Endpoint: GET /api/wilayah/get-child-wilayah?id=...&tipe=...\n  - Returns JSON of child wilayah for the next dropdown.\n\n- ODS mirror table (shortcut to codes)\n  - Table: kop_m_wilayah_ods stores standardized IDs per level.\n  - You can reconstruct a \u201cfull code\u201d by concatenating those IDs.\n\n- BaseNik (serial engraver)\n  - Table: kop_base_nik tracks prefix and a counter.\n  - Function: BaseNik::generateNik('PREFIX') \u2192 'PREFIX' + '001', '002', ...\n  - Wrapped in a transaction to avoid duplicates.\n\nTip: For gateway behavior, headers, and logging, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n---\n\n## Try it: Dependent dropdowns in 2 calls\n\n1) Get Kabupaten of a Provinsi (example: id=31)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=31&tipe=Kabupaten\"\n```\n- Output: JSON array like [{ \"id\":\"3171\", \"nama\":\"KOTA JAKARTA SELATAN\" }, ...]\n\n2) Get Kecamatan of that Kabupaten (example: id=3171)\n```bash\ncurl -H \"X-Requested-With: XMLHttpRequest\" \\\n  \"BASE_URL/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan\"\n```\n- Output: JSON array like [{ \"id\":\"3171050\", \"nama\":\"KEBAYORAN BARU\" }, ...]\n\nFor Kelurahan, use tipe=Kelurahan and pass kecamatan\u2019s id. The JSON shape keys differ slightly for kelurahan but the controller normalizes them to id and nama.\n\nMinimal JS fetch to fill a <select>:\n```js\nfetch('/api/wilayah/get-child-wilayah?id=3171&tipe=Kecamatan',\n  { headers: { 'X-Requested-With': 'XMLHttpRequest' } })\n  .then(r => r.json()).then(rows => {\n    // rows: [{id:'...', nama:'...'}, ...]\n  });\n```\nExplanation: Always send X-Requested-With so the endpoint knows it\u2019s an AJAX request.\n\n---\n\n## Compose a wilayah-based base (prefix)\n\nOption A: You already have the kelurahan\u2019s internal ID (wilayah_kelurahan_id).\n```php\nuse app\\models\\WilayahOds;\n\n$base = WilayahOds::getKodeWilayah($kelId);\n// returns \"id_provinsi . id_kabupaten . id_kecamatan . id_kelurahan\" or null\n```\nExplanation: This concatenates 4 level codes from our ODS mirror.\n\nOption B: You have names (Provinsi/Kabupaten/Kelurahan). Clean and resolve IDs:\n```php\nuse app\\models\\BaseNik;\n\n$prov = BaseNik::cleanWilayahName('PROVINSI DKI JAKARTA');\n$ids  = BaseNik::getWilayahIds($prov, 'Jakarta Selatan', 'Gandaria Selatan');\n```\nExplanation: cleanWilayahName strips words like PROVINSI/KABUPATEN, then getWilayahIds tries to find matching ID set.\n\nBuild the base (from Option B):\n```php\n$base = $ids\n  ? $ids['id_provinsi'].$ids['id_kabupaten'].$ids['id_kecamatan'].$ids['id_kelurahan']\n  : null;\n```\nExplanation: Concatenate four parts. If null, verify your names.\n\n---\n\n## Generate a unique NIK (safe and sequential)\n\nOnce you have base, mint a NIK:\n```php\nuse app\\models\\BaseNik;\n\n$nik = $base ? BaseNik::generateNik($base) : false;\n```\n- If success: \"base\" + \"001\" (zero-padded to 3 digits).\n- If repeated calls with the same base: \"002\", \"003\", etc.\n- If false: check DB connection, base length, or table existence.\n\nExample:\n- base = 3171310101 (example only)\n- NIKs: 3171310101001, 3171310101002, 3171310101003\n\nNote: BaseNik::generateNik runs inside a DB transaction so two concurrent requests won\u2019t get the same number.\n\n---\n\n## What happens behind the scenes (simple picture)\n\nWilayah AJAX:\n```mermaid\nsequenceDiagram\n  participant UI as Browser\n  participant CTRL as WilayahController\n  participant W as Wilayah Model\n  participant DB as DB\n\n  UI->>CTRL: GET get-child-wilayah?id&tipe\n  CTRL->>W: getChildWilayah(parent, tipe)\n  W->>DB: Query children by tipe\n  CTRL-->>UI: JSON [{id, nama}, ...]\n```\n\nNIK generation:\n```mermaid\nsequenceDiagram\n  participant App\n  participant BN as BaseNik\n  participant DB as DB\n\n  App->>BN: generateNik(base)\n  BN->>DB: beginTransaction + read/update counter\n  DB-->>BN: new count\n  BN-->>App: base + zeroPadded(count)\n```\n\n---\n\n## Inside the code (gentle tour)\n\n1) WilayahController (AJAX endpoint)\n```php\n// modules/Api/controllers/WilayahController.php\npublic function actionGetChildWilayah($id, $tipe){\n  if(!$id || !Yii::$app->request->isAjax){\n    return json_encode([['id'=>'0','nama'=>'Tidak Ditemukan']]);\n  }\n  $data = \\app\\models\\Wilayah::getChildWilayah($id, $tipe);\n  // map records -> [{id, nama}]\n  // special: tipe 'Kelurahan' uses different fields\n  // return json\n}\n```\nExplanation: Validates it\u2019s AJAX, fetches child rows, normalizes to id/nama.\n\n2) Wilayah model (queries by type)\n```php\n// models/Wilayah.php\npublic static function getChildWilayah($parent, $tipe){\n  if($tipe != 'Kelurahan'){\n    return self::find()->where(['PARENT_ID'=>$parent,'TIPE'=>$tipe])\n      ->orderBy('NAMA')->all();\n  }\n  return \\app\\models\\bakum\\WilayahSABH::find()\n    ->where(['ID_WILAYAH_M'=>$parent])->orderBy('NM_KELURAHAN')->all();\n}\n```\nExplanation: Kelurahan data comes from a different table (WilayahSABH).\n\n3) WilayahOds model (codes and reverse lookup)\n```php\n// models/WilayahOds.php\npublic static function getKodeWilayah($kelId){\n  $row = self::find()->where(['wilayah_kelurahan_id'=>$kelId])->one();\n  return $row ? $row->id_provinsi.$row->id_kabupaten.$row->id_kecamatan.$row->id_kelurahan : null;\n}\n```\nExplanation: Concatenates standardized IDs to form the base.\n\n4) BaseNik model (atomic counter)\n```php\n// models/BaseNik.php\npublic static function generateNik($base){\n  $tx = self::getDb()->beginTransaction();\n  try {\n    $row = self::findOne(['base'=>$base]);\n    if($row){ $row->count += 1; $row->save(); }\n    else { $row = new self(); $row->base=$base; $row->count=1; $row->save(); }\n    $tx->commit();\n    return $base . sprintf('%03d', $row->count);\n  } catch (\\Throwable $e){\n    $tx->rollBack(); return false;\n  }\n}\n```\nExplanation: Transaction ensures the count is updated safely. Returns base + 3-digit suffix.\n\nHelper: cleaning names and looking up IDs\n```php\n// models/BaseNik.php\npublic static function cleanWilayahName($name){\n  return trim(preg_replace('/\\b(PROVINSI|KABUPATEN|KOTA|KECAMATAN|KELURAHAN)\\b/i','',$name));\n}\n```\nExplanation: Removes prefixes like \u201cPROVINSI\u201d so searches match the stored values.\n\n---\n\n## Putting it together (mini recipe)\n\n- On the form:\n  - Load Provinsi once (static).\n  - When Provinsi changes, call get-child-wilayah for Kabupaten.\n  - When Kabupaten changes, call get-child-wilayah for Kecamatan.\n  - When Kecamatan changes, call get-child-wilayah for Kelurahan.\n\n- On submit:\n  - Resolve base:\n    - If you kept wilayah_kelurahan_id, use WilayahOds::getKodeWilayah($kelId).\n    - If you have names, clean and resolve IDs, then concatenate.\n  - Generate NIK: BaseNik::generateNik($base).\n  - Save the record with the generated NIK.\n\nIf this is part of an API flow, remember the gateway rules from [API Gateway & Endpoints](01_api_gateway___endpoints_.md), and protect calls with JWT as needed from [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Best practices\n\n- Always send X-Requested-With: XMLHttpRequest for wilayah AJAX.\n- Validate tipe strictly: Kabupaten, Kecamatan, Kelurahan.\n- Do not craft NIK manually\u2014always call BaseNik::generateNik inside the save flow.\n- Base length: keep base short enough to fit model constraints (BaseNik.base max 10 chars).\n- High concurrency? The current transaction approach is safe for typical loads. Under very heavy load, consider explicit row locking (SELECT ... FOR UPDATE).\n\n---\n\n## Troubleshooting\n\n- Dropdown returns \u201cTidak Ditemukan\u201d:\n  - Check the id and tipe chain is correct.\n  - Ensure it\u2019s an AJAX request.\n  - For Kelurahan, confirm the parent is a valid kecamatan id.\n\n- NIK generation returns false:\n  - base is null or too long.\n  - The kop_base_nik table or DB connection isn\u2019t available.\n  - Check application logs for exception messages.\n\n- Name-based lookup fails:\n  - Use cleanWilayahName to strip titles.\n  - Provide more specific names (the lookup uses partial matches for kabupaten/kelurahan).\n  - Try resolving via kelurahan id if possible.\n\nFor how failures are logged and surfaced, see: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Wrap-up and next steps\n\nYou learned how wilayah data powers dependent dropdowns and how we derive a stable wilayah-based prefix to generate unique NIKs safely. This \u201caddress book + serial engraver\u201d provides reliable foundations for identity-related flows.\n\nNext, we\u2019ll validate those identities against the national service: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md)\n---\n# Chapter 7: Dukcapil Identity Verification Client\n\nComing from [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md), you now know how we build NIKs consistently. Next, we\u2019ll validate those identities against the national service. Meet our \u201cembassy counter\u201d: the Dukcapil Identity Verification Client.\n\nThink of an embassy window:\n- You submit an ID (NIK) and full name.\n- The officer checks it against the master record.\n- You get a \u201cstamp\u201d (match or not), and the visit is recorded for audits.\n\nThat\u2019s exactly what HelperDukcapil does\u2014simple, consistent, and fully logged.\n\n---\n\n## What problem does this solve?\n\nUse case: Before finalizing a koperasi transaction, we must confirm a person\u2019s identity with Dukcapil:\n1) A user enters NIK and full name.\n2) We call Dukcapil via a dedicated client (HelperDukcapil).\n3) We normalize the response into friendly messages.\n4) We log every call (HTTP code, latency, request, response) for audits.\n5) Optionally, we send \u201cdata balikan\u201d back for Pemilik Manfaat.\n\nIf Dukcapil is temporarily disabled (maintenance, sandbox), we can toggle validation off so screens still move forward safely.\n\n---\n\n## Key concepts (plain and friendly)\n\n- Dedicated client (HelperDukcapil)\n  - Loads credentials and base URL from settings.\n  - Maps inputs (USER_ID, PASSWORD, IP_USER, TRESHOLD, NIK, NAMA_LGKP).\n  - Sends one POST to Dukcapil; normalizes and returns a simple result.\n\n- Toggle on/off\n  - A setting flag decides whether to call Dukcapil or instantly \u201callow\u201d validation.\n\n- Friendly error messages\n  - Converts raw codes into human-readable messages (e.g., \u201cNIK tidak ditemukan\u201d).\n\n- Full logging\n  - Logs request/response, HTTP status, latency, and more into Elasticsearch or DB for traceability.\n\n- Data Balikan\n  - Optional postback of Pemilik Manfaat data to a partner service with a Bearer token.\n\nTip: If you\u2019re calling from an API route, revisit the \u201cfront desk\u201d rules in [API Gateway & Endpoints](01_api_gateway___endpoints_.md). If you need tokens for protected APIs, see [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Quick start: Validate NIK + Name in 3 steps\n\nPrerequisites:\n- You\u2019re logged into the web app (this endpoint needs a session).\n- Settings are filled:\n  - credential_dukcapil (JSON)\n  - is_active_dukcapil (1 or 0)\n\n1) Turn validation on\n```sql\n-- kop_setting\n-- nama: is_active_dukcapil, value: 1\n```\nExplanation: With \u201c1\u201d, we call Dukcapil. With \u201c0\u201d, we instantly allow.\n\n2) Configure credentials (example shape)\n```json\n{\n  \"user_id\": \"your-user\",\n  \"password\": \"your-pass\",\n  \"ip_user\": \"1.2.3.4\",\n  \"treshold\": \"85\",\n  \"url_api\": \"https://dukcapil.service/verify\"\n}\n```\nExplanation: Save this JSON under kop_setting.nama = credential_dukcapil.\n\n3) From a logged-in browser, POST your form\n```js\nfetch('/api/dukcapil/validasi-data', {\n  method: 'POST',\n  body: new URLSearchParams({ nik:'1234567890123456', nama:'BUDI SANTOSO' })\n}).then(r=>r.json()).then(console.log);\n```\nExpected success (match):\n```json\n{ \"status\": 1, \"data\": [] }\n```\nExpected failure (mismatch/issue):\n```json\n{ \"status\": 0, \"data\": [\"NIK tidak terdapat di database Kependudukan\"] }\n```\nExplanation: status=1 means \u201cvalidated\u201d. status=0 contains friendly messages. All calls are logged with HTTP code and elapsed time.\n\n---\n\n## How it works (small picture)\n\n```mermaid\nsequenceDiagram\n  participant UI as Web UI\n  participant DC as DukcapilController\n  participant HD as HelperDukcapil\n  participant DCP as Dukcapil API\n  participant LG as LogDukcapil\n\n  UI->>DC: POST nik, nama\n  DC->>HD: new HelperDukcapil($_POST)\n  HD->>DCP: POST credential + NIK+Nama\n  DCP-->>HD: JSON result + HTTP code\n  HD->>LG: log request/response+latency\n  DC-->>UI: {status, data[]}\n```\n\nAnalogy: The controller is the receptionist, HelperDukcapil is the embassy officer, and LogDukcapil is the CCTV + ledger.\n\n---\n\n## The endpoint you call\n\nFile: modules/Api/controllers/DukcapilController.php\n\n```php\npublic function actionValidasiData(){\n  if(Yii::$app->user->isGuest){ return $this->redirect(['/']); }\n  if(HelperDukcapil::CheckIsActiveValidateDukcapil()){\n    $h = new HelperDukcapil($_POST);\n    $h->curlValidDukcapil();\n    return $this->asJson($h->response());\n  }\n  return $this->asJson(HelperDukcapil::AllowValidation());\n}\n```\nExplanation:\n- Requires a logged-in web session.\n- If active, calls Dukcapil; if not, returns \u201callowed\u201d immediately.\n\nTip: For machine-to-machine flows, see [API Gateway & Endpoints](01_api_gateway___endpoints_.md) and secure with JWT in [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md).\n\n---\n\n## Inside HelperDukcapil (the embassy officer)\n\nLoad credentials from settings\n```php\nprotected function getConfigDukcapil(){\n  $row = Yii::$app->db_koperasi\n    ->createCommand(\"SELECT value FROM kop_setting WHERE nama='credential_dukcapil'\")\n    ->queryOne();\n  // parse JSON \u2192 fill USER_ID, PASSWORD, IP_USER, TRESHOLD, URL_API\n}\n```\nExplanation: Everything is centrally configured; no hardcoded secrets.\n\nPrepare the request payload\n```php\npublic function mappingDataDukcapil(){\n  return json_encode([\n    'USER_ID'=>$this->USER_ID, 'PASSWORD'=>$this->PASSWORD,\n    'IP_USER'=>$this->IP_USER, 'TRESHOLD'=>$this->TRESHOLD,\n    'NIK'=>$this->NIK, 'NAMA_LGKP'=>$this->NAMA_LGKP\n  ]);\n}\n```\nExplanation: We map our input to Dukcapil\u2019s expected fields.\n\nCall Dukcapil (with timeout and logging)\n```php\npublic function curlValidDukcapil(){\n  // POST JSON to $this->URL_API with 10s timeout\n  // Measure elapsed time; capture HTTP code\n  // On timeout \u2192 friendly \u201ctry again later\u201d\n  // Always LogDukcapil::logDcp(...)\n}\n```\nExplanation: Even on errors/timeouts, we produce a friendly message and log the attempt.\n\nNormalize the response\n```php\npublic function response(){\n  return $this->mapingResponse($this->responseCurl);\n}\n```\nExplanation: Returns:\n- status: 1 \u2192 pass\n- status: 0 \u2192 {data: [messages or key-specific hints]}\n\nError code mapping\n```php\nprivate function processCode($code,$msg){\n  if($code==13) return 'NIK tidak terdapat di database Kependudukan';\n  if($code==11) return 'Data orang telah dinyatakan meninggal';\n  if($code==12) return 'Data Ditemukan, Status Data Ganda';\n  if($code==14||$code==15) return $msg;\n  return 'Terjadi gangguan pada sistem, silahkan coba beberapa saat lagi';\n}\n```\nExplanation: Dukcapil\u2019s codes \u2192 clear, end-user-friendly messages.\n\nName mismatch hints\n```php\npublic $FILTER_RESPONSE=['NAMA_LGKP'=>'NAMA tidak sesuai dengan database Kependudukan'];\n```\nExplanation: If Dukcapil says \u201cTidak Sesuai\u201d for name, we show a friendlier message.\n\n---\n\n## Full logging for audits (to ES or DB)\n\nFile: models/LogDukcapil.php\n\nWrite one log per call\n```php\npublic static function logDcp($req,$res,$code,$type,$time,$lay,$info,$pid,$nik){\n  $log = new LogDukcapil();\n  $log->nik = $nik; $log->type = $type;          // VERIFNIK / DATABALIKAN\n  $log->header_code = $code; $log->execution_time = $time;\n  $log->request = json_encode($req); $log->response = json_encode($res);\n  // send to Elasticsearch; fallback save to DB\n}\n```\nExplanation:\n- We store NIK, service URI, HTTP code, elapsed time, IP, request/response.\n- If ES down, we save to table log_dukcapil.\n\nLearn more about logs in [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Data Balikan (optional postback)\n\nWhen finishing a koperasi, we can send its Pemilik Manfaat to a partner service.\n\nBuild and send\n```php\npublic static function DataBalikan($id,$model){\n  // read credential_data_balikan + token_data_balikan\n  // collect PemilikManfaat with NIK\n  // POST to partner with Authorization: Bearer <token>\n}\n```\nExplanation: The payload includes:\n- id_lembaga, nama_lembaga (from settings),\n- data: [{ NIK, param:[{ hubungan_dengan_korporasi: \"Pemilik Manfaat KOPERASI X\" }] }]\n\nPostback call (short)\n```php\npublic static function curlDataBalikan($url,$params,$token,$id,$nik){\n  // POST JSON with Authorization: Bearer <token>\n  // 10s timeout; log via LogDukcapil::logDcp(..., 'DATABALIKAN', ...)\n}\n```\nExplanation: Same robust logging applies. Failures don\u2019t crash your flow; they\u2019re recorded.\n\nModel used\n```php\nPemilikManfaat::findAll(['t_koperasi_id'=>$id]);\n```\nExplanation: We collect beneficiaries tied to this koperasi.\n\n---\n\n## Two common recipes\n\n- Validate before saving a form (web)\n  1) User fills nik + nama.\n  2) Frontend POSTs to /api/dukcapil/validasi-data (session required).\n  3) If status=1, proceed to save; if 0, show messages.\n\n- Validate inside PHP (no controller)\n```php\n$h = new \\app\\components\\HelperDukcapil(['nik'=>$nik,'nama'=>$nama]);\nif(\\app\\components\\HelperDukcapil::CheckIsActiveValidateDukcapil()){\n  $h->curlValidDukcapil();\n  $res = $h->response(); // {status, data[]}\n} else {\n  $res = \\app\\components\\HelperDukcapil::AllowValidation();\n}\n```\nExplanation: Same result structure, same behavior.\n\nBonus: Send data balikan after finalization:\n```php\n\\app\\components\\HelperDukcapil::DataBalikan($tKoperasiId, $koperasiModel);\n```\nExplanation: Fire-and-log; failures won\u2019t block your page.\n\n---\n\n## Configuration cheatsheet\n\n- Toggle\n  - kop_setting.nama = is_active_dukcapil\n  - value: 1 (on) or 0 (off)\n\n- Dukcapil credentials (JSON)\n  - kop_setting.nama = credential_dukcapil\n  - Keys: user_id, password, ip_user, treshold, url_api\n\n- Data Balikan\n  - kop_setting.nama = credential_data_balikan (JSON: id_lembaga, nama_lembaga, url_api)\n  - kop_setting.nama = token_data_balikan (string token)\n\nSecurity tips:\n- Keep tokens and passwords in settings, not in code.\n- Always use HTTPS for remote calls.\n- Don\u2019t show raw responses to end users; rely on the friendly messages provided.\n\n---\n\n## Troubleshooting\n\n- Always \u201callowed\u201d even with wrong data\n  - Check is_active_dukcapil = 1.\n\n- Timeouts or \u201ctry again later\u201d\n  - The client returns a friendly message on network timeout (10s).\n  - Check logs (ES/DB) for header_code and execution_time.\n\n- \u201cNIK tidak terdapat\u2026\u201d\n  - That\u2019s code 13 from Dukcapil. Ask user to check their NIK.\n\n- Name mismatch\n  - You\u2019ll see \u201cNAMA tidak sesuai\u2026\u201d if Dukcapil says \u201cTidak Sesuai\u201d.\n  - Confirm capitalization/spaces, then resubmit.\n\n- Where are the logs?\n  - Elasticsearch index (via ElkLoggingService) or DB table log_dukcapil.\n  - For patterns and search, see [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\nTip: If you need to generate valid NIKs for testing, revisit [Wilayah & NIK Base Management](06_wilayah___nik_base_management_.md).\n\n---\n\n## Summary and next steps\n\nYou learned how HelperDukcapil acts like an embassy counter:\n- It loads credentials, maps your inputs, calls Dukcapil, normalizes results, and logs everything with latency and HTTP codes.\n- You can toggle it on/off, and optionally send \u201cdata balikan\u201d for Pemilik Manfaat.\n\nNext, we\u2019ll see where all these logs live and how to search them: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n---\n# Chapter 8: Centralized Logging & Audit Trail\n\nPreviously, you learned how we verify identities and log every call to Dukcapil: [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md). Now, let\u2019s open the \u201cblack box\u201d and \u201cradar\u201d that watch everything in koperasi: Centralized Logging & Audit Trail.\n\nImagine a flight recorder + control tower:\n- Every inbound/outbound request is captured (who, where, how long).\n- Each event is marked as success/error.\n- Operators can search, filter, and drill into details later.\n- Elasticsearch keeps the stream searchable for dashboards.\n\nBy the end of this chapter, you\u2019ll add reliable logs to any flow and inspect them in the built-in Logs page.\n\n---\n\n## A simple use case to keep in mind\n\nAn ODS client says their \u201cinsert transaksi\u201d call failed. You need to:\n1) See the exact request/response we processed.\n2) Check timing, status, and IP.\n3) Filter by time and quickly spot errors.\n\nWe\u2019ll do this using our centralized logging patterns.\n\n---\n\n## Key concepts (beginner-friendly)\n\n- What gets logged\n  - service_uri: which endpoint or service\n  - request/response: payloads (safely sanitized)\n  - ip_address: who called\n  - is_error: error or not (0/1/2)\n  - execution_time: how long it took\n  - created_at: when it happened\n  - nik/type/additional_data: extra context\n\n- Where logs go\n  - Database tables: log_service, log_dukcapil\n  - Elasticsearch: for search and dashboards (via ElkLoggingService)\n\n- Who does the logging\n  - LogHelper: general-purpose logger for API/business events\n  - LogService (model): persistence in DB\n  - LogDukcapil: specialized audit for Dukcapil flows (writes to ES, then DB as fallback)\n  - TimeHelper: friendly elapsed time text (e.g., \u201c0.123 sec\u201d)\n\n- How operators read logs\n  - Logs page with filters, color-coded rows, and expandable details\n  - Quick month/year filters\n  - Expand to see formatted request/response\n\nHelpful links while you work:\n- Gateway pattern and response codes: [API Gateway & Endpoints](01_api_gateway___endpoints_.md)\n- Protected endpoints/tokens: [JWT Authentication & Authorization](02_jwt_authentication___authorization_.md)\n\n---\n\n## Quick start: Add logs to an API endpoint\n\n1) Start a timer at the top of your action:\n```php\n$start = microtime(true);\n// ...do work...\n```\nExplanation: We\u2019ll use this to compute execution_time.\n\n2) Build your response as usual (keep it consistent):\n```php\n$res = ['code'=>'00','message'=>'Success','status'=>200];\n// or set error shape on failures\n```\nExplanation: Same shape used across the app. See [API Gateway & Endpoints](01_api_gateway___endpoints_.md).\n\n3) Save a log event with LogHelper:\n```php\nuse app\\components\\LogHelper;\nuse app\\modules\\Api\\components\\TimeHelper;\n\nLogHelper::saveLog([\n  'service_uri'    => Yii::$app->request->absoluteUrl,\n  'request'        => $payload,          // sanitized array\n  'response'       => $res,              // final response\n  'is_error'       => $res['code']=='00' ? 0 : 1,\n  'execution_time' => TimeHelper::getElapsedTime($start),\n  'type'           => 'ODS_API_INCOMMING',\n]);\n```\nExplanation: This writes a structured row to log_service. Keep \u201ctype\u201d meaningful for filtering.\n\n4) Return the response:\n```php\nreturn $this->asJson($res);\n```\nExplanation: Done. You now have a full audit of this request.\n\nWhere this pattern comes from: controllers in [API Gateway & Endpoints](01_api_gateway___endpoints_.md) already follow this approach.\n\n---\n\n## See logs in the UI (filters, colors, expand)\n\nOpen the Logs page (admin shell) and filter:\n- Dropdowns for Month/Year\n- Color-coded rows:\n  - Red: error\n  - Yellow: data not found\n  - Default: success\n\nClick the expand icon to view:\n- Request (pretty JSON if possible)\n- Response\n- Additional data\n- Service URI\n- Exec time badge\n\nTip: If you\u2019re new to the admin shell and guards, see: [Web MVC Shell & Session Guard](03_web_mvc_shell___session_guard_.md)\n\n---\n\n## Logging Dukcapil flows (specialized audit)\n\nDukcapil calls are logged automatically by HelperDukcapil via LogDukcapil:\n- Logs to Elasticsearch first\n- If ES is down, saves to DB (log_dukcapil)\n- Records nik, HTTP code, latency, and more\n\nMinimal example (what the helper does under the hood):\n```php\nuse app\\models\\LogDukcapil;\n\nLogDukcapil::logDcp(\n  $req, $res, $httpCode, 'VERIFNIK',\n  $elapsed, 'dukcapil.verify', ['note'=>'name check'], null, $nik\n);\n```\nExplanation: You don\u2019t need to call this directly when using the controller in [Dukcapil Identity Verification Client](07_dukcapil_identity_verification_client_.md). It\u2019s already wired.\n\n---\n\n## Under the hood (what happens step-by-step)\n\nGeneric API logging flow:\n\n```mermaid\nsequenceDiagram\n  participant Client\n  participant C as Controller\n  participant LH as LogHelper\n  participant ES as Elasticsearch\n  participant DB as DB\n\n  Client->>C: Call endpoint\n  C->>C: Do work + build response\n  C->>LH: saveLog({...})\n  LH->>DB: Insert log_service row\n  C-->>Client: Standard response\n```\n\nDukcapil flow (special path):\n\n```mermaid\nsequenceDiagram\n  participant UI as Web UI\n  participant D as DukcapilClient\n  participant LD as LogDukcapil\n  participant ES as Elasticsearch\n  participant DB as DB\n\n  UI->>D: Validate NIK+Nama\n  D->>LD: logDcp(req,res,code,...)\n  LD->>ES: Index document\n  ES-->>LD: OK or error\n  alt ES error\n    LD->>DB: save log_dukcapil\n  end\n```\n\n---\n\n## Code tour: tiny, focused snippets\n\nTimeHelper (friendly timing)\n```php\n// modules/Api/components/TimeHelper.php\npublic static function getElapsedTime($start,$p=3){\n  return round(microtime(true)-$start,$p).\" sec\";\n}\n```\nExplanation: Measures how long your action took.\n\nLogHelper (normalize + persist)\n```php\n// components/LogHelper.php\npublic static function saveLog($data=[]){\n  $m = new \\app\\models\\LogService;\n  $data['created_at'] = $data['created_at'] ?? date('Y-m-d H:i:s');\n  $data['ip_address'] = $data['ip_address'] ?? self::getUserHostAddress();\n  foreach($data as $k=>$v){ if(is_array($v)) $data[$k]=json_encode($v); }\n  $m->attributes = $data; return $m->save();\n}\n```\nExplanation: Ensures timestamps/IP exist, stringifies arrays, and saves.\n\nLogService (DB model, main fields)\n```php\n// models/LogService.php\nclass LogService extends \\yii\\db\\ActiveRecord{\n  public static function tableName(){ return 'log_service'; }\n  public static function getDb(){ return Yii::$app->get('db_koperasi'); }\n}\n```\nExplanation: ActiveRecord backed by db_koperasi.\n\nLogDukcapil (ES-first, DB fallback)\n```php\n// models/LogDukcapil.php\n$elk = new \\app\\services\\ElkLoggingService('dukcapil');\n$ok  = $elk->logApplication($payload);\nif($ok===false){ /* save to DB as fallback */ }\n```\nExplanation: Tries ES; if not possible, writes to log_dukcapil.\n\nElkLoggingService (simple ES insert)\n```php\n// services/ElkLoggingService.php\npublic function logApplication($attrs,$maps=[],$svc=''){\n  $this->createIndexIfNotExists($this->index,$maps);\n  $res = $this->elastic->index([\n    'index'=>$this->index,'type'=>'_doc','body'=>$attrs\n  ]);\n  return isset($res['_id'])?1:0;\n}\n```\nExplanation: Creates index if needed, then inserts the log.\n\nLogs view (expand + color)\n```php\n// views/log/index.php (excerpt)\n'rowOptions'=>function($m){\n  if($m->is_error===1) return ['class'=>'danger'];\n  if($m->is_error===2) return ['class'=>'warning'];\n},\n```\nExplanation: Red for errors, yellow for \u201cdata not found\u201d.\n\n---\n\n## Good event design (keep logs useful)\n\n- Be consistent\n  - Use \u201ctype\u201d values the team recognizes:\n    - GET_JWT_TOKEN, ODS_API_INCOMMING, ODS_API_OUTCOMING, etc.\n- Add context\n  - Include nik or transaction IDs in \u2018nik\u2019 or \u2018additional_data\u2019\n- Mask secrets\n  - Never log passwords, raw tokens, or full PAN-like numbers\n  - If needed, mask: abcd...wxyz\n- Keep payloads small\n  - Log only what\u2019s necessary (large documents \u2192 store a summary + ref)\n- Always time your actions\n  - Use TimeHelper to fill execution_time\n\nMinimal mask idea:\n```php\nfunction mask($s){\n  return strlen($s)>8 ? substr($s,0,4).'...'.substr($s,-4) : '***';\n}\n```\nExplanation: Simple approach to avoid leaking secrets in logs.\n\n---\n\n## Inspecting and filtering logs (operator guide)\n\n- Open Logs\n  - Use the Logs page in the admin shell (controller route typically /log/index)\n- Filter quickly\n  - Month/Year dropdowns\n  - Type/status filters\n- Read details\n  - Click expand to view formatted request/response\n  - Check execution_time to spot slow calls\n- Cross-check\n  - For Dukcapil, search the ES dashboard (if available) or check log_dukcapil when ES is down\n\nNote: Elasticsearch configuration and usage are covered next in detail.\n\n---\n\n## Troubleshooting\n\n- \u201cMy logs don\u2019t show up\u201d\n  - Ensure LogHelper::saveLog(...) is called before returning\n  - Confirm db_koperasi connection and log_service table exist\n- \u201cES logs missing\u201d\n  - ES might be down; Dukcapil logs fall back to DB\n  - Configure ES client and index: see next chapter\n- \u201cPayload is too big\u201d\n  - Store a compact summary, add a link or reference id in additional_data\n- \u201cSensitive data leaked\u201d\n  - Remove or mask secrets before logging; never log passwords\n\n---\n\n## Summary and what\u2019s next\n\nYou learned how koperasi captures a full audit trail across APIs and external services:\n- LogHelper + LogService for general events\n- LogDukcapil + ElkLoggingService for ES streaming with DB fallback\n- A Logs page that helps operators filter, color-spot, and expand details\n\nNext, we\u2019ll connect the dots with the vendor client and indices used under the hood: [Elasticsearch Client Integration (Vendor Stack)](09_elasticsearch_client_integration__vendor_stack__.md)\n\nRelevant Code Snippets (Code itself remains unchanged):\n--- File: 246 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Namespaces/BooleanRequestWrapper.php ---\n<?php\n\nnamespace Elasticsearch\\Namespaces;\n\nuse Elasticsearch\\Common\\Exceptions\\Missing404Exception;\nuse Elasticsearch\\Common\\Exceptions\\RoutingMissingException;\nuse Elasticsearch\\Endpoints\\AbstractEndpoint;\nuse Elasticsearch\\Transport;\nuse GuzzleHttp\\Ring\\Future\\FutureArrayInterface;\n\n/**\n * Trait AbstractNamespace\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Namespaces\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\ntrait BooleanRequestWrapper\n{\n    /**\n     * Perform Request\n     *\n     * @param  AbstractEndpoint $endpoint The Endpoint to perform this request against\n     *\n     * @throws Missing404Exception\n     * @throws RoutingMissingException\n     */\n    public static function performRequest(AbstractEndpoint $endpoint, Transport $transport)\n    {\n        try {\n            $response = $transport->performRequest(\n                $endpoint->getMethod(),\n                $endpoint->getURI(),\n                $endpoint->getParams(),\n                $endpoint->getBody(),\n                $endpoint->getOptions()\n            );\n\n            $response = $transport->resultOrFuture($response, $endpoint->getOptions());\n            if (!($response instanceof FutureArrayInterface)) {\n                if ($response['status'] === 200) {\n                    return true;\n                } else {\n                    return false;\n                }\n            } else {\n                // async mode, can't easily resolve this...punt to user\n                return $response;\n            }\n        } catch (Missing404Exception $exception) {\n            return false;\n        } catch (RoutingMissingException $exception) {\n            return false;\n        }\n    }\n}\n\n\n--- File: 120 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Endpoints/Index.php ---\n<?php\n\nnamespace Elasticsearch\\Endpoints;\n\nuse Elasticsearch\\Common\\Exceptions;\n\n/**\n * Class Index\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Endpoints\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Index extends AbstractEndpoint\n{\n    /** @var bool  */\n    private $createIfAbsent = false;\n\n    /**\n     * @param array $body\n     *\n     * @throws \\Elasticsearch\\Common\\Exceptions\\InvalidArgumentException\n     * @return $this\n     */\n    public function setBody($body)\n    {\n        if (isset($body) !== true) {\n            return $this;\n        }\n\n        $this->body = $body;\n\n        return $this;\n    }\n\n    /**\n     * @return $this\n     */\n    public function createIfAbsent()\n    {\n        $this->createIfAbsent = true;\n\n        return $this;\n    }\n\n    /**\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     * @return string\n     */\n    public function getURI()\n    {\n        if (isset($this->index) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'index is required for Index'\n            );\n        }\n\n        if (isset($this->type) !== true) {\n            throw new Exceptions\\RuntimeException(\n                'type is required for Index'\n            );\n        }\n\n        $id    = $this->id;\n        $index = $this->index;\n        $type  = $this->type;\n        $uri   = \"/$index/$type\";\n\n        if (isset($id) === true) {\n            $uri = \"/$index/$type/$id\";\n        }\n        return $uri;\n    }\n\n    /**\n     * @return string[]\n     */\n    public function getParamWhitelist()\n    {\n        return array(\n            'consistency',\n            'op_type',\n            'parent',\n            'percolate',\n            'refresh',\n            'replication',\n            'routing',\n            'timeout',\n            'timestamp',\n            'ttl',\n            'version',\n            'version_type',\n            'pipeline'\n        );\n    }\n\n    /**\n     * @return string\n     */\n    public function getMethod()\n    {\n        if (isset($this->id) === true) {\n            return 'PUT';\n        } else {\n            return 'POST';\n        }\n    }\n\n    /**\n     * @return array\n     * @throws \\Elasticsearch\\Common\\Exceptions\\RuntimeException\n     */\n    public function getBody()\n    {\n        if (isset($this->body) !== true) {\n            throw new Exceptions\\RuntimeException('Document body must be set for index request');\n        } else {\n            return $this->body;\n        }\n    }\n}\n\n\n--- File: 323 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/GuzzleStreamWrapper.php ---\n<?php\nnamespace GuzzleHttp\\Stream;\n\n/**\n * Converts Guzzle streams into PHP stream resources.\n */\nclass GuzzleStreamWrapper\n{\n    /** @var resource */\n    public $context;\n\n    /** @var StreamInterface */\n    private $stream;\n\n    /** @var string r, r+, or w */\n    private $mode;\n\n    /**\n     * Returns a resource representing the stream.\n     *\n     * @param StreamInterface $stream The stream to get a resource for\n     *\n     * @return resource\n     * @throws \\InvalidArgumentException if stream is not readable or writable\n     */\n    public static function getResource(StreamInterface $stream)\n    {\n        self::register();\n\n        if ($stream->isReadable()) {\n            $mode = $stream->isWritable() ? 'r+' : 'r';\n        } elseif ($stream->isWritable()) {\n            $mode = 'w';\n        } else {\n            throw new \\InvalidArgumentException('The stream must be readable, '\n                . 'writable, or both.');\n        }\n\n        return fopen('guzzle://stream', $mode, null, stream_context_create([\n            'guzzle' => ['stream' => $stream]\n        ]));\n    }\n\n    /**\n     * Registers the stream wrapper if needed\n     */\n    public static function register()\n    {\n        if (!in_array('guzzle', stream_get_wrappers())) {\n            stream_wrapper_register('guzzle', __CLASS__);\n        }\n    }\n\n    public function stream_open($path, $mode, $options, &$opened_path)\n    {\n        $options = stream_context_get_options($this->context);\n\n        if (!isset($options['guzzle']['stream'])) {\n            return false;\n        }\n\n        $this->mode = $mode;\n        $this->stream = $options['guzzle']['stream'];\n\n        return true;\n    }\n\n    public function stream_read($count)\n    {\n        return $this->stream->read($count);\n    }\n\n    public function stream_write($data)\n    {\n        return (int) $this->stream->write($data);\n    }\n\n    public function stream_tell()\n    {\n        return $this->stream->tell();\n    }\n\n    public function stream_eof()\n    {\n        return $this->stream->eof();\n    }\n\n    public function stream_seek($offset, $whence)\n    {\n        return $this->stream->seek($offset, $whence);\n    }\n\n    public function stream_stat()\n    {\n        static $modeMap = [\n            'r'  => 33060,\n            'r+' => 33206,\n            'w'  => 33188\n        ];\n\n        return [\n            'dev'     => 0,\n            'ino'     => 0,\n            'mode'    => $modeMap[$this->mode],\n            'nlink'   => 0,\n            'uid'     => 0,\n            'gid'     => 0,\n            'rdev'    => 0,\n            'size'    => $this->stream->getSize() ?: 0,\n            'atime'   => 0,\n            'mtime'   => 0,\n            'ctime'   => 0,\n            'blksize' => 0,\n            'blocks'  => 0\n        ];\n    }\n}\n\n\n--- File: 317 # extensions/elasticSearch/vendor/guzzlehttp/streams/src/AppendStream.php ---\n<?php\nnamespace GuzzleHttp\\Stream;\n\nuse GuzzleHttp\\Stream\\Exception\\CannotAttachException;\n\n/**\n * Reads from multiple streams, one after the other.\n *\n * This is a read-only stream decorator.\n */\nclass AppendStream implements StreamInterface\n{\n    /** @var StreamInterface[] Streams being decorated */\n    private $streams = [];\n\n    private $seekable = true;\n    private $current = 0;\n    private $pos = 0;\n    private $detached = false;\n\n    /**\n     * @param StreamInterface[] $streams Streams to decorate. Each stream must\n     *                                   be readable.\n     */\n    public function __construct(array $streams = [])\n    {\n        foreach ($streams as $stream) {\n            $this->addStream($stream);\n        }\n    }\n\n    public function __toString()\n    {\n        try {\n            $this->seek(0);\n            return $this->getContents();\n        } catch (\\Exception $e) {\n            return '';\n        }\n    }\n\n    /**\n     * Add a stream to the AppendStream\n     *\n     * @param StreamInterface $stream Stream to append. Must be readable.\n     *\n     * @throws \\InvalidArgumentException if the stream is not readable\n     */\n    public function addStream(StreamInterface $stream)\n    {\n        if (!$stream->isReadable()) {\n            throw new \\InvalidArgumentException('Each stream must be readable');\n        }\n\n        // The stream is only seekable if all streams are seekable\n        if (!$stream->isSeekable()) {\n            $this->seekable = false;\n        }\n\n        $this->streams[] = $stream;\n    }\n\n    public function getContents()\n    {\n        return Utils::copyToString($this);\n    }\n\n    /**\n     * Closes each attached stream.\n     *\n     * {@inheritdoc}\n     */\n    public function close()\n    {\n        $this->pos = $this->current = 0;\n\n        foreach ($this->streams as $stream) {\n            $stream->close();\n        }\n\n        $this->streams = [];\n    }\n\n    /**\n     * Detaches each attached stream\n     *\n     * {@inheritdoc}\n     */\n    public function detach()\n    {\n        $this->close();\n        $this->detached = true;\n    }\n\n    public function attach($stream)\n    {\n        throw new CannotAttachException();\n    }\n\n    public function tell()\n    {\n        return $this->pos;\n    }\n\n    /**\n     * Tries to calculate the size by adding the size of each stream.\n     *\n     * If any of the streams do not return a valid number, then the size of the\n     * append stream cannot be determined and null is returned.\n     *\n     * {@inheritdoc}\n     */\n    public function getSize()\n    {\n        $size = 0;\n\n        foreach ($this->streams as $stream) {\n            $s = $stream->getSize();\n            if ($s === null) {\n                return null;\n            }\n            $size += $s;\n        }\n\n        return $size;\n    }\n\n    public function eof()\n    {\n        return !$this->streams ||\n            ($this->current >= count($this->streams) - 1 &&\n             $this->streams[$this->current]->eof());\n    }\n\n    /**\n     * Attempts to seek to the given position. Only supports SEEK_SET.\n     *\n     * {@inheritdoc}\n     */\n    public function seek($offset, $whence = SEEK_SET)\n    {\n        if (!$this->seekable || $whence !== SEEK_SET) {\n            return false;\n        }\n\n        $success = true;\n        $this->pos = $this->current = 0;\n\n        // Rewind each stream\n        foreach ($this->streams as $stream) {\n            if (!$stream->seek(0)) {\n                $success = false;\n            }\n        }\n\n        if (!$success) {\n            return false;\n        }\n\n        // Seek to the actual position by reading from each stream\n        while ($this->pos < $offset && !$this->eof()) {\n            $this->read(min(8096, $offset - $this->pos));\n        }\n\n        return $this->pos == $offset;\n    }\n\n    /**\n     * Reads from all of the appended streams until the length is met or EOF.\n     *\n     * {@inheritdoc}\n     */\n    public function read($length)\n    {\n        $buffer = '';\n        $total = count($this->streams) - 1;\n        $remaining = $length;\n\n        while ($remaining > 0) {\n            // Progress to the next stream if needed.\n            if ($this->streams[$this->current]->eof()) {\n                if ($this->current == $total) {\n                    break;\n                }\n                $this->current++;\n            }\n            $buffer .= $this->streams[$this->current]->read($remaining);\n            $remaining = $length - strlen($buffer);\n        }\n\n        $this->pos += strlen($buffer);\n\n        return $buffer;\n    }\n\n    public function isReadable()\n    {\n        return true;\n    }\n\n    public function isWritable()\n    {\n        return false;\n    }\n\n    public function isSeekable()\n    {\n        return $this->seekable;\n    }\n\n    public function write($string)\n    {\n        return false;\n    }\n\n    public function getMetadata($key = null)\n    {\n        return $key ? null : [];\n    }\n}\n\n\n--- File: 65 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/Transport.php ---\n<?php\n\nnamespace Elasticsearch;\n\nuse Elasticsearch\\Common\\Exceptions;\nuse Elasticsearch\\ConnectionPool\\AbstractConnectionPool;\nuse Elasticsearch\\Connections\\Connection;\nuse Elasticsearch\\Connections\\ConnectionInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArrayInterface;\nuse Psr\\Log\\LoggerInterface;\n\n/**\n * Class Transport\n *\n * @category Elasticsearch\n * @package  Elasticsearch\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n */\nclass Transport\n{\n    /**\n     * @var AbstractConnectionPool\n     */\n    public $connectionPool;\n\n    /**\n     * @var LoggerInterface\n     */\n    private $log;\n\n    /** @var  int */\n    public $retryAttempts = 0;\n\n    /** @var  Connection */\n    public $lastConnection;\n\n    /** @var int  */\n    public $retries;\n\n    /**\n     * Transport class is responsible for dispatching requests to the\n     * underlying cluster connections\n     *\n     * @param $retries\n     * @param bool $sniffOnStart\n     * @param ConnectionPool\\AbstractConnectionPool $connectionPool\n     * @param \\Psr\\Log\\LoggerInterface $log    Monolog logger object\n     */\n\t// @codingStandardsIgnoreStart\n\t// \"Arguments with default values must be at the end of the argument list\" - cannot change the interface\n    public function __construct($retries, $sniffOnStart = false, AbstractConnectionPool $connectionPool, LoggerInterface $log)\n    {\n\t    // @codingStandardsIgnoreEnd\n\n        $this->log            = $log;\n        $this->connectionPool = $connectionPool;\n        $this->retries        = $retries;\n\n        if ($sniffOnStart === true) {\n            $this->log->notice('Sniff on Start.');\n            $this->connectionPool->scheduleCheck();\n        }\n    }\n\n    /**\n     * Returns a single connection from the connection pool\n     * Potentially performs a sniffing step before returning\n     *\n     * @return ConnectionInterface Connection\n     */\n\n    public function getConnection()\n    {\n        return $this->connectionPool->nextConnection();\n    }\n\n    /**\n     * Perform a request to the Cluster\n     *\n     * @param string $method     HTTP method to use\n     * @param string $uri        HTTP URI to send request to\n     * @param null $params     Optional query parameters\n     * @param null $body       Optional query body\n     * @param array $options\n     *\n     * @throws Common\\Exceptions\\NoNodesAvailableException|\\Exception\n     * @return FutureArrayInterface\n     */\n    public function performRequest($method, $uri, $params = null, $body = null, $options = [])\n    {\n        try {\n            $connection  = $this->getConnection();\n        } catch (Exceptions\\NoNodesAvailableException $exception) {\n            $this->log->critical('No alive nodes found in cluster');\n            throw $exception;\n        }\n\n        $response             = array();\n        $caughtException      = null;\n        $this->lastConnection = $connection;\n\n        $future = $connection->performRequest(\n            $method,\n            $uri,\n            $params,\n            $body,\n            $options,\n            $this\n        );\n\n        $future->promise()->then(\n            //onSuccess\n            function ($response) {\n                $this->retryAttempts = 0;\n                // Note, this could be a 4xx or 5xx error\n            },\n            //onFailure\n            function ($response) {\n                // Ignore 400 level errors, as that means the server responded just fine\n                if (is_array($response) && isset($response['code']) && $response['code'] >= 400 && $response['code'] < 500) {\n                    // Otherwise schedule a check\n                    $this->connectionPool->scheduleCheck();\n                }\n            }\n        );\n\n        return $future;\n    }\n\n    /**\n     * @param FutureArrayInterface $result  Response of a request (promise)\n     * @param array                $options Options for transport\n     *\n     * @return callable|array\n     */\n    public function resultOrFuture($result, $options = [])\n    {\n        $response = null;\n        $async = isset($options['client']['future']) ? $options['client']['future'] : null;\n        if (is_null($async) || $async === false) {\n            do {\n                $result = $result->wait();\n            } while ($result instanceof FutureArrayInterface);\n\n            return $result;\n        } elseif ($async === true || $async === 'lazy') {\n            return $result;\n        }\n    }\n\n    /**\n     * @param $request\n     *\n     * @return bool\n     */\n    public function shouldRetry($request)\n    {\n        if ($this->retryAttempts < $this->retries) {\n            $this->retryAttempts += 1;\n\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns the last used connection so that it may be inspected.  Mainly\n     * for debugging/testing purposes.\n     *\n     * @return Connection\n     */\n    public function getLastConnection()\n    {\n        return $this->lastConnection;\n    }\n}\n\n\n--- File: 283 # extensions/elasticSearch/vendor/guzzlehttp/ringphp/src/Core.php ---\n<?php\nnamespace GuzzleHttp\\Ring;\n\nuse GuzzleHttp\\Stream\\StreamInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArrayInterface;\nuse GuzzleHttp\\Ring\\Future\\FutureArray;\n\n/**\n * Provides core functionality of Ring handlers and middleware.\n */\nclass Core\n{\n    /**\n     * Returns a function that calls all of the provided functions, in order,\n     * passing the arguments provided to the composed function to each function.\n     *\n     * @param callable[] $functions Array of functions to proxy to.\n     *\n     * @return callable\n     */\n    public static function callArray(array $functions)\n    {\n        return function () use ($functions) {\n            $args = func_get_args();\n            foreach ($functions as $fn) {\n                call_user_func_array($fn, $args);\n            }\n        };\n    }\n\n    /**\n     * Gets an array of header line values from a message for a specific header\n     *\n     * This method searches through the \"headers\" key of a message for a header\n     * using a case-insensitive search.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return array\n     */\n    public static function headerLines($message, $header)\n    {\n        $result = [];\n\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    $result = array_merge($result, $value);\n                }\n            }\n        }\n\n        return $result;\n    }\n\n    /**\n     * Gets a header value from a message as a string or null\n     *\n     * This method searches through the \"headers\" key of a message for a header\n     * using a case-insensitive search. The lines of the header are imploded\n     * using commas into a single string return value.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return string|null Returns the header string if found, or null if not.\n     */\n    public static function header($message, $header)\n    {\n        $match = self::headerLines($message, $header);\n        return $match ? implode(', ', $match) : null;\n    }\n\n    /**\n     * Returns the first header value from a message as a string or null. If\n     * a header line contains multiple values separated by a comma, then this\n     * function will return the first value in the list.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to retrieve\n     *\n     * @return string|null Returns the value as a string if found.\n     */\n    public static function firstHeader($message, $header)\n    {\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    // Return the match itself if it is a single value.\n                    $pos = strpos($value[0], ',');\n                    return $pos ? substr($value[0], 0, $pos) : $value[0];\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns true if a message has the provided case-insensitive header.\n     *\n     * @param array  $message Request or response hash.\n     * @param string $header  Header to check\n     *\n     * @return bool\n     */\n    public static function hasHeader($message, $header)\n    {\n        if (!empty($message['headers'])) {\n            foreach ($message['headers'] as $name => $value) {\n                if (!strcasecmp($name, $header)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Parses an array of header lines into an associative array of headers.\n     *\n     * @param array $lines Header lines array of strings in the following\n     *                     format: \"Name: Value\"\n     * @return array\n     */\n    public static function headersFromLines($lines)\n    {\n        $headers = [];\n\n        foreach ($lines as $line) {\n            $parts = explode(':', $line, 2);\n            $headers[trim($parts[0])][] = isset($parts[1])\n                ? trim($parts[1])\n                : null;\n        }\n\n        return $headers;\n    }\n\n    /**\n     * Removes a header from a message using a case-insensitive comparison.\n     *\n     * @param array  $message Message that contains 'headers'\n     * @param string $header  Header to remove\n     *\n     * @return array\n     */\n    public static function removeHeader(array $message, $header)\n    {\n        if (isset($message['headers'])) {\n            foreach (array_keys($message['headers']) as $key) {\n                if (!strcasecmp($header, $key)) {\n                    unset($message['headers'][$key]);\n                }\n            }\n        }\n\n        return $message;\n    }\n\n    /**\n     * Replaces any existing case insensitive headers with the given value.\n     *\n     * @param array  $message Message that contains 'headers'\n     * @param string $header  Header to set.\n     * @param array  $value   Value to set.\n     *\n     * @return array\n     */\n    public static function setHeader(array $message, $header, array $value)\n    {\n        $message = self::removeHeader($message, $header);\n        $message['headers'][$header] = $value;\n\n        return $message;\n    }\n\n    /**\n     * Creates a URL string from a request.\n     *\n     * If the \"url\" key is present on the request, it is returned, otherwise\n     * the url is built up based on the scheme, host, uri, and query_string\n     * request values.\n     *\n     * @param array $request Request to get the URL from\n     *\n     * @return string Returns the request URL as a string.\n     * @throws \\InvalidArgumentException if no Host header is present.\n     */\n    public static function url(array $request)\n    {\n        if (isset($request['url'])) {\n            return $request['url'];\n        }\n\n        $uri = (isset($request['scheme'])\n                ? $request['scheme'] : 'http') . '://';\n\n        if ($host = self::header($request, 'host')) {\n            $uri .= $host;\n        } else {\n            throw new \\InvalidArgumentException('No Host header was provided');\n        }\n\n        if (isset($request['uri'])) {\n            $uri .= $request['uri'];\n        }\n\n        if (isset($request['query_string'])) {\n            $uri .= '?' . $request['query_string'];\n        }\n\n        return $uri;\n    }\n\n    /**\n     * Reads the body of a message into a string.\n     *\n     * @param array|FutureArrayInterface $message Array containing a \"body\" key\n     *\n     * @return null|string Returns the body as a string or null if not set.\n     * @throws \\InvalidArgumentException if a request body is invalid.\n     */\n    public static function body($message)\n    {\n        if (!isset($message['body'])) {\n            return null;\n        }\n\n        if ($message['body'] instanceof StreamInterface) {\n            return (string) $message['body'];\n        }\n\n        switch (gettype($message['body'])) {\n            case 'string':\n                return $message['body'];\n            case 'resource':\n                return stream_get_contents($message['body']);\n            case 'object':\n                if ($message['body'] instanceof \\Iterator) {\n                    return implode('', iterator_to_array($message['body']));\n                } elseif (method_exists($message['body'], '__toString')) {\n                    return (string) $message['body'];\n                }\n            default:\n                throw new \\InvalidArgumentException('Invalid request body: '\n                    . self::describeType($message['body']));\n        }\n    }\n\n    /**\n     * Rewind the body of the provided message if possible.\n     *\n     * @param array $message Message that contains a 'body' field.\n     *\n     * @return bool Returns true on success, false on failure\n     */\n    public static function rewindBody($message)\n    {\n        if ($message['body'] instanceof StreamInterface) {\n            return $message['body']->seek(0);\n        }\n\n        if ($message['body'] instanceof \\Generator) {\n            return false;\n        }\n\n        if ($message['body'] instanceof \\Iterator) {\n            $message['body']->rewind();\n            return true;\n        }\n\n        if (is_resource($message['body'])) {\n            return rewind($message['body']);\n        }\n\n        return is_string($message['body'])\n            || (is_object($message['body'])\n                && method_exists($message['body'], '__toString'));\n    }\n\n    /**\n     * Debug function used to describe the provided value type and class.\n     *\n     * @param mixed $input\n     *\n     * @return string Returns a string containing the type of the variable and\n     *                if a class is provided, the class name.\n     */\n    public static function describeType($input)\n    {\n        switch (gettype($input)) {\n            case 'object':\n                return 'object(' . get_class($input) . ')';\n            case 'array':\n                return 'array(' . count($input) . ')';\n            default:\n                ob_start();\n                var_dump($input);\n                // normalize float vs double\n                return str_replace('double(', 'float(', rtrim(ob_get_clean()));\n        }\n    }\n\n    /**\n     * Sleep for the specified amount of time specified in the request's\n     * ['client']['delay'] option if present.\n     *\n     * This function should only be used when a non-blocking sleep is not\n     * possible.\n     *\n     * @param array $request Request to sleep\n     */\n    public static function doSleep(array $request)\n    {\n        if (isset($request['client']['delay'])) {\n            usleep($request['client']['delay'] * 1000);\n        }\n    }\n\n    /**\n     * Returns a proxied future that modifies the dereferenced value of another\n     * future using a promise.\n     *\n     * @param FutureArrayInterface $future      Future to wrap with a new future\n     * @param callable    $onFulfilled Invoked when the future fulfilled\n     * @param callable    $onRejected  Invoked when the future rejected\n     * @param callable    $onProgress  Invoked when the future progresses\n     *\n     * @return FutureArray\n     */\n    public static function proxy(\n        FutureArrayInterface $future,\n        callable $onFulfilled = null,\n        callable $onRejected = null,\n        callable $onProgress = null\n    ) {\n        return new FutureArray(\n            $future->then($onFulfilled, $onRejected, $onProgress),\n            [$future, 'wait'],\n            [$future, 'cancel']\n        );\n    }\n\n    /**\n     * Returns a debug stream based on the provided variable.\n     *\n     * @param mixed $value Optional value\n     *\n     * @return resource\n     */\n    public static function getDebugResource($value = null)\n    {\n        if (is_resource($value)) {\n            return $value;\n        } elseif (defined('STDOUT')) {\n            return STDOUT;\n        } else {\n            return fopen('php://output', 'w');\n        }\n    }\n}\n\n\n--- File: 64 # extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ClientBuilder.php ---\n<?php\n\nnamespace Elasticsearch;\n\nuse Elasticsearch\\Common\\Exceptions\\InvalidArgumentException;\nuse Elasticsearch\\Common\\Exceptions\\RuntimeException;\nuse Elasticsearch\\ConnectionPool\\AbstractConnectionPool;\nuse Elasticsearch\\ConnectionPool\\Selectors\\SelectorInterface;\nuse Elasticsearch\\ConnectionPool\\StaticNoPingConnectionPool;\nuse Elasticsearch\\Connections\\Connection;\nuse Elasticsearch\\Connections\\ConnectionFactory;\nuse Elasticsearch\\Connections\\ConnectionFactoryInterface;\nuse Elasticsearch\\Namespaces\\NamespaceBuilderInterface;\nuse Elasticsearch\\Serializers\\SerializerInterface;\nuse Elasticsearch\\ConnectionPool\\Selectors;\nuse Elasticsearch\\Serializers\\SmartSerializer;\nuse GuzzleHttp\\Ring\\Client\\CurlHandler;\nuse GuzzleHttp\\Ring\\Client\\CurlMultiHandler;\nuse GuzzleHttp\\Ring\\Client\\Middleware;\nuse Psr\\Log\\LoggerInterface;\nuse Psr\\Log\\NullLogger;\nuse Monolog\\Logger;\nuse Monolog\\Handler\\StreamHandler;\nuse Monolog\\Processor\\IntrospectionProcessor;\n\n/**\n * Class ClientBuilder\n *\n * @category Elasticsearch\n * @package  Elasticsearch\\Common\\Exceptions\n * @author   Zachary Tong <zach@elastic.co>\n * @license  http://www.apache.org/licenses/LICENSE-2.0 Apache2\n * @link     http://elastic.co\n  */\nclass ClientBuilder\n{\n    /** @var Transport */\n    private $transport;\n\n    /** @var callback */\n    private $endpoint;\n\n    /** @var NamespaceBuilderInterface[] */\n    private $registeredNamespacesBuilders = [];\n\n    /** @var  ConnectionFactoryInterface */\n    private $connectionFactory;\n\n    private $handler;\n\n    /** @var  LoggerInterface */\n    private $logger;\n\n    /** @var  LoggerInterface */\n    private $tracer;\n\n    /** @var string */\n    private $connectionPool = '\\Elasticsearch\\ConnectionPool\\StaticNoPingConnectionPool';\n\n    /** @var  string */\n    private $serializer = '\\Elasticsearch\\Serializers\\SmartSerializer';\n\n    /** @var  string */\n    private $selector = '\\Elasticsearch\\ConnectionPool\\Selectors\\RoundRobinSelector';\n\n    /** @var  array */\n    private $connectionPoolArgs = [\n        'randomizeHosts' => true\n    ];\n\n    /** @var array */\n    private $hosts;\n\n    /** @var array */\n    private $connectionParams;\n\n    /** @var  int */\n    private $retries;\n\n    /** @var bool */\n    private $sniffOnStart = false;\n\n    /** @var null|array  */\n    private $sslCert = null;\n\n    /** @var null|array  */\n    private $sslKey = null;\n\n    /** @var null|bool|string */\n    private $sslVerification = null;\n\n    /**\n     * @return ClientBuilder\n     */\n    public static function create()\n    {\n        return new static();\n    }\n\n    /**\n     * Can supply first parm to Client::__construct() when invoking manually or with dependency injection\n     * @return this->ransport\n     *\n     */\n    public function getTransport()\n    {\n        return $this->transport;\n    }\n\n    /**\n     * Can supply second parm to Client::__construct() when invoking manually or with dependency injection\n     * @return this->endpoint\n     *\n     */\n    public function getEndpoint()\n    {\n        return $this->endpoint;\n    }\n\n    /**\n     * Can supply third parm to Client::__construct() when invoking manually or with dependency injection\n     * @return this->registeredNamespacesBuilders\n     *\n     */\n    public function getRegisteredNamespacesBuilders()\n    {\n        return $this->registeredNamespacesBuilders;\n    }\n\n    /**\n     * Build a new client from the provided config.  Hash keys\n     * should correspond to the method name e.g. ['connectionPool']\n     * corresponds to setConnectionPool().\n     *\n     * Missing keys will use the default for that setting if applicable\n     *\n     * Unknown keys will throw an exception by default, but this can be silenced\n     * by setting `quiet` to true\n     *\n     * @param array $config hash of settings\n     * @param bool $quiet False if unknown settings throw exception, true to silently\n     *                    ignore unknown settings\n     * @throws Common\\Exceptions\\RuntimeException\n     * @return \\Elasticsearch\\Client\n     */\n    public static function fromConfig($config, $quiet = false)\n    {\n        $builder = new self;\n        foreach ($config as $key => $value) {\n            $method = \"set$key\";\n            if (method_exists($builder, $method)) {\n                $builder->$method($value);\n                unset($config[$key]);\n            }\n        }\n\n        if ($quiet === false && count($config) > 0) {\n            $unknown = implode(array_keys($config));\n            throw new RuntimeException(\"Unknown parameters provided: $unknown\");\n        }\n        return $builder->build();\n    }\n\n    /**\n     * @param array $multiParams\n     * @param array $singleParams\n     * @throws \\RuntimeException\n     * @return callable\n     */\n    public static function defaultHandler($multiParams = [], $singleParams = [])\n    {\n        $future = null;\n        if (extension_loaded('curl')) {\n            $config = array_merge([ 'mh' => curl_multi_init() ], $multiParams);\n            if (function_exists('curl_reset')) {\n                $default = new CurlHandler($singleParams);\n                $future = new CurlMultiHandler($config);\n            } else {\n                $default = new CurlMultiHandler($config);\n            }\n        } else {\n            throw new \\RuntimeException('Elasticsearch-PHP requires cURL, or a custom HTTP handler.');\n        }\n\n        return $future ? Middleware::wrapFuture($default, $future) : $default;\n    }\n\n    /**\n     * @param array $params\n     * @throws \\RuntimeException\n     * @return CurlMultiHandler\n     */\n    public static function multiHandler($params = [])\n    {\n        if (function_exists('curl_multi_init')) {\n            return new CurlMultiHandler(array_merge([ 'mh' => curl_multi_init() ], $params));\n        } else {\n            throw new \\RuntimeException('CurlMulti handler requires cURL.');\n        }\n    }\n\n    /**\n     * @return CurlHandler\n     * @throws \\RuntimeException\n     */\n    public static function singleHandler()\n    {\n        if (function_exists('curl_reset')) {\n            return new CurlHandler();\n        } else {\n            throw new \\RuntimeException('CurlSingle handler requires cURL.');\n        }\n    }\n\n\t/**\n\t * @param $path\n\t * @param int $level\n\t * @return Logger\n\t */\n    public static function defaultLogger($path, $level = Logger::WARNING)\n    {\n        $log       = new Logger('log');\n        $handler   = new StreamHandler($path, $level);\n        $log->pushHandler($handler);\n\n        return $log;\n    }\n\n    /**\n     * @param \\Elasticsearch\\Connections\\ConnectionFactoryInterface $connectionFactory\n     * @return $this\n     */\n    public function setConnectionFactory(ConnectionFactoryInterface $connectionFactory)\n    {\n        $this->connectionFactory = $connectionFactory;\n\n        return $this;\n    }\n\n    /**\n     * @param \\Elasticsearch\\ConnectionPool\\AbstractConnectionPool|string $connectionPool\n     * @param array $args\n     * @throws \\InvalidArgumentException\n     * @return $this\n     */\n    public function setConnectionPool($connectionPool, array $args = [])\n    {\n        if (is_string($connectionPool)) {\n            $this->connectionPool = $connectionPool;\n            $this->connectionPoolArgs = $args;\n        } elseif (is_object($connectionPool)) {\n            $this->connectionPool = $connectionPool;\n        } else {\n            throw new InvalidArgumentException(\"Serializer must be a class path or instantiated object extending AbstractConnectionPool\");\n        }\n\n        return $this;\n    }\n\n    /**\n     * @param callable $endpoint\n     * @return $this\n     */\n    public function setEndpoint($endpoint)\n    {\n        $this->endpoint = $endpoint;\n\n        return $this;\n    }\n\n    /**\n     * @param NamespaceBuilderInterface $namespaceBuilder\n     * @return $this\n     */\n    public function registerNamespace(NamespaceBuilderInterface $namespaceBuilder)\n    {\n        $this->registeredNamespacesBuilders[] = $namespaceBuilder;\n\n        return $this;\n    }\n\n    /**\n     * @param \\Elasticsearch\\Transport $transport\n     * @return $this\n     */\n    public function setTransport($transport)\n    {\n        $this->transport = $transport;\n\n        return $this;\n    }\n\n    /**\n     * @param mixed $handler\n     * @return $this\n     */\n    public function setHandler($handler)\n    {\n        $this->handler = $handler;\n\n        return $this;\n    }\n\n    /**\n     * @param \\Psr\\Log\\LoggerInterface $logger\n     * @return $this\n     */\n    public function setLogger($logger)\n    {\n        if (!$logger instanceof LoggerInterface) {\n            throw new InvalidArgumentException('$logger must implement \\Psr\\Log\\LoggerInterface!');\n        }\n\n        $this->logger = $logger;\n\n        return $this;\n    }\n\n    /**\n     * @param \\Psr\\Log\\LoggerInterface $tracer\n     * @return $this\n     */\n    public function setTracer($tracer)\n    {\n        if (!$tracer instanceof LoggerInterface) {\n            throw new InvalidArgumentException('$tracer must implement \\Psr\\Log\\LoggerInterface!');\n        }\n\n        $this->tracer = $tracer;\n\n        return $this;\n    }\n\n    /**\n     * @param \\Elasticsearch\\Serializers\\SerializerInterface|string $serializer\n     * @throws \\InvalidArgumentException\n     * @return $this\n     */\n    public function setSerializer($serializer)\n    {\n        $this->parseStringOrObject($serializer, $this->serializer, 'SerializerInterface');\n\n        return $this;\n    }\n\n    /**\n     * @param array $hosts\n     * @return $this\n     */\n    public function setHosts($hosts)\n    {\n        $this->hosts = $hosts;\n\n        return $this;\n    }\n\n    /**\n     * @param array $params\n     * @return $this\n     */\n    public function setConnectionParams(array $params)\n    {\n        $this->connectionParams = $params;\n\n        return $this;\n    }\n\n    /**\n     * @param int $retries\n     * @return $this\n     */\n    public function setRetries($retries)\n    {\n        $this->retries = $retries;\n\n        return $this;\n    }\n\n    /**\n     * @param \\Elasticsearch\\ConnectionPool\\Selectors\\SelectorInterface|string $selector\n     * @throws \\InvalidArgumentException\n     * @return $this\n     */\n    public function setSelector($selector)\n    {\n        $this->parseStringOrObject($selector, $this->selector, 'SelectorInterface');\n\n        return $this;\n    }\n\n    /**\n     * @param boolean $sniffOnStart\n     * @return $this\n     */\n    public function setSniffOnStart($sniffOnStart)\n    {\n        $this->sniffOnStart = $sniffOnStart;\n\n        return $this;\n    }\n\n    /**\n     * @param $cert\n     * @param null|string $password\n     * @return $this\n     */\n    public function setSSLCert($cert, $password = null)\n    {\n        $this->sslCert = [$cert, $password];\n\n        return $this;\n    }\n\n    /**\n     * @param $key\n     * @param null|string $password\n     * @return $this\n     */\n    public function setSSLKey($key, $password = null)\n    {\n        $this->sslKey = [$key, $password];\n\n        return $this;\n    }\n\n    /**\n     * @param bool|string $value\n     * @return $this\n     */\n    public function setSSLVerification($value = true)\n    {\n        $this->sslVerification = $value;\n\n        return $this;\n    }\n\n    /**\n     * @return Client\n     */\n    public function build()\n    {\n        $this->buildLoggers();\n\n        if (is_null($this->handler)) {\n            $this->handler = ClientBuilder::defaultHandler();\n        }\n\n        $sslOptions = null;\n        if (isset($this->sslKey)) {\n            $sslOptions['ssl_key'] = $this->sslKey;\n        }\n        if (isset($this->sslCert)) {\n            $sslOptions['cert'] = $this->sslCert;\n        }\n        if (isset($this->sslVerification)) {\n            $sslOptions['verify'] = $this->sslVerification;\n        }\n\n        if (!is_null($sslOptions)) {\n            $sslHandler = function (callable $handler, array $sslOptions) {\n                return function (array $request) use ($handler, $sslOptions) {\n                    // Add our custom headers\n                    foreach ($sslOptions as $key => $value) {\n                        $request['client'][$key] = $value;\n                    }\n\n                    // Send the request using the handler and return the response.\n                    return $handler($request);\n                };\n            };\n            $this->handler = $sslHandler($this->handler, $sslOptions);\n        }\n\n        if (is_null($this->serializer)) {\n            $this->serializer = new SmartSerializer();\n        } elseif (is_string($this->serializer)) {\n            $this->serializer = new $this->serializer;\n        }\n\n        if (is_null($this->connectionFactory)) {\n            if (is_null($this->connectionParams)) {\n                $this->connectionParams = [];\n            }\n\n            // Make sure we are setting Content-Type and Accept (unless the user has explicitly\n            // overridden it\n            if (isset($this->connectionParams['client']['headers']) === false) {\n                $this->connectionParams['client']['headers'] = [\n                    'Content-Type' => ['application/json'],\n                    'Accept' => ['application/json']\n                ];\n            } else {\n                if (isset($this->connectionParams['client']['headers']['Content-Type']) === false) {\n                    $this->connectionParams['client']['headers']['Content-Type'] = ['application/json'];\n                }\n                if (isset($this->connectionParams['client']['headers']['Accept']) === false) {\n                    $this->connectionParams['client']['headers']['Accept'] = ['application/json'];\n                }\n            }\n\n            $this->connectionFactory = new ConnectionFactory($this->handler, $this->connectionParams, $this->serializer, $this->logger, $this->tracer);\n        }\n\n        if (is_null($this->hosts)) {\n            $this->hosts = $this->getDefaultHost();\n        }\n\n        if (is_null($this->selector)) {\n            $this->selector = new Selectors\\RoundRobinSelector();\n        } elseif (is_string($this->selector)) {\n            $this->selector = new $this->selector;\n        }\n\n        $this->buildTransport();\n\n        if (is_null($this->endpoint)) {\n            $serializer = $this->serializer;\n\n            $this->endpoint = function ($class) use ($serializer) {\n                $fullPath = '\\\\Elasticsearch\\\\Endpoints\\\\' . $class;\n                if ($class === 'Bulk' || $class === 'Msearch' || $class === 'MsearchTemplate' || $class === 'MPercolate') {\n                    return new $fullPath($serializer);\n                } else {\n                    return new $fullPath();\n                }\n            };\n        }\n\n        $registeredNamespaces = [];\n        foreach ($this->registeredNamespacesBuilders as $builder) {\n            /** @var $builder NamespaceBuilderInterface */\n            $registeredNamespaces[$builder->getName()] = $builder->getObject($this->transport, $this->serializer);\n        }\n\n        return $this->instantiate($this->transport, $this->endpoint, $registeredNamespaces);\n    }\n\n    /**\n     * @param Transport $transport\n     * @param callable $endpoint\n     * @param Object[] $registeredNamespaces\n     * @return Client\n     */\n    protected function instantiate(Transport $transport, callable $endpoint, array $registeredNamespaces)\n    {\n        return new Client($transport, $endpoint, $registeredNamespaces);\n    }\n\n    private function buildLoggers()\n    {\n        if (is_null($this->logger)) {\n            $this->logger = new NullLogger();\n        }\n\n        if (is_null($this->tracer)) {\n            $this->tracer = new NullLogger();\n        }\n    }\n\n    private function buildTransport()\n    {\n        $connections = $this->buildConnectionsFromHosts($this->hosts);\n\n        if (is_string($this->connectionPool)) {\n            $this->connectionPool = new $this->connectionPool(\n                $connections,\n                $this->selector,\n                $this->connectionFactory,\n                $this->connectionPoolArgs\n            );\n        } elseif (is_null($this->connectionPool)) {\n            $this->connectionPool = new StaticNoPingConnectionPool(\n                $connections,\n                $this->selector,\n                $this->connectionFactory,\n                $this->connectionPoolArgs\n            );\n        }\n\n        if (is_null($this->retries)) {\n            $this->retries = count($connections);\n        }\n\n        if (is_null($this->transport)) {\n            $this->transport = new Transport($this->retries, $this->sniffOnStart, $this->connectionPool, $this->logger);\n        }\n    }\n\n    private function parseStringOrObject($arg, &$destination, $interface)\n    {\n        if (is_string($arg)) {\n            $destination = new $arg;\n        } elseif (is_object($arg)) {\n            $destination = $arg;\n        } else {\n            throw new InvalidArgumentException(\"Serializer must be a class path or instantiated object implementing $interface\");\n        }\n    }\n\n    /**\n     * @return array\n     */\n    private function getDefaultHost()\n    {\n        return ['localhost:9200'];\n    }\n\n    /**\n     * @param array $hosts\n     *\n     * @throws \\InvalidArgumentException\n     * @return \\Elasticsearch\\Connections\\Connection[]\n     */\n    private function buildConnectionsFromHosts($hosts)\n    {\n        if (is_array($hosts) === false) {\n            $this->logger->error(\"Hosts parameter must be an array of strings, or an array of Connection hashes.\");\n            throw new InvalidArgumentException('Hosts parameter must be an array of strings, or an array of Connection hashes.');\n        }\n\n        $connections = [];\n        foreach ($hosts as $host) {\n            if (is_string($host)) {\n                $host = $this->prependMissingScheme($host);\n                $host = $this->extractURIParts($host);\n            } elseif (is_array($host)) {\n                $host = $this->normalizeExtendedHost($host);\n            } else {\n                $this->logger->error(\"Could not parse host: \".print_r($host, true));\n                throw new RuntimeException(\"Could not parse host: \".print_r($host, true));\n            }\n            $connections[] = $this->connectionFactory->create($host);\n        }\n\n        return $connections;\n    }\n\n    /**\n     * @param $host\n     * @return array\n     */\n    private function normalizeExtendedHost($host)\n    {\n        if (isset($host['host']) === false) {\n            $this->logger->error(\"Required 'host' was not defined in extended format: \".print_r($host, true));\n            throw new RuntimeException(\"Required 'host' was not defined in extended format: \".print_r($host, true));\n        }\n\n        if (isset($host['scheme']) === false) {\n            $host['scheme'] = 'http';\n        }\n        if (isset($host['port']) === false) {\n            $host['port'] = '9200';\n        }\n        return $host;\n    }\n\n    /**\n     * @param array $host\n     *\n     * @throws \\InvalidArgumentException\n     * @return array\n     */\n    private function extractURIParts($host)\n    {\n        $parts = parse_url($host);\n\n        if ($parts === false) {\n            throw new InvalidArgumentException(\"Could not parse URI\");\n        }\n\n        if (isset($parts['port']) !== true) {\n            $parts['port'] = 9200;\n        }\n\n        return $parts;\n    }\n\n    /**\n     * @param string $host\n     *\n     * @return string\n     */\n    private function prependMissingScheme($host)\n    {\n        if (!filter_var($host, FILTER_VALIDATE_URL, FILTER_FLAG_SCHEME_REQUIRED)) {\n            $host = 'http://' . $host;\n        }\n\n        return $host;\n    }\n}\n\n\nInstructions for the chapter (Generate content in English unless specified otherwise):\n- Start with a clear heading (e.g., `# Chapter 9: Elasticsearch Client Integration (Vendor Stack)\n`). Use the provided concept name.\n\n- If this is not the first chapter, begin with a brief transition from the previous chapter, referencing it with a proper Markdown link using its name.\n\n- Begin with a high-level motivation explaining what problem this abstraction solves. Start with a central use case as a concrete example. The whole chapter should guide the reader to understand how to solve this use case. Make it very minimal and friendly to beginners.\n\n- If the abstraction is complex, break it down into key concepts. Explain each concept one-by-one in a very beginner-friendly way.\n\n- Explain how to use this abstraction to solve the use case. Give example inputs and outputs for code snippets (if the output isn't values, describe at a high level what will happen).\n\n- Each code block should be BELOW 10 lines! If longer code blocks are needed, break them down into smaller pieces and walk through them one-by-one. Aggresively simplify the code to make it minimal. Use comments to skip non-important implementation details. Each code block should have a beginner friendly explanation right after it.\n\n- Describe the internal implementation to help understand what's under the hood. First provide a non-code or code-light walkthrough on what happens step-by-step when the abstraction is called. It's recommended to use a simple sequenceDiagram with a dummy example - keep it minimal with at most 5 participants to ensure clarity. If participant name has space, use: `participant QP as Query Processing`. .\n\n- Then dive deeper into code for the internal implementation with references to files. Provide example code blocks, but make them similarly simple and beginner-friendly. Explain.\n\n- IMPORTANT: When you need to refer to other core abstractions covered in other chapters, ALWAYS use proper Markdown links like this: [Chapter Title](filename.md). Use the Complete Tutorial Structure above to find the correct filename and the chapter title. Translate the surrounding text.\n\n- Use mermaid diagrams to illustrate complex concepts (```mermaid``` format). .\n\n- Heavily use analogies and examples throughout to help beginners understand.\n\n- End the chapter with a brief conclusion that summarizes what was learned and provides a transition to the next chapter. If there is a next chapter, use a proper Markdown link: [Next Chapter Title](next_chapter_filename).\n\n- Ensure the tone is welcoming and easy for a newcomer to understand.\n\n- Output *only* the Markdown content for this chapter.\n\nNow, directly provide a super beginner-friendly Markdown output (DON'T need ```markdown``` tags):\n": "# Chapter 9: Elasticsearch Client Integration (Vendor Stack)\n\nIn the previous chapter, you saw how we log everything in one place and make it searchable: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md). This chapter lifts the hood on the \u201csearchable\u201d part: how koperasi talks to Elasticsearch using the embedded vendor stack (Elasticsearch PHP client + Guzzle + RingPHP + Streams).\n\nThink of it like a courier network:\n- Endpoints prepare parcels (requests).\n- Transport figures out the route and retries.\n- Guzzle handlers drive the trucks.\n- Streams are conveyor belts that move bytes efficiently.\n\nYou\u2019ll learn just enough to debug confidently and index a tiny document yourself.\n\n---\n\n## The use case we\u2019ll solve (tiny and concrete)\n\nOps wants to find a failing Dukcapil call. Our app should:\n1) Index a structured log event into Elasticsearch quickly.\n2) Return an ID on success (so we know it\u2019s stored).\n3) If ES is down, fall back to DB (already wired in the app).\n\nWe\u2019ll do a minimal \u201chello, ES\u201d index call, then show how the vendor layers make it work and where to peek when things go wrong.\n\n---\n\n## Why this stack exists\n\n- Searchable logs: ES lets us filter by service, time, and status.\n- Performance: Guzzle + Streams move bytes efficiently.\n- Resilience: Transport layer manages retries and node selection.\n- Observability: Easy to add fields and query them later.\n\nYou rarely need to edit vendor code\u2014but knowing the layers helps you debug.\n\n---\n\n## The layers (beginner-friendly tour)\n\n- Client + Endpoints (What to send)\n  - You call client->index([...]). Endpoints build the HTTP path (e.g., /index/_doc).\n\n- Transport (How to send)\n  - Decides which ES node to hit, applies retries, and returns a future or array.\n\n- Guzzle + RingPHP (Driving the truck)\n  - Curl-based handlers actually perform HTTP calls (sync or async).\n\n- Streams (Moving bytes)\n  - Efficient reading/writing of request/response bodies.\n\nKeep the courier picture in mind: endpoints pack, transport routes, handlers drive, streams move.\n\n---\n\n## Quick start: index one log event\n\n1) Build a client (point it to your ES host)\n```php\nuse Elasticsearch\\ClientBuilder;\n\n$client = ClientBuilder::create()\n  ->setHosts(['http://localhost:9200'])\n  ->build();\n```\nExplanation: This creates an ES client that talks to http://localhost:9200 using cURL under the hood.\n\n2) Create the index (if it doesn\u2019t exist yet)\n```php\n$exists = $client->indices()->exists(['index'=>'koperasi-logs']);\nif(!$exists){ $client->indices()->create(['index'=>'koperasi-logs']); }\n```\nExplanation: A safe first step; later, our service does this automatically.\n\n3) Index a small document\n```php\n$res = $client->index([\n  'index'=>'koperasi-logs',\n  'type' => '_doc',\n  'body' => ['service'=>'dukcapil','status'=>200,'latency'=>0.123]\n]);\n// $res['_id'] exists on success\n```\nExplanation: That\u2019s it\u2014one JSON document stored in ES, ready to search (by service/status/latency).\n\nTip: In koperasi, this is done for you by ElkLoggingService when you call logApplication(...) from [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## Where koperasi uses this (wired-in helper)\n\nOur logging helper wraps the client so you don\u2019t have to.\n\n```php\n$elk = new ElkLoggingService('dukcapil');\n$elk->logApplication(['service'=>'dukcapil','status'=>200]);\n```\nExplanation: ElkLoggingService creates the index if needed, then calls client->index(...). If ES is down, it falls back to DB so logs aren\u2019t lost. See details in [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n\n---\n\n## What happens under the hood (step-by-step)\n\n```mermaid\nsequenceDiagram\n  participant App as ElkLoggingService\n  participant ES as ES Client\n  participant T as Transport\n  participant H as CurlHandler\n  participant Cluster as Elasticsearch\n\n  App->>ES: index({index,type,body})\n  ES->>T: performRequest(POST, /index/_doc, ...)\n  T->>H: send HTTP (retry if needed)\n  H->>Cluster: POST JSON\n  Cluster-->>H: status + body\n  H-->>T: response\n  T-->>ES: array or future\n  ES-->>App: result (with _id)\n```\n\n- Endpoints build the URL and method.\n- Transport chooses a node and wraps the response (sync/async).\n- Guzzle cURL does the HTTP call.\n- Streams handle body data efficiently.\n\n---\n\n## Dive a little deeper (vendor files you\u2019ll see)\n\n- ClientBuilder (builds the client)\n  - File: extensions/elasticSearch/vendor/elasticsearch/elasticsearch/src/Elasticsearch/ClientBuilder.php\n\nMinimal ideas you\u2019ll use:\n```php\n$client = ClientBuilder::create()\n  ->setHosts(['http://es:9200'])\n  ->setConnectionParams(['client'=>['timeout'=>2]])\n  ->build();\n```\nExplanation: You can set hosts, timeouts, SSL, and more before build().\n\n- Transport (routes requests + retries)\n  - File: .../Elasticsearch/Transport.php\n\nCore behavior:\n```php\n// Transport::performRequest(...)\n$future = $connection->performRequest($method,$uri,$params,$body,$options,$this);\nreturn $future; // later resolved to an array\n```\nExplanation: It picks a connection, sends the request, and returns a promise-like result.\n\n- Endpoints\\Index (packs the parcel)\n  - File: .../Elasticsearch/Endpoints/Index.php\n\nTwo key guards:\n```php\npublic function getURI(){ /* requires index + type */ }\npublic function getBody(){ /* throws if body is missing */ }\n```\nExplanation: If you forget index/type/body, it throws early\u2014handy for debugging.\n\n- Namespaces/BooleanRequestWrapper (boolean shortcuts)\n  - File: .../Elasticsearch/Namespaces/BooleanRequestWrapper.php\n```php\n// returns true only when HTTP 200\nreturn ($response['status'] === 200);\n```\nExplanation: Some endpoints expose \u201cdid it work?\u201d as a simple boolean.\n\n- Guzzle Streams (conveyor belts)\n  - File: .../guzzlehttp/streams/src/GuzzleStreamWrapper.php\n```php\n$resource = \\GuzzleHttp\\Stream\\GuzzleStreamWrapper::getResource($stream);\n```\nExplanation: Lets the client treat stream bodies like normal PHP resources.\n\n- RingPHP Core helpers (HTTP glue)\n  - File: .../guzzlehttp/ringphp/src/Core.php\n```php\n$url = \\GuzzleHttp\\Ring\\Core::url($request);\n$body= \\GuzzleHttp\\Ring\\Core::body($response);\n```\nExplanation: Utilities to build URLs, read bodies, manage headers, and proxy futures.\n\n---\n\n## Common tasks you\u2019ll actually do\n\n- Configure SSL (for https clusters)\n```php\n$client = ClientBuilder::create()\n  ->setSSLVerification(true)   // or false to skip (dev only)\n  ->setHosts(['https://es:9200'])\n  ->build();\n```\nExplanation: In production, keep verification on. Add setSSLCert/setSSLKey if needed.\n\n- Adjust timeouts (avoid hanging calls)\n```php\n$client = ClientBuilder::create()\n  ->setConnectionParams(['client'=>['timeout'=>2,'connect_timeout'=>1]])\n  ->setHosts(['http://es:9200'])->build();\n```\nExplanation: Short timeouts keep your app responsive even if ES is slow.\n\n- Create the index if missing (manually)\n```php\n$exists = $client->indices()->exists(['index'=>'koperasi-logs']);\nif(!$exists){ $client->indices()->create(['index'=>'koperasi-logs']); }\n```\nExplanation: Basic existence check\u2014our service already does this for app logs.\n\n- Bulk insert (when you have many docs)\n```php\n$bulk = [\n  'body'=>[\n    ['index'=>['_index'=>'k-logs','_type'=>'_doc']],\n    ['service'=>'api','status'=>200],\n  ]\n];\n$res = $client->bulk($bulk);\n```\nExplanation: Bulk is faster for many documents; keep items small.\n\n- Async (advanced; usually avoid for logs)\n```php\n$res = $client->index([\n  'index'=>'k-logs','type'=>'_doc',\n  'body'=>['ok'=>1],\n  'client'=>['future'=>'lazy']\n]);\n```\nExplanation: Async returns a future-like value. For logging, sync is simpler.\n\n---\n\n## How this ties back to koperasi logging\n\n- Controllers and helpers follow the pattern in [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md).\n- ElkLoggingService uses the ES client to index logs:\n  - createIndexIfNotExists(...)\n  - client->index([...])\n- If ES is down, we save to DB so no log is lost.\n\nThis means you can:\n- Rely on ES for fast search and dashboards.\n- Still see logs in DB if the cluster is temporarily unavailable.\n\n---\n\n## Troubleshooting cheatsheet\n\n- \u201cNo alive nodes found in cluster\u201d\n  - ES not reachable; check host/port/firewall.\n  - Try curl http://HOST:9200 from the server.\n\n- \u201cElasticsearch-PHP requires cURL\u201d\n  - Install/enable PHP cURL extension.\n\n- 4xx vs 5xx responses\n  - 4xx: Your request is wrong (e.g., missing body). Fix payload.\n  - 5xx: ES cluster issue. Check ES logs/health.\n\n- SSL errors\n  - For dev: setSSLVerification(false) to test quickly.\n  - For prod: install CA bundle or set setSSLCert/setSSLKey properly.\n\n- Mapping errors (bad fields)\n  - Keep log documents small and simple (strings, numbers).\n  - Avoid huge blobs; store references instead.\n\n- Still confused?\n  - Revisit the logging flow and examples: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)\n\n---\n\n## Performance and safety tips\n\n- Reuse the client instance; don\u2019t rebuild per request.\n- Keep documents small; add only fields you\u2019ll search.\n- Use bulk for high-throughput jobs.\n- Timeouts matter: prefer short timeouts to protect the app.\n- Never log secrets (mask tokens/passwords before indexing).\n\n---\n\n## Summary\n\nYou saw how koperasi\u2019s ES vendor stack fits together:\n- Endpoints pack requests, Transport routes and retries, Guzzle drives, Streams move bytes.\n- You indexed a small log event and learned the common knobs (hosts, SSL, timeouts).\n- You know where to look when things break and how this integrates with our logging helpers.\n\nYou\u2019ve reached the end of this tutorial series\u2014nice work! If you need to revisit the logging patterns or see them in action, jump back to: [Centralized Logging & Audit Trail](08_centralized_logging___audit_trail_.md)"}